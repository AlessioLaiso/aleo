{
.appVersion = "3192";
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adieresismacron Adotbelow Agrave Ahookabove Alpha-latin Amacron Aogonek Aring Aringacute Atilde AE AEacute B Bdotbelow Bhook Bstroke C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent Chook D Dafrican Eth Dcaron Dcircumflexbelow Dcroat Ddotbelow Dhook Dlinebelow E Eacute Ebreve Ecaron Ecedilla Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Eopen Ereversed Esh Etilde Ezh F Fhook G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Ghook H Hbar Hcircumflex Hdotbelow Hhook Hturned I IJ Iacute Ibreve Icaron Icircumflex Idieresis Idieresisacute Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Iotaafrican Istroke Itilde J Jacute Jcircumflex K Kcommaaccent Khook L Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldot Ldotbelow Lslash M Macute N Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Eng Nhookleft Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odieresismacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Omacronacute Omacrongrave Oogonek Oopen Oslash Oslashacute Otilde Otildeacute OE P Phook Thorn Q R Racute Rcaron Rcommaaccent Rstroke Rtail S Sacute Saltillo Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls Schwa T Tbar Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotbelow Thook Tlinebelow Tretroflexhook U Uacute Ubar Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Upsilonafrican Uring Utilde V Gammaafrican Vhook Vturned W Wacute Wcircumflex Wdieresis Wgrave Whook X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhook Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Zdotbelow";
name = Uppercase;
}
);
copyright = "Copyright (c) 2013-2023 by Alessio Laiso (hello@alessiolaiso.com).";
customParameters = (
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Disable Last Change";
value = 1;
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
name = vendorID;
value = AL;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
}
);
date = "2023-04-29 11:32:46 +0000";
designer = "Alessio Laiso";
designerURL = "https://alessiolaiso.com/aleo-font";
disablesNiceNames = 1;
familyName = Aleo;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature sups;
feature frac;
feature ordn;
feature case;
";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [cedillacomb circumflexbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb slashlongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresis dotaccent grave acute hungarumlaut circumflex caron breve ring tilde macron];
	@MarkscombCase = [dieresis.case dotaccent.case grave.case acute.case hungarumlaut.case circumflex.case caron.case breve.case ring.case tilde.case macron.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	lookupflag 0;
	sub acutecomb macroncomb by acutecomb_macroncomb;
	sub gravecomb macroncomb by gravecomb_macroncomb;
	sub macroncomb acutecomb by macroncomb_acutecomb;
	sub macroncomb gravecomb by macroncomb_gravecomb;
} ccmp_Other_3;

lookup ccmp_latn_1 {
	sub istroke by i strokeshortcomb;
} ccmp_latn_1;

lookup ccmp_latn_2 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_latn_2;

script latn;
lookup ccmp_latn_1;
lookup ccmp_latn_2;
";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {
	script latn;
	language AZE;
	sub i by idotaccent;
	language CRT;
	sub i by idotaccent;
	language KAZ;
	sub i by idotaccent;
	language TAT;
	sub i by idotaccent;
	language TRK;
	sub i by idotaccent;
} locl_latn_0;

lookup locl_latn_1 {
	script latn;
	language ROM;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
	language MOL;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;

lookup locl_latn_2 {
	script latn;
	language CAT;
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_2;

lookup locl_latn_3 {
	script latn;
	language NLD;
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_3;
";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
name = ordn;
},
{
automatic = 1;
code = "sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub acute by acute.case;
sub hungarumlaut by hungarumlaut.case;
sub circumflex by circumflex.case;
sub caron by caron.case;
sub breve by breve.case;
sub ring by ring.case;
sub tilde by tilde.case;
sub macron by macron.case;
";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f i by fi;
sub f l by fl;
";
name = liga;
}
);
fontMaster = (
{
alignmentZones = (
"{805, 16}",
"{700, 9}",
"{490, 9}",
"{0, -8}",
"{-195, -16}"
);
ascender = 720;
capHeight = 700;
custom = Hairline;
customParameters = (
{
name = typoAscender;
value = 805;
},
{
name = typoDescender;
value = -195;
},
{
name = typoLineGap;
value = 200;
},
{
name = winAscent;
value = 987;
},
{
name = winDescent;
value = 213;
},
{
name = hheaAscender;
value = 987;
},
{
name = hheaDescender;
value = -213;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 11;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0123 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0123 459 375 292 209 125 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0124 612 500 389 278 167 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 550 450 350 250 150 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 1375 1125 875 625 375 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 4 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    41,\012    20,\012    8,\012    24,\012    18,\012    0,\012    14,\012    \"-360\",\012    0,\012    980,\012    16,\012    1400,\012    16\012)";
}
);
descender = -195;
iconName = Light_Extended;
id = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
GSCornerRadius = 4;
};
visible = 1;
weightValue = 12;
widthValue = 5;
xHeight = 490;
},
{
alignmentZones = (
"{805, 16}",
"{717, 9}",
"{507, 9}",
"{0, -9}",
"{-195, -16}"
);
ascender = 805;
capHeight = 737;
customParameters = (
{
name = typoAscender;
value = 805;
},
{
name = typoDescender;
value = -195;
},
{
name = typoLineGap;
value = 200;
},
{
name = winAscent;
value = 987;
},
{
name = winDescent;
value = 213;
},
{
name = hheaAscender;
value = 987;
},
{
name = hheaDescender;
value = -213;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 60;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01240 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0129 10 3 2 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 16 3 2 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01217 22 3 2 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0124 40 6 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\01211 16 4 2 \012CALL[ ]	/* CallFunction */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RCVT[ ]	/* ReadCVT */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01222 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 2 values pushed */\0126 4 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0129 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01210 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 4 values pushed */\01211 11 1 0 \012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0126 2 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01211 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01218 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP2[ ]	/* SetZonePointer2 */\012IUP[0]	/* InterpolateUntPts */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01212 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01216 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0123 32 4 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0123 38 4 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0123 32 4 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0123 38 4 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01231 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP2[ ]	/* SetZonePointer2 */\012IUP[0]	/* InterpolateUntPts */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    184,\012    139,\012    184,\012    184,\012    139,\012    140,\012    1433,\012    0,\012    1466,\012    1013,\012    0,\012    \"-343\",\012    1449,\012    \"-16\",\012    1466,\012    1029,\012    \"-14\",\012    \"-364\"\012)";
}
);
descender = -195;
iconName = Extended;
id = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
GSCornerRadius = 31;
};
visible = 1;
weightValue = 98;
widthValue = 5;
xHeight = 507;
},
{
alignmentZones = (
"{805, 16}",
"{729, 9}",
"{519, 9}",
"{0, -9}",
"{-195, -16}"
);
ascender = 805;
capHeight = 749;
custom = Black;
customParameters = (
{
name = typoAscender;
value = 805;
},
{
name = typoDescender;
value = -195;
},
{
name = typoLineGap;
value = 200;
},
{
name = winAscent;
value = 987;
},
{
name = winDescent;
value = 213;
},
{
name = hheaAscender;
value = 987;
},
{
name = hheaDescender;
value = -213;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 97;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01240 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0129 10 3 2 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 16 3 2 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01217 22 3 2 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0124 40 6 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\01211 16 4 2 \012CALL[ ]	/* CallFunction */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RCVT[ ]	/* ReadCVT */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01222 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 2 values pushed */\0126 4 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0129 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01210 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 4 values pushed */\01211 11 1 0 \012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0126 2 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01211 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01218 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP2[ ]	/* SetZonePointer2 */\012IUP[0]	/* InterpolateUntPts */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01212 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01216 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0123 32 4 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0123 38 4 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0123 32 4 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0123 38 4 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01231 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01224 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01226 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP2[ ]	/* SetZonePointer2 */\012IUP[0]	/* InterpolateUntPts */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    320,\012    230,\012    320,\012    320,\012    230,\012    230,\012    1457,\012    0,\012    1497,\012    1037,\012    0,\012    \"-329\",\012    1473,\012    \"-16\",\012    1503,\012    1053,\012    \"-16\",\012    \"-357\"\012)";
}
);
descender = -195;
iconName = Bold_Extended;
id = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
GSCornerRadius = 40;
};
visible = 1;
weightValue = 170;
widthValue = 5;
xHeight = 519;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
anchors = (
{
name = bottom;
position = "{380, 0}";
},
{
name = ogonek;
position = "{665, 2}";
},
{
name = top;
position = "{380, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 98, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 102, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 658, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 662, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"91 0 LINE SMOOTH",
"95 0 OFFCURVE",
"97 2 OFFCURVE",
"98 5 CURVE",
"372 663 LINE SMOOTH",
"374 668 OFFCURVE",
"379 680 OFFCURVE",
"380 684 CURVE",
"381 680 OFFCURVE",
"386 668 OFFCURVE",
"388 663 CURVE SMOOTH",
"662 5 LINE",
"663 2 OFFCURVE",
"665 0 OFFCURVE",
"668 0 CURVE SMOOTH",
"677 0 LINE",
"385 700 LINE",
"375 700 LINE",
"83 0 LINE"
);
},
{
closed = 1;
nodes = (
"102 0 LINE",
"102 11 LINE",
"89 11 LINE",
"89 0 LINE"
);
},
{
closed = 1;
nodes = (
"565 250 LINE",
"563 260 LINE",
"196 260 LINE",
"194 250 LINE"
);
},
{
closed = 1;
nodes = (
"669 0 LINE",
"669 11 LINE",
"656 11 LINE",
"656 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
13 1 4 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 760;
},
{
anchors = (
{
name = bottom;
position = "{407, 0}";
},
{
name = ogonek;
position = "{645, 2}";
},
{
name = top;
position = "{407, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 85, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 242, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 571, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 728, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"170 0 LINE SMOOTH",
"198 0 OFFCURVE",
"218 18 OFFCURVE",
"225 37 CURVE",
"374 477 LINE SMOOTH",
"385 510 OFFCURVE",
"396 537 OFFCURVE",
"407 579 CURVE",
"417 538 OFFCURVE",
"429 507 OFFCURVE",
"439 478 CURVE SMOOTH",
"588 37 LINE SMOOTH",
"595 16 OFFCURVE",
"614 0 OFFCURVE",
"644 0 CURVE SMOOTH",
"775 0 LINE",
"493 729 LINE",
"320 729 LINE",
"38 0 LINE"
);
},
{
closed = 1;
nodes = (
"260 0 LINE",
"260 71 LINE",
"138 71 LINE",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"574 190 LINE",
"564 305 LINE",
"238 305 LINE",
"228 190 LINE"
);
},
{
closed = 1;
nodes = (
"665 0 LINE",
"665 71 LINE",
"533 71 LINE",
"533 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 11 9 6 5 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
19 1 4 3 1 30 0 4 0 1 0 4 1 0 2 38 0 3 3 11 31 2 1 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
19 1 4 3 1 30 0 3 4 3 52 2 1 0 1 0 53 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
19 1 4 3 1 30 0 3 4 3 52 0 2 1 0 1 2 0 50 0 0 0 51 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 813;
},
{
anchors = (
{
name = bottom;
position = "{378, 0}";
},
{
name = ogonek;
position = "{636, 2}";
},
{
name = top;
position = "{378, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 85, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 150, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 606, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 671, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"117 0 LINE SMOOTH",
"134 0 OFFCURVE",
"146 11 OFFCURVE",
"150 23 CURVE",
"357 557 LINE SMOOTH",
"364 576 OFFCURVE",
"370 598 OFFCURVE",
"378 625 CURVE",
"385 598 OFFCURVE",
"392 576 OFFCURVE",
"399 558 CURVE SMOOTH",
"606 23 LINE",
"611 10 OFFCURVE",
"622 0 OFFCURVE",
"639 0 CURVE SMOOTH",
"714 0 LINE",
"427 717 LINE",
"329 717 LINE",
"42 0 LINE"
);
},
{
closed = 1;
nodes = (
"169 0 LINE",
"169 62 LINE",
"116 62 LINE",
"116 0 LINE"
);
},
{
closed = 1;
nodes = (
"554 212 LINE",
"527 282 LINE",
"232 282 LINE",
"205 212 LINE"
);
},
{
closed = 1;
nodes = (
"643 0 LINE",
"643 62 LINE",
"590 62 LINE",
"590 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 11 9 6 5 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 4 0 1 0 4 1 0 2 38 0 3 3 11 31 2 1 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 4 0 1 0 4 1 0 2 38 2 1 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
18 1 4 3 1 30 0 3 4 3 52 2 1 0 1 0 53 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 2 1 0 1 2 0 50 0 0 0 51 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B4FF3473-ADCA-472E-8E31-2DFB44C61FA2";
name = "1.4";
paths = (
{
closed = 1;
nodes = (
"672 68 LINE",
"413 716 LINE",
"315 716 LINE",
"55 68 LINE",
"15 56 LINE",
"7 54 OFFCURVE",
"2 49 OFFCURVE",
"2 40 CURVE SMOOTH",
"2 0 LINE",
"207 0 LINE",
"207 40 LINE SMOOTH",
"207 49 OFFCURVE",
"203 54 OFFCURVE",
"194 56 CURVE",
"153 68 LINE",
"209 212 LINE",
"518 212 LINE",
"574 68 LINE",
"533 56 LINE",
"524 54 OFFCURVE",
"519 49 OFFCURVE",
"519 40 CURVE SMOOTH",
"519 0 LINE",
"725 0 LINE",
"725 40 LINE SMOOTH",
"725 49 OFFCURVE",
"720 54 OFFCURVE",
"712 56 CURVE"
);
},
{
closed = 1;
nodes = (
"236 282 LINE",
"343 557 LINE SMOOTH",
"350 576 OFFCURVE",
"356 598 OFFCURVE",
"363 625 CURVE",
"371 598 OFFCURVE",
"378 575 OFFCURVE",
"385 557 CURVE",
"491 282 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 11 9 6 5 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 4 0 1 0 4 1 0 2 38 0 3 3 11 31 2 1 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 4 0 1 0 4 1 0 2 38 2 1 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
18 1 4 3 1 30 0 3 4 3 52 2 1 0 1 0 53 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 2 1 0 1 2 0 50 0 0 0 51 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "E5DD44B5-C3F5-4E3B-82F7-BE8D4482A099";
name = "Jan 24 23, 21:44";
paths = (
{
closed = 1;
nodes = (
"292 717 LINE",
"5 0 LINE",
"80 0 LINE SMOOTH",
"97.333 0 OFFCURVE",
"109 11 OFFCURVE",
"113 23 CURVE SMOOTH",
"180 196 LINE",
"502 196 LINE",
"569 23 LINE SMOOTH",
"574.333 9.667 OFFCURVE",
"584.667 0 OFFCURVE",
"602 0 CURVE SMOOTH",
"677 0 LINE",
"390 717 LINE",
"390 717 LINE"
);
},
{
closed = 1;
nodes = (
"323.333 565.667 OFFCURVE",
"326.667 575.833 OFFCURVE",
"330 587.5 CURVE SMOOTH",
"333.333 599.167 OFFCURVE",
"337 611.667 OFFCURVE",
"341 625 CURVE",
"347.667 598.333 OFFCURVE",
"354.667 576 OFFCURVE",
"362 558 CURVE SMOOTH",
"475 266 LINE",
"207 266 LINE",
"320 557 LINE",
"320 557 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 11 9 6 5 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 4 0 1 0 4 1 0 2 38 0 3 3 11 31 2 1 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 4 0 1 0 4 1 0 2 38 2 1 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
18 1 4 3 1 30 0 3 4 3 52 2 1 0 1 0 53 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
18 1 4 3 1 30 0 3 4 3 52 0 2 1 0 1 2 0 50 0 0 0 51 0 4 1 1 4 0 0 35 0 4 4 1 0 2 36 0 1 4 1 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
leftKerningGroup = A;
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 254, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 247, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 278, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C1;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 0102;
},
{
glyphname = Abreveacute;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 238, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 215, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 215, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 342, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 311, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 315, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 243, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 233, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 267, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EB4;
},
{
glyphname = Acaron;
layers = (
{
components = (
{
name = A;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 01CD;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 240, 166}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 342, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 311, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 315, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EAA;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C4;
},
{
glyphname = Adieresismacron;
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 240, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 240, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 224, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 231, 361}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 212, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 242, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 01DE;
},
{
glyphname = Adotbelow;
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 315, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EA0;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 219, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 191, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 186, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C0;
},
{
glyphname = Ahookabove;
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 181, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 182, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 214, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 1EA2;
},
{
glyphname = "Alpha-latin";
layers = (
{
anchors = (
{
name = bottom;
position = "{370, 0}";
},
{
name = top;
position = "{370, 700}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 616, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"476 -8 OFFCURVE",
"553 29 OFFCURVE",
"616 89 CURVE",
"612 93 LINE SMOOTH",
"611 94 OFFCURVE",
"610 95 OFFCURVE",
"609 95 CURVE SMOOTH",
"607 95 OFFCURVE",
"606 94 OFFCURVE",
"604 92 CURVE SMOOTH",
"555 42 OFFCURVE",
"478 2 OFFCURVE",
"373 2 CURVE SMOOTH",
"176 2 OFFCURVE",
"55 148 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 553 OFFCURVE",
"175 698 OFFCURVE",
"388 698 CURVE SMOOTH",
"478 698 OFFCURVE",
"560 672 OFFCURVE",
"604 640 CURVE",
"613 639 LINE",
"613 645 LINE",
"571 683 OFFCURVE",
"475 708 OFFCURVE",
"384 708 CURVE SMOOTH",
"276 708 OFFCURVE",
"195 673 OFFCURVE",
"136 610 CURVE SMOOTH",
"77 546 OFFCURVE",
"43 457 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 239 OFFCURVE",
"78 151 OFFCURVE",
"136 89 CURVE SMOOTH",
"194 27 OFFCURVE",
"273 -8 OFFCURVE",
"373 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"616 0 LINE",
"616 700 LINE",
"611 700 LINE SMOOTH",
"609 700 OFFCURVE",
"607 698 OFFCURVE",
"607 696 CURVE SMOOTH",
"604 648 LINE",
"604 85 LINE",
"607 4 LINE SMOOTH",
"607 2 OFFCURVE",
"609 0 OFFCURVE",
"611 0 CURVE SMOOTH"
);
}
);
width = 740;
},
{
anchors = (
{
name = bottom;
position = "{376, 0}";
},
{
name = top;
position = "{370, 717}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 636, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"495 -8 OFFCURVE",
"554 38 OFFCURVE",
"607 132 CURVE",
"592 142 LINE SMOOTH",
"584 148 OFFCURVE",
"582 148 OFFCURVE",
"578 148 CURVE SMOOTH",
"572 148 OFFCURVE",
"567 146 OFFCURVE",
"561 141 CURVE SMOOTH",
"508 93 OFFCURVE",
"454 76 OFFCURVE",
"390 76 CURVE SMOOTH",
"217 76 OFFCURVE",
"129 198 OFFCURVE",
"129 356 CURVE SMOOTH",
"129 527 OFFCURVE",
"233 641 OFFCURVE",
"393 641 CURVE SMOOTH",
"451 641 OFFCURVE",
"502 626 OFFCURVE",
"544 612 CURVE",
"614 599 LINE",
"604 644 LINE",
"527 695 OFFCURVE",
"467 725 OFFCURVE",
"386 725 CURVE SMOOTH",
"283 725 OFFCURVE",
"194 687 OFFCURVE",
"130 622 CURVE SMOOTH",
"67 558 OFFCURVE",
"30 466 OFFCURVE",
"30 356 CURVE SMOOTH",
"30 261 OFFCURVE",
"58 169 OFFCURVE",
"118 100 CURVE SMOOTH",
"180 29 OFFCURVE",
"269 -8 OFFCURVE",
"376 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"635 0 LINE",
"635 717 LINE",
"579 717 LINE SMOOTH",
"562 717 OFFCURVE",
"550 710 OFFCURVE",
"543 693 CURVE SMOOTH",
"538 681 LINE",
"538 58 LINE",
"547 26 LINE SMOOTH",
"552 9 OFFCURVE",
"563 0 OFFCURVE",
"581 0 CURVE SMOOTH"
);
}
);
width = 741;
},
{
anchors = (
{
name = bottom;
position = "{394, 0}";
},
{
name = top;
position = "{394, 749}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 691, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"487 -8 OFFCURVE",
"572 76 OFFCURVE",
"637 159 CURVE",
"570 179 LINE SMOOTH",
"562 181 OFFCURVE",
"555 189 OFFCURVE",
"547 189 CURVE SMOOTH",
"536 189 OFFCURVE",
"526 183 OFFCURVE",
"519 177 CURVE SMOOTH",
"482 145 OFFCURVE",
"438 131 OFFCURVE",
"390 131 CURVE SMOOTH",
"263 131 OFFCURVE",
"188 227 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 504 OFFCURVE",
"265 597 OFFCURVE",
"406 597 CURVE SMOOTH",
"455 597 OFFCURVE",
"525 586 OFFCURVE",
"564 561 CURVE",
"630 578 LINE",
"630 631 LINE",
"577 667 OFFCURVE",
"491 739 OFFCURVE",
"375 739 CURVE SMOOTH",
"290 739 OFFCURVE",
"193 700 OFFCURVE",
"121 631 CURVE SMOOTH",
"54 567 OFFCURVE",
"15 474 OFFCURVE",
"15 363 CURVE SMOOTH",
"15 254 OFFCURVE",
"52 159 OFFCURVE",
"114 94 CURVE SMOOTH",
"173 32 OFFCURVE",
"264 -8 OFFCURVE",
"366 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"691 0 LINE",
"691 729 LINE",
"581 729 LINE SMOOTH",
"560 729 OFFCURVE",
"545 721 OFFCURVE",
"532 705 CURVE SMOOTH",
"521 691 LINE",
"521 56 LINE",
"536 28 LINE SMOOTH",
"546 9 OFFCURVE",
"561 0 OFFCURVE",
"583 0 CURVE SMOOTH"
);
}
);
width = 788;
}
);
leftKerningGroup = C;
leftMetricsKey = C;
rightKerningGroup = I;
rightMetricsKey = I;
unicode = 2C6D;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 231, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 0100;
},
{
glyphname = Aogonek;
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 525, 2}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 482, 2}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 480, 2}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 0104;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C5;
},
{
glyphname = Aringacute;
layers = (
{
components = (
{
name = A;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 256, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 238, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 264, 222}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 01FA;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 760;
},
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 229, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 813;
}
);
unicode = 00C3;
},
{
glyphname = AE;
layers = (
{
anchors = (
{
name = bottom;
position = "{509, 0}";
},
{
name = top;
position = "{503, 700}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 909, 11}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 908, 689}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 455, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 550, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 75, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"63 0 LINE SMOOTH",
"66 0 OFFCURVE",
"68 1 OFFCURVE",
"70 4 CURVE",
"448 663 LINE",
"454 674 OFFCURVE",
"457 680 OFFCURVE",
"461 689 CURVE",
"550 0 LINE",
"908 0 LINE",
"909 11 LINE",
"560 11 LINE",
"516 350 LINE",
"820 350 LINE",
"820 361 LINE",
"514 361 LINE",
"472 689 LINE",
"908 689 LINE",
"908 700 LINE",
"455 700 LINE",
"53 0 LINE"
);
},
{
closed = 1;
nodes = (
"523 250 LINE",
"521 260 LINE",
"207 260 LINE",
"205 250 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
19 1 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 957;
},
{
anchors = (
{
name = bottom;
position = "{465, 0}";
},
{
name = top;
position = "{465, 729}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 931, 130}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 931, 599}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 381, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 502, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 210, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"193 0 LINE SMOOTH",
"197 0 OFFCURVE",
"194 15 OFFCURVE",
"204 37 CURVE",
"408 503 LINE SMOOTH",
"420 531 OFFCURVE",
"435 565 OFFCURVE",
"448 605 CURVE",
"521 0 LINE",
"931 0 LINE",
"931 130 LINE",
"665 130 LINE",
"644 304 LINE",
"856 304 LINE",
"856 429 LINE",
"629 429 LINE",
"609 599 LINE",
"931 599 LINE",
"931 729 LINE",
"371 729 LINE",
"13 0 LINE"
);
},
{
closed = 1;
nodes = (
"553 190 LINE",
"543 305 LINE",
"217 305 LINE",
"207 190 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
20 19 18 16 13 12 11 10 9 8 7 6 5 4 3 2 1 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
21 1 1 0 1 30 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 1 1 0 0 0 36 0 0 0 11 31 0 4 4 5 1 0 36 7 1 5 5 12 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
21 1 1 0 1 30 0 0 0 1 2 0 1 0 0 38 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 4 5 5 4 0 0 35 0 4 4 5 1 0 36 7 1 5 4 5 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
21 1 1 0 1 30 0 7 4 5 4 7 5 50 0 0 0 1 2 0 1 0 0 38 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 4 7 5 4 0 0 35 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 964;
},
{
anchors = (
{
name = bottom;
position = "{453, 0}";
},
{
name = top;
position = "{453, 717}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 907, 79}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 907, 638}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 370, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 521, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 135, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"107 0 LINE SMOOTH",
"109 0 OFFCURVE",
"122 10 OFFCURVE",
"129 23 CURVE",
"413 572 LINE",
"426 597 OFFCURVE",
"435 623 OFFCURVE",
"441 643 CURVE",
"521 0 LINE",
"907 0 LINE",
"907 79 LINE",
"603 79 LINE",
"572 324 LINE",
"827 324 LINE",
"827 400 LINE",
"563 400 LINE",
"533 638 LINE",
"907 638 LINE",
"907 717 LINE",
"397 717 LINE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"529 212 LINE",
"502 282 LINE",
"207 282 LINE",
"180 212 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
20 19 18 16 13 12 11 10 9 8 7 6 5 4 3 2 1 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
21 1 1 0 1 30 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 1 1 0 0 0 36 0 0 0 11 31 0 4 4 5 1 0 36 7 1 5 5 12 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
21 1 1 0 1 30 0 0 0 1 2 0 1 0 0 38 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 4 4 5 1 0 36 7 1 5 5 15 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
21 1 1 0 1 30 0 0 0 1 2 0 1 0 0 38 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 4 5 5 4 0 0 35 0 4 4 5 1 0 36 7 1 5 4 5 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
21 1 1 0 1 30 0 7 4 5 4 7 5 50 0 0 0 1 2 0 1 0 0 38 0 2 0 3 8 2 3 0 0 38 0 8 0 6 4 8 6 0 0 38 0 4 7 5 4 0 0 35 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 952;
}
);
leftKerningGroup = A;
note = AE;
rightKerningGroup = E;
rightMetricsKey = E;
unicode = 00C6;
},
{
glyphname = AEacute;
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 377, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 957;
},
{
components = (
{
name = AE;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 322, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 952;
},
{
components = (
{
name = AE;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 336, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 964;
}
);
unicode = 01FC;
},
{
glyphname = B;
layers = (
{
anchors = (
{
name = bottom;
position = "{300, 0}";
},
{
name = top;
position = "{300, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"333 0 LINE SMOOTH",
"473 0 OFFCURVE",
"560 62 OFFCURVE",
"560 184 CURVE SMOOTH",
"560 286 OFFCURVE",
"482 349 OFFCURVE",
"367 357 CURVE",
"457 368 OFFCURVE",
"527 441 OFFCURVE",
"527 526 CURVE SMOOTH",
"527 639 OFFCURVE",
"455 700 OFFCURVE",
"306 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 350 LINE",
"334 350 LINE SMOOTH",
"460 350 OFFCURVE",
"548 290 OFFCURVE",
"548 184 CURVE SMOOTH",
"548 67 OFFCURVE",
"465 10 OFFCURVE",
"333 10 CURVE SMOOTH",
"136 10 LINE"
);
},
{
closed = 1;
nodes = (
"136 690 LINE",
"306 690 LINE SMOOTH",
"449 690 OFFCURVE",
"516 630 OFFCURVE",
"516 526 CURVE SMOOTH",
"516 438 OFFCURVE",
"445 360 OFFCURVE",
"311 360 CURVE SMOOTH",
"136 360 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
22 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 3 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
15 3 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
10 0 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
34 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 600;
},
{
anchors = (
{
name = bottom;
position = "{343, 0}";
},
{
name = top;
position = "{343, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"388 0 LINE SMOOTH",
"554 0 OFFCURVE",
"661 87 OFFCURVE",
"661 220 CURVE SMOOTH",
"661 301 OFFCURVE",
"616 354 OFFCURVE",
"520 377 CURVE",
"603 407 OFFCURVE",
"644 462 OFFCURVE",
"644 532 CURVE SMOOTH",
"644 678 OFFCURVE",
"533 729 OFFCURVE",
"365 729 CURVE SMOOTH",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"266 309 LINE",
"384 309 LINE SMOOTH",
"463 309 OFFCURVE",
"494 281 OFFCURVE",
"494 223 CURVE SMOOTH",
"494 169 OFFCURVE",
"466 128 OFFCURVE",
"385 128 CURVE SMOOTH",
"266 128 LINE"
);
},
{
closed = 1;
nodes = (
"266 602 LINE",
"365 602 LINE SMOOTH",
"440 602 OFFCURVE",
"475 581 OFFCURVE",
"475 512 CURVE SMOOTH",
"475 441 OFFCURVE",
"431 422 OFFCURVE",
"354 422 CURVE SMOOTH",
"266 422 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 21 0 0 46 44 36 34 21 33 21 32 24 22 0 20 0 19 3 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 4 1 30 0 4 7 1 3 2 4 3 1 0 38 0 5 5 0 1 0 36 0 0 0 11 31 0 2 2 1 1 0 36 6 1 1 1 12 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
12 1 3 4 1 30 0 0 0 5 4 0 5 1 0 38 0 4 7 1 3 2 4 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 6 1 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
anchors = (
{
name = bottom;
position = "{320, 0}";
},
{
name = top;
position = "{320, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"359 0 LINE SMOOTH",
"512 0 OFFCURVE",
"610 78 OFFCURVE",
"610 204 CURVE SMOOTH",
"610 293 OFFCURVE",
"556 348 OFFCURVE",
"452 369 CURVE",
"539 394 OFFCURVE",
"586 456 OFFCURVE",
"586 530 CURVE SMOOTH",
"586 654 OFFCURVE",
"499 717 OFFCURVE",
"334 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"202 327 LINE",
"357 327 LINE SMOOTH",
"462 327 OFFCURVE",
"515 280 OFFCURVE",
"515 207 CURVE SMOOTH",
"515 125 OFFCURVE",
"461 77 OFFCURVE",
"357 77 CURVE SMOOTH",
"202 77 LINE"
);
},
{
closed = 1;
nodes = (
"202 640 LINE",
"334 640 LINE SMOOTH",
"441 640 OFFCURVE",
"490 602 OFFCURVE",
"490 518 CURVE SMOOTH",
"490 441 OFFCURVE",
"432 396 OFFCURVE",
"330 396 CURVE SMOOTH",
"202 396 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 21 0 0 42 40 34 32 21 31 21 30 24 22 0 20 0 19 3 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 4 1 30 0 4 7 1 3 2 4 3 1 0 38 0 5 5 0 1 0 36 0 0 0 11 31 0 2 2 1 1 0 36 6 1 1 1 12 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 1 3 4 1 30 0 0 0 5 4 0 5 1 0 38 0 4 7 1 3 2 4 3 1 0 38 0 2 2 1 1 0 36 6 1 1 1 15 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
12 1 3 4 1 30 0 0 0 5 4 0 5 1 0 38 0 4 7 1 3 2 4 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 6 1 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 640;
}
);
leftMetricsKey = H;
note = B;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = Bdotbelow;
layers = (
{
components = (
{
name = B;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 262, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 600;
},
{
components = (
{
name = B;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 253, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 640;
},
{
components = (
{
name = B;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 685;
}
);
unicode = 1E04;
},
{
glyphname = Bhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{412, 0}";
},
{
name = top;
position = "{412, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 236, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"445 0 LINE SMOOTH",
"585 0 OFFCURVE",
"672 62 OFFCURVE",
"672 184 CURVE SMOOTH",
"672 286 OFFCURVE",
"594 349 OFFCURVE",
"479 357 CURVE",
"569 368 OFFCURVE",
"639 441 OFFCURVE",
"639 526 CURVE SMOOTH",
"639 639 OFFCURVE",
"567 700 OFFCURVE",
"418 700 CURVE SMOOTH",
"236 700 LINE",
"236 0 LINE"
);
},
{
closed = 1;
nodes = (
"248 350 LINE",
"446 350 LINE SMOOTH",
"572 350 OFFCURVE",
"660 290 OFFCURVE",
"660 184 CURVE SMOOTH",
"660 67 OFFCURVE",
"577 10 OFFCURVE",
"445 10 CURVE SMOOTH",
"248 10 LINE"
);
},
{
closed = 1;
nodes = (
"248 690 LINE",
"418 690 LINE SMOOTH",
"561 690 OFFCURVE",
"628 630 OFFCURVE",
"628 526 CURVE SMOOTH",
"628 438 OFFCURVE",
"557 360 OFFCURVE",
"423 360 CURVE SMOOTH",
"248 360 LINE"
);
}
);
width = 712;
},
{
anchors = (
{
name = bottom;
position = "{456, 0}";
},
{
name = top;
position = "{456, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 241, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"495 0 LINE SMOOTH",
"648 0 OFFCURVE",
"746 78 OFFCURVE",
"746 204 CURVE SMOOTH",
"746 293 OFFCURVE",
"692 348 OFFCURVE",
"588 369 CURVE",
"675 394 OFFCURVE",
"722 456 OFFCURVE",
"722 530 CURVE SMOOTH",
"722 654 OFFCURVE",
"635 717 OFFCURVE",
"470 717 CURVE SMOOTH",
"241 717 LINE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"338 327 LINE",
"493 327 LINE SMOOTH",
"598 327 OFFCURVE",
"651 280 OFFCURVE",
"651 207 CURVE SMOOTH",
"651 125 OFFCURVE",
"597 77 OFFCURVE",
"493 77 CURVE SMOOTH",
"338 77 LINE"
);
},
{
closed = 1;
nodes = (
"338 640 LINE",
"470 640 LINE SMOOTH",
"577 640 OFFCURVE",
"626 602 OFFCURVE",
"626 518 CURVE SMOOTH",
"626 441 OFFCURVE",
"568 396 OFFCURVE",
"466 396 CURVE SMOOTH",
"338 396 LINE"
);
}
);
width = 776;
},
{
anchors = (
{
name = bottom;
position = "{492, 0}";
},
{
name = top;
position = "{492, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 246, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"537 0 LINE SMOOTH",
"703 0 OFFCURVE",
"810 87 OFFCURVE",
"810 220 CURVE SMOOTH",
"810 301 OFFCURVE",
"765 354 OFFCURVE",
"669 377 CURVE",
"752 407 OFFCURVE",
"793 462 OFFCURVE",
"793 532 CURVE SMOOTH",
"793 678 OFFCURVE",
"682 729 OFFCURVE",
"514 729 CURVE SMOOTH",
"246 729 LINE",
"246 0 LINE"
);
},
{
closed = 1;
nodes = (
"415 309 LINE",
"533 309 LINE SMOOTH",
"612 309 OFFCURVE",
"643 281 OFFCURVE",
"643 223 CURVE SMOOTH",
"643 169 OFFCURVE",
"615 128 OFFCURVE",
"534 128 CURVE SMOOTH",
"415 128 LINE"
);
},
{
closed = 1;
nodes = (
"415 602 LINE",
"514 602 LINE SMOOTH",
"589 602 OFFCURVE",
"624 581 OFFCURVE",
"624 512 CURVE SMOOTH",
"624 441 OFFCURVE",
"580 422 OFFCURVE",
"503 422 CURVE SMOOTH",
"415 422 LINE"
);
}
);
width = 834;
}
);
rightMetricsKey = B;
unicode = 0181;
},
{
glyphname = Bstroke;
layers = (
{
components = (
{
name = B;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 16, -430}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 600;
},
{
components = (
{
name = B;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 18, -434}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 640;
},
{
components = (
{
name = B;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 23, -428}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 685;
}
);
unicode = 0243;
},
{
glyphname = C;
layers = (
{
anchors = (
{
name = bottom;
position = "{373, 0}";
},
{
name = top;
position = "{373, 700}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 613, 639}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"476 -8 OFFCURVE",
"553 29 OFFCURVE",
"616 89 CURVE",
"612 93 LINE SMOOTH",
"611 94 OFFCURVE",
"610 95 OFFCURVE",
"609 95 CURVE SMOOTH",
"607 95 OFFCURVE",
"606 94 OFFCURVE",
"604 92 CURVE SMOOTH",
"555 43 OFFCURVE",
"478 2 OFFCURVE",
"373 2 CURVE SMOOTH",
"176 2 OFFCURVE",
"55 148 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 553 OFFCURVE",
"175 698 OFFCURVE",
"388 698 CURVE SMOOTH",
"478 698 OFFCURVE",
"560 672 OFFCURVE",
"604 640 CURVE",
"613 639 LINE",
"613 645 LINE",
"571 683 OFFCURVE",
"475 708 OFFCURVE",
"384 708 CURVE SMOOTH",
"276 708 OFFCURVE",
"195 673 OFFCURVE",
"136 610 CURVE SMOOTH",
"77 546 OFFCURVE",
"43 457 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 239 OFFCURVE",
"78 151 OFFCURVE",
"136 89 CURVE SMOOTH",
"194 27 OFFCURVE",
"273 -8 OFFCURVE",
"373 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 3 13 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
23 2 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 658;
},
{
anchors = (
{
name = bottom;
position = "{379, 0}";
},
{
name = top;
position = "{369, 729}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 630, 578}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"487 -8 OFFCURVE",
"578 31 OFFCURVE",
"637 108 CURVE",
"570 179 LINE SMOOTH",
"563 186 OFFCURVE",
"555 189 OFFCURVE",
"547 189 CURVE SMOOTH",
"536 189 OFFCURVE",
"526 183 OFFCURVE",
"519 177 CURVE SMOOTH",
"482 145 OFFCURVE",
"438 131 OFFCURVE",
"390 131 CURVE SMOOTH",
"263 131 OFFCURVE",
"188 227 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 504 OFFCURVE",
"265 597 OFFCURVE",
"406 597 CURVE SMOOTH",
"455 597 OFFCURVE",
"525 586 OFFCURVE",
"564 561 CURVE",
"630 578 LINE",
"630 679 LINE",
"577 707 OFFCURVE",
"496 738 OFFCURVE",
"398 738 CURVE SMOOTH",
"289 738 OFFCURVE",
"189 699 OFFCURVE",
"121 632 CURVE SMOOTH",
"54 567 OFFCURVE",
"15 473 OFFCURVE",
"15 362 CURVE SMOOTH",
"15 254 OFFCURVE",
"52 159 OFFCURVE",
"114 94 CURVE SMOOTH",
"173 32 OFFCURVE",
"260 -8 OFFCURVE",
"374 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 44 42 34 32 27 25 18 16 8 6 0 50 1 50 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
anchors = (
{
name = bottom;
position = "{376, 0}";
},
{
name = top;
position = "{370, 717}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 614, 599}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"495 -8 OFFCURVE",
"577 38 OFFCURVE",
"630 100 CURVE",
"592 142 LINE SMOOTH",
"587 147 OFFCURVE",
"582 148 OFFCURVE",
"578 148 CURVE SMOOTH",
"572 148 OFFCURVE",
"567 146 OFFCURVE",
"561 141 CURVE SMOOTH",
"508 93 OFFCURVE",
"454 76 OFFCURVE",
"390 76 CURVE SMOOTH",
"217 76 OFFCURVE",
"129 198 OFFCURVE",
"129 356 CURVE SMOOTH",
"129 527 OFFCURVE",
"233 641 OFFCURVE",
"393 641 CURVE SMOOTH",
"451 641 OFFCURVE",
"502 626 OFFCURVE",
"544 612 CURVE",
"614 599 LINE",
"614 672 LINE",
"537 701 OFFCURVE",
"467 725 OFFCURVE",
"386 725 CURVE SMOOTH",
"283 725 OFFCURVE",
"194 687 OFFCURVE",
"130 622 CURVE SMOOTH",
"67 558 OFFCURVE",
"30 466 OFFCURVE",
"30 356 CURVE SMOOTH",
"30 261 OFFCURVE",
"58 169 OFFCURVE",
"118 100 CURVE SMOOTH",
"180 29 OFFCURVE",
"269 -8 OFFCURVE",
"376 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 31 29 24 22 17 15 7 5 0 46 1 46 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 5 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 669;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "F1F24019-78CA-4986-A76E-5F267CDC180B";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"536 699 OFFCURVE",
"460 715 OFFCURVE",
"394 715 CURVE SMOOTH",
"188 715 OFFCURVE",
"48 569 OFFCURVE",
"48 354 CURVE SMOOTH",
"48 146 OFFCURVE",
"177 -8 OFFCURVE",
"380 -8 CURVE SMOOTH",
"479 -8 OFFCURVE",
"566 24 OFFCURVE",
"633 94 CURVE",
"613 115 LINE SMOOTH",
"607 121 OFFCURVE",
"601 119 OFFCURVE",
"595 114 CURVE",
"534 58 OFFCURVE",
"469 36 OFFCURVE",
"384 36 CURVE SMOOTH",
"211 36 OFFCURVE",
"101 166 OFFCURVE",
"101 354 CURVE SMOOTH",
"101 539 OFFCURVE",
"213 671 OFFCURVE",
"394 671 CURVE SMOOTH",
"460 671 OFFCURVE",
"523 657 OFFCURVE",
"603 624 CURVE",
"620 665 LINE"
);
},
{
closed = 1;
nodes = (
"569 641 LINE",
"574 531 LINE",
"575 515 OFFCURVE",
"582 507 OFFCURVE",
"596 507 CURVE SMOOTH",
"620 507 LINE",
"620 665 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 3 13 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
23 2 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 719;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "A1B57D67-26C3-497C-94A8-57CB27341161";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"537 708 OFFCURVE",
"464 725 OFFCURVE",
"409 724 CURVE",
"299 724 OFFCURVE",
"209 690 OFFCURVE",
"143 622 CURVE SMOOTH",
"77 554 OFFCURVE",
"43 466 OFFCURVE",
"43 358 CURVE SMOOTH",
"43 149 OFFCURVE",
"172 -8 OFFCURVE",
"385 -8 CURVE SMOOTH",
"495 -8 OFFCURVE",
"581 28 OFFCURVE",
"643 100 CURVE",
"605 142 LINE",
"598 149 OFFCURVE",
"587 152 OFFCURVE",
"573 140 CURVE",
"520 91 OFFCURVE",
"464 76 OFFCURVE",
"390 76 CURVE SMOOTH",
"238 76 OFFCURVE",
"141 192 OFFCURVE",
"141 358 CURVE SMOOTH",
"141 444 OFFCURVE",
"166 513 OFFCURVE",
"214 565 CURVE SMOOTH",
"290 645 OFFCURVE",
"401 662 OFFCURVE",
"551 614 CURVE",
"559 524 LINE",
"561 512 OFFCURVE",
"569 506 OFFCURVE",
"581 506 CURVE SMOOTH",
"629 506 LINE",
"629 674 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 31 29 24 22 17 15 7 5 0 46 1 46 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 5 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "582078F1-09D5-4BB3-9817-96B77313C293";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"633 495 LINE",
"633 679 LINE",
"542 714 OFFCURVE",
"466 731 OFFCURVE",
"406 731 CURVE SMOOTH",
"351 731 OFFCURVE",
"300 722 OFFCURVE",
"255 704 CURVE SMOOTH",
"209 686 OFFCURVE",
"171 660 OFFCURVE",
"138 627 CURVE SMOOTH",
"105 594 OFFCURVE",
"80 556 OFFCURVE",
"62 511 CURVE SMOOTH",
"44 466 OFFCURVE",
"35 415 OFFCURVE",
"35 361 CURVE SMOOTH",
"35 307 OFFCURVE",
"43 258 OFFCURVE",
"59 213 CURVE SMOOTH",
"75 168 OFFCURVE",
"99 129 OFFCURVE",
"129 96 CURVE SMOOTH",
"159 63 OFFCURVE",
"196 38 OFFCURVE",
"239 20 CURVE SMOOTH",
"282 2 OFFCURVE",
"329 -8 OFFCURVE",
"383 -8 CURVE SMOOTH",
"443 -8 OFFCURVE",
"495 2 OFFCURVE",
"538 21 CURVE SMOOTH",
"581 40 OFFCURVE",
"617 68 OFFCURVE",
"646 104 CURVE",
"593 162 LINE",
"588 168 OFFCURVE",
"581 170 OFFCURVE",
"574 170 CURVE SMOOTH",
"570 170 OFFCURVE",
"566 170 OFFCURVE",
"562 168 CURVE SMOOTH",
"558 166 OFFCURVE",
"554 164 OFFCURVE",
"551 161 CURVE",
"540 151 OFFCURVE",
"529 142 OFFCURVE",
"518 135 CURVE SMOOTH",
"507 128 OFFCURVE",
"495 122 OFFCURVE",
"483 118 CURVE SMOOTH",
"471 114 OFFCURVE",
"457 111 OFFCURVE",
"442 109 CURVE SMOOTH",
"427 107 OFFCURVE",
"410 106 OFFCURVE",
"392 106 CURVE SMOOTH",
"361 106 OFFCURVE",
"333 111 OFFCURVE",
"306 123 CURVE SMOOTH",
"279 135 OFFCURVE",
"256 151 OFFCURVE",
"236 173 CURVE SMOOTH",
"216 195 OFFCURVE",
"202 221 OFFCURVE",
"190 253 CURVE SMOOTH",
"178 285 OFFCURVE",
"172 320 OFFCURVE",
"172 361 CURVE SMOOTH",
"172 400 OFFCURVE",
"178 436 OFFCURVE",
"190 468 CURVE SMOOTH",
"202 500 OFFCURVE",
"218 526 OFFCURVE",
"238 548 CURVE SMOOTH",
"258 570 OFFCURVE",
"282 587 OFFCURVE",
"311 599 CURVE SMOOTH",
"340 611 OFFCURVE",
"371 616 OFFCURVE",
"405 616 CURVE SMOOTH",
"443 616 OFFCURVE",
"488 609 OFFCURVE",
"543 593 CURVE",
"547 549 OFFCURVE",
"550 522 OFFCURVE",
"552 513 CURVE SMOOTH",
"555 501 OFFCURVE",
"562 495 OFFCURVE",
"575 495 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 44 42 34 32 27 25 18 16 8 6 0 50 1 50 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "E754C961-89D5-4BBE-92D0-87FCBAB8F6B7";
name = "Jan 24 23, 22:46";
paths = (
{
closed = 1;
nodes = (
"592 148 LINE",
"586.667 148 OFFCURVE",
"581.333 145.667 OFFCURVE",
"576 141 CURVE SMOOTH",
"522.645 93.262 OFFCURVE",
"475.134 76 OFFCURVE",
"393 76 CURVE SMOOTH",
"246.728 76 OFFCURVE",
"144 186.48 OFFCURVE",
"144 358 CURVE SMOOTH",
"144 526.647 OFFCURVE",
"249.163 641 OFFCURVE",
"405 641 CURVE SMOOTH",
"458.934 641 OFFCURVE",
"508.501 625.592 OFFCURVE",
"536.5 609 CURVE SMOOTH",
"556.051 597.414 OFFCURVE",
"579.765 578 OFFCURVE",
"591 578 CURVE SMOOTH",
"601.667 578 OFFCURVE",
"606.667 582.333 OFFCURVE",
"612 589 CURVE SMOOTH",
"643 634 LINE",
"584.333 690 OFFCURVE",
"510.333 725 OFFCURVE",
"405 725 CURVE SMOOTH",
"298.333 725 OFFCURVE",
"208.833 687.167 OFFCURVE",
"145.5 622.5 CURVE SMOOTH",
"82.167 557.833 OFFCURVE",
"45 466 OFFCURVE",
"45 358 CURVE SMOOTH",
"45 250 OFFCURVE",
"79.167 158 OFFCURVE",
"138.5 94 CURVE SMOOTH",
"197.833 30 OFFCURVE",
"283 -8 OFFCURVE",
"387 -8 CURVE SMOOTH",
"504.333 -8 OFFCURVE",
"586.333 32 OFFCURVE",
"645 100 CURVE",
"607 142 LINE",
"602.333 146 OFFCURVE",
"597.333 148 OFFCURVE",
"592 148 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 41 39 31 29 24 22 17 15 7 5 0 46 1 46 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 5 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
19 1 3 4 3 1 5 0 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 685;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "847439AD-413B-4905-8205-AB3F5B3316E8";
name = "Jan 24 23, 22:51";
paths = (
{
closed = 1;
nodes = (
"642 95 LINE",
"641.333 95 OFFCURVE",
"640 94 OFFCURVE",
"638 92 CURVE SMOOTH",
"571.748 31.509 OFFCURVE",
"510.086 2 OFFCURVE",
"402 2 CURVE SMOOTH",
"312.667 2 OFFCURVE",
"235 35 OFFCURVE",
"179 95 CURVE SMOOTH",
"123 155 OFFCURVE",
"89 242 OFFCURVE",
"89 350 CURVE SMOOTH",
"89 456.667 OFFCURVE",
"122.667 543.833 OFFCURVE",
"180 604.5 CURVE SMOOTH",
"237.333 665.167 OFFCURVE",
"317.333 698 OFFCURVE",
"412 698 CURVE SMOOTH",
"478.457 698 OFFCURVE",
"538.003 681.513 OFFCURVE",
"573.5 660 CURVE SMOOTH",
"587.761 651.357 OFFCURVE",
"627.652 621 OFFCURVE",
"630 621 CURVE SMOOTH",
"632 621 OFFCURVE",
"633.667 622 OFFCURVE",
"635 624 CURVE SMOOTH",
"636 626 LINE",
"571.038 682.842 OFFCURVE",
"507.85 708 OFFCURVE",
"412 708 CURVE SMOOTH",
"313.333 708 OFFCURVE",
"228.667 672.833 OFFCURVE",
"170 609.5 CURVE SMOOTH",
"111.333 546.167 OFFCURVE",
"77 456.667 OFFCURVE",
"77 350 CURVE SMOOTH",
"77 239.333 OFFCURVE",
"111.5 150.5 OFFCURVE",
"169.5 88.5 CURVE SMOOTH",
"227.5 26.5 OFFCURVE",
"308.667 -8 OFFCURVE",
"402 -8 CURVE SMOOTH",
"512.443 -8 OFFCURVE",
"587.224 29.077 OFFCURVE",
"650 89 CURVE",
"646 93 LINE SMOOTH",
"644.667 94.333 OFFCURVE",
"643.333 95 OFFCURVE",
"642 95 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 3 13 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
23 2 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 719;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 633, 578}";
}
);
layerId = "91981851-6241-45DD-800B-49B28A572A29";
name = "Jan 24 23, 22:54";
paths = (
{
closed = 1;
nodes = (
"550 189 LINE",
"539.333 189 OFFCURVE",
"530 183.667 OFFCURVE",
"522 177 CURVE SMOOTH",
"483.392 143.539 OFFCURVE",
"442.092 131 OFFCURVE",
"384 131 CURVE SMOOTH",
"272.091 131 OFFCURVE",
"191 224.135 OFFCURVE",
"191 365 CURVE SMOOTH",
"191 504.614 OFFCURVE",
"273.698 597 OFFCURVE",
"398 597 CURVE SMOOTH",
"440.991 597 OFFCURVE",
"483.498 585.001 OFFCURVE",
"504.5 571 CURVE SMOOTH",
"520.732 560.179 OFFCURVE",
"543.938 545 OFFCURVE",
"558 545 CURVE SMOOTH",
"576.667 545 OFFCURVE",
"585 554 OFFCURVE",
"592 563 CURVE SMOOTH",
"649 640 LINE",
"593.072 698.725 OFFCURVE",
"500.428 737 OFFCURVE",
"399 737 CURVE SMOOTH",
"287 737 OFFCURVE",
"191.833 698.5 OFFCURVE",
"124.5 632.5 CURVE SMOOTH",
"57.167 566.5 OFFCURVE",
"18 473 OFFCURVE",
"18 365 CURVE SMOOTH",
"18 258.333 OFFCURVE",
"51.667 164.5 OFFCURVE",
"113 98.5 CURVE SMOOTH",
"174.333 32.5 OFFCURVE",
"262.333 -8 OFFCURVE",
"373 -8 CURVE SMOOTH",
"494.333 -8 OFFCURVE",
"581.333 32 OFFCURVE",
"640 108 CURVE",
"573 179 LINE SMOOTH",
"567 186 OFFCURVE",
"558 189 OFFCURVE",
"550 189 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 44 42 34 32 27 25 18 16 8 6 0 50 1 50 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 4 4 2 1 0 36 0 2 2 17 31 0 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 6 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 1 1 5 1 0 35 0 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
leftKerningGroup = C;
leftMetricsKey = O;
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 247, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
name = C;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 239, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
name = C;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 240, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 0106;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 233, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
name = C;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 216, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
name = C;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 174, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 010C;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 222, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 214, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 00C7;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 233, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
name = C;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 216, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
name = C;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 174, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 0108;
},
{
glyphname = Cdotaccent;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 335, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
name = C;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 285, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
name = C;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 265, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 010A;
},
{
glyphname = Chook;
layers = (
{
components = (
{
name = C;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"613 687 LINE SMOOTH",
"613 774 OFFCURVE",
"645 827 OFFCURVE",
"710 827 CURVE SMOOTH",
"727 827 OFFCURVE",
"746 825 OFFCURVE",
"766 818 CURVE SMOOTH",
"771 817 OFFCURVE",
"775 815 OFFCURVE",
"776 820 CURVE SMOOTH",
"777 824 LINE",
"753 833 OFFCURVE",
"731 837 OFFCURVE",
"710 837 CURVE SMOOTH",
"638 837 OFFCURVE",
"603 777 OFFCURVE",
"603 687 CURVE SMOOTH",
"603 678 OFFCURVE",
"603 670 OFFCURVE",
"603 661 CURVE SMOOTH",
"603 652 OFFCURVE",
"603 643 OFFCURVE",
"604 633 CURVE",
"613 626 LINE"
);
}
);
width = 658;
},
{
components = (
{
name = C;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"614 688 LINE SMOOTH",
"614 756 OFFCURVE",
"637 794 OFFCURVE",
"688 794 CURVE SMOOTH",
"703 794 OFFCURVE",
"718 792 OFFCURVE",
"731 788 CURVE SMOOTH",
"747 785 OFFCURVE",
"757 789 OFFCURVE",
"762 805 CURVE SMOOTH",
"774 855 LINE",
"743 866 OFFCURVE",
"718 873 OFFCURVE",
"679 873 CURVE SMOOTH",
"578 873 OFFCURVE",
"534 801 OFFCURVE",
"534 709 CURVE SMOOTH",
"534 706 OFFCURVE",
"534 702 OFFCURVE",
"534 699 CURVE SMOOTH",
"534 696 OFFCURVE",
"534 692 OFFCURVE",
"535 689 CURVE",
"614 634 LINE"
);
}
);
width = 669;
},
{
components = (
{
name = C;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"630 688 LINE SMOOTH",
"630 743 OFFCURVE",
"645 770 OFFCURVE",
"685 770 CURVE SMOOTH",
"697 770 OFFCURVE",
"709 767 OFFCURVE",
"716 766 CURVE SMOOTH",
"739 763 OFFCURVE",
"758 766 OFFCURVE",
"765 793 CURVE SMOOTH",
"787 878 LINE",
"751 891 OFFCURVE",
"715 899 OFFCURVE",
"668 899 CURVE SMOOTH",
"540 899 OFFCURVE",
"491 822 OFFCURVE",
"491 726 CURVE SMOOTH",
"491 725 OFFCURVE",
"491 725 OFFCURVE",
"491 724 CURVE SMOOTH",
"491 723 OFFCURVE",
"491 722 OFFCURVE",
"491 721 CURVE",
"630 640 LINE"
);
}
);
width = 668;
}
);
unicode = 0187;
},
{
glyphname = D;
layers = (
{
anchors = (
{
name = bottom;
position = "{347, 0}";
},
{
name = center;
position = "{130, 357}";
},
{
name = top;
position = "{361, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"374 0 LINE SMOOTH",
"470 0 OFFCURVE",
"551 32 OFFCURVE",
"608 92 CURVE SMOOTH",
"665 152 OFFCURVE",
"698 239 OFFCURVE",
"698 350 CURVE SMOOTH",
"698 461 OFFCURVE",
"665 548 OFFCURVE",
"608 608 CURVE SMOOTH",
"551 668 OFFCURVE",
"470 700 OFFCURVE",
"374 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 690 LINE",
"374 690 LINE SMOOTH",
"569 690 OFFCURVE",
"685 557 OFFCURVE",
"685 350 CURVE SMOOTH",
"685 146 OFFCURVE",
"572 10 OFFCURVE",
"374 10 CURVE SMOOTH",
"136 10 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 741;
},
{
anchors = (
{
name = bottom;
position = "{353, 0}";
},
{
name = center;
position = "{184, 364}";
},
{
name = top;
position = "{367, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"380 0 LINE SMOOTH",
"493 0 OFFCURVE",
"589 39 OFFCURVE",
"655 104 CURVE SMOOTH",
"721 168 OFFCURVE",
"758 260 OFFCURVE",
"758 365 CURVE SMOOTH",
"758 469 OFFCURVE",
"721 561 OFFCURVE",
"655 626 CURVE SMOOTH",
"589 690 OFFCURVE",
"493 729 OFFCURVE",
"380 729 CURVE SMOOTH",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"267 599 LINE",
"380 599 LINE SMOOTH",
"511 599 OFFCURVE",
"585 506 OFFCURVE",
"585 365 CURVE SMOOTH",
"585 223 OFFCURVE",
"511 130 OFFCURVE",
"380 130 CURVE SMOOTH",
"267 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
22 20 19 17 9 7 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 11 31 0 3 3 0 1 0 36 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
anchors = (
{
name = bottom;
position = "{361, 0}";
},
{
name = center;
position = "{152, 357}";
},
{
name = top;
position = "{373, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"373 0 LINE SMOOTH",
"478 0 OFFCURVE",
"567 36 OFFCURVE",
"629 99 CURVE SMOOTH",
"691 162 OFFCURVE",
"726 251 OFFCURVE",
"726 358 CURVE SMOOTH",
"726 466 OFFCURVE",
"691 555 OFFCURVE",
"629 618 CURVE SMOOTH",
"567 681 OFFCURVE",
"478 717 OFFCURVE",
"373 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"203 638 LINE",
"373 638 LINE SMOOTH",
"531 638 OFFCURVE",
"627 530 OFFCURVE",
"627 358 CURVE SMOOTH",
"627 186 OFFCURVE",
"531 79 OFFCURVE",
"373 79 CURVE SMOOTH",
"203 79 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
22 20 19 17 9 7 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 11 31 0 3 3 0 1 0 36 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 3 0 1 0 36 0 0 0 15 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
}
);
leftMetricsKey = H;
note = D;
rightKerningGroup = D;
rightMetricsKey = O;
unicode = 0044;
},
{
glyphname = Dafrican;
layers = (
{
components = (
{
name = Dcroat;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = Dcroat;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = Dcroat;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 0189;
},
{
glyphname = Eth;
layers = (
{
components = (
{
name = D;
},
{
alignment = -1;
name = macroncomb;
transform = "{1, 0, 0, 1, 36, -284}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 741;
},
{
components = (
{
name = D;
},
{
alignment = -1;
name = macroncomb;
transform = "{1, 0, 0, 1, 51, -282}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 28 27 26 25 24 23 21 16 15 14 12 4 2 1 0 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
5 1 0 6 1 3 7 0 3 0 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 7 7 2 1 0 36 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 4 0 1 4 1 0 38 0 5 0 6 3 5 6 0 0 38 0 0 0 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
components = (
{
name = D;
},
{
alignment = -1;
name = macroncomb;
transform = "{1, 0, 0, 1, 8, -283}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 28 27 26 25 24 23 21 16 15 14 12 4 2 1 0 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
5 1 0 6 1 3 7 0 3 0 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 7 7 2 1 0 36 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 7 2 1 0 36 0 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 4 0 1 4 1 0 38 0 5 0 6 3 5 6 0 0 38 0 0 0 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "EF1A8062-75FF-4078-BD3F-A3703F48EEF5";
name = "Jan 25 23, 14:55";
paths = (
{
closed = 1;
nodes = (
"110 320 LINE",
"110 0 LINE",
"393 0 LINE SMOOTH",
"506 0 OFFCURVE",
"602 39 OFFCURVE",
"668 104 CURVE SMOOTH",
"734 168 OFFCURVE",
"771 260 OFFCURVE",
"771 365 CURVE SMOOTH",
"771 469 OFFCURVE",
"734 561 OFFCURVE",
"668 626 CURVE SMOOTH",
"602 690 OFFCURVE",
"506 729 OFFCURVE",
"393 729 CURVE SMOOTH",
"110 729 LINE",
"110 412 LINE",
"27 412 LINE",
"27 320 LINE",
"27 320 LINE"
);
},
{
closed = 1;
nodes = (
"598 365 LINE",
"598 223 OFFCURVE",
"524 130 OFFCURVE",
"393 130 CURVE SMOOTH",
"280 130 LINE",
"280 320 LINE",
"452 320 LINE",
"452 412 LINE",
"280 412 LINE",
"280 599 LINE",
"393 599 LINE SMOOTH",
"524 599 OFFCURVE",
"598 506 OFFCURVE",
"598 365 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 28 27 26 25 24 23 21 16 15 14 12 4 2 1 0 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
5 1 0 6 1 3 7 0 3 0 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 7 7 2 1 0 36 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 4 0 1 4 1 0 38 0 5 0 6 3 5 6 0 0 38 0 0 0 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 792;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D9A66E44-CAC9-4B27-8B25-9A81882E5E4C";
name = "Jan 25 23, 14:58";
paths = (
{
closed = 1;
nodes = (
"140 351 LINE",
"140 0 LINE",
"390 0 LINE SMOOTH",
"486 0 OFFCURVE",
"566.667 32 OFFCURVE",
"624 92 CURVE SMOOTH",
"681.333 152 OFFCURVE",
"714 239.333 OFFCURVE",
"714 350 CURVE SMOOTH",
"714 460.667 OFFCURVE",
"681.333 548 OFFCURVE",
"624 608 CURVE SMOOTH",
"566.667 668 OFFCURVE",
"486 700 OFFCURVE",
"390 700 CURVE SMOOTH",
"140 700 LINE",
"140 361 LINE",
"24 361 LINE",
"24 351 LINE",
"24 351 LINE"
);
},
{
closed = 1;
nodes = (
"701 350 LINE",
"701 242 OFFCURVE",
"669.667 156.5 OFFCURVE",
"615 98.5 CURVE SMOOTH",
"560.333 40.5 OFFCURVE",
"482 10 OFFCURVE",
"390 10 CURVE SMOOTH",
"152 10 LINE",
"152 351 LINE",
"364 351 LINE",
"364 361 LINE",
"152 361 LINE",
"152 690 LINE",
"390 690 LINE SMOOTH",
"482 690 OFFCURVE",
"560.333 659.5 OFFCURVE",
"615 601.5 CURVE SMOOTH",
"669.667 543.5 OFFCURVE",
"701 459.333 OFFCURVE",
"701 350 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 786;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "260B5F24-B353-4D97-B526-706AD2B98008";
name = "Jan 25 23, 14:59";
paths = (
{
closed = 1;
nodes = (
"124 333 LINE",
"124 0 LINE",
"391 0 LINE SMOOTH",
"496.333 0 OFFCURVE",
"585.5 36.333 OFFCURVE",
"647.5 99 CURVE SMOOTH",
"709.5 161.667 OFFCURVE",
"745 251.333 OFFCURVE",
"745 358 CURVE SMOOTH",
"745 466 OFFCURVE",
"709.5 555.333 OFFCURVE",
"647.5 618 CURVE SMOOTH",
"585.5 680.667 OFFCURVE",
"496.333 717 OFFCURVE",
"391 717 CURVE SMOOTH",
"124 717 LINE",
"124 390 LINE",
"25 390 LINE",
"25 333 LINE",
"25 333 LINE"
);
},
{
closed = 1;
nodes = (
"645 358 LINE",
"645 186.371 OFFCURVE",
"549.139 79 OFFCURVE",
"391 79 CURVE SMOOTH",
"221 79 LINE",
"221 333 LINE",
"411 333 LINE",
"411 390 LINE",
"221 390 LINE",
"221 638 LINE",
"391 638 LINE SMOOTH",
"548.597 638 OFFCURVE",
"645 529.973 OFFCURVE",
"645 358 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
30 28 27 26 25 24 23 21 16 15 14 12 4 2 1 0 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
5 1 0 6 1 3 7 0 3 0 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 7 7 2 1 0 36 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 7 2 1 0 36 0 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 4 0 1 4 1 0 38 5 1 0 6 1 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 0 4 0 1 4 1 0 38 0 5 0 6 3 5 6 0 0 38 0 0 0 3 7 0 3 0 0 38 0 7 2 2 7 1 0 35 0 7 7 2 1 0 36 0 2 7 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 789;
}
);
note = Eth;
rightKerningGroup = D;
unicode = 00D0;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = D;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 219, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = D;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 172, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 010E;
},
{
glyphname = Dcircumflexbelow;
layers = (
{
components = (
{
name = D;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 236, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = D;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = D;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 162, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 1E12;
},
{
glyphname = Dcroat;
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = Eth;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = Eth;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 0110;
},
{
glyphname = Ddotbelow;
layers = (
{
components = (
{
name = D;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = D;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = D;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 261, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 1E0C;
},
{
glyphname = Dhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{459, 0}";
},
{
name = center;
position = "{242, 357}";
},
{
name = top;
position = "{473, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 236, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"486 0 LINE SMOOTH",
"582 0 OFFCURVE",
"663 32 OFFCURVE",
"720 92 CURVE SMOOTH",
"777 152 OFFCURVE",
"810 239 OFFCURVE",
"810 350 CURVE SMOOTH",
"810 461 OFFCURVE",
"777 548 OFFCURVE",
"720 608 CURVE SMOOTH",
"663 668 OFFCURVE",
"582 700 OFFCURVE",
"486 700 CURVE SMOOTH",
"236 700 LINE",
"236 0 LINE"
);
},
{
closed = 1;
nodes = (
"248 690 LINE",
"486 690 LINE SMOOTH",
"681 690 OFFCURVE",
"797 557 OFFCURVE",
"797 350 CURVE SMOOTH",
"797 146 OFFCURVE",
"684 10 OFFCURVE",
"486 10 CURVE SMOOTH",
"248 10 LINE"
);
}
);
width = 853;
},
{
anchors = (
{
name = bottom;
position = "{497, 0}";
},
{
name = center;
position = "{288, 357}";
},
{
name = top;
position = "{509, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 241, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"509 0 LINE SMOOTH",
"614 0 OFFCURVE",
"703 36 OFFCURVE",
"765 99 CURVE SMOOTH",
"827 162 OFFCURVE",
"862 251 OFFCURVE",
"862 358 CURVE SMOOTH",
"862 466 OFFCURVE",
"827 555 OFFCURVE",
"765 618 CURVE SMOOTH",
"703 681 OFFCURVE",
"614 717 OFFCURVE",
"509 717 CURVE SMOOTH",
"241 717 LINE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"339 638 LINE",
"509 638 LINE SMOOTH",
"667 638 OFFCURVE",
"763 530 OFFCURVE",
"763 358 CURVE SMOOTH",
"763 186 OFFCURVE",
"667 79 OFFCURVE",
"509 79 CURVE SMOOTH",
"339 79 LINE"
);
}
);
width = 892;
},
{
anchors = (
{
name = bottom;
position = "{502, 0}";
},
{
name = center;
position = "{333, 364}";
},
{
name = top;
position = "{516, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 246, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"529 0 LINE SMOOTH",
"642 0 OFFCURVE",
"738 39 OFFCURVE",
"804 104 CURVE SMOOTH",
"870 168 OFFCURVE",
"907 260 OFFCURVE",
"907 365 CURVE SMOOTH",
"907 469 OFFCURVE",
"870 561 OFFCURVE",
"804 626 CURVE SMOOTH",
"738 690 OFFCURVE",
"642 729 OFFCURVE",
"529 729 CURVE SMOOTH",
"246 729 LINE",
"246 0 LINE"
);
},
{
closed = 1;
nodes = (
"416 599 LINE",
"529 599 LINE SMOOTH",
"660 599 OFFCURVE",
"734 506 OFFCURVE",
"734 365 CURVE SMOOTH",
"734 223 OFFCURVE",
"660 130 OFFCURVE",
"529 130 CURVE SMOOTH",
"416 130 LINE"
);
}
);
width = 922;
}
);
leftMetricsKey = Bhook;
rightMetricsKey = D;
unicode = 018A;
},
{
glyphname = Dlinebelow;
layers = (
{
components = (
{
name = D;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 741;
},
{
components = (
{
name = D;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 756;
},
{
components = (
{
name = D;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 773;
}
);
unicode = 1E0E;
},
{
glyphname = E;
layers = (
{
anchors = (
{
name = bottom;
position = "{315, 0}";
},
{
name = ogonek;
position = "{417, 3}";
},
{
name = top;
position = "{315, 700}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 534, 11}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 533, 689}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"534 0 LINE",
"534 11 LINE",
"136 11 LINE",
"136 350 LINE",
"445 350 LINE",
"445 361 LINE",
"136 361 LINE",
"136 689 LINE",
"533 689 LINE",
"533 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 3 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 582;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = ogonek;
position = "{395, 3}";
},
{
name = top;
position = "{301, 716}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 547, 79}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 547, 638}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"547 0 LINE",
"547 79 LINE",
"203 79 LINE",
"203 323 LINE",
"467 323 LINE",
"467 399 LINE",
"203 399 LINE",
"203 638 LINE",
"547 638 LINE",
"547 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 5 0 0 36 6 1 5 5 11 31 0 3 3 4 0 0 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
6 1 5 0 0 1 5 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 3 4 0 0 36 0 4 4 15 4 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
6 1 5 0 0 1 5 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 592;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = ogonek;
position = "{436, 3}";
},
{
name = top;
position = "{303, 729}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 566, 130}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 566, 599}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 128, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"566 0 LINE",
"566 130 LINE",
"267 130 LINE",
"267 304 LINE",
"491 304 LINE",
"491 429 LINE",
"267 429 LINE",
"267 599 LINE",
"566 599 LINE",
"566 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 5 0 0 36 6 1 5 5 11 31 0 3 3 4 0 0 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
6 1 5 0 0 1 5 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
leftMetricsKey = H;
note = E;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 189, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 170, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 174, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 00C9;
},
{
glyphname = Ebreve;
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 138, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 0114;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 011A;
},
{
glyphname = Ecedilla;
layers = (
{
components = (
{
name = E;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 169, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 138, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 0228;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 175, 166}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 277, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 256, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 211, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EC4;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 108, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 00CB;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 277, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 216, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 199, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 0116;
},
{
glyphname = Edotbelow;
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 277, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 256, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 211, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EB8;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 154, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 114, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 82, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 00C8;
},
{
glyphname = Ehookabove;
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 116, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 105, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 110, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EBA;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 154, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 138, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 0112;
},
{
glyphname = Eogonek;
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 277, 3}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 241, 3}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 271, 3}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 0118;
},
{
glyphname = Eopen;
layers = (
{
anchors = (
{
name = bottom;
position = "{296, 0}";
},
{
name = top;
position = "{321, 700}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 527, 636}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"418.168 -8 OFFCURVE",
"503.649 35.158 OFFCURVE",
"538 82 CURVE",
"534 85 LINE SMOOTH",
"533 86 OFFCURVE",
"531.333 88 OFFCURVE",
"530 88 CURVE SMOOTH",
"528.667 88 OFFCURVE",
"528 88 OFFCURVE",
"526 85 CURVE SMOOTH",
"489 32 OFFCURVE",
"389 2 OFFCURVE",
"323 2 CURVE SMOOTH",
"183.105 2 OFFCURVE",
"82 77.988 OFFCURVE",
"82 194 CURVE SMOOTH",
"82 304.607 OFFCURVE",
"180.444 382 OFFCURVE",
"327 382 CURVE SMOOTH",
"439 382 LINE",
"439 392 LINE",
"327 392 LINE SMOOTH",
"210.343 392 OFFCURVE",
"102 437.444 OFFCURVE",
"102 535 CURVE SMOOTH",
"102 630.532 OFFCURVE",
"188.574 697 OFFCURVE",
"321 697 CURVE SMOOTH",
"389 697 OFFCURVE",
"437 681 OFFCURVE",
"468 665 CURVE SMOOTH",
"492 652 OFFCURVE",
"517 631 OFFCURVE",
"520 631 CURVE SMOOTH",
"521.333 631 OFFCURVE",
"522.667 631.667 OFFCURVE",
"524 633 CURVE SMOOTH",
"527 636 LINE",
"480.333 678.667 OFFCURVE",
"415.667 707 OFFCURVE",
"321 707 CURVE SMOOTH",
"185.398 707 OFFCURVE",
"91 639.515 OFFCURVE",
"91 535 CURVE SMOOTH",
"91 455.849 OFFCURVE",
"155.204 398.98 OFFCURVE",
"275 387 CURVE",
"144.428 372.218 OFFCURVE",
"70 288.569 OFFCURVE",
"70 194 CURVE SMOOTH",
"70 69.74 OFFCURVE",
"173.18 -8 OFFCURVE",
"323 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"527 636 LINE",
"515 632 LINE",
"527 572 LINE"
);
}
);
width = 591;
},
{
anchors = (
{
name = bottom;
position = "{297, 0}";
},
{
name = top;
position = "{323, 737}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 551, 614}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"408.636 -8 OFFCURVE",
"509.248 27.191 OFFCURVE",
"566 102 CURVE",
"531 143 LINE SMOOTH",
"526 148 OFFCURVE",
"521.333 150 OFFCURVE",
"516 150 CURVE SMOOTH",
"510.667 150 OFFCURVE",
"505 146 OFFCURVE",
"500 142 CURVE SMOOTH",
"460 108 OFFCURVE",
"418.994 75 OFFCURVE",
"332 75 CURVE SMOOTH",
"222.9 75 OFFCURVE",
"150 132.057 OFFCURVE",
"150 217 CURVE SMOOTH",
"150 292.111 OFFCURVE",
"216.136 351 OFFCURVE",
"325 351 CURVE SMOOTH",
"450 351 LINE",
"450 422 LINE",
"333 422 LINE SMOOTH",
"239.748 422 OFFCURVE",
"169 456.573 OFFCURVE",
"169 531 CURVE SMOOTH",
"169 598.533 OFFCURVE",
"226.379 644 OFFCURVE",
"323 644 CURVE SMOOTH",
"383 644 OFFCURVE",
"423.167 631.333 OFFCURVE",
"450.5 618 CURVE SMOOTH",
"470.473 608.257 OFFCURVE",
"494.197 592 OFFCURVE",
"505 592 CURVE SMOOTH",
"511.667 592 OFFCURVE",
"520 593 OFFCURVE",
"529 608 CURVE SMOOTH",
"551 646 LINE",
"499 692.667 OFFCURVE",
"427.333 725 OFFCURVE",
"326 725 CURVE SMOOTH",
"175.531 725 OFFCURVE",
"67 645.65 OFFCURVE",
"67 536 CURVE SMOOTH",
"67 468.25 OFFCURVE",
"106.629 414.963 OFFCURVE",
"194 390 CURVE",
"108.116 361.372 OFFCURVE",
"51 290.739 OFFCURVE",
"51 208 CURVE SMOOTH",
"51 71.991 OFFCURVE",
"170.057 -8 OFFCURVE",
"308 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"551 646 LINE",
"503 591 LINE",
"551 582 LINE"
);
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
position = "{298, 0}";
},
{
name = top;
position = "{298, 749}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 572, 591}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"405.7 -7 OFFCURVE",
"508.208 18.872 OFFCURVE",
"590 116 CURVE",
"528 186 LINE SMOOTH",
"521 194 OFFCURVE",
"513 197 OFFCURVE",
"505 197 CURVE SMOOTH",
"494.333 197 OFFCURVE",
"485 191.667 OFFCURVE",
"477 185 CURVE SMOOTH",
"439.112 153.427 OFFCURVE",
"411.775 130 OFFCURVE",
"340 130 CURVE SMOOTH",
"256.686 130 OFFCURVE",
"208 173.11 OFFCURVE",
"208 234 CURVE SMOOTH",
"208 284.49 OFFCURVE",
"246.649 327 OFFCURVE",
"323 327 CURVE SMOOTH",
"460 327 LINE",
"460 444 LINE",
"338 444 LINE SMOOTH",
"259.333 444 OFFCURVE",
"226 474.667 OFFCURVE",
"226 528 CURVE SMOOTH",
"226 572.39 OFFCURVE",
"258.58 604 OFFCURVE",
"325 604 CURVE SMOOTH",
"352 604 OFFCURVE",
"385 595 OFFCURVE",
"415 585 CURVE SMOOTH",
"449 574 OFFCURVE",
"479 562 OFFCURVE",
"492 562 CURVE SMOOTH",
"504 562 OFFCURVE",
"520 565 OFFCURVE",
"534 589 CURVE SMOOTH",
"572 653 LINE",
"514.667 705 OFFCURVE",
"438 738 OFFCURVE",
"330 738 CURVE SMOOTH",
"165.077 738 OFFCURVE",
"46 650.144 OFFCURVE",
"46 536 CURVE SMOOTH",
"46 476.841 OFFCURVE",
"78.332 419.012 OFFCURVE",
"152 392 CURVE",
"82.593 358.684 OFFCURVE",
"35 297.601 OFFCURVE",
"35 219 CURVE SMOOTH",
"35 82 OFFCURVE",
"156 -7 OFFCURVE",
"295 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"572 653 LINE",
"524 598 LINE",
"572 589 LINE"
);
}
);
width = 595;
}
);
unicode = 0190;
},
{
glyphname = Ereversed;
layers = (
{
components = (
{
name = E;
transform = "{-1, 0, 0, 1, 582, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
transform = "{-1, 0, 0, 1, 592, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
transform = "{-1, 0, 0, 1, 599, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 018E;
},
{
glyphname = Esh;
layers = (
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 550, 11}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 550, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"550 0 LINE",
"550 11 LINE",
"93 11 LINE SMOOTH",
"78.333 11 OFFCURVE",
"65.333 10.333 OFFCURVE",
"52 9 CURVE",
"60.667 17 OFFCURVE",
"71 29 OFFCURVE",
"84 46 CURVE SMOOTH",
"313 343 LINE SMOOTH",
"315 346 OFFCURVE",
"316 348 OFFCURVE",
"316 350 CURVE SMOOTH",
"316 352 OFFCURVE",
"315 354 OFFCURVE",
"313 357 CURVE SMOOTH",
"85 655 LINE SMOOTH",
"72 672 OFFCURVE",
"66.333 679.667 OFFCURVE",
"53 693 CURVE",
"67.667 689 OFFCURVE",
"79.667 689 OFFCURVE",
"93 689 CURVE SMOOTH",
"550 689 LINE",
"550 700 LINE",
"41 700 LINE",
"41 696 LINE SMOOTH",
"41 694.667 OFFCURVE",
"41 692 OFFCURVE",
"43 690 CURVE SMOOTH",
"306 349 LINE",
"44 11 LINE SMOOTH",
"42 8 OFFCURVE",
"41 6 OFFCURVE",
"41 4 CURVE SMOOTH",
"41 0 LINE"
);
}
);
width = 599;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 570, 76}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 570, 640}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"570 0 LINE",
"570 76 LINE",
"204 76 LINE SMOOTH",
"184 76 OFFCURVE",
"163 74.667 OFFCURVE",
"139 72 CURVE",
"152.333 80 OFFCURVE",
"165 92 OFFCURVE",
"184 115 CURVE SMOOTH",
"347 315 LINE SMOOTH",
"367 340 OFFCURVE",
"372 352.333 OFFCURVE",
"372 367 CURVE SMOOTH",
"370 382 OFFCURVE",
"359 398 OFFCURVE",
"347 413 CURVE SMOOTH",
"202 594 LINE SMOOTH",
"184 617 OFFCURVE",
"164 632.333 OFFCURVE",
"136 647 CURVE",
"161.333 643 OFFCURVE",
"184.333 640 OFFCURVE",
"215 640 CURVE SMOOTH",
"570 640 LINE",
"570 717 LINE",
"33 717 LINE",
"33 675 LINE SMOOTH",
"33 664.333 OFFCURVE",
"39 654 OFFCURVE",
"45 647 CURVE SMOOTH",
"287 358 LINE",
"51 77 LINE SMOOTH",
"42 66 OFFCURVE",
"33 51.667 OFFCURVE",
"33 37 CURVE SMOOTH",
"33 0 LINE"
);
}
);
width = 608;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 587, 126}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 587, 603}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"587 0 LINE",
"587 126 LINE",
"298 126 LINE SMOOTH",
"275.333 126 OFFCURVE",
"249 124 OFFCURVE",
"217 120 CURVE",
"233 129.333 OFFCURVE",
"248 141 OFFCURVE",
"270 167 CURVE SMOOTH",
"375 294 LINE SMOOTH",
"402 326 OFFCURVE",
"419 351.208 OFFCURVE",
"419 379 CURVE SMOOTH",
"419 399.926 OFFCURVE",
"405 420 OFFCURVE",
"376 456 CURVE SMOOTH",
"302 549 LINE",
"278 574.333 OFFCURVE",
"250 593.667 OFFCURVE",
"214 611 CURVE",
"246 605.667 OFFCURVE",
"278 603 OFFCURVE",
"318 603 CURVE SMOOTH",
"587 603 LINE",
"587 729 LINE",
"27 729 LINE",
"27 659 LINE SMOOTH",
"27 641.667 OFFCURVE",
"36 626 OFFCURVE",
"47 613 CURVE SMOOTH",
"269 364 LINE",
"58 128 LINE SMOOTH",
"41 109 OFFCURVE",
"27 85 OFFCURVE",
"27 61 CURVE SMOOTH",
"27 0 LINE"
);
}
);
width = 617;
}
);
unicode = 01A9;
},
{
glyphname = Etilde;
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 175, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = E;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 147, 209}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 592;
},
{
components = (
{
name = E;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 599;
}
);
unicode = 1EBC;
},
{
glyphname = Ezh;
layers = (
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 55, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"413.724 -8 OFFCURVE",
"516 92.47 OFFCURVE",
"516 223 CURVE SMOOTH",
"516 357 OFFCURVE",
"409 417 OFFCURVE",
"253 417 CURVE SMOOTH",
"224 417 LINE",
"494 688 LINE SMOOTH",
"497 691 OFFCURVE",
"498 695.333 OFFCURVE",
"498 698 CURVE SMOOTH",
"498 700 LINE",
"55 700 LINE",
"55 689 LINE",
"478 689 LINE",
"211 419 LINE SMOOTH",
"209 417 OFFCURVE",
"208 414 OFFCURVE",
"208 410 CURVE SMOOTH",
"208 407 LINE",
"252 407 LINE SMOOTH",
"418.668 407 OFFCURVE",
"504 338.089 OFFCURVE",
"504 221 CURVE SMOOTH",
"504 97.061 OFFCURVE",
"402.609 2 OFFCURVE",
"263 2 CURVE SMOOTH",
"171.046 2 OFFCURVE",
"85.962 45.556 OFFCURVE",
"59 86 CURVE",
"57.667 87.333 OFFCURVE",
"56.333 88 OFFCURVE",
"55 88 CURVE SMOOTH",
"54.333 88 OFFCURVE",
"53.333 87.333 OFFCURVE",
"52 86 CURVE SMOOTH",
"48 82 LINE",
"78.972 35.542 OFFCURVE",
"169.448 -8 OFFCURVE",
"263 -8 CURVE SMOOTH"
);
}
);
width = 576;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 47, 638}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"414.857 -8 OFFCURVE",
"542 92.38 OFFCURVE",
"542 241 CURVE SMOOTH",
"542 362 OFFCURVE",
"460 442 OFFCURVE",
"299 442 CURVE SMOOTH",
"298 442 LINE",
"506 644 LINE SMOOTH",
"520 657 OFFCURVE",
"522 669 OFFCURVE",
"522 681 CURVE SMOOTH",
"522 717 LINE",
"47 717 LINE",
"47 638 LINE",
"386 638 LINE",
"189 444 LINE SMOOTH",
"178 433 OFFCURVE",
"175 422.667 OFFCURVE",
"175 412 CURVE SMOOTH",
"175 371 LINE",
"256 371 LINE SMOOTH",
"380.113 371 OFFCURVE",
"443 321.269 OFFCURVE",
"443 237 CURVE SMOOTH",
"443 144.533 OFFCURVE",
"372.433 75 OFFCURVE",
"263 75 CURVE SMOOTH",
"186.209 75 OFFCURVE",
"131.525 110.034 OFFCURVE",
"104 141 CURVE",
"92 150.333 OFFCURVE",
"87.667 152 OFFCURVE",
"81 152 CURVE SMOOTH",
"77 152 OFFCURVE",
"71 152 OFFCURVE",
"64 144 CURVE SMOOTH",
"26 102 LINE",
"78.218 34.116 OFFCURVE",
"168.564 -8 OFFCURVE",
"264 -8 CURVE SMOOTH"
);
}
);
width = 587;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 39, 599}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"424 -7 OFFCURVE",
"564 95 OFFCURVE",
"564 256 CURVE SMOOTH",
"564 366 OFFCURVE",
"480 458 OFFCURVE",
"358 458 CURVE SMOOTH",
"357 458 LINE",
"517 610 LINE SMOOTH",
"538 630 OFFCURVE",
"542 650.667 OFFCURVE",
"542 668 CURVE SMOOTH",
"542 729 LINE",
"39 729 LINE",
"39 599 LINE",
"312 599 LINE",
"171 464 LINE SMOOTH",
"153 447 OFFCURVE",
"147 428.667 OFFCURVE",
"147 414 CURVE SMOOTH",
"147 343 LINE",
"260 343 LINE SMOOTH",
"347.913 343 OFFCURVE",
"391 310.623 OFFCURVE",
"391 249 CURVE SMOOTH",
"391 182.195 OFFCURVE",
"346.215 130 OFFCURVE",
"264 130 CURVE SMOOTH",
"203.42 130 OFFCURVE",
"166.565 157.435 OFFCURVE",
"142 182 CURVE",
"123.943 195.542 OFFCURVE",
"114.45 200 OFFCURVE",
"102 200 CURVE SMOOTH",
"95.333 200 OFFCURVE",
"86 201 OFFCURVE",
"74 188 CURVE SMOOTH",
"8 116 LINE",
"80.703 32.911 OFFCURVE",
"167.816 -7 OFFCURVE",
"265 -7 CURVE SMOOTH"
);
}
);
width = 596;
}
);
unicode = 01B7;
},
{
glyphname = F;
layers = (
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 533, 689}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 340 LINE",
"445 340 LINE",
"445 351 LINE",
"136 351 LINE",
"136 689 LINE",
"533 689 LINE",
"533 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 3 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 566;
},
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 566, 599}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"267 284 LINE",
"516 284 LINE",
"516 414 LINE",
"267 414 LINE",
"267 599 LINE",
"566 599 LINE",
"566 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 9 0 9 8 7 6 5 4 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 4 0 0 36 5 1 4 4 11 31 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 3 53 5 1 4 0 0 1 4 0 0 0 38 0 1 2 2 1 0 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 547, 638}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 308 LINE",
"497 308 LINE",
"497 387 LINE",
"203 387 LINE",
"203 638 LINE",
"547 638 LINE",
"547 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 9 0 9 8 7 6 5 4 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 4 0 0 36 5 1 4 4 11 31 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 4 0 0 1 4 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 3 15 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 3 53 5 1 4 0 0 1 4 0 0 0 38 0 1 2 2 1 0 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "6DF824DE-3784-488C-BE84-91CF5971614D";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"58 708 LINE",
"58 689 LINE SMOOTH",
"58 678 OFFCURVE",
"65 672 OFFCURVE",
"78 671 CURVE",
"143 669 LINE",
"143 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"278 0 LINE",
"278 20 LINE SMOOTH",
"278 31 OFFCURVE",
"272 37 OFFCURVE",
"259 38 CURVE",
"194 40 LINE",
"194 325 LINE",
"458 325 LINE",
"458 368 LINE",
"194 368 LINE",
"194 666 LINE",
"523 666 LINE",
"527 586 LINE",
"528 570 OFFCURVE",
"535 562 OFFCURVE",
"549 562 CURVE SMOOTH",
"573 562 LINE",
"573 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 3 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 577;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "9A82D578-2A5F-40B6-8EAB-23C87EAA3249";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"128 716 LINE",
"56 716 LINE",
"56 674 LINE SMOOTH",
"56 664 OFFCURVE",
"61 657 OFFCURVE",
"71 655 CURVE",
"77 653 OFFCURVE",
"96 649 OFFCURVE",
"128 643 CURVE",
"128 72 LINE",
"71 61 LINE SMOOTH",
"61 59 OFFCURVE",
"56 52 OFFCURVE",
"56 42 CURVE SMOOTH",
"56 0 LINE",
"298 0 LINE",
"298 42 LINE SMOOTH",
"298 52 OFFCURVE",
"292 59 OFFCURVE",
"282 61 CURVE SMOOTH",
"252 67 OFFCURVE",
"234 70 OFFCURVE",
"226 72 CURVE",
"226 308 LINE",
"498 308 LINE",
"498 386 LINE",
"226 386 LINE",
"226 637 LINE",
"510 637 LINE",
"514 589 OFFCURVE",
"518 563 OFFCURVE",
"518 560 CURVE",
"520 548 OFFCURVE",
"526 543 OFFCURVE",
"538 543 CURVE SMOOTH",
"587 543 LINE",
"587 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 9 0 9 8 7 6 5 4 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 4 0 0 36 5 1 4 4 11 31 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 4 0 0 1 4 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 3 15 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 3 53 5 1 4 0 0 1 4 0 0 0 38 0 1 2 2 1 0 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "07C1F995-F5EE-4FB0-82EA-2900B1981213";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"555 723 LINE",
"532 723 LINE",
"99 723 LINE",
"23 723 LINE",
"23 664 LINE SMOOTH",
"23 647 OFFCURVE",
"31 637 OFFCURVE",
"48 633 CURVE",
"49 633 OFFCURVE",
"51 633 OFFCURVE",
"54 632 CURVE",
"57 632 OFFCURVE",
"62 630 OFFCURVE",
"69 629 CURVE SMOOTH",
"76 628 OFFCURVE",
"87 626 OFFCURVE",
"99 624 CURVE",
"99 99 LINE",
"87 97 OFFCURVE",
"76 95 OFFCURVE",
"69 94 CURVE SMOOTH",
"62 93 OFFCURVE",
"57 91 OFFCURVE",
"54 91 CURVE SMOOTH",
"51 91 OFFCURVE",
"49 90 OFFCURVE",
"48 90 CURVE",
"31 86 OFFCURVE",
"23 76 OFFCURVE",
"23 59 CURVE SMOOTH",
"23 0 LINE",
"99 0 LINE",
"234 0 LINE",
"310 0 LINE",
"310 59 LINE SMOOTH",
"310 76 OFFCURVE",
"302 86 OFFCURVE",
"285 90 CURVE",
"284 90 OFFCURVE",
"282 91 OFFCURVE",
"279 91 CURVE SMOOTH",
"276 91 OFFCURVE",
"271 93 OFFCURVE",
"264 94 CURVE SMOOTH",
"257 95 OFFCURVE",
"246 97 OFFCURVE",
"234 99 CURVE",
"234 295 LINE",
"487 295 LINE",
"487 402 LINE",
"234 402 LINE",
"234 616 LINE",
"492 616 LINE",
"495 581 OFFCURVE",
"498 560 OFFCURVE",
"499 552 CURVE",
"502 540 OFFCURVE",
"509 533 OFFCURVE",
"522 533 CURVE SMOOTH",
"564 533 LINE",
"576 533 LINE",
"580 533 LINE",
"580 630 LINE",
"580 653 LINE",
"580 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 9 0 9 8 7 6 5 4 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 2 3 1 2 0 0 38 0 0 0 4 0 0 36 5 1 4 4 11 31 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 3 53 5 1 4 0 0 1 4 0 0 0 38 0 1 2 2 1 0 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
leftMetricsKey = H;
note = F;
rightKerningGroup = F;
unicode = 0046;
},
{
glyphname = Fhook;
layers = (
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 533, 689}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 340 LINE",
"445 340 LINE",
"445 351 LINE",
"136 351 LINE",
"136 689 LINE",
"533 689 LINE",
"533 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"68 -188 OFFCURVE",
"136 -174 OFFCURVE",
"136 -83 CURVE SMOOTH",
"136 46 LINE",
"124 46 LINE",
"124 -82 LINE SMOOTH",
"124 -119 OFFCURVE",
"110 -178 OFFCURVE",
"41 -178 CURVE SMOOTH",
"7 -178 OFFCURVE",
"3 -165 OFFCURVE",
"-1 -172 CURVE SMOOTH",
"-4 -177 LINE",
"5 -182 OFFCURVE",
"20 -188 OFFCURVE",
"38 -188 CURVE SMOOTH"
);
}
);
width = 566;
},
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 547, 638}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 308 LINE",
"497 308 LINE",
"497 387 LINE",
"203 387 LINE",
"203 638 LINE",
"547 638 LINE",
"547 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 -182 OFFCURVE",
"203 -140 OFFCURVE",
"203 -31 CURVE SMOOTH",
"203 50 LINE",
"105 50 LINE",
"105 -28 LINE SMOOTH",
"105 -101 OFFCURVE",
"84 -115 OFFCURVE",
"39 -115 CURVE SMOOTH",
"5 -115 OFFCURVE",
"0 -107 OFFCURVE",
"-2 -129 CURVE SMOOTH",
"-6 -172 LINE",
"8 -177 OFFCURVE",
"23 -182 OFFCURVE",
"51 -182 CURVE SMOOTH"
);
}
);
width = 597;
},
{
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 566, 599}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 39 LINE",
"267 284 LINE",
"516 284 LINE",
"516 414 LINE",
"267 414 LINE",
"267 599 LINE",
"566 599 LINE",
"566 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"128 -180 OFFCURVE",
"267 -164 OFFCURVE",
"267 10 CURVE SMOOTH",
"267 90 LINE",
"97 90 LINE",
"97 -1 LINE SMOOTH",
"97 -53 OFFCURVE",
"84 -68 OFFCURVE",
"42 -68 CURVE SMOOTH",
"12 -68 OFFCURVE",
"7 -74 OFFCURVE",
"6 -90 CURVE SMOOTH",
"1 -170 LINE",
"24 -175 OFFCURVE",
"57 -180 OFFCURVE",
"84 -180 CURVE SMOOTH"
);
}
);
width = 597;
}
);
leftKerningGroup = F;
rightKerningGroup = F;
unicode = 0191;
},
{
glyphname = G;
layers = (
{
anchors = (
{
name = bottom;
position = "{400, 0}";
},
{
name = top;
position = "{388, 700}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 638, 639}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"489 -8 OFFCURVE",
"563 18 OFFCURVE",
"641 69 CURVE",
"641 301 LINE",
"467 301 LINE",
"467 296 LINE SMOOTH",
"467 293 OFFCURVE",
"469 291 OFFCURVE",
"473 291 CURVE SMOOTH",
"630 291 LINE",
"630 74 LINE",
"554 26 OFFCURVE",
"485 2 OFFCURVE",
"377 2 CURVE SMOOTH",
"179 2 OFFCURVE",
"55 141 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 562 OFFCURVE",
"179 698 OFFCURVE",
"388 698 CURVE SMOOTH",
"489 698 OFFCURVE",
"572 678 OFFCURVE",
"628 641 CURVE",
"638 639 LINE",
"638 645 LINE",
"588 686 OFFCURVE",
"487 708 OFFCURVE",
"388 708 CURVE SMOOTH",
"286 708 OFFCURVE",
"199 676 OFFCURVE",
"136 612 CURVE SMOOTH",
"73 546 OFFCURVE",
"43 456 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 238 OFFCURVE",
"77 150 OFFCURVE",
"135 89 CURVE SMOOTH",
"196 24 OFFCURVE",
"281 -8 OFFCURVE",
"377 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
32 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
11 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 718;
},
{
anchors = (
{
name = bottom;
position = "{394, 0}";
},
{
name = top;
position = "{381, 717}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 651, 599}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"499 -8 OFFCURVE",
"594 22 OFFCURVE",
"657 70 CURVE",
"657 344 LINE",
"437 344 LINE",
"437 289 LINE SMOOTH",
"437 278 OFFCURVE",
"446 270 OFFCURVE",
"458 270 CURVE SMOOTH",
"569 270 LINE",
"569 113 LINE",
"521 87 OFFCURVE",
"465 71 OFFCURVE",
"401 71 CURVE SMOOTH",
"230 71 OFFCURVE",
"129 183 OFFCURVE",
"129 357 CURVE SMOOTH",
"129 529 OFFCURVE",
"228 642 OFFCURVE",
"404 642 CURVE SMOOTH",
"472 642 OFFCURVE",
"527 627 OFFCURVE",
"574 613 CURVE",
"651 599 LINE",
"651 672 LINE",
"566 701 OFFCURVE",
"487 725 OFFCURVE",
"397 725 CURVE SMOOTH",
"285 725 OFFCURVE",
"193 688 OFFCURVE",
"130 624 CURVE SMOOTH",
"66 559 OFFCURVE",
"30 466 OFFCURVE",
"30 360 CURVE SMOOTH",
"30 252 OFFCURVE",
"67 158 OFFCURVE",
"130 93 CURVE SMOOTH",
"197 24 OFFCURVE",
"290 -8 OFFCURVE",
"396 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 44 42 37 35 29 27 19 17 12 11 8 6 0 52 1 52 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 2 0 1 0 2 1 1 0 38 0 6 6 4 1 0 36 0 4 4 17 31 7 1 0 0 3 1 0 36 0 3 3 18 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 0 3 1 0 36 0 3 3 21 3 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 3 3 0 1 0 35 7 1 0 0 3 1 0 36 0 3 0 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 732;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D6F368FE-67A4-4F68-B98F-941ABD3E06F1";
name = "Jan 15 23, 17:20";
paths = (
{
closed = 1;
nodes = (
"464 321 LINE",
"464 293 LINE SMOOTH",
"464 290 OFFCURVE",
"467 282 OFFCURVE",
"477 282 CURVE SMOOTH",
"613 282 LINE",
"613 91 LINE",
"537 48 OFFCURVE",
"482 34 OFFCURVE",
"395 34 CURVE SMOOTH",
"210 34 OFFCURVE",
"100 166 OFFCURVE",
"100 354 CURVE SMOOTH",
"100 540 OFFCURVE",
"211 671 OFFCURVE",
"401 671 CURVE SMOOTH",
"485 671 OFFCURVE",
"552 660 OFFCURVE",
"601 637 CURVE",
"606 529 LINE",
"607 513 OFFCURVE",
"614 505 OFFCURVE",
"628 505 CURVE SMOOTH",
"652 505 LINE",
"652 665 LINE",
"591 693 OFFCURVE",
"479 715 OFFCURVE",
"403 715 CURVE SMOOTH",
"184 715 OFFCURVE",
"48 573 OFFCURVE",
"48 354 CURVE SMOOTH",
"48 140 OFFCURVE",
"183 -8 OFFCURVE",
"391 -8 CURVE SMOOTH",
"499 -8 OFFCURVE",
"573 13 OFFCURVE",
"659 70 CURVE",
"659 321 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
32 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
11 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 761;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "2F17BF88-B4D4-4112-B61A-F243A93CD929";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"330 70 OFFCURVE",
"267 96 OFFCURVE",
"219 146 CURVE SMOOTH",
"170 198 OFFCURVE",
"146 268 OFFCURVE",
"146 358 CURVE SMOOTH",
"146 444 OFFCURVE",
"169 513 OFFCURVE",
"217 564 CURVE SMOOTH",
"240 588 OFFCURVE",
"268 607 OFFCURVE",
"300 620 CURVE SMOOTH",
"332 633 OFFCURVE",
"374 640 OFFCURVE",
"422 640 CURVE SMOOTH",
"470 640 OFFCURVE",
"513 634 OFFCURVE",
"551 624 CURVE",
"561 622 OFFCURVE",
"572 618 OFFCURVE",
"588 613 CURVE",
"592 557 OFFCURVE",
"596 527 OFFCURVE",
"596 522 CURVE",
"598 510 OFFCURVE",
"605 506 OFFCURVE",
"617 506 CURVE SMOOTH",
"665 506 LINE",
"665 672 LINE",
"574 706 OFFCURVE",
"490 724 OFFCURVE",
"412 724 CURVE SMOOTH",
"300 724 OFFCURVE",
"211 690 OFFCURVE",
"144 622 CURVE SMOOTH",
"78 556 OFFCURVE",
"46 468 OFFCURVE",
"46 358 CURVE SMOOTH",
"46 250 OFFCURVE",
"79 161 OFFCURVE",
"145 93 CURVE SMOOTH",
"211 25 OFFCURVE",
"296 -8 OFFCURVE",
"400 -8 CURVE SMOOTH",
"510 -8 OFFCURVE",
"600 17 OFFCURVE",
"672 69 CURVE",
"672 344 LINE",
"452 344 LINE",
"452 289 LINE SMOOTH",
"452 283 OFFCURVE",
"454 280 OFFCURVE",
"458 276 CURVE SMOOTH",
"462 272 OFFCURVE",
"468 270 OFFCURVE",
"474 270 CURVE SMOOTH",
"585 270 LINE",
"585 112 LINE",
"532 84 OFFCURVE",
"474 70 OFFCURVE",
"408 70 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 44 42 37 35 29 27 19 17 12 11 8 6 0 52 1 52 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 2 0 1 0 2 1 1 0 38 0 6 6 4 1 0 36 0 4 4 17 31 7 1 0 0 3 1 0 36 0 3 3 18 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 0 3 1 0 36 0 3 3 21 3 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 3 3 0 1 0 35 7 1 0 0 3 1 0 36 0 3 0 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 734;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 666, 599}";
}
);
layerId = "D6AB30C4-04A4-41A7-B79C-71F722E5F6C6";
name = "Jan 24 23, 22:12";
paths = (
{
closed = 1;
nodes = (
"510.372 -8 OFFCURVE",
"599.405 16.226 OFFCURVE",
"672 70 CURVE",
"672 344 LINE",
"452 344 LINE",
"452 289 LINE SMOOTH",
"452 278 OFFCURVE",
"461 270 OFFCURVE",
"473 270 CURVE SMOOTH",
"584 270 LINE",
"584 113 LINE",
"529.524 84.329 OFFCURVE",
"481 71 OFFCURVE",
"407 71 CURVE SMOOTH",
"248.905 71 OFFCURVE",
"144 182.872 OFFCURVE",
"144 358 CURVE SMOOTH",
"144 528.809 OFFCURVE",
"244.609 641 OFFCURVE",
"409 641 CURVE SMOOTH",
"507.646 641 OFFCURVE",
"528.976 619.705 OFFCURVE",
"599 582 CURVE SMOOTH",
"605 578.667 OFFCURVE",
"610.667 577 OFFCURVE",
"616 577 CURVE SMOOTH",
"625.333 577 OFFCURVE",
"632 581 OFFCURVE",
"638 590 CURVE SMOOTH",
"666 634 LINE",
"601.88 692.545 OFFCURVE",
"519.188 725 OFFCURVE",
"412 725 CURVE SMOOTH",
"300 725 OFFCURVE",
"207.833 688.167 OFFCURVE",
"144.5 623.5 CURVE SMOOTH",
"81.167 558.833 OFFCURVE",
"45 467.333 OFFCURVE",
"45 358 CURVE SMOOTH",
"45 250 OFFCURVE",
"82.333 158 OFFCURVE",
"145 94 CURVE SMOOTH",
"207.667 30 OFFCURVE",
"296 -8 OFFCURVE",
"400 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 44 42 37 35 29 27 19 17 12 11 8 6 0 52 1 52 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 2 0 1 0 2 1 1 0 38 0 6 6 4 1 0 36 0 4 4 17 31 7 1 0 0 3 1 0 36 0 3 3 18 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 0 3 1 0 36 0 3 3 21 3 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
33 1 5 6 5 1 0 1 13 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 3 3 0 1 0 35 7 1 0 0 3 1 0 36 0 3 0 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 734;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "80E070A2-D3D6-4EBE-8113-534666BF613A";
name = "Jan 24 23, 22:14";
paths = (
{
closed = 1;
nodes = (
"434 362 LINE",
"434 286 LINE SMOOTH",
"434 279 OFFCURVE",
"436 274 OFFCURVE",
"441 269 CURVE SMOOTH",
"446 264 OFFCURVE",
"453 261 OFFCURVE",
"462 261 CURVE SMOOTH",
"552 261 LINE",
"552 130 LINE",
"532 120 OFFCURVE",
"510 112 OFFCURVE",
"488 107 CURVE SMOOTH",
"465 102 OFFCURVE",
"439 99 OFFCURVE",
"409 99 CURVE SMOOTH",
"375 99 OFFCURVE",
"343 105 OFFCURVE",
"314 117 CURVE SMOOTH",
"285 129 OFFCURVE",
"260 146 OFFCURVE",
"239 168 CURVE SMOOTH",
"218 190 OFFCURVE",
"202 217 OFFCURVE",
"190 250 CURVE SMOOTH",
"178 282 OFFCURVE",
"172 320 OFFCURVE",
"172 362 CURVE SMOOTH",
"172 401 OFFCURVE",
"178 436 OFFCURVE",
"189 467 CURVE SMOOTH",
"200 498 OFFCURVE",
"216 525 OFFCURVE",
"236 547 CURVE SMOOTH",
"256 569 OFFCURVE",
"281 586 OFFCURVE",
"310 598 CURVE SMOOTH",
"339 610 OFFCURVE",
"370 616 OFFCURVE",
"406 616 CURVE SMOOTH",
"470 616 OFFCURVE",
"527 608 OFFCURVE",
"577 591 CURVE",
"581 548 OFFCURVE",
"584 522 OFFCURVE",
"586 513 CURVE SMOOTH",
"589 501 OFFCURVE",
"596 495 OFFCURVE",
"609 495 CURVE SMOOTH",
"650 495 LINE",
"663 495 LINE",
"667 495 LINE",
"667 679 LINE",
"574 713 OFFCURVE",
"489 731 OFFCURVE",
"411 731 CURVE SMOOTH",
"410 731 LINE",
"404 731 LINE SMOOTH",
"349 730 OFFCURVE",
"299 721 OFFCURVE",
"255 704 CURVE SMOOTH",
"209 686 OFFCURVE",
"169 661 OFFCURVE",
"137 628 CURVE SMOOTH",
"104 595 OFFCURVE",
"79 556 OFFCURVE",
"61 511 CURVE SMOOTH",
"43 466 OFFCURVE",
"35 416 OFFCURVE",
"35 362 CURVE SMOOTH",
"35 308 OFFCURVE",
"44 258 OFFCURVE",
"62 213 CURVE SMOOTH",
"80 168 OFFCURVE",
"106 129 OFFCURVE",
"138 96 CURVE SMOOTH",
"170 63 OFFCURVE",
"209 38 OFFCURVE",
"253 20 CURVE SMOOTH",
"297 2 OFFCURVE",
"345 -8 OFFCURVE",
"398 -8 CURVE SMOOTH",
"428 -8 OFFCURVE",
"455 -6 OFFCURVE",
"481 -3 CURVE SMOOTH",
"507 0 OFFCURVE",
"532 5 OFFCURVE",
"554 11 CURVE SMOOTH",
"576 17 OFFCURVE",
"597 25 OFFCURVE",
"617 35 CURVE SMOOTH",
"637 45 OFFCURVE",
"656 57 OFFCURVE",
"674 70 CURVE",
"674 362 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 43 41 36 34 27 25 17 15 10 9 6 4 0 51 1 51 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
31 1 6 4 3 1 0 1 11 1 3 0 3 30 0 5 6 2 6 5 2 50 0 2 0 1 0 2 1 1 0 38 0 6 6 4 1 0 36 0 4 4 17 31 7 1 0 0 3 1 0 36 0 3 3 18 3 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
31 1 6 4 3 1 0 1 11 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 3 3 0 1 0 35 7 1 0 0 3 1 0 36 0 3 0 3 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 712;
},
{
anchors = (
{
name = bottom;
position = "{393, 0}";
},
{
name = top;
position = "{380, 729}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 662, 578}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"502 -8 OFFCURVE",
"587 14 OFFCURVE",
"666 70 CURVE",
"666 378 LINE",
"407 378 LINE",
"407 285 LINE SMOOTH",
"407 268 OFFCURVE",
"420 255 OFFCURVE",
"441 255 CURVE SMOOTH",
"513 255 LINE",
"513 144 LINE",
"481 131 OFFCURVE",
"447 122 OFFCURVE",
"400 122 CURVE SMOOTH",
"273 122 OFFCURVE",
"188 218 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 502 OFFCURVE",
"266 597 OFFCURVE",
"394 597 CURVE SMOOTH",
"460 597 OFFCURVE",
"534 589 OFFCURVE",
"587 561 CURVE",
"662 578 LINE",
"662 679 LINE",
"579 716 OFFCURVE",
"514 737 OFFCURVE",
"400 737 CURVE SMOOTH",
"283 737 OFFCURVE",
"187 699 OFFCURVE",
"120 633 CURVE SMOOTH",
"52 567 OFFCURVE",
"15 473 OFFCURVE",
"15 365 CURVE SMOOTH",
"15 258 OFFCURVE",
"56 165 OFFCURVE",
"122 99 CURVE SMOOTH",
"188 33 OFFCURVE",
"280 -8 OFFCURVE",
"387 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 43 41 36 34 27 25 17 15 10 9 6 4 0 51 1 51 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
31 1 6 4 3 1 0 1 11 1 3 0 3 30 0 5 6 2 6 5 2 50 0 2 0 1 0 2 1 1 0 38 0 6 6 4 1 0 36 0 4 4 17 31 7 1 0 0 3 1 0 36 0 3 3 18 3 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
31 1 6 4 3 1 0 1 11 1 3 0 3 30 0 5 6 2 6 5 2 50 0 4 0 6 5 4 6 1 0 38 0 2 0 1 0 2 1 1 0 38 7 1 0 3 3 0 1 0 35 7 1 0 0 3 1 0 36 0 3 0 3 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 732;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 672, 629}";
}
);
layerId = "043F3D1B-EFC8-43B3-A5A3-247A2B605D05";
name = "Jan 24 23, 22:18";
paths = (
{
closed = 1;
nodes = (
"525.305 -8 OFFCURVE",
"599.225 19.455 OFFCURVE",
"675 69 CURVE",
"675 301 LINE",
"501 301 LINE",
"501 296 LINE SMOOTH",
"501 292.667 OFFCURVE",
"503 291 OFFCURVE",
"507 291 CURVE SMOOTH",
"664 291 LINE",
"664 74 LINE",
"588.614 26.535 OFFCURVE",
"520.436 2 OFFCURVE",
"411 2 CURVE SMOOTH",
"213 2 OFFCURVE",
"89 141 OFFCURVE",
"89 350 CURVE SMOOTH",
"89 562 OFFCURVE",
"213 698 OFFCURVE",
"422 698 CURVE SMOOTH",
"503 698 OFFCURVE",
"557 680 OFFCURVE",
"592 661 CURVE SMOOTH",
"617 646 OFFCURVE",
"643 623 OFFCURVE",
"648 623 CURVE",
"654 628 LINE",
"590.938 685.579 OFFCURVE",
"520.705 708 OFFCURVE",
"422 708 CURVE SMOOTH",
"316.667 708 OFFCURVE",
"230 673.5 OFFCURVE",
"170 611.5 CURVE SMOOTH",
"110 549.5 OFFCURVE",
"77 460.667 OFFCURVE",
"77 350 CURVE SMOOTH",
"77 239.333 OFFCURVE",
"110.333 150.5 OFFCURVE",
"169 88.5 CURVE SMOOTH",
"227.667 26.5 OFFCURVE",
"311 -8 OFFCURVE",
"411 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
32 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
11 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 761;
}
);
leftKerningGroup = C;
leftMetricsKey = O;
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 248, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 718;
},
{
components = (
{
name = G;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = G;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 215, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 732;
}
);
unicode = 011E;
},
{
glyphname = Gcaron;
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 248, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 718;
},
{
components = (
{
name = G;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = G;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 185, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 732;
}
);
unicode = 01E6;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 248, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 718;
},
{
components = (
{
name = G;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = G;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 185, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 732;
}
);
unicode = 011C;
},
{
glyphname = Gcommaaccent;
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 718;
},
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 228, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 732;
}
);
unicode = 0122;
},
{
glyphname = Gdotaccent;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 350, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 718;
},
{
components = (
{
name = G;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 296, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = G;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 276, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 732;
}
);
unicode = 0120;
},
{
glyphname = Ghook;
layers = (
{
components = (
{
name = G;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"638 687 LINE SMOOTH",
"638 774 OFFCURVE",
"670 827 OFFCURVE",
"735 827 CURVE SMOOTH",
"752 827 OFFCURVE",
"771 825 OFFCURVE",
"791 818 CURVE SMOOTH",
"796 817 OFFCURVE",
"800 815 OFFCURVE",
"801 820 CURVE SMOOTH",
"802 824 LINE",
"778 833 OFFCURVE",
"756 837 OFFCURVE",
"735 837 CURVE SMOOTH",
"663 837 OFFCURVE",
"628 777 OFFCURVE",
"628 687 CURVE SMOOTH",
"628 678 OFFCURVE",
"628 670 OFFCURVE",
"628 661 CURVE SMOOTH",
"628 652 OFFCURVE",
"628 643 OFFCURVE",
"629 633 CURVE",
"638 626 LINE"
);
}
);
width = 718;
},
{
components = (
{
name = G;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"651 688 LINE SMOOTH",
"651 756 OFFCURVE",
"674 794 OFFCURVE",
"725 794 CURVE SMOOTH",
"740 794 OFFCURVE",
"755 792 OFFCURVE",
"768 788 CURVE SMOOTH",
"784 785 OFFCURVE",
"794 789 OFFCURVE",
"799 805 CURVE SMOOTH",
"811 855 LINE",
"780 866 OFFCURVE",
"755 873 OFFCURVE",
"716 873 CURVE SMOOTH",
"615 873 OFFCURVE",
"571 801 OFFCURVE",
"571 709 CURVE SMOOTH",
"571 706 OFFCURVE",
"571 702 OFFCURVE",
"571 699 CURVE SMOOTH",
"571 696 OFFCURVE",
"571 692 OFFCURVE",
"572 689 CURVE",
"651 634 LINE"
);
}
);
width = 732;
},
{
components = (
{
name = G;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"662 688 LINE SMOOTH",
"662 743 OFFCURVE",
"677 770 OFFCURVE",
"717 770 CURVE SMOOTH",
"729 770 OFFCURVE",
"741 767 OFFCURVE",
"748 766 CURVE SMOOTH",
"771 763 OFFCURVE",
"790 766 OFFCURVE",
"797 793 CURVE SMOOTH",
"819 878 LINE",
"783 891 OFFCURVE",
"747 899 OFFCURVE",
"700 899 CURVE SMOOTH",
"572 899 OFFCURVE",
"523 822 OFFCURVE",
"523 726 CURVE SMOOTH",
"523 725 OFFCURVE",
"523 725 OFFCURVE",
"523 724 CURVE SMOOTH",
"523 723 OFFCURVE",
"523 722 OFFCURVE",
"523 721 CURVE",
"662 640 LINE"
);
}
);
width = 732;
}
);
unicode = 0193;
},
{
glyphname = H;
layers = (
{
anchors = (
{
name = bottom;
position = "{382, 0}";
},
{
name = center;
position = "{382, 356}";
},
{
name = top;
position = "{382, 700}";
},
{
name = topleft;
position = "{58, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 628, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 640, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 628, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 640, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 350 LINE",
"628 350 LINE",
"628 0 LINE",
"640 0 LINE",
"640 700 LINE",
"628 700 LINE",
"628 361 LINE",
"136 361 LINE",
"136 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
9 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
},
{
anchors = (
{
name = bottom;
position = "{415, 0}";
},
{
name = center;
position = "{415, 368}";
},
{
name = top;
position = "{415, 729}";
},
{
name = topleft;
position = "{30, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 563, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 733, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 593, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 733, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"267 308 LINE",
"563 308 LINE",
"563 0 LINE",
"733 0 LINE",
"733 729 LINE",
"563 729 LINE",
"563 424 LINE",
"267 424 LINE",
"267 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 10 9 8 7 6 5 4 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 11 31 2 1 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
5 1 3 4 0 3 0 0 35 0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 4 0 5 0 0 35 0 4 0 1 2 4 1 0 0 38 0 3 0 2 0 3 2 0 0 38 0 5 5 0 0 0 36 0 0 5 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 830;
},
{
anchors = (
{
name = bottom;
position = "{396, 0}";
},
{
name = center;
position = "{396, 361}";
},
{
name = top;
position = "{396, 717}";
},
{
name = topleft;
position = "{47, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 203, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 588, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 687, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 588, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 687, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 326 LINE",
"589 326 LINE",
"589 0 LINE",
"687 0 LINE",
"687 717 LINE",
"589 717 LINE",
"589 397 LINE",
"203 397 LINE",
"203 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 10 9 8 7 6 5 4 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 11 31 2 1 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 0 15 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
5 1 3 4 0 3 0 0 35 0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 4 0 5 0 0 35 0 4 0 1 2 4 1 0 0 38 0 3 0 2 0 3 2 0 0 38 0 5 5 0 0 0 36 0 0 5 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 792;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "92ADC630-0B3E-4ADD-BFBA-7A182FD1D1A6";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"753 671 LINE",
"766 672 OFFCURVE",
"773 678 OFFCURVE",
"773 689 CURVE SMOOTH",
"773 708 LINE",
"553 708 LINE",
"553 689 LINE SMOOTH",
"553 678 OFFCURVE",
"560 672 OFFCURVE",
"573 671 CURVE",
"637 669 LINE",
"637 378 LINE",
"194 378 LINE",
"194 669 LINE",
"259 671 LINE",
"272 672 OFFCURVE",
"278 678 OFFCURVE",
"278 689 CURVE SMOOTH",
"278 708 LINE",
"58 708 LINE",
"58 689 LINE SMOOTH",
"58 678 OFFCURVE",
"65 672 OFFCURVE",
"78 671 CURVE",
"143 669 LINE",
"143 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"278 0 LINE",
"278 20 LINE SMOOTH",
"278 31 OFFCURVE",
"272 37 OFFCURVE",
"259 38 CURVE",
"194 40 LINE",
"194 339 LINE",
"637 339 LINE",
"637 40 LINE",
"573 38 LINE",
"560 37 OFFCURVE",
"553 31 OFFCURVE",
"553 20 CURVE SMOOTH",
"553 0 LINE",
"773 0 LINE",
"773 20 LINE SMOOTH",
"773 31 OFFCURVE",
"766 37 OFFCURVE",
"753 38 CURVE",
"689 40 LINE",
"689 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
9 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 756;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "0AFB8E16-46EA-4F57-94FC-6BE338C8D4CF";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"767 655 LINE SMOOTH",
"777 657 OFFCURVE",
"782 664 OFFCURVE",
"782 674 CURVE SMOOTH",
"782 716 LINE",
"540 716 LINE",
"540 674 LINE SMOOTH",
"540 664 OFFCURVE",
"544 658 OFFCURVE",
"552 656 CURVE SMOOTH",
"560 654 OFFCURVE",
"580 650 OFFCURVE",
"612 644 CURVE",
"612 397 LINE",
"226 397 LINE",
"226 644 LINE",
"260 650 OFFCURVE",
"280 654 OFFCURVE",
"287 656 CURVE SMOOTH",
"294 658 OFFCURVE",
"297 664 OFFCURVE",
"297 674 CURVE SMOOTH",
"297 716 LINE",
"56 716 LINE",
"56 674 LINE SMOOTH",
"56 664 OFFCURVE",
"60 658 OFFCURVE",
"68 656 CURVE SMOOTH",
"76 654 OFFCURVE",
"96 650 OFFCURVE",
"128 644 CURVE",
"128 73 LINE",
"71 62 LINE SMOOTH",
"61 60 OFFCURVE",
"56 53 OFFCURVE",
"56 43 CURVE SMOOTH",
"56 0 LINE",
"297 0 LINE",
"297 43 LINE SMOOTH",
"297 53 OFFCURVE",
"273 63 OFFCURVE",
"225 73 CURVE",
"225 326 LINE",
"611 326 LINE",
"611 73 LINE",
"555 62 LINE SMOOTH",
"545 60 OFFCURVE",
"539 53 OFFCURVE",
"539 43 CURVE SMOOTH",
"539 0 LINE",
"781 0 LINE",
"781 43 LINE SMOOTH",
"781 53 OFFCURVE",
"777 59 OFFCURVE",
"769 61 CURVE SMOOTH",
"761 63 OFFCURVE",
"741 67 OFFCURVE",
"709 73 CURVE",
"709 644 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 10 9 8 7 6 5 4 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 11 31 2 1 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 0 15 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
5 1 3 4 0 3 0 0 35 0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 4 0 5 0 0 35 0 4 0 1 2 4 1 0 0 38 0 3 0 2 0 3 2 0 0 38 0 5 5 0 0 0 36 0 0 5 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "F7D20318-5800-480C-8FAA-C216C980BD95";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"806 637 OFFCURVE",
"814 647 OFFCURVE",
"814 664 CURVE SMOOTH",
"814 723 LINE",
"739 723 LINE",
"603 723 LINE",
"528 723 LINE",
"528 664 LINE SMOOTH",
"528 647 OFFCURVE",
"536 637 OFFCURVE",
"553 633 CURVE",
"554 633 OFFCURVE",
"556 632 OFFCURVE",
"559 632 CURVE",
"562 631 OFFCURVE",
"567 630 OFFCURVE",
"574 629 CURVE SMOOTH",
"581 628 OFFCURVE",
"591 626 OFFCURVE",
"603 624 CURVE",
"603 412 LINE",
"264 412 LINE",
"264 624 LINE",
"276 626 OFFCURVE",
"287 628 OFFCURVE",
"294 629 CURVE SMOOTH",
"301 630 OFFCURVE",
"306 632 OFFCURVE",
"309 632 CURVE",
"312 633 OFFCURVE",
"314 633 OFFCURVE",
"315 633 CURVE",
"332 637 OFFCURVE",
"340 647 OFFCURVE",
"340 664 CURVE SMOOTH",
"340 723 LINE",
"264 723 LINE",
"129 723 LINE",
"53 723 LINE",
"53 664 LINE SMOOTH",
"53 647 OFFCURVE",
"61 637 OFFCURVE",
"78 633 CURVE",
"79 633 OFFCURVE",
"81 633 OFFCURVE",
"84 632 CURVE",
"87 632 OFFCURVE",
"92 630 OFFCURVE",
"99 629 CURVE SMOOTH",
"106 628 OFFCURVE",
"117 626 OFFCURVE",
"129 624 CURVE",
"129 99 LINE",
"117 97 OFFCURVE",
"106 95 OFFCURVE",
"99 94 CURVE SMOOTH",
"92 93 OFFCURVE",
"87 91 OFFCURVE",
"84 91 CURVE SMOOTH",
"81 91 OFFCURVE",
"79 90 OFFCURVE",
"78 90 CURVE",
"61 86 OFFCURVE",
"53 76 OFFCURVE",
"53 59 CURVE SMOOTH",
"53 0 LINE",
"129 0 LINE",
"264 0 LINE",
"340 0 LINE",
"340 59 LINE SMOOTH",
"340 76 OFFCURVE",
"332 86 OFFCURVE",
"315 90 CURVE",
"314 90 OFFCURVE",
"312 90 OFFCURVE",
"309 91 CURVE",
"306 91 OFFCURVE",
"301 93 OFFCURVE",
"294 94 CURVE SMOOTH",
"287 95 OFFCURVE",
"276 97 OFFCURVE",
"264 99 CURVE",
"264 316 LINE",
"603 316 LINE",
"603 99 LINE",
"591 97 OFFCURVE",
"581 95 OFFCURVE",
"574 94 CURVE SMOOTH",
"567 93 OFFCURVE",
"562 92 OFFCURVE",
"559 91 CURVE SMOOTH",
"556 90 OFFCURVE",
"554 90 OFFCURVE",
"553 90 CURVE",
"536 86 OFFCURVE",
"528 76 OFFCURVE",
"528 59 CURVE SMOOTH",
"528 0 LINE",
"603 0 LINE",
"739 0 LINE",
"814 0 LINE",
"814 59 LINE SMOOTH",
"814 76 OFFCURVE",
"806 86 OFFCURVE",
"789 90 CURVE",
"788 90 OFFCURVE",
"786 91 OFFCURVE",
"783 91 CURVE SMOOTH",
"780 91 OFFCURVE",
"775 93 OFFCURVE",
"768 94 CURVE SMOOTH",
"761 95 OFFCURVE",
"751 97 OFFCURVE",
"739 99 CURVE",
"739 624 LINE",
"751 626 OFFCURVE",
"761 628 OFFCURVE",
"768 629 CURVE SMOOTH",
"775 630 OFFCURVE",
"780 632 OFFCURVE",
"783 632 CURVE SMOOTH",
"786 632 OFFCURVE",
"788 633 OFFCURVE",
"789 633 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 10 9 8 7 6 5 4 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 1 0 4 1 0 0 38 5 1 3 3 11 31 2 1 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
5 1 3 4 0 3 0 0 35 0 4 0 1 0 4 1 0 0 38 5 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 4 0 5 0 0 35 0 4 0 1 2 4 1 0 0 38 0 3 0 2 0 3 2 0 0 38 0 5 5 0 0 0 36 0 0 5 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
layers = (
{
components = (
{
name = H;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"42 525 LINE",
"722 525 LINE",
"722 535 LINE",
"42 535 LINE"
);
}
);
width = 764;
},
{
components = (
{
name = H;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"33 497 LINE",
"759 497 LINE",
"759 562 LINE",
"33 562 LINE"
);
}
);
width = 792;
},
{
components = (
{
name = H;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"20 470 LINE",
"809 470 LINE",
"809 576 LINE",
"20 576 LINE"
);
}
);
width = 830;
}
);
unicode = 0126;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 764;
},
{
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 242, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 220, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 830;
}
);
unicode = 0124;
},
{
glyphname = Hdotbelow;
layers = (
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 344, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 764;
},
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 329, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 830;
}
);
unicode = 1E24;
},
{
glyphname = Hhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{494, 0}";
},
{
name = center;
position = "{494, 356}";
},
{
name = top;
position = "{494, 700}";
},
{
name = topleft;
position = "{170, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 236, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 248, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 248, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 740, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 752, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 740, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 752, 700}";
},
{
name = hookleft_caps_part;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"248 0 LINE",
"248 350 LINE",
"740 350 LINE",
"740 0 LINE",
"752 0 LINE",
"752 700 LINE",
"740 700 LINE",
"740 361 LINE",
"248 361 LINE",
"248 700 LINE",
"236 700 LINE",
"236 0 LINE"
);
}
);
width = 876;
},
{
anchors = (
{
name = bottom;
position = "{532, 0}";
},
{
name = center;
position = "{532, 361}";
},
{
name = top;
position = "{532, 717}";
},
{
name = topleft;
position = "{183, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 241, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 339, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 339, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 724, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 823, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 724, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 823, 717}";
},
{
name = hookleft_caps_part;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"339 0 LINE",
"339 326 LINE",
"725 326 LINE",
"725 0 LINE",
"823 0 LINE",
"823 717 LINE",
"725 717 LINE",
"725 397 LINE",
"339 397 LINE",
"339 717 LINE",
"241 717 LINE",
"241 0 LINE"
);
}
);
width = 928;
},
{
anchors = (
{
name = bottom;
position = "{564, 0}";
},
{
name = center;
position = "{564, 368}";
},
{
name = top;
position = "{564, 729}";
},
{
name = topleft;
position = "{179, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 246, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 416, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 416, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 712, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 882, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 742, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 882, 729}";
},
{
name = hookleft_caps_part;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 308 LINE",
"712 308 LINE",
"712 0 LINE",
"882 0 LINE",
"882 729 LINE",
"712 729 LINE",
"712 424 LINE",
"416 424 LINE",
"416 729 LINE",
"246 729 LINE",
"246 0 LINE"
);
}
);
width = 979;
}
);
leftMetricsKey = Bhook;
rightMetricsKey = H;
unicode = A7AA;
},
{
glyphname = Hturned;
layers = (
{
components = (
{
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 104, 700}";
},
{
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 469, 700}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 469, 0}";
},
{
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 457, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 457, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"469 0 LINE",
"469 700 LINE",
"457 700 LINE",
"457 327 LINE",
"408 255 OFFCURVE",
"342 212 OFFCURVE",
"266 212 CURVE SMOOTH",
"163 212 OFFCURVE",
"116 276 OFFCURVE",
"116 386 CURVE SMOOTH",
"116 700 LINE",
"104 700 LINE",
"104 386 LINE SMOOTH",
"104 270 OFFCURVE",
"157 202 OFFCURVE",
"266 202 CURVE SMOOTH",
"342 202 OFFCURVE",
"412 245 OFFCURVE",
"457 312 CURVE",
"457 0 LINE"
);
}
);
width = 582;
},
{
components = (
{
alignment = -1;
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 85, 717}";
},
{
alignment = -1;
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 507, 717}";
},
{
alignment = -1;
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 507, 0}";
},
{
alignment = -1;
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 418, 717}";
},
{
alignment = -1;
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 418, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"507 0 LINE",
"507 717 LINE",
"418 717 LINE",
"418 344 LINE",
"379 300 OFFCURVE",
"333 273 OFFCURVE",
"281 273 CURVE SMOOTH",
"209 273 OFFCURVE",
"174 318 OFFCURVE",
"174 394 CURVE SMOOTH",
"174 717 LINE",
"85 717 LINE",
"85 394 LINE SMOOTH",
"85 280 OFFCURVE",
"144 202 OFFCURVE",
"255 202 CURVE SMOOTH",
"323 202 OFFCURVE",
"374 233 OFFCURVE",
"418 278 CURVE",
"418 0 LINE"
);
}
);
width = 607;
},
{
components = (
{
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 97, 729}";
},
{
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 567, 729}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 537, 0}";
},
{
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 412, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"567 0 LINE",
"567 729 LINE",
"412 729 LINE",
"412 359 LINE",
"384 335 OFFCURVE",
"354 319 OFFCURVE",
"321 319 CURVE SMOOTH",
"276 319 OFFCURVE",
"252 348 OFFCURVE",
"252 399 CURVE SMOOTH",
"252 729 LINE",
"97 729 LINE",
"97 399 LINE SMOOTH",
"97 286 OFFCURVE",
"160 202 OFFCURVE",
"273 202 CURVE SMOOTH",
"333 202 OFFCURVE",
"375 224 OFFCURVE",
"412 256 CURVE",
"412 0 LINE"
);
}
);
width = 670;
}
);
unicode = A78D;
},
{
glyphname = I;
layers = (
{
anchors = (
{
name = bottom;
position = "{130, 0}";
},
{
name = ogonek;
position = "{127, 2}";
},
{
name = top;
position = "{130, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 1 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 260;
},
{
anchors = (
{
name = bottom;
position = "{182, 0}";
},
{
name = ogonek;
position = "{174, 2}";
},
{
name = top;
position = "{182, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"267 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 364;
},
{
anchors = (
{
name = bottom;
position = "{154, 0}";
},
{
name = ogonek;
position = "{148, 2}";
},
{
name = top;
position = "{154, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 203, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"202 0 LINE",
"202 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 1 0 0 0 36 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "726A3E2D-2B1B-42E9-9FDC-2D43453B1F5E";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"259 670 LINE",
"272 671 OFFCURVE",
"278 677 OFFCURVE",
"278 688 CURVE SMOOTH",
"278 708 LINE",
"58 708 LINE",
"58 688 LINE SMOOTH",
"58 677 OFFCURVE",
"65 671 OFFCURVE",
"78 670 CURVE",
"143 668 LINE",
"143 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"278 0 LINE",
"278 20 LINE SMOOTH",
"278 31 OFFCURVE",
"272 37 OFFCURVE",
"259 38 CURVE",
"194 40 LINE",
"194 668 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 1 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 292;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "3FBEF5B3-A018-4E1C-A056-2235C4E21017";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"282 655 LINE SMOOTH",
"292 657 OFFCURVE",
"297 664 OFFCURVE",
"297 674 CURVE SMOOTH",
"297 716 LINE",
"56 716 LINE",
"56 674 LINE SMOOTH",
"56 664 OFFCURVE",
"60 658 OFFCURVE",
"68 656 CURVE SMOOTH",
"76 654 OFFCURVE",
"96 650 OFFCURVE",
"128 644 CURVE",
"128 73 LINE",
"70 62 LINE SMOOTH",
"60 60 OFFCURVE",
"56 53 OFFCURVE",
"56 43 CURVE SMOOTH",
"56 0 LINE",
"297 0 LINE",
"297 43 LINE SMOOTH",
"297 53 OFFCURVE",
"293 59 OFFCURVE",
"285 61 CURVE SMOOTH",
"277 63 OFFCURVE",
"256 67 OFFCURVE",
"224 73 CURVE",
"224 644 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 1 0 0 0 36 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "F48809DE-BD20-46A9-86EC-1EF73B66AAA4";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"331 637 OFFCURVE",
"339 647 OFFCURVE",
"339 664 CURVE SMOOTH",
"339 723 LINE",
"264 723 LINE",
"129 723 LINE",
"53 723 LINE",
"53 664 LINE SMOOTH",
"53 647 OFFCURVE",
"61 637 OFFCURVE",
"78 633 CURVE",
"79 633 OFFCURVE",
"81 633 OFFCURVE",
"84 632 CURVE",
"87 632 OFFCURVE",
"92 630 OFFCURVE",
"99 629 CURVE SMOOTH",
"106 628 OFFCURVE",
"117 626 OFFCURVE",
"129 624 CURVE",
"129 99 LINE",
"117 97 OFFCURVE",
"106 95 OFFCURVE",
"99 94 CURVE SMOOTH",
"92 93 OFFCURVE",
"87 92 OFFCURVE",
"84 91 CURVE",
"81 91 OFFCURVE",
"79 90 OFFCURVE",
"78 90 CURVE",
"61 86 OFFCURVE",
"53 76 OFFCURVE",
"53 59 CURVE SMOOTH",
"53 0 LINE",
"129 0 LINE",
"264 0 LINE",
"339 0 LINE",
"339 59 LINE SMOOTH",
"339 76 OFFCURVE",
"331 86 OFFCURVE",
"314 90 CURVE",
"313 90 OFFCURVE",
"311 91 OFFCURVE",
"308 91 CURVE SMOOTH",
"305 91 OFFCURVE",
"300 93 OFFCURVE",
"293 94 CURVE SMOOTH",
"286 95 OFFCURVE",
"276 97 OFFCURVE",
"264 99 CURVE",
"264 624 LINE",
"276 626 OFFCURVE",
"286 628 OFFCURVE",
"293 629 CURVE SMOOTH",
"300 630 OFFCURVE",
"305 632 OFFCURVE",
"308 632 CURVE SMOOTH",
"311 632 OFFCURVE",
"313 633 OFFCURVE",
"314 633 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
leftMetricsKey = H;
note = I;
rightMetricsKey = H;
unicode = 0049;
},
{
glyphname = IJ;
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 654;
},
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 824;
}
);
unicode = 0132;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 4, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 23, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 53, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 00CD;
},
{
glyphname = Ibreve;
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 0, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 17, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 012C;
},
{
glyphname = Icaron;
layers = (
{
components = (
{
name = I;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 0, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -13, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 01CF;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -13, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 0, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -13, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 00CF;
},
{
glyphname = Idieresisacute;
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -10, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 4, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 0, 222}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 23, 373}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -13, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 53, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 1E2E;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 92, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 69, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 78, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 0130;
},
{
glyphname = Idotbelow;
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 92, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 1ECA;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -31, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -33, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -39, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 00CC;
},
{
glyphname = Ihookabove;
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -69, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -42, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -11, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 1EC8;
},
{
glyphname = Imacron;
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 7, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 17, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 012A;
},
{
glyphname = Iogonek;
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -13, 2}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -6, 2}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 9, 2}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 012E;
},
{
glyphname = Iotaafrican;
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 112, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"246 -6 OFFCURVE",
"262 -3 OFFCURVE",
"262 1 CURVE SMOOTH",
"262 4 LINE",
"232 4 LINE SMOOTH",
"161 4 OFFCURVE",
"124 44 OFFCURVE",
"124 121 CURVE SMOOTH",
"124 700 LINE",
"112 700 LINE",
"112 121 LINE SMOOTH",
"112 39 OFFCURVE",
"154 -6 OFFCURVE",
"228 -6 CURVE SMOOTH"
);
}
);
width = 276;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 97, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"277 -6 OFFCURVE",
"314 3 OFFCURVE",
"314 36 CURVE SMOOTH",
"314 68 LINE",
"270 68 LINE SMOOTH",
"218 68 OFFCURVE",
"194 95 OFFCURVE",
"194 152 CURVE SMOOTH",
"194 717 LINE",
"97 717 LINE",
"97 147 LINE SMOOTH",
"97 57 OFFCURVE",
"145 -6 OFFCURVE",
"234 -6 CURVE SMOOTH"
);
}
);
width = 330;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 122, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"303 -6 OFFCURVE",
"365 14 OFFCURVE",
"365 64 CURVE SMOOTH",
"365 117 LINE",
"310 117 LINE SMOOTH",
"273 117 OFFCURVE",
"262 135 OFFCURVE",
"262 176 CURVE SMOOTH",
"262 729 LINE",
"92 729 LINE",
"92 167 LINE SMOOTH",
"92 69 OFFCURVE",
"144 -6 OFFCURVE",
"243 -6 CURVE SMOOTH"
);
}
);
width = 381;
}
);
unicode = 0196;
},
{
glyphname = Istroke;
layers = (
{
components = (
{
name = I;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -10, -278}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 4, -281}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 20, -284}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 0197;
},
{
glyphname = Itilde;
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 260;
},
{
components = (
{
name = I;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 222}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
components = (
{
name = I;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 4, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 364;
}
);
unicode = 0128;
},
{
glyphname = J;
layers = (
{
anchors = (
{
name = top;
position = "{280, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 274, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 286, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"210 -8 OFFCURVE",
"286 76 OFFCURVE",
"286 226 CURVE SMOOTH",
"286 700 LINE",
"274 700 LINE",
"274 226 LINE SMOOTH",
"274 83 OFFCURVE",
"203 2 OFFCURVE",
"95 2 CURVE SMOOTH",
"77 2 OFFCURVE",
"61 4 OFFCURVE",
"48 7 CURVE SMOOTH",
"30 11 OFFCURVE",
"17 15 OFFCURVE",
"10 15 CURVE SMOOTH",
"5 15 OFFCURVE",
"3 13 OFFCURVE",
"2 10 CURVE SMOOTH",
"1 7 LINE",
"31 -3 OFFCURVE",
"59 -8 OFFCURVE",
"89 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 20 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
10 1 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 394;
},
{
anchors = (
{
name = top;
position = "{279, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 224, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 364, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"283 -8 OFFCURVE",
"364 101 OFFCURVE",
"364 264 CURVE SMOOTH",
"364 729 LINE",
"194 729 LINE",
"194 261 LINE SMOOTH",
"194 164 OFFCURVE",
"167 127 OFFCURVE",
"90 127 CURVE SMOOTH",
"88 127 OFFCURVE",
"83 127 OFFCURVE",
"68 130 CURVE SMOOTH",
"52 133 OFFCURVE",
"52 133 OFFCURVE",
"46 133 CURVE SMOOTH",
"25 133 OFFCURVE",
"12 123 OFFCURVE",
"10 104 CURVE SMOOTH",
"1 5 LINE",
"41 -4 OFFCURVE",
"75 -8 OFFCURVE",
"111 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
22 21 16 14 13 11 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
8 1 0 1 1 30 0 3 3 11 31 2 1 1 1 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 0 2 1 30 0 1 3 2 3 1 2 50 0 3 3 11 31 0 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
8 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 460;
},
{
anchors = (
{
name = top;
position = "{281, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 231, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 329, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"249 -8 OFFCURVE",
"328 90 OFFCURVE",
"328 248 CURVE SMOOTH",
"328 717 LINE",
"231 717 LINE",
"231 246 LINE SMOOTH",
"231 129 OFFCURVE",
"186 73 OFFCURVE",
"89 73 CURVE SMOOTH",
"76 73 OFFCURVE",
"65 74 OFFCURVE",
"53 78 CURVE SMOOTH",
"46 80 OFFCURVE",
"35 82 OFFCURVE",
"27 82 CURVE SMOOTH",
"14 82 OFFCURVE",
"9 76 OFFCURVE",
"7 63 CURVE SMOOTH",
"1 6 LINE",
"35 -3 OFFCURVE",
"69 -8 OFFCURVE",
"102 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 22 17 15 14 12 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
7 1 0 1 1 30 0 3 3 11 31 2 1 1 1 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 0 2 1 30 0 1 3 2 3 1 2 50 0 3 3 11 31 0 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
7 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 2 0 1 0 36 0 0 0 21 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
7 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 424;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "85D090E3-5159-4208-A5E3-A72081B35973";
name = "Jan 15 23, 17:21";
paths = (
{
closed = 1;
nodes = (
"162 708 LINE",
"162 688 LINE SMOOTH",
"162 677 OFFCURVE",
"169 671 OFFCURVE",
"182 670 CURVE",
"254 668 LINE",
"254 235 LINE SMOOTH",
"254 112 OFFCURVE",
"202 35 OFFCURVE",
"90 35 CURVE SMOOTH",
"74 35 OFFCURVE",
"49 39 OFFCURVE",
"28 44 CURVE SMOOTH",
"13 47 OFFCURVE",
"10 45 OFFCURVE",
"6 29 CURVE",
"1 7 LINE",
"28 -1 OFFCURVE",
"67 -8 OFFCURVE",
"94 -8 CURVE SMOOTH",
"231 -8 OFFCURVE",
"305 85 OFFCURVE",
"305 236 CURVE SMOOTH",
"305 668 LINE",
"370 670 LINE",
"383 671 OFFCURVE",
"390 677 OFFCURVE",
"390 688 CURVE SMOOTH",
"390 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 20 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
10 1 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 462;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "AF93DD30-3901-43B1-AB91-954843A44B16";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"92 73 LINE",
"76 73 OFFCURVE",
"62 75 OFFCURVE",
"52 78 CURVE SMOOTH",
"42 81 OFFCURVE",
"34 82 OFFCURVE",
"28 82 CURVE SMOOTH",
"22 82 OFFCURVE",
"16 80 OFFCURVE",
"12 76 CURVE SMOOTH",
"8 72 OFFCURVE",
"4 48 OFFCURVE",
"1 6 CURVE",
"36 -4 OFFCURVE",
"71 -8 OFFCURVE",
"105 -8 CURVE SMOOTH",
"139 -8 OFFCURVE",
"170 -2 OFFCURVE",
"198 10 CURVE SMOOTH",
"284 46 OFFCURVE",
"328 125 OFFCURVE",
"328 248 CURVE SMOOTH",
"328 644 LINE",
"384 655 LINE SMOOTH",
"394 657 OFFCURVE",
"400 664 OFFCURVE",
"400 674 CURVE SMOOTH",
"400 716 LINE",
"150 716 LINE",
"150 674 LINE SMOOTH",
"150 664 OFFCURVE",
"154 657 OFFCURVE",
"164 655 CURVE",
"170 653 OFFCURVE",
"193 649 OFFCURVE",
"231 643 CURVE",
"231 245 LINE SMOOTH",
"231 130 OFFCURVE",
"184 72 OFFCURVE",
"92 72 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 22 17 15 14 12 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
7 1 0 1 1 30 0 3 3 11 31 2 1 1 1 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 0 2 1 30 0 1 3 2 3 1 2 50 0 3 3 11 31 0 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
7 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 2 0 1 0 36 0 0 0 21 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
7 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 444;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "9569D238-91AB-41A1-B34D-F4A838C284CB";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"346 723 LINE",
"212 723 LINE",
"127 723 LINE",
"127 664 LINE SMOOTH",
"127 647 OFFCURVE",
"135 637 OFFCURVE",
"152 633 CURVE",
"153 633 OFFCURVE",
"157 632 OFFCURVE",
"161 632 CURVE SMOOTH",
"165 632 OFFCURVE",
"171 630 OFFCURVE",
"180 629 CURVE SMOOTH",
"189 628 OFFCURVE",
"200 626 OFFCURVE",
"212 624 CURVE",
"212 254 LINE SMOOTH",
"212 227 OFFCURVE",
"209 203 OFFCURVE",
"204 184 CURVE SMOOTH",
"199 165 OFFCURVE",
"192 150 OFFCURVE",
"182 138 CURVE SMOOTH",
"172 126 OFFCURVE",
"160 116 OFFCURVE",
"145 111 CURVE",
"130 105 OFFCURVE",
"114 103 OFFCURVE",
"95 103 CURVE SMOOTH",
"81 103 OFFCURVE",
"69 105 OFFCURVE",
"60 107 CURVE SMOOTH",
"51 109 OFFCURVE",
"44 110 OFFCURVE",
"38 110 CURVE SMOOTH",
"29 110 OFFCURVE",
"22 107 OFFCURVE",
"17 103 CURVE",
"12 98 OFFCURVE",
"9 93 OFFCURVE",
"8 86 CURVE",
"1 6 LINE",
"20 1 OFFCURVE",
"39 -3 OFFCURVE",
"56 -5 CURVE SMOOTH",
"73 -7 OFFCURVE",
"91 -8 OFFCURVE",
"109 -8 CURVE SMOOTH",
"148 -8 OFFCURVE",
"182 -1 OFFCURVE",
"212 11 CURVE SMOOTH",
"242 23 OFFCURVE",
"267 41 OFFCURVE",
"287 64 CURVE SMOOTH",
"307 87 OFFCURVE",
"321 114 OFFCURVE",
"331 147 CURVE SMOOTH",
"341 180 OFFCURVE",
"346 216 OFFCURVE",
"346 257 CURVE SMOOTH",
"346 624 LINE",
"358 626 OFFCURVE",
"369 628 OFFCURVE",
"376 629 CURVE SMOOTH",
"383 630 OFFCURVE",
"388 632 OFFCURVE",
"391 632 CURVE SMOOTH",
"394 632 OFFCURVE",
"396 633 OFFCURVE",
"397 633 CURVE",
"414 637 OFFCURVE",
"422 647 OFFCURVE",
"422 664 CURVE SMOOTH",
"422 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
22 21 16 14 13 11 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
8 1 0 1 1 30 0 3 3 11 31 2 1 1 1 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 0 2 1 30 0 1 3 2 3 1 2 50 0 3 3 11 31 0 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
8 1 0 2 1 30 0 3 1 3 52 0 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
leftKerningGroup = J;
note = J;
rightKerningGroup = J;
rightMetricsKey = U;
unicode = 004A;
},
{
glyphname = Jacute;
layers = (
{
components = (
{
name = J;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 154, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 394;
},
{
components = (
{
name = J;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 150, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 424;
},
{
components = (
{
name = J;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 150, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 460;
}
);
},
{
glyphname = Jcircumflex;
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 140, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 394;
},
{
components = (
{
name = J;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 127, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 424;
},
{
components = (
{
name = J;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 84, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 460;
}
);
unicode = 0134;
},
{
glyphname = K;
layers = (
{
anchors = (
{
name = bottom;
position = "{344, 0}";
},
{
name = top;
position = "{344, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 600, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 579, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 574, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 352 LINE",
"183 352 LINE SMOOTH",
"207 352 OFFCURVE",
"217 349 OFFCURVE",
"235 332 CURVE SMOOTH",
"579 7 LINE SMOOTH",
"584 2 OFFCURVE",
"588 0 OFFCURVE",
"597 0 CURVE SMOOTH",
"602 0 LINE",
"241 341 LINE",
"233 350 OFFCURVE",
"224 356 OFFCURVE",
"212 357 CURVE",
"225 360 OFFCURVE",
"232 364 OFFCURVE",
"242 374 CURVE SMOOTH",
"582 700 LINE",
"576 700 LINE SMOOTH",
"569 700 OFFCURVE",
"566 699 OFFCURVE",
"558 692 CURVE SMOOTH",
"232 379 LINE",
"215 364 OFFCURVE",
"208 362 OFFCURVE",
"183 362 CURVE SMOOTH",
"136 362 LINE",
"136 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"577 688 LINE",
"600 700 LINE",
"576 700 LINE",
"564 692 LINE",
"555 687 LINE"
);
},
{
closed = 1;
nodes = (
"598 12 LINE",
"574 13 LINE",
"597 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 29 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 698;
},
{
anchors = (
{
name = bottom;
position = "{379, 0}";
},
{
name = top;
position = "{379, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 674, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 655, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 530, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"267 310 LINE",
"308 310 LINE SMOOTH",
"340 310 OFFCURVE",
"356 304 OFFCURVE",
"368 285 CURVE SMOOTH",
"533 31 LINE SMOOTH",
"548 9 OFFCURVE",
"563 0 OFFCURVE",
"599 0 CURVE SMOOTH",
"750 0 LINE",
"530 338 LINE SMOOTH",
"512 366 OFFCURVE",
"492 381 OFFCURVE",
"467 390 CURVE",
"484 399 OFFCURVE",
"501 413 OFFCURVE",
"516 434 CURVE SMOOTH",
"732 729 LINE",
"585 729 LINE SMOOTH",
"552 729 OFFCURVE",
"530 722 OFFCURVE",
"512 695 CURVE SMOOTH",
"348 457 LINE SMOOTH",
"337 442 OFFCURVE",
"319 434 OFFCURVE",
"294 434 CURVE SMOOTH",
"267 434 LINE",
"267 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"654 612 LINE",
"677 729 LINE",
"506 729 LINE",
"506 688 LINE",
"615 604 LINE"
);
},
{
closed = 1;
nodes = (
"673 117 LINE",
"598 131 LINE",
"654 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
31 30 29 28 27 25 18 16 8 6 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
12 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
anchors = (
{
name = bottom;
position = "{364, 0}";
},
{
name = top;
position = "{364, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 203, 717}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 623, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 606, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 531, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"202 0 LINE",
"202 328 LINE",
"246 328 LINE SMOOTH",
"278 328 OFFCURVE",
"284 323 OFFCURVE",
"302 305 CURVE",
"549 21 LINE SMOOTH",
"560 8 OFFCURVE",
"571 0 OFFCURVE",
"593 0 CURVE SMOOTH",
"677 0 LINE",
"392 340 LINE SMOOTH",
"377 357 OFFCURVE",
"365 369 OFFCURVE",
"346 376 CURVE",
"359 383 OFFCURVE",
"372 393 OFFCURVE",
"385 408 CURVE SMOOTH",
"658 717 LINE",
"576 717 LINE SMOOTH",
"555 717 OFFCURVE",
"542 710 OFFCURVE",
"528 694 CURVE SMOOTH",
"290 424 LINE SMOOTH",
"276 408 OFFCURVE",
"263 403 OFFCURVE",
"238 403 CURVE SMOOTH",
"202 403 LINE",
"202 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"587 639 LINE",
"668 717 LINE",
"552 717 LINE",
"552 669 LINE",
"573 636 LINE"
);
},
{
closed = 1;
nodes = (
"604 78 LINE",
"545 91 LINE",
"593 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 33 32 31 30 28 19 17 9 7 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
13 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
13 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 708;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D22E1BA0-C9F9-4826-B939-D16473C1A048";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"626 39 LINE",
"338 340 LINE",
"329 350 OFFCURVE",
"318 360 OFFCURVE",
"302 365 CURVE",
"309 367 OFFCURVE",
"324 377 OFFCURVE",
"335 390 CURVE",
"606 669 LINE",
"644 670 LINE",
"657 671 OFFCURVE",
"664 677 OFFCURVE",
"664 688 CURVE SMOOTH",
"664 708 LINE",
"456 708 LINE",
"456 688 LINE SMOOTH",
"456 677 OFFCURVE",
"463 671 OFFCURVE",
"476 670 CURVE",
"548 669 LINE",
"286 400 LINE SMOOTH",
"272 386 OFFCURVE",
"262 381 OFFCURVE",
"235 381 CURVE SMOOTH",
"193 381 LINE",
"193 669 LINE",
"258 671 LINE",
"271 672 OFFCURVE",
"277 678 OFFCURVE",
"277 689 CURVE SMOOTH",
"277 708 LINE",
"58 708 LINE",
"58 689 LINE SMOOTH",
"58 678 OFFCURVE",
"65 672 OFFCURVE",
"78 671 CURVE",
"142 669 LINE",
"142 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"277 0 LINE",
"277 20 LINE SMOOTH",
"277 31 OFFCURVE",
"271 37 OFFCURVE",
"258 38 CURVE",
"193 40 LINE",
"193 341 LINE",
"239 341 LINE SMOOTH",
"260 341 OFFCURVE",
"274 339 OFFCURVE",
"293 320 CURVE SMOOTH",
"568 39 LINE",
"492 38 LINE",
"479 37 OFFCURVE",
"472 31 OFFCURVE",
"472 20 CURVE SMOOTH",
"472 0 LINE",
"685 0 LINE",
"685 20 LINE SMOOTH",
"685 31 OFFCURVE",
"678 37 OFFCURVE",
"665 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 29 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "998B64F7-0C9B-4590-B082-9CB9393E6408";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"663 59 LINE",
"657 61 OFFCURVE",
"640 64 OFFCURVE",
"612 70 CURVE",
"385 340 LINE SMOOTH",
"369 360 OFFCURVE",
"353 372 OFFCURVE",
"339 376 CURVE",
"351 382 OFFCURVE",
"364 392 OFFCURVE",
"378 408 CURVE SMOOTH",
"591 649 LINE",
"617 655 OFFCURVE",
"631 659 OFFCURVE",
"637 661 CURVE",
"647 663 OFFCURVE",
"653 670 OFFCURVE",
"653 680 CURVE",
"651 718 LINE",
"425 718 LINE",
"425 678 LINE SMOOTH",
"425 668 OFFCURVE",
"429 662 OFFCURVE",
"439 660 CURVE SMOOTH",
"445 659 OFFCURVE",
"459 656 OFFCURVE",
"483 652 CURVE",
"283 424 LINE SMOOTH",
"271 410 OFFCURVE",
"253 404 OFFCURVE",
"231 404 CURVE SMOOTH",
"195 404 LINE",
"195 644 LINE",
"203 646 OFFCURVE",
"221 650 OFFCURVE",
"251 656 CURVE SMOOTH",
"261 658 OFFCURVE",
"267 665 OFFCURVE",
"267 675 CURVE SMOOTH",
"267 718 LINE",
"26 718 LINE",
"26 675 LINE SMOOTH",
"26 665 OFFCURVE",
"31 658 OFFCURVE",
"41 656 CURVE",
"47 654 OFFCURVE",
"66 650 OFFCURVE",
"98 644 CURVE",
"98 74 LINE",
"41 62 LINE SMOOTH",
"31 60 OFFCURVE",
"26 54 OFFCURVE",
"26 44 CURVE SMOOTH",
"26 1 LINE",
"267 1 LINE",
"267 44 LINE SMOOTH",
"267 54 OFFCURVE",
"261 60 OFFCURVE",
"251 62 CURVE SMOOTH",
"224 68 OFFCURVE",
"206 72 OFFCURVE",
"195 74 CURVE",
"195 330 LINE",
"239 330 LINE SMOOTH",
"247 330 OFFCURVE",
"255 330 OFFCURVE",
"264 328 CURVE SMOOTH",
"273 326 OFFCURVE",
"283 318 OFFCURVE",
"295 306 CURVE",
"502 68 LINE",
"475 62 OFFCURVE",
"460 59 OFFCURVE",
"456 59 CURVE",
"446 57 OFFCURVE",
"442 52 OFFCURVE",
"442 42 CURVE SMOOTH",
"442 2 LINE",
"677 2 LINE",
"677 42 LINE SMOOTH",
"677 52 OFFCURVE",
"672 58 OFFCURVE",
"662 60 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 33 32 31 30 28 19 17 9 7 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
13 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
13 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 681;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "19446471-097F-4A60-BCBD-A83E9E72806D";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"723 90 OFFCURVE",
"721 91 OFFCURVE",
"717 91 CURVE SMOOTH",
"713 91 OFFCURVE",
"707 93 OFFCURVE",
"699 94 CURVE SMOOTH",
"691 95 OFFCURVE",
"682 97 OFFCURVE",
"670 99 CURVE",
"492 338 LINE SMOOTH",
"484 349 OFFCURVE",
"475 359 OFFCURVE",
"466 366 CURVE SMOOTH",
"457 373 OFFCURVE",
"447 379 OFFCURVE",
"436 383 CURVE",
"444 387 OFFCURVE",
"452 393 OFFCURVE",
"459 399 CURVE SMOOTH",
"466 405 OFFCURVE",
"473 413 OFFCURVE",
"481 422 CURVE",
"644 624 LINE",
"656 626 OFFCURVE",
"666 628 OFFCURVE",
"674 629 CURVE SMOOTH",
"682 630 OFFCURVE",
"688 632 OFFCURVE",
"692 632 CURVE SMOOTH",
"696 632 OFFCURVE",
"698 633 OFFCURVE",
"700 633 CURVE",
"717 637 OFFCURVE",
"725 647 OFFCURVE",
"725 664 CURVE SMOOTH",
"725 723 LINE",
"649 723 LINE",
"624 723 LINE",
"459 723 LINE",
"459 664 LINE SMOOTH",
"459 647 OFFCURVE",
"467 637 OFFCURVE",
"484 633 CURVE",
"485 633 OFFCURVE",
"487 632 OFFCURVE",
"490 632 CURVE SMOOTH",
"493 632 OFFCURVE",
"495 631 OFFCURVE",
"497 631 CURVE",
"348 442 LINE SMOOTH",
"342 434 OFFCURVE",
"334 429 OFFCURVE",
"326 425 CURVE SMOOTH",
"318 421 OFFCURVE",
"308 420 OFFCURVE",
"295 420 CURVE SMOOTH",
"263 420 LINE",
"263 624 LINE",
"275 626 OFFCURVE",
"286 629 OFFCURVE",
"293 630 CURVE SMOOTH",
"300 631 OFFCURVE",
"305 631 OFFCURVE",
"308 632 CURVE",
"311 632 OFFCURVE",
"313 633 OFFCURVE",
"314 633 CURVE",
"331 637 OFFCURVE",
"339 648 OFFCURVE",
"339 665 CURVE SMOOTH",
"339 723 LINE",
"263 723 LINE",
"129 723 LINE",
"53 723 LINE",
"53 665 LINE SMOOTH",
"53 648 OFFCURVE",
"61 637 OFFCURVE",
"78 633 CURVE",
"79 633 OFFCURVE",
"81 632 OFFCURVE",
"84 632 CURVE SMOOTH",
"87 632 OFFCURVE",
"92 631 OFFCURVE",
"99 630 CURVE SMOOTH",
"106 629 OFFCURVE",
"117 626 OFFCURVE",
"129 624 CURVE",
"129 99 LINE",
"117 97 OFFCURVE",
"106 95 OFFCURVE",
"99 94 CURVE SMOOTH",
"92 93 OFFCURVE",
"87 92 OFFCURVE",
"84 91 CURVE SMOOTH",
"81 90 OFFCURVE",
"79 90 OFFCURVE",
"78 90 CURVE",
"61 86 OFFCURVE",
"53 76 OFFCURVE",
"53 59 CURVE SMOOTH",
"53 0 LINE",
"129 0 LINE",
"263 0 LINE",
"339 0 LINE",
"339 59 LINE SMOOTH",
"339 76 OFFCURVE",
"331 86 OFFCURVE",
"314 90 CURVE",
"313 90 OFFCURVE",
"311 91 OFFCURVE",
"308 91 CURVE SMOOTH",
"305 91 OFFCURVE",
"300 93 OFFCURVE",
"293 94 CURVE SMOOTH",
"286 95 OFFCURVE",
"275 97 OFFCURVE",
"263 99 CURVE",
"263 318 LINE",
"306 318 LINE SMOOTH",
"321 318 OFFCURVE",
"333 316 OFFCURVE",
"341 312 CURVE SMOOTH",
"349 308 OFFCURVE",
"357 303 OFFCURVE",
"364 294 CURVE SMOOTH",
"517 94 LINE",
"512 93 OFFCURVE",
"507 92 OFFCURVE",
"503 91 CURVE SMOOTH",
"499 90 OFFCURVE",
"496 90 OFFCURVE",
"495 90 CURVE",
"478 86 OFFCURVE",
"470 76 OFFCURVE",
"470 59 CURVE SMOOTH",
"470 0 LINE",
"624 0 LINE",
"636 0 LINE",
"675 0 LINE",
"743 0 LINE",
"750 0 LINE",
"750 59 LINE SMOOTH",
"750 76 OFFCURVE",
"742 86 OFFCURVE",
"725 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
31 30 29 28 27 25 18 16 8 6 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
12 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 714;
},
{
anchors = (
{
name = bottom;
position = "{356, 0}";
},
{
name = top;
position = "{356, 717}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 195, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 97, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 195, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 514, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 605, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 497, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 581, 717}";
}
);
layerId = "91753186-E1FF-4444-AA46-BB0F22A88384";
name = "Jan 25 23, 14:45";
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"194 328 LINE",
"238 328 LINE SMOOTH",
"270.064 328 OFFCURVE",
"275.966 323.034 OFFCURVE",
"294 305 CURVE",
"541 21 LINE SMOOTH",
"552 8 OFFCURVE",
"562.772 0 OFFCURVE",
"585 0 CURVE SMOOTH",
"669 0 LINE",
"384 340 LINE SMOOTH",
"369 357 OFFCURVE",
"356.667 369.333 OFFCURVE",
"338 376 CURVE",
"351.333 382.667 OFFCURVE",
"364 393 OFFCURVE",
"377 408 CURVE SMOOTH",
"650 717 LINE",
"568 717 LINE SMOOTH",
"546.667 717 OFFCURVE",
"534 710 OFFCURVE",
"520 694 CURVE SMOOTH",
"282 424 LINE SMOOTH",
"268 408 OFFCURVE",
"255.333 403 OFFCURVE",
"230 403 CURVE SMOOTH",
"194 403 LINE",
"194 717 LINE",
"97 717 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"608 0 LINE",
"608 32 LINE",
"486 32 LINE",
"486 0 LINE"
);
},
{
closed = 1;
nodes = (
"562 639 LINE",
"574 717 LINE",
"475 717 LINE",
"475 676 LINE",
"538 634 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 33 32 31 30 28 19 17 9 7 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
13 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
13 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
13 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 681;
},
{
anchors = (
{
name = bottom;
position = "{369, 0}";
},
{
name = top;
position = "{369, 729}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 87, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 257, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 257, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 497, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 664, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 517, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 645, 729}";
}
);
layerId = "AFC921C5-4C36-4E60-90BC-2508A1F8164B";
name = "Jan 25 23, 14:45";
paths = (
{
closed = 1;
nodes = (
"257 0 LINE",
"257 310 LINE",
"298 310 LINE SMOOTH",
"330 310 OFFCURVE",
"346 304 OFFCURVE",
"358 285 CURVE SMOOTH",
"523 31 LINE SMOOTH",
"538 9 OFFCURVE",
"553 0 OFFCURVE",
"589 0 CURVE SMOOTH",
"740 0 LINE",
"520 338 LINE SMOOTH",
"502 366 OFFCURVE",
"482 381 OFFCURVE",
"457 390 CURVE",
"474 399 OFFCURVE",
"491 413 OFFCURVE",
"506 434 CURVE SMOOTH",
"722 729 LINE",
"575 729 LINE SMOOTH",
"542 729 OFFCURVE",
"520 722 OFFCURVE",
"502 695 CURVE SMOOTH",
"338 457 LINE SMOOTH",
"327 442 OFFCURVE",
"309 434 OFFCURVE",
"284 434 CURVE SMOOTH",
"257 434 LINE",
"257 729 LINE",
"87 729 LINE",
"87 0 LINE"
);
},
{
closed = 1;
nodes = (
"608 0 LINE",
"608 71 LINE",
"486 71 LINE",
"486 0 LINE"
);
},
{
closed = 1;
nodes = (
"644 612 LINE",
"667 729 LINE",
"482 729 LINE",
"482 688 LINE",
"605 604 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
31 30 29 28 27 25 18 16 8 6 2 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
12 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 5 1 1 1 11 31 4 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 1 3 0 1 30 5 1 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 5 1 1 1 2 1 0 36 4 1 2 1 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 3 0 1 30 0 1 5 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 0 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 803;
}
);
leftMetricsKey = H;
note = K;
rightKerningGroup = K;
rightMetricsKey = X;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 698;
},
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 708;
},
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 214, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 759;
}
);
unicode = 0136;
},
{
glyphname = Khook;
layers = (
{
anchors = (
{
name = bottom;
position = "{344, 0}";
},
{
name = top;
position = "{344, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 600, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 352 LINE",
"192 352 LINE SMOOTH",
"222.834 352 OFFCURVE",
"230 345 OFFCURVE",
"248 327 CURVE SMOOTH",
"579 7 LINE SMOOTH",
"584 2 OFFCURVE",
"587.667 0 OFFCURVE",
"597 0 CURVE SMOOTH",
"602 0 LINE",
"255 337 LINE SMOOTH",
"242 350 OFFCURVE",
"231 355.333 OFFCURVE",
"215 358 CURVE",
"228.333 362 OFFCURVE",
"237 367 OFFCURVE",
"246 380 CURVE SMOOTH",
"447 643 LINE SMOOTH",
"478 680 OFFCURVE",
"510.333 697 OFFCURVE",
"553 697 CURVE SMOOTH",
"573 697 OFFCURVE",
"590 694 OFFCURVE",
"603 689 CURVE SMOOTH",
"611 685 OFFCURVE",
"616 684 OFFCURVE",
"617 690 CURVE SMOOTH",
"618 694 LINE",
"599.333 702 OFFCURVE",
"578 707 OFFCURVE",
"554 707 CURVE SMOOTH",
"503 707 OFFCURVE",
"467 686 OFFCURVE",
"439 649 CURVE SMOOTH",
"237 384 LINE",
"219.15 363.6 OFFCURVE",
"210 362 OFFCURVE",
"183 362 CURVE SMOOTH",
"136 362 LINE",
"136 701 LINE",
"124 701 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"598 12 LINE",
"574 13 LINE",
"597 0 LINE"
);
}
);
width = 707;
},
{
anchors = (
{
name = bottom;
position = "{364, 0}";
},
{
name = top;
position = "{364, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 203, 717}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 623, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"202 0 LINE",
"202 328 LINE",
"250 328 LINE SMOOTH",
"282.493 328 OFFCURVE",
"291.133 320.867 OFFCURVE",
"309 303 CURVE SMOOTH",
"550 21 LINE SMOOTH",
"558.268 7.219 OFFCURVE",
"572.399 0 OFFCURVE",
"594 0 CURVE SMOOTH",
"678 0 LINE",
"399 338 LINE SMOOTH",
"383 358 OFFCURVE",
"368.333 370.333 OFFCURVE",
"347 377 CURVE",
"364.333 383.667 OFFCURVE",
"380 397.333 OFFCURVE",
"392 416 CURVE SMOOTH",
"522 601 LINE SMOOTH",
"542 631.667 OFFCURVE",
"572.667 648 OFFCURVE",
"610 648 CURVE SMOOTH",
"624.667 648 OFFCURVE",
"640.333 646 OFFCURVE",
"651 642 CURVE SMOOTH",
"663.39 638.902 OFFCURVE",
"678.541 641.784 OFFCURVE",
"681 659 CURVE SMOOTH",
"690 708 LINE",
"670 717.333 OFFCURVE",
"645 723 OFFCURVE",
"605 723 CURVE SMOOTH",
"530.333 723 OFFCURVE",
"475.333 698.667 OFFCURVE",
"434 632 CURVE",
"294 428 LINE SMOOTH",
"279.333 406.667 OFFCURVE",
"264.333 403 OFFCURVE",
"239 403 CURVE SMOOTH",
"202 403 LINE",
"202 717 LINE",
"106 717 LINE",
"106 0 LINE"
);
},
{
closed = 1;
nodes = (
"604 78 LINE",
"545 91 LINE",
"593 0 LINE"
);
}
);
width = 715;
},
{
anchors = (
{
name = bottom;
position = "{379, 0}";
},
{
name = top;
position = "{379, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 674, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"266 0 LINE",
"266 310 LINE",
"307 310 LINE SMOOTH",
"337.667 310 OFFCURVE",
"354 304 OFFCURVE",
"367 284 CURVE SMOOTH",
"532 31 LINE SMOOTH",
"546 9 OFFCURVE",
"561.965 0 OFFCURVE",
"598 0 CURVE SMOOTH",
"749 0 LINE",
"529 338 LINE SMOOTH",
"512 365 OFFCURVE",
"489.333 381.333 OFFCURVE",
"464 390 CURVE",
"488 402 OFFCURVE",
"508 418.667 OFFCURVE",
"524 444 CURVE SMOOTH",
"592 570 LINE SMOOTH",
"604 593 OFFCURVE",
"631.667 610 OFFCURVE",
"665 610 CURVE SMOOTH",
"677 610 OFFCURVE",
"690 607 OFFCURVE",
"698 607 CURVE SMOOTH",
"720 606 OFFCURVE",
"735.661 608.091 OFFCURVE",
"743 635 CURVE SMOOTH",
"758 719 LINE",
"736.667 728.333 OFFCURVE",
"708 735 OFFCURVE",
"656 735 CURVE SMOOTH",
"559.249 735 OFFCURVE",
"487 708 OFFCURVE",
"438 620 CURVE SMOOTH",
"350 461 LINE SMOOTH",
"336.667 441 OFFCURVE",
"318.333 434 OFFCURVE",
"293 434 CURVE SMOOTH",
"266 434 LINE",
"266 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"673 117 LINE",
"598 131 LINE",
"654 0 LINE"
);
}
);
width = 759;
}
);
unicode = 0198;
},
{
glyphname = L;
layers = (
{
anchors = (
{
name = bottom;
position = "{289, 0}";
},
{
name = center;
position = "{130, 357}";
},
{
name = top;
position = "{130, 700}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 503, 11}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"503 0 LINE",
"503 11 LINE",
"136 11 LINE",
"136 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 3 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 513;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = center;
position = "{180, 357}";
},
{
name = top;
position = "{189, 729}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 547, 135}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"547 0 LINE",
"547 135 LINE",
"267 135 LINE",
"267 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
anchors = (
{
name = bottom;
position = "{310, 0}";
},
{
name = center;
position = "{157, 357}";
},
{
name = top;
position = "{162, 717}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 536, 82}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 204, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"536 0 LINE",
"536 82 LINE",
"203 82 LINE",
"203 717 LINE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 2 52 0 0 0 1 0 2 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 546;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "BC6443AD-7598-4479-8678-F147E97A2B48";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"538 0 LINE",
"538 44 LINE",
"194 44 LINE",
"194 708 LINE",
"143 708 LINE",
"143 0 LINE"
);
},
{
closed = 1;
nodes = (
"538 131 LINE",
"514 131 LINE SMOOTH",
"500 131 OFFCURVE",
"494 122 OFFCURVE",
"493 106 CURVE",
"486 21 LINE",
"538 0 LINE"
);
},
{
closed = 1;
nodes = (
"183 668 LINE",
"259 670 LINE",
"271 671 OFFCURVE",
"278 675 OFFCURVE",
"278 688 CURVE SMOOTH",
"278 708 LINE SMOOTH",
"58 708 LINE",
"58 688 LINE SMOOTH",
"58 675 OFFCURVE",
"65 671 OFFCURVE",
"77 670 CURVE",
"156 668 LINE"
);
},
{
closed = 1;
nodes = (
"249 0 LINE",
"249 20 LINE SMOOTH",
"249 33 OFFCURVE",
"242 37 OFFCURVE",
"230 38 CURVE",
"167 40 LINE",
"140 40 LINE",
"77 38 LINE",
"65 37 OFFCURVE",
"58 33 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 3 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 509;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "E55FC44E-C842-4061-A788-6D9B21C491B7";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"512 156 LINE",
"463 156 LINE SMOOTH",
"453 156 OFFCURVE",
"444 149 OFFCURVE",
"442 139 CURVE",
"441 135 OFFCURVE",
"438 110 OFFCURVE",
"436 82 CURVE",
"178 82 LINE",
"178 644 LINE",
"180 644 OFFCURVE",
"227 653 OFFCURVE",
"235 655 CURVE SMOOTH",
"244 657 OFFCURVE",
"250 665 OFFCURVE",
"250 674 CURVE SMOOTH",
"250 716 LINE",
"178 716 LINE",
"178 716 LINE",
"82 716 LINE",
"10 716 LINE",
"10 674 LINE SMOOTH",
"10 665 OFFCURVE",
"16 657 OFFCURVE",
"25 655 CURVE SMOOTH",
"34 653 OFFCURVE",
"82 644 OFFCURVE",
"82 644 CURVE",
"82 73 LINE",
"82 73 OFFCURVE",
"34 64 OFFCURVE",
"25 62 CURVE SMOOTH",
"16 60 OFFCURVE",
"10 52 OFFCURVE",
"10 43 CURVE SMOOTH",
"10 0 LINE",
"82 0 LINE",
"480 0 LINE",
"488 0 LINE",
"512 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 2 52 0 0 0 1 0 2 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "AE8B14EF-591B-4D59-A826-5F03A60067C5";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"480 173 LINE SMOOTH",
"467 173 OFFCURVE",
"460 166 OFFCURVE",
"457 154 CURVE SMOOTH",
"456 150 OFFCURVE",
"455 136 OFFCURVE",
"453 111 CURVE",
"220 111 LINE",
"220 624 LINE",
"232 626 OFFCURVE",
"243 628 OFFCURVE",
"250 629 CURVE SMOOTH",
"257 630 OFFCURVE",
"262 631 OFFCURVE",
"265 632 CURVE SMOOTH",
"268 633 OFFCURVE",
"270 633 OFFCURVE",
"271 633 CURVE",
"288 637 OFFCURVE",
"296 647 OFFCURVE",
"296 664 CURVE SMOOTH",
"296 723 LINE",
"220 723 LINE",
"86 723 LINE",
"10 723 LINE",
"10 664 LINE SMOOTH",
"10 647 OFFCURVE",
"18 637 OFFCURVE",
"35 633 CURVE",
"36 633 OFFCURVE",
"38 633 OFFCURVE",
"41 632 CURVE",
"44 632 OFFCURVE",
"49 630 OFFCURVE",
"56 629 CURVE SMOOTH",
"63 628 OFFCURVE",
"74 626 OFFCURVE",
"86 624 CURVE",
"86 99 LINE",
"74 97 OFFCURVE",
"63 95 OFFCURVE",
"56 94 CURVE SMOOTH",
"49 93 OFFCURVE",
"44 92 OFFCURVE",
"41 91 CURVE SMOOTH",
"38 90 OFFCURVE",
"36 90 OFFCURVE",
"35 90 CURVE",
"18 86 OFFCURVE",
"10 76 OFFCURVE",
"10 59 CURVE SMOOTH",
"10 0 LINE",
"86 0 LINE",
"507 0 LINE",
"510 0 LINE",
"534 0 LINE",
"534 53 LINE",
"534 72 LINE",
"534 173 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
leftMetricsKey = H;
note = L;
rightKerningGroup = L;
rightMetricsKey = L;
unicode = 004C;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 4, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 31, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 60, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
unicode = 0139;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -10, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 8, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
name = L;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -6, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
unicode = 013D;
},
{
glyphname = Lcircumflexbelow;
layers = (
{
components = (
{
name = L;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 178, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 156, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
name = L;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 112, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
unicode = 1E3C;
},
{
glyphname = Lcommaaccent;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 149, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 156, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 138, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
unicode = 013B;
},
{
glyphname = Ldot;
layers = (
{
components = (
{
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 208, 74}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 227, 75}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
alignment = -1;
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 247, 80}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
unicode = 013F;
},
{
glyphname = Ldotbelow;
layers = (
{
components = (
{
name = L;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 513;
},
{
components = (
{
name = L;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 243, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 546;
},
{
components = (
{
name = L;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 211, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 557;
}
);
unicode = 1E36;
},
{
glyphname = Lslash;
layers = (
{
components = (
{
name = L;
transform = "{1, 0, 0, 1, 41, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"361 430 LINE SMOOTH",
"367 433 OFFCURVE",
"367 436 OFFCURVE",
"367 440 CURVE SMOOTH",
"367 443 LINE",
"38 269 LINE",
"33 266 OFFCURVE",
"32 264 OFFCURVE",
"32 259 CURVE SMOOTH",
"32 255 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 3 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 554;
},
{
components = (
{
name = L;
transform = "{1, 0, 0, 1, 46, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"449 403 LINE SMOOTH",
"462 408 OFFCURVE",
"469 418 OFFCURVE",
"469 434 CURVE SMOOTH",
"469 544 LINE",
"64 351 LINE",
"52 346 OFFCURVE",
"46 337 OFFCURVE",
"46 324 CURVE SMOOTH",
"46 210 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
17 16 9 8 7 6 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
15 11 10 5 1 0 6 0 2 1 30 0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
15 11 10 5 1 0 6 0 2 1 30 0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
components = (
{
name = L;
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"420 415 LINE SMOOTH",
"429 420 OFFCURVE",
"434 427 OFFCURVE",
"434 436 CURVE SMOOTH",
"434 501 LINE",
"64 316 LINE SMOOTH",
"55 311 OFFCURVE",
"51 305 OFFCURVE",
"51 296 CURVE SMOOTH",
"51 230 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
17 16 9 8 7 6 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
15 11 10 5 1 0 6 0 2 1 30 0 2 2 11 31 0 0 0 1 0 2 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
15 11 10 5 1 0 6 0 2 1 30 0 2 0 2 52 0 0 0 1 0 2 36 0 1 1 15 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
15 11 10 5 1 0 6 0 2 1 30 0 2 0 2 52 0 0 1 1 0 0 0 35 0 0 0 1 0 2 36 0 1 0 1 0 2 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = Lslash;
rightKerningGroup = L;
rightMetricsKey = L;
unicode = 0141;
},
{
glyphname = M;
layers = (
{
anchors = (
{
name = bottom;
position = "{454, 0}";
},
{
name = top;
position = "{454, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 134, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 773, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 783, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 783, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"134 0 LINE",
"134 669 LINE SMOOTH",
"134 672 OFFCURVE",
"134 674 OFFCURVE",
"134 679 CURVE",
"450 145 LINE SMOOTH",
"452 142 OFFCURVE",
"454 140 OFFCURVE",
"457 140 CURVE SMOOTH",
"461 140 LINE SMOOTH",
"463 140 OFFCURVE",
"465 142 OFFCURVE",
"467 145 CURVE SMOOTH",
"773 677 LINE SMOOTH",
"773 677 OFFCURVE",
"773 669 OFFCURVE",
"773 669 CURVE SMOOTH",
"773 0 LINE",
"783 0 LINE",
"783 700 LINE",
"779 700 LINE SMOOTH",
"776 700 OFFCURVE",
"774 699 OFFCURVE",
"772 696 CURVE SMOOTH",
"464 161 LINE SMOOTH",
"462 157 OFFCURVE",
"460 153 OFFCURVE",
"459 150 CURVE",
"457 154 OFFCURVE",
"455 158 OFFCURVE",
"453 161 CURVE SMOOTH",
"135 696 LINE SMOOTH",
"133 699 OFFCURVE",
"131 700 OFFCURVE",
"128 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 28 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 1 19 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 907;
},
{
anchors = (
{
name = bottom;
position = "{507, 0}";
},
{
name = top;
position = "{507, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 247, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 766, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 916, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 916, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"246 0 LINE",
"246 419 LINE SMOOTH",
"246 439 OFFCURVE",
"245 462 OFFCURVE",
"242 486 CURVE",
"436 111 LINE SMOOTH",
"448 88 OFFCURVE",
"469 75 OFFCURVE",
"495 75 CURVE SMOOTH",
"518 75 LINE SMOOTH",
"544 75 OFFCURVE",
"565 87 OFFCURVE",
"577 111 CURVE SMOOTH",
"770 485 LINE",
"768 462 OFFCURVE",
"767 440 OFFCURVE",
"767 419 CURVE SMOOTH",
"767 0 LINE",
"916 0 LINE",
"916 729 LINE",
"787 729 LINE SMOOTH",
"758 729 OFFCURVE",
"744 728 OFFCURVE",
"731 703 CURVE SMOOTH",
"544 335 LINE SMOOTH",
"530 308 OFFCURVE",
"516 275 OFFCURVE",
"507 252 CURVE",
"495 280 OFFCURVE",
"483 308 OFFCURVE",
"470 333 CURVE",
"282 703 LINE SMOOTH",
"269 728 OFFCURVE",
"257 729 OFFCURVE",
"226 729 CURVE SMOOTH",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
36 33 32 31 24 21 15 14 13 10 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
27 18 3 3 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 11 31 3 1 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
27 18 3 3 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 2 1 0 1 0 35 4 1 0 0 1 0 0 36 3 1 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
27 18 3 3 2 4 1 30 0 2 4 3 4 2 3 50 0 0 4 1 0 1 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1013;
},
{
anchors = (
{
name = bottom;
position = "{478, 0}";
},
{
name = top;
position = "{478, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 756, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 851, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 851, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"190 0 LINE",
"190 527 LINE SMOOTH",
"190 540 OFFCURVE",
"190 558 OFFCURVE",
"187 575 CURVE",
"438 126 LINE SMOOTH",
"447 110 OFFCURVE",
"459 103 OFFCURVE",
"473 103 CURVE SMOOTH",
"487 103 LINE SMOOTH",
"502 103 OFFCURVE",
"514 111 OFFCURVE",
"522 126 CURVE SMOOTH",
"768 574 LINE",
"767 557 OFFCURVE",
"766 540 OFFCURVE",
"766 527 CURVE SMOOTH",
"766 0 LINE",
"851 0 LINE",
"851 717 LINE",
"779 717 LINE SMOOTH",
"762 717 OFFCURVE",
"755 716 OFFCURVE",
"746 700 CURVE SMOOTH",
"503 260 LINE SMOOTH",
"493 242 OFFCURVE",
"486 224 OFFCURVE",
"480 207 CURVE",
"473 226 OFFCURVE",
"468 242 OFFCURVE",
"458 259 CURVE",
"210 700 LINE SMOOTH",
"201 716 OFFCURVE",
"194 717 OFFCURVE",
"177 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
32 30 29 28 22 19 13 12 11 9 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 11 31 3 1 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 1 0 0 36 3 1 1 1 15 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 2 1 0 1 0 35 4 1 0 0 1 0 0 36 3 1 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
3 1 2 4 1 30 0 2 4 3 4 2 3 50 0 0 4 1 0 1 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 956;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "F647B2E1-A7FB-4D9B-92F0-1B0936A2A840";
name = "Jan 15 23, 17:22";
paths = (
{
closed = 1;
nodes = (
"906 671 LINE",
"919 672 OFFCURVE",
"926 678 OFFCURVE",
"926 689 CURVE SMOOTH",
"926 708 LINE",
"842 708 LINE",
"806 708 LINE SMOOTH",
"795 708 OFFCURVE",
"793 707 OFFCURVE",
"787 699 CURVE",
"509 207 LINE SMOOTH",
"509 207 OFFCURVE",
"500 187 OFFCURVE",
"496 176 CURVE",
"492 187 OFFCURVE",
"488 197 OFFCURVE",
"483 206 CURVE SMOOTH",
"197 699 LINE",
"191 708 OFFCURVE",
"189 708 OFFCURVE",
"178 708 CURVE SMOOTH",
"143 708 LINE",
"58 708 LINE",
"58 689 LINE SMOOTH",
"58 678 OFFCURVE",
"65 672 OFFCURVE",
"78 671 CURVE",
"143 669 LINE",
"143 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"274 0 LINE",
"274 20 LINE SMOOTH",
"274 31 OFFCURVE",
"267 37 OFFCURVE",
"254 38 CURVE",
"187 40 LINE",
"187 604 LINE SMOOTH",
"187 613 OFFCURVE",
"187 622 OFFCURVE",
"186 632 CURVE",
"472 136 LINE SMOOTH",
"477 127 OFFCURVE",
"484 123 OFFCURVE",
"492 123 CURVE SMOOTH",
"500 123 LINE SMOOTH",
"509 123 OFFCURVE",
"515 127 OFFCURVE",
"520 136 CURVE SMOOTH",
"798 632 LINE",
"797 622 OFFCURVE",
"797 613 OFFCURVE",
"797 604 CURVE SMOOTH",
"797 40 LINE",
"730 38 LINE",
"717 37 OFFCURVE",
"710 31 OFFCURVE",
"710 20 CURVE SMOOTH",
"710 0 LINE",
"926 0 LINE",
"926 20 LINE SMOOTH",
"926 31 OFFCURVE",
"919 37 OFFCURVE",
"906 38 CURVE",
"842 40 LINE",
"842 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 28 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 1 19 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 899;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "40875B68-475F-4D4D-A85C-4F918E8620DB";
name = "Jan 15 23, 17:23";
paths = (
{
closed = 1;
nodes = (
"170 575 LINE",
"420 126 LINE SMOOTH",
"428 111 OFFCURVE",
"441 103 OFFCURVE",
"456 103 CURVE SMOOTH",
"470 103 LINE SMOOTH",
"485 103 OFFCURVE",
"496 111 OFFCURVE",
"504 126 CURVE SMOOTH",
"750 574 LINE",
"748 558 OFFCURVE",
"748 541 OFFCURVE",
"748 527 CURVE SMOOTH",
"748 74 LINE",
"713 68 OFFCURVE",
"691 64 OFFCURVE",
"681 62 CURVE SMOOTH",
"671 60 OFFCURVE",
"666 54 OFFCURVE",
"666 44 CURVE SMOOTH",
"666 0 LINE",
"906 0 LINE",
"906 44 LINE SMOOTH",
"906 54 OFFCURVE",
"900 60 OFFCURVE",
"890 62 CURVE",
"884 64 OFFCURVE",
"865 68 OFFCURVE",
"833 74 CURVE",
"833 644 LINE",
"890 656 LINE SMOOTH",
"900 658 OFFCURVE",
"906 664 OFFCURVE",
"906 674 CURVE SMOOTH",
"906 718 LINE",
"762 718 LINE SMOOTH",
"754 718 OFFCURVE",
"746 717 OFFCURVE",
"742 715 CURVE SMOOTH",
"738 713 OFFCURVE",
"732 710 OFFCURVE",
"728 702 CURVE",
"486 261 LINE",
"478 245 OFFCURVE",
"470 228 OFFCURVE",
"463 208 CURVE",
"454 232 OFFCURVE",
"446 250 OFFCURVE",
"440 260 CURVE SMOOTH",
"193 702 LINE",
"189 710 OFFCURVE",
"184 713 OFFCURVE",
"180 715 CURVE SMOOTH",
"176 717 OFFCURVE",
"168 718 OFFCURVE",
"160 718 CURVE SMOOTH",
"16 718 LINE",
"16 674 LINE SMOOTH",
"16 664 OFFCURVE",
"22 658 OFFCURVE",
"32 656 CURVE",
"38 654 OFFCURVE",
"56 650 OFFCURVE",
"88 644 CURVE",
"88 74 LINE",
"32 62 LINE SMOOTH",
"22 60 OFFCURVE",
"16 54 OFFCURVE",
"16 44 CURVE SMOOTH",
"16 0 LINE",
"255 0 LINE",
"255 44 LINE SMOOTH",
"255 54 OFFCURVE",
"251 60 OFFCURVE",
"242 62 CURVE SMOOTH",
"233 64 OFFCURVE",
"210 68 OFFCURVE",
"174 74 CURVE",
"174 528 LINE SMOOTH",
"174 543 OFFCURVE",
"173 558 OFFCURVE",
"171 576 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
32 30 29 28 22 19 13 12 11 9 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 11 31 3 1 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 1 0 0 36 3 1 1 1 15 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
3 1 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 2 1 0 1 0 35 4 1 0 0 1 0 0 36 3 1 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
3 1 2 4 1 30 0 2 4 3 4 2 3 50 0 0 4 1 0 1 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 920;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "B4A6A095-0A7D-419A-87A9-A16D90EFCC86";
name = "Jan 15 23, 17:23";
paths = (
{
closed = 1;
nodes = (
"980 637 OFFCURVE",
"988 647 OFFCURVE",
"988 664 CURVE SMOOTH",
"988 723 LINE",
"913 723 LINE",
"811 723 LINE SMOOTH",
"805 723 OFFCURVE",
"800 722 OFFCURVE",
"796 722 CURVE SMOOTH",
"792 722 OFFCURVE",
"788 721 OFFCURVE",
"784 720 CURVE SMOOTH",
"780 719 OFFCURVE",
"777 716 OFFCURVE",
"774 713 CURVE SMOOTH",
"771 710 OFFCURVE",
"769 706 OFFCURVE",
"766 701 CURVE",
"552 301 LINE SMOOTH",
"546 290 OFFCURVE",
"541 279 OFFCURVE",
"536 267 CURVE SMOOTH",
"531 255 OFFCURVE",
"527 244 OFFCURVE",
"522 232 CURVE",
"517 244 OFFCURVE",
"512 256 OFFCURVE",
"507 267 CURVE SMOOTH",
"502 278 OFFCURVE",
"498 289 OFFCURVE",
"492 300 CURVE SMOOTH",
"276 701 LINE",
"273 706 OFFCURVE",
"270 710 OFFCURVE",
"267 713 CURVE SMOOTH",
"264 716 OFFCURVE",
"262 719 OFFCURVE",
"258 720 CURVE",
"255 721 OFFCURVE",
"250 722 OFFCURVE",
"246 722 CURVE SMOOTH",
"242 722 OFFCURVE",
"236 723 OFFCURVE",
"230 723 CURVE SMOOTH",
"129 723 LINE",
"53 723 LINE",
"53 664 LINE SMOOTH",
"53 647 OFFCURVE",
"61 637 OFFCURVE",
"78 633 CURVE",
"79 633 OFFCURVE",
"81 633 OFFCURVE",
"84 632 CURVE",
"87 632 OFFCURVE",
"92 630 OFFCURVE",
"99 629 CURVE SMOOTH",
"106 628 OFFCURVE",
"117 626 OFFCURVE",
"129 624 CURVE",
"129 99 LINE",
"117 97 OFFCURVE",
"106 95 OFFCURVE",
"99 94 CURVE SMOOTH",
"92 93 OFFCURVE",
"87 92 OFFCURVE",
"84 91 CURVE SMOOTH",
"81 90 OFFCURVE",
"79 90 OFFCURVE",
"78 90 CURVE",
"61 86 OFFCURVE",
"53 76 OFFCURVE",
"53 59 CURVE SMOOTH",
"53 0 LINE",
"129 0 LINE",
"247 0 LINE",
"337 0 LINE",
"337 59 LINE SMOOTH",
"337 76 OFFCURVE",
"329 86 OFFCURVE",
"312 90 CURVE",
"310 90 OFFCURVE",
"289 93 OFFCURVE",
"247 99 CURVE",
"247 467 LINE SMOOTH",
"247 476 OFFCURVE",
"247 486 OFFCURVE",
"246 496 CURVE SMOOTH",
"245 506 OFFCURVE",
"245 517 OFFCURVE",
"244 528 CURVE",
"465 117 LINE SMOOTH",
"470 108 OFFCURVE",
"477 100 OFFCURVE",
"485 95 CURVE SMOOTH",
"493 90 OFFCURVE",
"502 87 OFFCURVE",
"513 87 CURVE SMOOTH",
"531 87 LINE SMOOTH",
"542 87 OFFCURVE",
"551 90 OFFCURVE",
"559 95 CURVE SMOOTH",
"567 100 OFFCURVE",
"574 108 OFFCURVE",
"579 117 CURVE SMOOTH",
"797 527 LINE",
"796 516 OFFCURVE",
"795 505 OFFCURVE",
"795 495 CURVE SMOOTH",
"795 485 OFFCURVE",
"794 476 OFFCURVE",
"794 467 CURVE SMOOTH",
"794 99 LINE",
"753 93 OFFCURVE",
"731 90 OFFCURVE",
"729 90 CURVE",
"712 86 OFFCURVE",
"704 76 OFFCURVE",
"704 59 CURVE SMOOTH",
"704 0 LINE",
"794 0 LINE",
"913 0 LINE",
"988 0 LINE",
"988 59 LINE SMOOTH",
"988 76 OFFCURVE",
"980 86 OFFCURVE",
"963 90 CURVE",
"962 90 OFFCURVE",
"960 91 OFFCURVE",
"957 91 CURVE SMOOTH",
"954 91 OFFCURVE",
"949 93 OFFCURVE",
"942 94 CURVE SMOOTH",
"935 95 OFFCURVE",
"925 97 OFFCURVE",
"913 99 CURVE",
"913 624 LINE",
"925 626 OFFCURVE",
"935 628 OFFCURVE",
"942 629 CURVE SMOOTH",
"949 630 OFFCURVE",
"954 632 OFFCURVE",
"957 632 CURVE SMOOTH",
"960 632 OFFCURVE",
"962 633 OFFCURVE",
"963 633 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
36 33 32 31 24 21 15 14 13 10 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
27 18 3 3 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 0 11 31 3 1 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
27 18 3 3 2 0 1 30 0 2 0 1 0 2 1 50 4 1 0 2 1 0 1 0 35 4 1 0 0 1 0 0 36 3 1 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
27 18 3 3 2 4 1 30 0 2 4 3 4 2 3 50 0 0 4 1 0 1 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 939;
}
);
leftMetricsKey = H;
note = M;
rightMetricsKey = H;
unicode = 004D;
},
{
glyphname = Macute;
layers = (
{
components = (
{
name = M;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 328, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 907;
},
{
components = (
{
name = M;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 347, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 956;
},
{
components = (
{
name = M;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 378, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 1013;
}
);
unicode = 1E3E;
},
{
glyphname = N;
layers = (
{
anchors = (
{
name = bottom;
position = "{372, 0}";
},
{
name = top;
position = "{372, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 632, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 644, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 669 LINE SMOOTH",
"136 677 OFFCURVE",
"136 678 OFFCURVE",
"136 681 CURVE",
"634 4 LINE SMOOTH",
"636 1 OFFCURVE",
"638 0 OFFCURVE",
"639 0 CURVE SMOOTH",
"644 0 LINE",
"644 700 LINE",
"632 700 LINE",
"632 32 LINE SMOOTH",
"632 29 OFFCURVE",
"634 20 OFFCURVE",
"633 22 CURVE SMOOTH",
"137 696 LINE",
"136 698 OFFCURVE",
"134 700 OFFCURVE",
"130 700 CURVE",
"124 700 LINE",
"124 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
},
{
anchors = (
{
name = bottom;
position = "{410, 0}";
},
{
name = top;
position = "{410, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 247, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 613, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 734, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"246 0 LINE",
"246 391 LINE SMOOTH",
"246 425 OFFCURVE",
"246 434 OFFCURVE",
"243 462 CURVE",
"586 28 LINE SMOOTH",
"603 6 OFFCURVE",
"620 0 OFFCURVE",
"645 0 CURVE SMOOTH",
"733 0 LINE",
"733 729 LINE",
"584 729 LINE",
"584 343 LINE SMOOTH",
"584 320 OFFCURVE",
"585 293 OFFCURVE",
"588 265 CURVE",
"242 703 LINE",
"224 724 OFFCURVE",
"214 729 OFFCURVE",
"186 729 CURVE",
"97 729 LINE",
"97 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
24 23 22 21 14 12 11 10 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 1 2 0 0 11 31 3 1 2 2 12 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 2 0 2 2 0 0 0 35 4 1 2 0 0 2 1 0 36 3 1 2 0 2 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 4 0 40 0 1 4 2 1 0 0 35 0 4 0 3 2 4 3 0 2 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 839;
},
{
anchors = (
{
name = bottom;
position = "{386, 0}";
},
{
name = top;
position = "{386, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 591, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 686, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"190 0 LINE",
"190 511 LINE SMOOTH",
"190 524 OFFCURVE",
"189 541 OFFCURVE",
"188 557 CURVE",
"603 18 LINE SMOOTH",
"613 5 OFFCURVE",
"622 0 OFFCURVE",
"637 0 CURVE SMOOTH",
"686 0 LINE",
"686 717 LINE",
"601 717 LINE",
"601 209 LINE SMOOTH",
"601 194 OFFCURVE",
"601 177 OFFCURVE",
"604 160 CURVE",
"189 700 LINE SMOOTH",
"179 714 OFFCURVE",
"172 717 OFFCURVE",
"155 717 CURVE",
"105 717 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
22 21 20 19 12 10 9 8 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 1 2 0 0 11 31 3 1 2 2 12 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
4 1 2 0 0 2 1 0 36 3 1 2 2 15 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 2 0 2 2 0 0 0 35 4 1 2 0 0 2 1 0 36 3 1 2 0 2 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 4 0 40 0 1 4 2 1 0 0 35 0 4 0 3 2 4 3 0 2 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 792;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "8C5556BC-1BFA-419F-A375-1DDC738F92BB";
name = "Jan 15 23, 17:23";
paths = (
{
closed = 1;
nodes = (
"557 708 LINE",
"557 689 LINE SMOOTH",
"557 678 OFFCURVE",
"564 672 OFFCURVE",
"577 671 CURVE",
"644 669 LINE",
"644 114 LINE SMOOTH",
"644 105 OFFCURVE",
"644 95 OFFCURVE",
"645 85 CURVE",
"187 698 LINE SMOOTH",
"183 703 OFFCURVE",
"180 708 OFFCURVE",
"168 708 CURVE SMOOTH",
"58 708 LINE",
"58 688 LINE SMOOTH",
"58 677 OFFCURVE",
"65 671 OFFCURVE",
"78 670 CURVE",
"143 668 LINE",
"143 40 LINE",
"78 38 LINE",
"65 37 OFFCURVE",
"58 31 OFFCURVE",
"58 20 CURVE SMOOTH",
"58 0 LINE",
"274 0 LINE",
"274 20 LINE SMOOTH",
"274 31 OFFCURVE",
"267 37 OFFCURVE",
"254 38 CURVE",
"187 40 LINE",
"187 595 LINE SMOOTH",
"187 604 OFFCURVE",
"187 614 OFFCURVE",
"186 624 CURVE",
"646 10 LINE SMOOTH",
"651 3 OFFCURVE",
"656 0 OFFCURVE",
"664 0 CURVE SMOOTH",
"689 0 LINE",
"689 669 LINE",
"753 671 LINE",
"766 672 OFFCURVE",
"773 678 OFFCURVE",
"773 689 CURVE SMOOTH",
"773 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 756;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "E1376F3C-72B3-4263-A171-A117CC6FC996";
name = "Jan 15 23, 17:23";
paths = (
{
closed = 1;
nodes = (
"586 160 LINE",
"172 700 LINE",
"166 706 OFFCURVE",
"161 711 OFFCURVE",
"157 713 CURVE SMOOTH",
"153 715 OFFCURVE",
"146 716 OFFCURVE",
"138 716 CURVE SMOOTH",
"16 716 LINE",
"16 673 LINE SMOOTH",
"16 663 OFFCURVE",
"21 656 OFFCURVE",
"31 654 CURVE",
"37 652 OFFCURVE",
"56 648 OFFCURVE",
"88 642 CURVE",
"88 72 LINE",
"31 60 LINE SMOOTH",
"21 58 OFFCURVE",
"16 52 OFFCURVE",
"16 42 CURVE SMOOTH",
"16 -1 LINE",
"254 -1 LINE",
"254 42 LINE SMOOTH",
"254 52 OFFCURVE",
"250 58 OFFCURVE",
"240 60 CURVE SMOOTH",
"235 61 OFFCURVE",
"213 66 OFFCURVE",
"173 72 CURVE",
"173 510 LINE SMOOTH",
"173 524 OFFCURVE",
"173 539 OFFCURVE",
"171 556 CURVE",
"586 16 LINE",
"596 4 OFFCURVE",
"606 -1 OFFCURVE",
"620 -1 CURVE SMOOTH",
"669 -1 LINE",
"669 642 LINE",
"726 654 LINE SMOOTH",
"736 656 OFFCURVE",
"742 662 OFFCURVE",
"742 672 CURVE SMOOTH",
"742 716 LINE",
"669 716 LINE",
"584 716 LINE",
"502 716 LINE",
"502 672 LINE SMOOTH",
"502 662 OFFCURVE",
"508 656 OFFCURVE",
"518 654 CURVE SMOOTH",
"524 653 OFFCURVE",
"545 648 OFFCURVE",
"584 642 CURVE",
"584 208 LINE SMOOTH",
"584 190 OFFCURVE",
"584 172 OFFCURVE",
"586 158 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
22 21 20 19 12 10 9 8 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 1 2 0 0 11 31 3 1 2 2 12 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
4 1 2 0 0 2 1 0 36 3 1 2 2 15 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 2 0 2 2 0 0 0 35 4 1 2 0 0 2 1 0 36 3 1 2 0 2 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 4 0 40 0 1 4 2 1 0 0 35 0 4 0 3 2 4 3 0 2 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 756;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "135EB995-0B6A-46E9-AE4F-ED7DFD4E7AD4";
name = "Jan 15 23, 17:23";
paths = (
{
closed = 1;
nodes = (
"739 723 LINE",
"620 723 LINE",
"530 723 LINE",
"530 664 LINE SMOOTH",
"530 647 OFFCURVE",
"538 637 OFFCURVE",
"555 633 CURVE",
"557 633 OFFCURVE",
"578 630 OFFCURVE",
"620 624 CURVE",
"620 284 LINE SMOOTH",
"620 274 OFFCURVE",
"620 263 OFFCURVE",
"621 252 CURVE SMOOTH",
"622 241 OFFCURVE",
"623 230 OFFCURVE",
"624 218 CURVE",
"244 701 LINE SMOOTH",
"240 706 OFFCURVE",
"237 710 OFFCURVE",
"234 713 CURVE SMOOTH",
"231 716 OFFCURVE",
"228 718 OFFCURVE",
"225 719 CURVE",
"222 721 OFFCURVE",
"218 722 OFFCURVE",
"214 722 CURVE SMOOTH",
"210 722 OFFCURVE",
"205 723 OFFCURVE",
"199 723 CURVE SMOOTH",
"129 723 LINE",
"53 723 LINE",
"53 664 LINE SMOOTH",
"53 647 OFFCURVE",
"61 637 OFFCURVE",
"78 633 CURVE",
"79 633 OFFCURVE",
"81 632 OFFCURVE",
"84 632 CURVE SMOOTH",
"87 632 OFFCURVE",
"92 630 OFFCURVE",
"99 629 CURVE SMOOTH",
"106 628 OFFCURVE",
"117 626 OFFCURVE",
"129 624 CURVE",
"129 99 LINE",
"117 97 OFFCURVE",
"106 95 OFFCURVE",
"99 94 CURVE SMOOTH",
"92 93 OFFCURVE",
"87 92 OFFCURVE",
"84 91 CURVE SMOOTH",
"81 90 OFFCURVE",
"79 90 OFFCURVE",
"78 90 CURVE",
"61 86 OFFCURVE",
"53 76 OFFCURVE",
"53 59 CURVE SMOOTH",
"53 0 LINE",
"129 0 LINE",
"247 0 LINE",
"337 0 LINE",
"337 59 LINE SMOOTH",
"337 76 OFFCURVE",
"329 86 OFFCURVE",
"312 90 CURVE",
"310 90 OFFCURVE",
"289 93 OFFCURVE",
"247 99 CURVE",
"247 444 LINE SMOOTH",
"247 453 OFFCURVE",
"246 463 OFFCURVE",
"246 473 CURVE SMOOTH",
"246 483 OFFCURVE",
"245 493 OFFCURVE",
"244 504 CURVE",
"622 23 LINE SMOOTH",
"629 14 OFFCURVE",
"636 8 OFFCURVE",
"643 5 CURVE SMOOTH",
"650 2 OFFCURVE",
"658 0 OFFCURVE",
"669 0 CURVE SMOOTH",
"739 0 LINE",
"739 624 LINE",
"751 626 OFFCURVE",
"761 628 OFFCURVE",
"768 629 CURVE SMOOTH",
"775 630 OFFCURVE",
"780 632 OFFCURVE",
"783 632 CURVE SMOOTH",
"786 632 OFFCURVE",
"788 633 OFFCURVE",
"789 633 CURVE",
"806 637 OFFCURVE",
"814 647 OFFCURVE",
"814 664 CURVE SMOOTH",
"814 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
24 23 22 21 14 12 11 10 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
4 1 2 0 0 11 31 3 1 2 2 12 2 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 1 2 0 2 2 0 0 0 35 4 1 2 0 0 2 1 0 36 3 1 2 0 2 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 1 4 0 40 0 1 4 2 1 0 0 35 0 4 0 3 2 4 3 0 2 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 756;
}
);
leftMetricsKey = H;
note = N;
unicode = 004E;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 246, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 255, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 281, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 0143;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 232, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 232, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 215, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 0147;
},
{
glyphname = Ncircumflexbelow;
layers = (
{
components = (
{
name = N;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 261, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 232, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 219, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 1E4A;
},
{
glyphname = Ncommaaccent;
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 232, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 232, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 245, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 0145;
},
{
glyphname = Ndotaccent;
layers = (
{
components = (
{
name = N;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 334, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 301, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 306, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 1E44;
},
{
glyphname = Ndotbelow;
layers = (
{
components = (
{
name = N;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 334, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 319, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 318, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 1E46;
},
{
glyphname = Eng;
layers = (
{
components = (
{
name = N;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"576 -188 OFFCURVE",
"644 -174 OFFCURVE",
"644 -83 CURVE SMOOTH",
"644 46 LINE",
"632 46 LINE",
"632 -82 LINE SMOOTH",
"632 -119 OFFCURVE",
"618 -178 OFFCURVE",
"549 -178 CURVE SMOOTH",
"515 -178 OFFCURVE",
"511 -165 OFFCURVE",
"507 -172 CURVE SMOOTH",
"504 -177 LINE",
"513 -182 OFFCURVE",
"528 -188 OFFCURVE",
"546 -188 CURVE SMOOTH"
);
}
);
width = 765;
},
{
components = (
{
name = N;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"628 -182 OFFCURVE",
"686 -140 OFFCURVE",
"686 -31 CURVE",
"686 50 LINE",
"597 50 LINE",
"597 -28 LINE SMOOTH",
"597 -100 OFFCURVE",
"576 -115 OFFCURVE",
"534 -115 CURVE SMOOTH",
"498 -115 OFFCURVE",
"492 -107 OFFCURVE",
"490 -129 CURVE SMOOTH",
"486 -172 LINE",
"500 -177 OFFCURVE",
"515 -182 OFFCURVE",
"543 -182 CURVE SMOOTH"
);
}
);
width = 792;
},
{
components = (
{
name = N;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"609 -180 OFFCURVE",
"733 -164 OFFCURVE",
"733 10 CURVE",
"733 90 LINE",
"578 90 LINE",
"578 -1 LINE SMOOTH",
"578 -53 OFFCURVE",
"565 -68 OFFCURVE",
"523 -68 CURVE SMOOTH",
"493 -68 OFFCURVE",
"488 -74 OFFCURVE",
"487 -90 CURVE SMOOTH",
"482 -170 LINE",
"505 -175 OFFCURVE",
"538 -180 OFFCURVE",
"565 -180 CURVE SMOOTH"
);
}
);
width = 839;
}
);
leftMetricsKey = N;
rightMetricsKey = N;
unicode = 014A;
},
{
glyphname = Nhookleft;
layers = (
{
anchors = (
{
name = bottom;
position = "{372, 0}";
},
{
name = top;
position = "{372, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 632, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 644, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"68 -188 OFFCURVE",
"136 -174 OFFCURVE",
"136 -83 CURVE SMOOTH",
"136 46 LINE",
"124 46 LINE",
"124 -82 LINE SMOOTH",
"124 -119 OFFCURVE",
"110 -178 OFFCURVE",
"41 -178 CURVE SMOOTH",
"7 -178 OFFCURVE",
"3 -165 OFFCURVE",
"-1 -172 CURVE SMOOTH",
"-4 -177 LINE",
"5 -182 OFFCURVE",
"20 -188 OFFCURVE",
"38 -188 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 0 LINE",
"136 669 LINE SMOOTH",
"136 677 OFFCURVE",
"136 678 OFFCURVE",
"136 681 CURVE",
"634 4 LINE SMOOTH",
"636 1 OFFCURVE",
"638 0 OFFCURVE",
"639 0 CURVE SMOOTH",
"644 0 LINE",
"644 700 LINE",
"632 700 LINE",
"632 32 LINE SMOOTH",
"632 29 OFFCURVE",
"634 20 OFFCURVE",
"633 22 CURVE SMOOTH",
"137 696 LINE",
"136 698 OFFCURVE",
"134 700 OFFCURVE",
"130 700 CURVE",
"124 700 LINE",
"124 0 LINE"
);
}
);
width = 765;
},
{
anchors = (
{
name = bottom;
position = "{386, 0}";
},
{
name = top;
position = "{386, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 591, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 686, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"136 -182 OFFCURVE",
"190 -140 OFFCURVE",
"190 -31 CURVE SMOOTH",
"190 50 LINE",
"105 50 LINE",
"105 -28 LINE SMOOTH",
"105 -100 OFFCURVE",
"84 -115 OFFCURVE",
"42 -115 CURVE SMOOTH",
"6 -115 OFFCURVE",
"0 -107 OFFCURVE",
"-2 -129 CURVE SMOOTH",
"-6 -172 LINE",
"8 -177 OFFCURVE",
"23 -182 OFFCURVE",
"51 -182 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 0 LINE",
"190 511 LINE SMOOTH",
"190 524 OFFCURVE",
"189 541 OFFCURVE",
"188 557 CURVE",
"603 18 LINE SMOOTH",
"613 5 OFFCURVE",
"622 0 OFFCURVE",
"637 0 CURVE SMOOTH",
"686 0 LINE",
"686 717 LINE",
"601 717 LINE",
"601 209 LINE SMOOTH",
"601 194 OFFCURVE",
"601 177 OFFCURVE",
"604 160 CURVE",
"189 700 LINE SMOOTH",
"179 714 OFFCURVE",
"172 717 OFFCURVE",
"155 717 CURVE",
"105 717 LINE",
"105 0 LINE"
);
}
);
width = 792;
},
{
anchors = (
{
name = bottom;
position = "{410, 0}";
},
{
name = top;
position = "{410, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 613, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 734, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"128 -180 OFFCURVE",
"246 -164 OFFCURVE",
"246 10 CURVE SMOOTH",
"246 90 LINE",
"97 90 LINE",
"97 -1 LINE SMOOTH",
"97 -53 OFFCURVE",
"84 -68 OFFCURVE",
"42 -68 CURVE SMOOTH",
"12 -68 OFFCURVE",
"7 -74 OFFCURVE",
"6 -90 CURVE SMOOTH",
"1 -170 LINE",
"24 -175 OFFCURVE",
"57 -180 OFFCURVE",
"84 -180 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 25 LINE",
"246 391 LINE SMOOTH",
"246 425 OFFCURVE",
"246 434 OFFCURVE",
"243 462 CURVE",
"586 28 LINE SMOOTH",
"603 6 OFFCURVE",
"621 0 OFFCURVE",
"645 0 CURVE SMOOTH",
"733 0 LINE",
"733 729 LINE",
"584 729 LINE",
"584 343 LINE SMOOTH",
"584 320 OFFCURVE",
"585 293 OFFCURVE",
"588 265 CURVE",
"242 703 LINE",
"224 724 OFFCURVE",
"214 729 OFFCURVE",
"186 729 CURVE",
"97 729 LINE",
"97 0 LINE"
);
}
);
width = 839;
}
);
unicode = 019D;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 232, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 232, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 792;
},
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 232, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 839;
}
);
unicode = 00D1;
},
{
glyphname = O;
layers = (
{
anchors = (
{
name = bottom;
position = "{367, 0}";
},
{
name = center;
position = "{367, 350}";
},
{
name = ogonek;
position = "{365, -4}";
},
{
name = top;
position = "{367, 700}";
},
{
name = topleft;
position = "{-12, 700}";
},
{
name = topright;
position = "{745, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"462 -7 OFFCURVE",
"543 28 OFFCURVE",
"600 89 CURVE SMOOTH",
"657 150 OFFCURVE",
"690 239 OFFCURVE",
"690 350 CURVE SMOOTH",
"690 461 OFFCURVE",
"657 551 OFFCURVE",
"600 613 CURVE SMOOTH",
"543 675 OFFCURVE",
"462 708 OFFCURVE",
"366 708 CURVE SMOOTH",
"271 708 OFFCURVE",
"190 674 OFFCURVE",
"134 612 CURVE SMOOTH",
"77 550 OFFCURVE",
"43 461 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 239 OFFCURVE",
"77 150 OFFCURVE",
"134 89 CURVE SMOOTH",
"190 28 OFFCURVE",
"271 -7 OFFCURVE",
"366 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 3 OFFCURVE",
"55 146 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 552 OFFCURVE",
"171 698 OFFCURVE",
"366 698 CURVE SMOOTH",
"561 698 OFFCURVE",
"677 558 OFFCURVE",
"677 350 CURVE SMOOTH",
"677 145 OFFCURVE",
"560 3 OFFCURVE",
"366 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 733;
},
{
anchors = (
{
name = bottom;
position = "{393, 0}";
},
{
name = center;
position = "{393, 375}";
},
{
name = ogonek;
position = "{397, 3}";
},
{
name = top;
position = "{393, 749}";
},
{
name = topleft;
position = "{13, 749}";
},
{
name = topright;
position = "{773, 749}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"507 -8 OFFCURVE",
"603 32 OFFCURVE",
"669 100 CURVE SMOOTH",
"735 167 OFFCURVE",
"772 260 OFFCURVE",
"772 365 CURVE SMOOTH",
"772 469 OFFCURVE",
"735 562 OFFCURVE",
"669 629 CURVE SMOOTH",
"603 696 OFFCURVE",
"507 737 OFFCURVE",
"394 737 CURVE SMOOTH",
"281 737 OFFCURVE",
"186 697 OFFCURVE",
"120 630 CURVE SMOOTH",
"54 563 OFFCURVE",
"15 470 OFFCURVE",
"15 365 CURVE SMOOTH",
"15 260 OFFCURVE",
"54 167 OFFCURVE",
"120 100 CURVE SMOOTH",
"186 32 OFFCURVE",
"281 -8 OFFCURVE",
"394 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 132 OFFCURVE",
"188 223 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 506 OFFCURVE",
"263 597 OFFCURVE",
"394 597 CURVE SMOOTH",
"525 597 OFFCURVE",
"599 507 OFFCURVE",
"599 365 CURVE SMOOTH",
"599 222 OFFCURVE",
"525 132 OFFCURVE",
"394 132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 17 31 0 3 3 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 787;
},
{
anchors = (
{
name = bottom;
position = "{383, 0}";
},
{
name = center;
position = "{383, 369}";
},
{
name = ogonek;
position = "{392, 3}";
},
{
name = top;
position = "{383, 737}";
},
{
name = topleft;
position = "{4, 737}";
},
{
name = topright;
position = "{762, 737}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"488 -8 OFFCURVE",
"578 30 OFFCURVE",
"640 95 CURVE SMOOTH",
"702 159 OFFCURVE",
"737 251 OFFCURVE",
"737 358 CURVE SMOOTH",
"737 466 OFFCURVE",
"702 557 OFFCURVE",
"640 622 CURVE SMOOTH",
"578 687 OFFCURVE",
"488 725 OFFCURVE",
"383 725 CURVE SMOOTH",
"278 725 OFFCURVE",
"190 687 OFFCURVE",
"128 622 CURVE SMOOTH",
"66 557 OFFCURVE",
"30 466 OFFCURVE",
"30 358 CURVE SMOOTH",
"30 251 OFFCURVE",
"66 159 OFFCURVE",
"128 95 CURVE SMOOTH",
"190 30 OFFCURVE",
"278 -8 OFFCURVE",
"383 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"226 77 OFFCURVE",
"129 186 OFFCURVE",
"129 358 CURVE SMOOTH",
"129 530 OFFCURVE",
"226 641 OFFCURVE",
"383 641 CURVE SMOOTH",
"541 641 OFFCURVE",
"637 530 OFFCURVE",
"637 358 CURVE SMOOTH",
"637 185 OFFCURVE",
"541 77 OFFCURVE",
"383 77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 17 31 0 3 3 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 3 0 1 0 36 0 0 0 21 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
leftKerningGroup = C;
note = O;
rightKerningGroup = D;
unicode = 004F;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 241, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 252, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 264, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D3;
},
{
glyphname = Obreve;
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 228, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 014E;
},
{
glyphname = Ocaron;
layers = (
{
components = (
{
name = O;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 01D1;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 227, 166}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 329, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 316, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 301, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ED6;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 198, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D6;
},
{
glyphname = Odieresismacron;
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 227, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 227, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 229, 230}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 236, 381}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 198, 230}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 228, 422}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 022A;
},
{
glyphname = Odotbelow;
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 329, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 316, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 301, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ECC;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 206, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 196, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 172, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D2;
},
{
glyphname = Ohookabove;
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 168, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 187, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 200, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
layers = (
{
components = (
{
name = O;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 393, 245}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 414, 250}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 436, 248}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 241, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 252, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 264, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 329, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 316, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 301, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 206, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 196, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 172, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 168, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 187, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 200, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 215, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 228, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 0150;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 236, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 228, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 014C;
},
{
glyphname = Omacronacute;
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 227, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 241, 365}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 236, 230}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 252, 397}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 228, 230}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 264, 407}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1E52;
},
{
glyphname = Omacrongrave;
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 227, 210}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 206, 365}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 236, 230}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 196, 397}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 228, 230}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 172, 407}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1E50;
},
{
glyphname = Oogonek;
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 225, -4}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 238, 3}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 232, 3}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 01EA;
},
{
glyphname = Oopen;
layers = (
{
components = (
{
name = C;
transform = "{-1, 0, 0, -1, 658, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 658;
},
{
components = (
{
alignment = -1;
name = C;
transform = "{-1, 0, 0, -1, 669, 718}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 669;
},
{
components = (
{
alignment = -1;
name = C;
transform = "{-1, 0, 0, -1, 668, 730}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 668;
}
);
unicode = 0186;
},
{
glyphname = Oslash;
layers = (
{
components = (
{
name = O;
},
{
name = slashlongcomb;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = slashlongcomb;
transform = "{1, 0, 0, 1, 36, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = slashlongcomb;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D8;
},
{
glyphname = Oslashacute;
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 241, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = Oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 252, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = Oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 264, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 01FE;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 227, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 229, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 215, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 00D5;
},
{
glyphname = Otildeacute;
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 227, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 241, 377}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 733;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 229, 230}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 252, 415}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 767;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 215, 230}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 264, 440}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 787;
}
);
unicode = 1E4C;
},
{
glyphname = OE;
layers = (
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 1027, 17}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 1027, 695}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"485 -6 OFFCURVE",
"589 92 OFFCURVE",
"618 250 CURVE",
"618 0 LINE",
"1026 0 LINE",
"1027 11 LINE",
"629 11 LINE",
"629 350 LINE",
"938 350 LINE",
"938 361 LINE",
"629 361 LINE",
"629 689 LINE",
"1026 689 LINE",
"1026 700 LINE",
"618 700 LINE",
"618 451 LINE",
"589 609 OFFCURVE",
"484 708 OFFCURVE",
"334 708 CURVE SMOOTH",
"249 708 OFFCURVE",
"176 674 OFFCURVE",
"125 612 CURVE SMOOTH",
"73 550 OFFCURVE",
"43 461 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 239 OFFCURVE",
"73 150 OFFCURVE",
"125 89 CURVE SMOOTH",
"176 28 OFFCURVE",
"249 -6 OFFCURVE",
"334 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158 4 OFFCURVE",
"55 152 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 546 OFFCURVE",
"155 698 OFFCURVE",
"336 698 CURVE SMOOTH",
"517 698 OFFCURVE",
"617 550 OFFCURVE",
"617 350 CURVE SMOOTH",
"617 153 OFFCURVE",
"519 4 OFFCURVE",
"336 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 6 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
38 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 1025, 130}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 1025, 599}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"445 -8 OFFCURVE",
"519 22 OFFCURVE",
"576 74 CURVE",
"576 0 LINE",
"1025 0 LINE",
"1025 130 LINE",
"726 130 LINE",
"726 304 LINE",
"950 304 LINE",
"950 429 LINE",
"726 429 LINE",
"726 599 LINE",
"1025 599 LINE",
"1025 729 LINE",
"576 729 LINE",
"576 654 LINE",
"519 706 OFFCURVE",
"445 737 OFFCURVE",
"356 737 CURVE SMOOTH",
"253 737 OFFCURVE",
"169 697 OFFCURVE",
"109 630 CURVE SMOOTH",
"49 563 OFFCURVE",
"15 470 OFFCURVE",
"15 365 CURVE SMOOTH",
"15 260 OFFCURVE",
"49 167 OFFCURVE",
"109 100 CURVE SMOOTH",
"169 32 OFFCURVE",
"253 -8 OFFCURVE",
"356 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"252 127 OFFCURVE",
"188 225 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 504 OFFCURVE",
"252 602 OFFCURVE",
"373 602 CURVE SMOOTH",
"494 602 OFFCURVE",
"556 503 OFFCURVE",
"556 365 CURVE SMOOTH",
"556 225 OFFCURVE",
"494 127 OFFCURVE",
"373 127 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 0 45 43 35 33 0 28 0 28 25 23 15 13 10 9 8 7 6 5 4 3 2 1 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
27 1 0 6 11 1 4 3 2 30 0 1 0 2 3 1 2 0 0 38 8 1 0 0 6 1 0 36 10 7 2 6 6 17 31 9 1 3 3 4 1 0 36 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
27 1 0 7 11 1 4 3 2 30 0 1 0 2 3 1 2 0 0 38 8 1 0 0 6 1 0 36 0 6 6 17 31 8 1 0 0 7 0 0 36 10 1 7 7 11 31 9 1 3 3 4 0 0 36 0 4 4 12 31 9 1 3 3 5 1 0 36 0 5 5 18 5 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
27 1 8 7 11 1 4 9 2 30 0 1 0 2 3 1 2 0 0 38 0 8 8 6 1 0 36 0 6 6 17 31 0 0 0 7 0 0 36 10 1 7 7 11 31 0 3 3 4 0 0 36 0 4 4 12 31 0 9 9 5 1 0 36 0 5 5 18 5 32 10 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
27 1 8 7 11 1 4 9 2 30 0 6 0 8 0 6 8 1 0 38 10 1 7 0 0 1 7 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 9 4 5 9 1 0 35 0 3 0 4 5 3 4 0 0 38 0 9 9 5 1 0 36 0 5 9 5 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1058;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 1028, 79}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 1028, 638}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"456 -7 OFFCURVE",
"542 40 OFFCURVE",
"598 120 CURVE",
"598 0 LINE",
"1028 0 LINE",
"1028 79 LINE",
"684 79 LINE",
"684 323 LINE",
"949 323 LINE",
"949 399 LINE",
"684 399 LINE",
"684 638 LINE",
"1028 638 LINE",
"1028 717 LINE",
"598 717 LINE",
"598 597 LINE",
"542 677 OFFCURVE",
"456 725 OFFCURVE",
"348 725 CURVE SMOOTH",
"253 725 OFFCURVE",
"174 687 OFFCURVE",
"118 622 CURVE SMOOTH",
"62 557 OFFCURVE",
"30 466 OFFCURVE",
"30 358 CURVE SMOOTH",
"30 251 OFFCURVE",
"62 159 OFFCURVE",
"118 95 CURVE SMOOTH",
"174 31 OFFCURVE",
"253 -7 OFFCURVE",
"348 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 74 OFFCURVE",
"129 189 OFFCURVE",
"129 358 CURVE SMOOTH",
"129 528 OFFCURVE",
"215 643 OFFCURVE",
"358 643 CURVE SMOOTH",
"503 643 OFFCURVE",
"586 529 OFFCURVE",
"586 358 CURVE SMOOTH",
"586 188 OFFCURVE",
"502 74 OFFCURVE",
"358 74 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 0 45 43 35 33 0 28 0 28 25 23 15 13 10 9 8 7 6 5 4 3 2 1 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
27 1 1 0 11 1 3 2 2 30 0 1 0 2 3 1 2 0 0 38 8 1 0 0 6 1 0 36 10 7 2 6 6 17 31 9 1 3 3 4 1 0 36 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
27 1 1 0 11 1 3 2 2 30 0 1 0 2 3 1 2 0 0 38 8 1 0 0 6 1 0 36 0 6 6 17 31 8 1 0 0 7 0 0 36 10 1 7 7 11 31 9 1 3 3 4 1 0 36 5 1 4 4 12 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
27 1 1 0 11 1 3 2 2 30 0 1 0 2 3 1 2 0 0 38 8 1 0 0 6 1 0 36 0 6 6 17 31 8 1 0 0 7 0 0 36 10 1 7 7 11 31 9 1 3 3 4 0 0 36 0 4 4 12 31 9 1 3 3 5 1 0 36 0 5 5 21 5 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
27 1 1 0 11 1 3 2 2 30 0 1 0 2 3 1 2 0 0 38 0 8 8 6 1 0 36 0 6 6 17 31 0 0 0 7 0 0 36 10 1 7 7 11 31 9 1 3 3 4 0 0 36 0 4 4 12 31 9 1 3 3 5 1 0 36 0 5 5 21 5 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
27 1 1 0 11 1 3 2 2 30 0 1 0 2 3 1 2 0 0 38 0 8 8 6 1 0 36 0 6 6 17 31 0 0 0 7 0 0 36 10 1 7 7 11 31 0 3 3 4 0 0 36 0 4 4 12 31 0 9 9 5 1 0 36 0 5 5 21 5 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
27 1 1 0 11 1 3 2 2 30 0 6 0 8 0 6 8 1 0 38 10 1 7 0 0 1 7 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 3 3 4 0 0 36 0 4 4 15 31 0 9 9 5 1 0 36 0 5 5 21 5 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
27 1 1 0 11 1 3 2 2 30 0 6 0 8 0 6 8 1 0 38 10 1 7 0 0 1 7 0 0 0 38 0 1 0 2 3 1 2 0 0 38 0 9 4 5 9 1 0 35 0 3 0 4 5 3 4 0 0 38 0 9 9 5 1 0 36 0 5 9 5 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1073;
}
);
leftKerningGroup = C;
leftMetricsKey = O;
note = OE;
rightKerningGroup = AE;
rightMetricsKey = E;
unicode = 0152;
},
{
glyphname = P;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 300 LINE",
"282 300 LINE SMOOTH",
"419 300 OFFCURVE",
"519 381 OFFCURVE",
"519 500 CURVE SMOOTH",
"519 635 OFFCURVE",
"435 700 OFFCURVE",
"282 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 690 LINE",
"282 690 LINE SMOOTH",
"433 690 OFFCURVE",
"507 625 OFFCURVE",
"507 500 CURVE SMOOTH",
"507 390 OFFCURVE",
"413 310 OFFCURVE",
"282 310 CURVE SMOOTH",
"136 310 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
13 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 552;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"266 0 LINE",
"266 244 LINE",
"354 244 LINE SMOOTH",
"530 244 OFFCURVE",
"647 323 OFFCURVE",
"647 491 CURVE SMOOTH",
"647 649 OFFCURVE",
"529 729 OFFCURVE",
"354 729 CURVE SMOOTH",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"266 602 LINE",
"354 602 LINE SMOOTH",
"435 602 OFFCURVE",
"478 561 OFFCURVE",
"478 491 CURVE SMOOTH",
"478 415 OFFCURVE",
"442 371 OFFCURVE",
"354 371 CURVE SMOOTH",
"266 371 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 25 23 17 15 0 14 0 13 5 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 5 1 2 0 3 2 1 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 0 53 0 1 0 4 3 1 4 1 0 38 0 3 2 2 3 1 0 35 0 3 3 2 1 0 36 5 1 2 3 2 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 666;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 268 LINE",
"318 268 LINE SMOOTH",
"482 268 OFFCURVE",
"585 356 OFFCURVE",
"585 495 CURVE SMOOTH",
"585 636 OFFCURVE",
"489 717 OFFCURVE",
"318 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"203 640 LINE",
"318 640 LINE SMOOTH",
"431 640 OFFCURVE",
"488 586 OFFCURVE",
"488 495 CURVE SMOOTH",
"488 403 OFFCURVE",
"424 345 OFFCURVE",
"318 345 CURVE SMOOTH",
"203 345 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 25 23 17 15 0 14 0 13 5 3 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 5 1 2 0 3 2 1 0 38 0 4 4 1 1 0 36 0 1 1 11 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 4 3 1 4 1 0 38 0 3 5 1 2 0 3 2 1 0 38 0 0 0 15 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 0 53 0 1 0 4 3 1 4 1 0 38 0 3 2 2 3 1 0 35 0 3 3 2 1 0 36 5 1 2 3 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
leftMetricsKey = H;
note = P;
rightKerningGroup = F;
unicode = 0050;
},
{
glyphname = Phook;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 236, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 248, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"248 0 LINE",
"248 300 LINE",
"394 300 LINE SMOOTH",
"531 300 OFFCURVE",
"631 381 OFFCURVE",
"631 500 CURVE SMOOTH",
"631 635 OFFCURVE",
"547 700 OFFCURVE",
"394 700 CURVE SMOOTH",
"236 700 LINE",
"236 0 LINE"
);
},
{
closed = 1;
nodes = (
"248 690 LINE",
"394 690 LINE SMOOTH",
"545 690 OFFCURVE",
"619 625 OFFCURVE",
"619 500 CURVE SMOOTH",
"619 390 OFFCURVE",
"525 310 OFFCURVE",
"394 310 CURVE SMOOTH",
"248 310 LINE"
);
}
);
width = 664;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 241, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 339, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"339 0 LINE",
"339 268 LINE",
"454 268 LINE SMOOTH",
"618 268 OFFCURVE",
"721 356 OFFCURVE",
"721 495 CURVE SMOOTH",
"721 636 OFFCURVE",
"625 717 OFFCURVE",
"454 717 CURVE SMOOTH",
"241 717 LINE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"339 640 LINE",
"454 640 LINE SMOOTH",
"567 640 OFFCURVE",
"624 586 OFFCURVE",
"624 495 CURVE SMOOTH",
"624 403 OFFCURVE",
"560 345 OFFCURVE",
"454 345 CURVE SMOOTH",
"339 345 LINE"
);
}
);
width = 746;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 246, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 415, 0}";
},
{
name = hookleft_caps_part;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"415 0 LINE",
"415 244 LINE",
"503 244 LINE SMOOTH",
"679 244 OFFCURVE",
"796 323 OFFCURVE",
"796 491 CURVE SMOOTH",
"796 649 OFFCURVE",
"678 729 OFFCURVE",
"503 729 CURVE SMOOTH",
"246 729 LINE",
"246 0 LINE"
);
},
{
closed = 1;
nodes = (
"415 602 LINE",
"503 602 LINE SMOOTH",
"584 602 OFFCURVE",
"627 561 OFFCURVE",
"627 491 CURVE SMOOTH",
"627 415 OFFCURVE",
"591 371 OFFCURVE",
"503 371 CURVE SMOOTH",
"415 371 LINE"
);
}
);
width = 815;
}
);
leftMetricsKey = Bhook;
rightMetricsKey = P;
unicode = 01A4;
},
{
glyphname = Thorn;
layers = (
{
anchors = (
{
name = bottom;
position = "{130, 0}";
},
{
name = top;
position = "{274, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 136, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 149 LINE",
"282 149 LINE SMOOTH",
"419 149 OFFCURVE",
"519 230 OFFCURVE",
"519 349 CURVE SMOOTH",
"519 484 OFFCURVE",
"435 549 OFFCURVE",
"282 549 CURVE SMOOTH",
"136 549 LINE",
"136 700 LINE",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 539 LINE",
"282 539 LINE SMOOTH",
"433 539 OFFCURVE",
"507 474 OFFCURVE",
"507 349 CURVE SMOOTH",
"507 239 OFFCURVE",
"413 159 OFFCURVE",
"282 159 CURVE SMOOTH",
"136 159 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
15 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 24 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 553;
},
{
anchors = (
{
name = bottom;
position = "{189, 0}";
},
{
name = top;
position = "{357, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 267, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 267, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"267 146 LINE",
"355 146 LINE SMOOTH",
"529 146 OFFCURVE",
"648 206 OFFCURVE",
"648 373 CURVE SMOOTH",
"648 532 OFFCURVE",
"533 591 OFFCURVE",
"355 591 CURVE SMOOTH",
"267 591 LINE",
"267 729 LINE",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"267 465 LINE",
"355 465 LINE SMOOTH",
"436 465 OFFCURVE",
"479 444 OFFCURVE",
"479 373 CURVE SMOOTH",
"479 298 OFFCURVE",
"443 274 OFFCURVE",
"355 274 CURVE SMOOTH",
"267 274 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 27 25 19 17 0 16 0 15 7 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 5 4 2 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 0 1 1 11 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 0 1 0 0 35 0 2 0 5 4 2 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 0 1 1 0 0 0 36 0 0 1 0 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
position = "{160, 0}";
},
{
name = top;
position = "{315, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 203, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 136 LINE",
"318 136 LINE SMOOTH",
"482 136 OFFCURVE",
"585 224 OFFCURVE",
"585 363 CURVE SMOOTH",
"585 504 OFFCURVE",
"489 585 OFFCURVE",
"318 585 CURVE SMOOTH",
"203 585 LINE",
"203 717 LINE",
"106 717 LINE",
"106 0 LINE"
);
},
{
closed = 1;
nodes = (
"203 508 LINE",
"318 508 LINE SMOOTH",
"431 508 OFFCURVE",
"488 454 OFFCURVE",
"488 363 CURVE SMOOTH",
"488 271 OFFCURVE",
"424 213 OFFCURVE",
"318 213 CURVE SMOOTH",
"203 213 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 27 25 19 17 0 16 0 15 7 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 5 4 2 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 0 1 1 11 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 5 4 2 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 0 1 1 0 0 0 36 0 0 0 15 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 0 1 0 0 35 0 2 0 5 4 2 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 0 1 1 0 0 0 36 0 0 1 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 616;
}
);
leftMetricsKey = H;
note = Thorn;
unicode = 00DE;
},
{
glyphname = Q;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"715 -163 LINE",
"530 33 LINE",
"634 92 OFFCURVE",
"690 206 OFFCURVE",
"690 350 CURVE SMOOTH",
"690 461 OFFCURVE",
"657 551 OFFCURVE",
"600 613 CURVE SMOOTH",
"543 675 OFFCURVE",
"462 708 OFFCURVE",
"366 708 CURVE SMOOTH",
"271 708 OFFCURVE",
"190 674 OFFCURVE",
"134 612 CURVE SMOOTH",
"77 550 OFFCURVE",
"43 461 OFFCURVE",
"43 350 CURVE SMOOTH",
"43 239 OFFCURVE",
"77 150 OFFCURVE",
"134 89 CURVE SMOOTH",
"190 28 OFFCURVE",
"271 -7 OFFCURVE",
"366 -7 CURVE SMOOTH",
"423 -7 OFFCURVE",
"475 5 OFFCURVE",
"519 28 CURVE",
"694 -159 LINE SMOOTH",
"697 -162 OFFCURVE",
"699 -163 OFFCURVE",
"704 -163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"175 3 OFFCURVE",
"55 146 OFFCURVE",
"55 350 CURVE SMOOTH",
"55 552 OFFCURVE",
"171 698 OFFCURVE",
"366 698 CURVE SMOOTH",
"561 698 OFFCURVE",
"677 558 OFFCURVE",
"677 350 CURVE SMOOTH",
"677 145 OFFCURVE",
"561 3 OFFCURVE",
"366 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 735;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"813 -137 LINE",
"629 65 LINE",
"721 133 OFFCURVE",
"772 243 OFFCURVE",
"772 365 CURVE SMOOTH",
"772 469 OFFCURVE",
"735 562 OFFCURVE",
"669 629 CURVE SMOOTH",
"603 696 OFFCURVE",
"507 737 OFFCURVE",
"394 737 CURVE SMOOTH",
"281 737 OFFCURVE",
"186 697 OFFCURVE",
"120 630 CURVE SMOOTH",
"54 563 OFFCURVE",
"15 470 OFFCURVE",
"15 365 CURVE SMOOTH",
"15 260 OFFCURVE",
"54 167 OFFCURVE",
"120 100 CURVE SMOOTH",
"186 32 OFFCURVE",
"281 -8 OFFCURVE",
"394 -8 CURVE SMOOTH",
"426 -8 OFFCURVE",
"457 -5 OFFCURVE",
"486 2 CURVE",
"576 -100 LINE SMOOTH",
"601 -129 OFFCURVE",
"634 -137 OFFCURVE",
"674 -137 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 132 OFFCURVE",
"188 223 OFFCURVE",
"188 365 CURVE SMOOTH",
"188 506 OFFCURVE",
"263 597 OFFCURVE",
"394 597 CURVE SMOOTH",
"525 597 OFFCURVE",
"599 507 OFFCURVE",
"599 365 CURVE SMOOTH",
"599 222 OFFCURVE",
"525 132 OFFCURVE",
"394 132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
45 43 35 33 25 23 15 13 8 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
5 1 1 4 1 30 0 0 1 0 53 0 3 3 2 1 0 36 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 18 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
5 1 1 4 1 30 0 0 1 0 53 0 2 0 3 4 2 3 1 0 38 0 4 1 1 4 1 0 35 0 4 4 1 1 0 36 0 1 4 1 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"770 -148 LINE",
"586 51 LINE",
"681 114 OFFCURVE",
"737 229 OFFCURVE",
"737 358 CURVE SMOOTH",
"737 466 OFFCURVE",
"702 557 OFFCURVE",
"640 622 CURVE SMOOTH",
"578 687 OFFCURVE",
"488 725 OFFCURVE",
"383 725 CURVE SMOOTH",
"278 725 OFFCURVE",
"190 687 OFFCURVE",
"128 622 CURVE SMOOTH",
"66 557 OFFCURVE",
"30 466 OFFCURVE",
"30 358 CURVE SMOOTH",
"30 251 OFFCURVE",
"66 159 OFFCURVE",
"128 95 CURVE SMOOTH",
"190 30 OFFCURVE",
"278 -8 OFFCURVE",
"383 -8 CURVE SMOOTH",
"428 -8 OFFCURVE",
"468 0 OFFCURVE",
"507 12 CURVE",
"633 -126 LINE SMOOTH",
"648 -142 OFFCURVE",
"666 -148 OFFCURVE",
"690 -148 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"226 77 OFFCURVE",
"129 186 OFFCURVE",
"129 358 CURVE SMOOTH",
"129 530 OFFCURVE",
"226 641 OFFCURVE",
"383 641 CURVE SMOOTH",
"541 641 OFFCURVE",
"637 530 OFFCURVE",
"637 358 CURVE SMOOTH",
"637 185 OFFCURVE",
"541 77 OFFCURVE",
"383 77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
45 43 35 33 25 23 15 13 8 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 5 2 1 4 1 30 0 0 1 0 53 0 3 3 2 1 0 36 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 18 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 5 2 1 4 1 30 0 3 3 2 1 0 36 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
11 5 2 1 4 1 30 0 0 1 0 53 0 3 3 2 1 0 36 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 18 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
11 5 2 1 4 1 30 0 0 1 0 53 0 2 0 3 4 2 3 1 0 38 0 4 4 1 1 0 36 0 1 1 21 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
11 5 2 1 4 1 30 0 0 1 0 53 0 2 0 3 4 2 3 1 0 38 0 4 1 1 4 1 0 35 0 4 4 1 1 0 36 0 1 4 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
leftKerningGroup = C;
leftMetricsKey = O;
note = Q;
rightKerningGroup = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = top;
position = "{303, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 136, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 571, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 338 LINE",
"245 338 LINE SMOOTH",
"269 338 OFFCURVE",
"282 336 OFFCURVE",
"293 320 CURVE",
"555 6 LINE SMOOTH",
"560 1 OFFCURVE",
"563 0 OFFCURVE",
"568 0 CURVE SMOOTH",
"576 0 LINE",
"303 325 LINE SMOOTH",
"297 332 OFFCURVE",
"293 335 OFFCURVE",
"286 338 CURVE",
"418 341 OFFCURVE",
"513 410 OFFCURVE",
"513 525 CURVE SMOOTH",
"513 645 OFFCURVE",
"433 700 OFFCURVE",
"286 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 690 LINE",
"286 690 LINE SMOOTH",
"425 690 OFFCURVE",
"501 640 OFFCURVE",
"501 525 CURVE SMOOTH",
"501 413 OFFCURVE",
"411 348 OFFCURVE",
"277 348 CURVE SMOOTH",
"136 348 LINE"
);
},
{
closed = 1;
nodes = (
"569 12 LINE",
"550 13 LINE",
"568 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
12 2 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
27 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
36 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 669;
},
{
anchors = (
{
name = bottom;
position = "{346, 0}";
},
{
name = top;
position = "{346, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 266, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 616, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"266 0 LINE",
"266 270 LINE",
"309 270 LINE SMOOTH",
"336 270 OFFCURVE",
"347 263 OFFCURVE",
"358 244 CURVE SMOOTH",
"479 32 LINE SMOOTH",
"491 11 OFFCURVE",
"512 0 OFFCURVE",
"540 0 CURVE SMOOTH",
"693 0 LINE",
"538 254 LINE SMOOTH",
"523 278 OFFCURVE",
"504 294 OFFCURVE",
"481 305 CURVE",
"574 342 OFFCURVE",
"627 417 OFFCURVE",
"627 513 CURVE SMOOTH",
"627 664 OFFCURVE",
"508 729 OFFCURVE",
"334 729 CURVE SMOOTH",
"97 729 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"266 602 LINE",
"334 602 LINE SMOOTH",
"422 602 OFFCURVE",
"462 564 OFFCURVE",
"462 500 CURVE SMOOTH",
"462 432 OFFCURVE",
"420 386 OFFCURVE",
"334 386 CURVE SMOOTH",
"266 386 LINE"
);
},
{
closed = 1;
nodes = (
"615 117 LINE",
"540 131 LINE",
"596 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 36 34 28 26 0 25 0 24 20 18 5 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 4 1 30 0 4 6 1 3 0 4 3 1 0 38 0 5 5 1 1 0 36 0 1 1 11 31 2 1 0 0 12 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
14 1 3 4 1 30 2 1 0 3 0 53 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
14 1 3 4 1 30 0 2 3 0 3 2 0 50 0 0 0 51 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
anchors = (
{
name = bottom;
position = "{328, 0}";
},
{
name = top;
position = "{328, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 203, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 582, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 299 LINE",
"276 299 LINE SMOOTH",
"303 299 OFFCURVE",
"313 293 OFFCURVE",
"325 277 CURVE SMOOTH",
"511 21 LINE",
"519 7 OFFCURVE",
"532 0 OFFCURVE",
"550 0 CURVE SMOOTH",
"636 0 LINE",
"427 285 LINE SMOOTH",
"417 298 OFFCURVE",
"407 308 OFFCURVE",
"395 315 CURVE",
"503 341 OFFCURVE",
"571 413 OFFCURVE",
"571 518 CURVE SMOOTH",
"571 649 OFFCURVE",
"478 717 OFFCURVE",
"309 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"203 640 LINE",
"309 640 LINE SMOOTH",
"420 640 OFFCURVE",
"477 596 OFFCURVE",
"477 511 CURVE SMOOTH",
"477 422 OFFCURVE",
"412 370 OFFCURVE",
"304 370 CURVE SMOOTH",
"203 370 LINE"
);
},
{
closed = 1;
nodes = (
"563 78 LINE",
"504 91 LINE",
"552 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 35 33 27 25 0 24 0 23 19 17 5 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 4 1 30 0 4 6 1 3 0 4 3 1 0 38 0 5 5 1 1 0 36 0 1 1 11 31 2 1 0 0 12 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 4 1 30 0 1 0 5 4 1 5 1 0 38 0 4 6 1 3 0 4 3 1 0 38 2 1 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
14 1 3 4 1 30 2 1 0 3 0 53 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
14 1 3 4 1 30 0 2 3 0 3 2 0 50 0 0 0 51 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
position = "{309, 0}";
},
{
name = top;
position = "{309, 729}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 229, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 426, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 579, 0}";
}
);
layerId = "00356382-872F-4125-AC33-851ED640CA60";
name = "Jan 25 23, 14:51";
paths = (
{
closed = 1;
nodes = (
"229 0 LINE",
"229 270 LINE",
"272 270 LINE SMOOTH",
"298.667 270 OFFCURVE",
"310.333 262.667 OFFCURVE",
"321 244 CURVE SMOOTH",
"442 32 LINE SMOOTH",
"454 11 OFFCURVE",
"475 0 OFFCURVE",
"503 0 CURVE SMOOTH",
"656 0 LINE",
"501 254 LINE SMOOTH",
"486 278 OFFCURVE",
"466.667 294.333 OFFCURVE",
"444 305 CURVE",
"537.201 342.28 OFFCURVE",
"590 416.925 OFFCURVE",
"590 513 CURVE SMOOTH",
"590 664 OFFCURVE",
"471 729 OFFCURVE",
"297 729 CURVE SMOOTH",
"60 729 LINE",
"60 0 LINE"
);
},
{
closed = 1;
nodes = (
"229 602 LINE",
"297 602 LINE SMOOTH",
"385 602 OFFCURVE",
"425 564 OFFCURVE",
"425 500 CURVE SMOOTH",
"425 432.027 OFFCURVE",
"383.231 386 OFFCURVE",
"297 386 CURVE SMOOTH",
"229 386 LINE"
);
},
{
closed = 1;
nodes = (
"523 0 LINE",
"523 71 LINE",
"401 71 LINE",
"401 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 36 34 28 26 0 25 0 24 20 18 5 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 4 1 30 0 4 6 1 3 0 4 3 1 0 38 0 5 5 1 1 0 36 0 1 1 11 31 2 1 0 0 12 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
14 1 3 4 1 30 2 1 0 3 0 53 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
14 1 3 4 1 30 0 2 3 0 3 2 0 50 0 0 0 51 0 1 0 5 4 1 5 1 0 38 0 4 3 3 4 1 0 35 0 4 4 3 1 0 36 6 1 3 4 3 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
leftMetricsKey = H;
note = R;
rightKerningGroup = R;
rightMetricsKey = A;
unicode = 0052;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 669;
},
{
components = (
{
name = R;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 197, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 667;
},
{
components = (
{
name = R;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 217, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 701;
}
);
unicode = 0154;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 163, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 669;
},
{
components = (
{
name = R;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 174, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 667;
},
{
components = (
{
name = R;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 151, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 701;
}
);
unicode = 0158;
},
{
glyphname = Rcommaaccent;
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 669;
},
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 174, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 667;
},
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 181, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 701;
}
);
unicode = 0156;
},
{
glyphname = Rstroke;
layers = (
{
components = (
{
name = R;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"129 338 LINE",
"129 348 LINE",
"43 348 LINE",
"43 338 LINE"
);
}
);
width = 678;
},
{
components = (
{
name = R;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"154 299 LINE",
"154 370 LINE",
"37 370 LINE",
"37 299 LINE"
);
}
);
width = 674;
},
{
components = (
{
name = R;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"308 270 LINE",
"308 386 LINE",
"26 386 LINE",
"26 270 LINE"
);
}
);
width = 701;
}
);
unicode = 024C;
},
{
glyphname = Rtail;
layers = (
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = top;
position = "{303, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 700}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 571, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"136 0 LINE",
"136 338 LINE",
"245 338 LINE SMOOTH",
"269 338 OFFCURVE",
"282 336 OFFCURVE",
"293 320 CURVE",
"555 6 LINE SMOOTH",
"560 1 OFFCURVE",
"563 0 OFFCURVE",
"568 0 CURVE SMOOTH",
"576 0 LINE",
"303 325 LINE SMOOTH",
"297 332 OFFCURVE",
"293 335 OFFCURVE",
"286 338 CURVE",
"418 341 OFFCURVE",
"513 410 OFFCURVE",
"513 525 CURVE SMOOTH",
"513 645 OFFCURVE",
"433 700 OFFCURVE",
"286 700 CURVE SMOOTH",
"124 700 LINE",
"124 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 690 LINE",
"286 690 LINE SMOOTH",
"425 690 OFFCURVE",
"501 640 OFFCURVE",
"501 525 CURVE SMOOTH",
"501 413 OFFCURVE",
"411 348 OFFCURVE",
"277 348 CURVE SMOOTH",
"136 348 LINE"
);
},
{
closed = 1;
nodes = (
"569 12 LINE",
"550 13 LINE",
"568 0 LINE"
);
},
{
closed = 1;
nodes = (
"240 -188 OFFCURVE",
"255 -182 OFFCURVE",
"264 -177 CURVE",
"261 -172 LINE SMOOTH",
"257 -165 OFFCURVE",
"253 -178 OFFCURVE",
"219 -178 CURVE SMOOTH",
"150 -178 OFFCURVE",
"136 -119 OFFCURVE",
"136 -82 CURVE SMOOTH",
"136 46 LINE",
"124 46 LINE",
"124 -83 LINE SMOOTH",
"124 -174 OFFCURVE",
"192 -188 OFFCURVE",
"222 -188 CURVE SMOOTH"
);
}
);
width = 678;
},
{
anchors = (
{
name = bottom;
position = "{328, 0}";
},
{
name = top;
position = "{328, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 105, 717}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 582, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"203 0 LINE",
"203 299 LINE",
"276 299 LINE SMOOTH",
"303 299 OFFCURVE",
"313 293 OFFCURVE",
"325 277 CURVE SMOOTH",
"511 21 LINE",
"519 7 OFFCURVE",
"532 0 OFFCURVE",
"550 0 CURVE SMOOTH",
"636 0 LINE",
"427 285 LINE SMOOTH",
"417 298 OFFCURVE",
"407 308 OFFCURVE",
"395 315 CURVE",
"503 341 OFFCURVE",
"571 413 OFFCURVE",
"571 518 CURVE SMOOTH",
"571 649 OFFCURVE",
"478 717 OFFCURVE",
"309 717 CURVE SMOOTH",
"105 717 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"203 640 LINE",
"309 640 LINE SMOOTH",
"420 640 OFFCURVE",
"477 596 OFFCURVE",
"477 511 CURVE SMOOTH",
"477 422 OFFCURVE",
"412 370 OFFCURVE",
"304 370 CURVE SMOOTH",
"203 370 LINE"
);
},
{
closed = 1;
nodes = (
"563 78 LINE",
"504 91 LINE",
"552 0 LINE"
);
},
{
closed = 1;
nodes = (
"285 -182 OFFCURVE",
"300 -177 OFFCURVE",
"314 -172 CURVE",
"310 -129 LINE SMOOTH",
"308 -107 OFFCURVE",
"303 -115 OFFCURVE",
"269 -115 CURVE SMOOTH",
"224 -115 OFFCURVE",
"203 -101 OFFCURVE",
"203 -28 CURVE SMOOTH",
"203 50 LINE",
"105 50 LINE",
"105 -31 LINE SMOOTH",
"105 -140 OFFCURVE",
"172 -182 OFFCURVE",
"257 -182 CURVE SMOOTH"
);
}
);
width = 674;
},
{
anchors = (
{
name = bottom;
position = "{346, 0}";
},
{
name = top;
position = "{346, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 729}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 616, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"266 0 LINE",
"266 270 LINE",
"309 270 LINE SMOOTH",
"336 270 OFFCURVE",
"347 263 OFFCURVE",
"358 244 CURVE SMOOTH",
"479 32 LINE SMOOTH",
"491 11 OFFCURVE",
"512 0 OFFCURVE",
"540 0 CURVE SMOOTH",
"693 0 LINE",
"538 254 LINE SMOOTH",
"523 278 OFFCURVE",
"504 294 OFFCURVE",
"481 305 CURVE",
"574 342 OFFCURVE",
"627 417 OFFCURVE",
"627 513 CURVE SMOOTH",
"627 664 OFFCURVE",
"508 729 OFFCURVE",
"334 729 CURVE SMOOTH",
"97 729 LINE",
"97 22 LINE"
);
},
{
closed = 1;
nodes = (
"266 602 LINE",
"334 602 LINE SMOOTH",
"422 602 OFFCURVE",
"462 564 OFFCURVE",
"462 500 CURVE SMOOTH",
"462 432 OFFCURVE",
"420 386 OFFCURVE",
"334 386 CURVE SMOOTH",
"266 386 LINE"
);
},
{
closed = 1;
nodes = (
"615 117 LINE",
"540 131 LINE",
"596 0 LINE"
);
},
{
closed = 1;
nodes = (
"306 -180 OFFCURVE",
"339 -175 OFFCURVE",
"362 -170 CURVE",
"357 -90 LINE SMOOTH",
"356 -74 OFFCURVE",
"351 -68 OFFCURVE",
"321 -68 CURVE SMOOTH",
"279 -68 OFFCURVE",
"266 -53 OFFCURVE",
"266 -1 CURVE SMOOTH",
"266 90 LINE",
"97 90 LINE",
"97 10 LINE SMOOTH",
"97 -164 OFFCURVE",
"235 -180 OFFCURVE",
"279 -180 CURVE SMOOTH"
);
}
);
width = 701;
}
);
unicode = 2C64;
},
{
glyphname = S;
layers = (
{
anchors = (
{
name = bottom;
position = "{258, 0}";
},
{
name = top;
position = "{258, 700}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 442, 639}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 55, 83}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"381 -8 OFFCURVE",
"465 78 OFFCURVE",
"465 196 CURVE SMOOTH",
"465 301 OFFCURVE",
"393 337 OFFCURVE",
"283 371 CURVE SMOOTH",
"179 403 OFFCURVE",
"100 441 OFFCURVE",
"100 535 CURVE SMOOTH",
"100 628 OFFCURVE",
"168 698 OFFCURVE",
"281 698 CURVE SMOOTH",
"344 698 OFFCURVE",
"388 676 OFFCURVE",
"431 634 CURVE",
"438 634 LINE",
"442 639 LINE",
"397 687 OFFCURVE",
"345 708 OFFCURVE",
"281 708 CURVE SMOOTH",
"161 708 OFFCURVE",
"89 634 OFFCURVE",
"89 536 CURVE SMOOTH",
"89 448 OFFCURVE",
"147 407 OFFCURVE",
"217 381 CURVE SMOOTH",
"321 342 OFFCURVE",
"454 330 OFFCURVE",
"454 193 CURVE SMOOTH",
"454 82 OFFCURVE",
"370 2 OFFCURVE",
"247 2 CURVE SMOOTH",
"166 2 OFFCURVE",
"105 40 OFFCURVE",
"68 89 CURVE",
"59 91 LINE",
"55 83 LINE",
"105 24 OFFCURVE",
"162 -8 OFFCURVE",
"245 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
47 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
66 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 515;
},
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = top;
position = "{287, 729}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 514, 584}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 44, 137}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"433 -8 OFFCURVE",
"534 93 OFFCURVE",
"534 234 CURVE SMOOTH",
"534 350 OFFCURVE",
"462 397 OFFCURVE",
"372 429 CURVE SMOOTH",
"297 454 OFFCURVE",
"209 470 OFFCURVE",
"209 529 CURVE SMOOTH",
"209 574 OFFCURVE",
"240 604 OFFCURVE",
"303 604 CURVE SMOOTH",
"363 604 OFFCURVE",
"404 591 OFFCURVE",
"445 574 CURVE",
"514 584 LINE",
"514 668 LINE",
"461 712 OFFCURVE",
"378 737 OFFCURVE",
"301 737 CURVE SMOOTH",
"151 737 OFFCURVE",
"51 639 OFFCURVE",
"51 520 CURVE SMOOTH",
"51 394 OFFCURVE",
"121 345 OFFCURVE",
"214 315 CURVE SMOOTH",
"290 290 OFFCURVE",
"375 279 OFFCURVE",
"375 211 CURVE SMOOTH",
"375 152 OFFCURVE",
"339 126 OFFCURVE",
"278 126 CURVE SMOOTH",
"220 126 OFFCURVE",
"157 131 OFFCURVE",
"99 163 CURVE",
"44 137 LINE",
"44 30 LINE",
"122 2 OFFCURVE",
"185 -8 OFFCURVE",
"273 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 574;
},
{
anchors = (
{
name = bottom;
position = "{271, 0}";
},
{
name = top;
position = "{277, 717}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 484, 610}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 51, 119}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"408 -8 OFFCURVE",
"500 87 OFFCURVE",
"500 214 CURVE SMOOTH",
"500 331 OFFCURVE",
"421 372 OFFCURVE",
"328 404 CURVE SMOOTH",
"244 433 OFFCURVE",
"156 451 OFFCURVE",
"156 535 CURVE SMOOTH",
"156 599 OFFCURVE",
"207 644 OFFCURVE",
"289 644 CURVE SMOOTH",
"321 644 OFFCURVE",
"365 637 OFFCURVE",
"408 625 CURVE",
"484 610 LINE",
"484 684 LINE",
"421 710 OFFCURVE",
"346 725 OFFCURVE",
"289 725 CURVE SMOOTH",
"153 725 OFFCURVE",
"66 640 OFFCURVE",
"66 522 CURVE SMOOTH",
"66 404 OFFCURVE",
"153 364 OFFCURVE",
"236 336 CURVE SMOOTH",
"321 307 OFFCURVE",
"409 294 OFFCURVE",
"409 200 CURVE SMOOTH",
"409 125 OFFCURVE",
"352 73 OFFCURVE",
"263 73 CURVE",
"214 73 OFFCURVE",
"182 80 OFFCURVE",
"128 100 CURVE",
"51 119 LINE",
"51 30 LINE",
"91 15 OFFCURVE",
"179 -8 OFFCURVE",
"255 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 28 26 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 545;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "E2878550-D138-4F75-98F3-52FC79E7DAE0";
name = "Aleo light";
paths = (
{
closed = 1;
nodes = (
"373 -8 OFFCURVE",
"472 74 OFFCURVE",
"472 207 CURVE SMOOTH",
"472 311 OFFCURVE",
"403 351 OFFCURVE",
"294 386 CURVE SMOOTH",
"188 420 OFFCURVE",
"116 449 OFFCURVE",
"116 536 CURVE SMOOTH",
"116 617 OFFCURVE",
"182 673 OFFCURVE",
"274 673 CURVE SMOOTH",
"322 673 OFFCURVE",
"366 665 OFFCURVE",
"406 648 CURVE",
"438 636 LINE",
"456 674 LINE",
"393 701 OFFCURVE",
"333 715 OFFCURVE",
"274 715 CURVE SMOOTH",
"158 715 OFFCURVE",
"69 644 OFFCURVE",
"69 533 CURVE SMOOTH",
"69 428 OFFCURVE",
"132 386 OFFCURVE",
"247 350 CURVE SMOOTH",
"354 316 OFFCURVE",
"424 293 OFFCURVE",
"424 199 CURVE SMOOTH",
"424 100 OFFCURVE",
"356 35 OFFCURVE",
"247 35 CURVE SMOOTH",
"174 35 OFFCURVE",
"141 46 OFFCURVE",
"75 76 CURVE",
"55 31 LINE",
"116 5 OFFCURVE",
"179 -8 OFFCURVE",
"245 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 55 LINE",
"101 165 LINE",
"100 181 OFFCURVE",
"93 189 OFFCURVE",
"79 189 CURVE SMOOTH",
"55 189 LINE",
"55 31 LINE"
);
},
{
closed = 1;
nodes = (
"405 650 LINE",
"410 540 LINE",
"411 524 OFFCURVE",
"418 516 OFFCURVE",
"432 516 CURVE SMOOTH",
"456 516 LINE",
"456 674 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
47 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
66 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 516;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "9B548036-F657-4F84-B701-99C297E26742";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"386 379 LINE",
"362 389 OFFCURVE",
"320 404 OFFCURVE",
"260 424 CURVE SMOOTH",
"239 431 OFFCURVE",
"220 439 OFFCURVE",
"204 449 CURVE",
"168 469 OFFCURVE",
"150 497 OFFCURVE",
"150 532 CURVE SMOOTH",
"150 564 OFFCURVE",
"162 592 OFFCURVE",
"184 612 CURVE SMOOTH",
"208 634 OFFCURVE",
"242 644 OFFCURVE",
"284 644 CURVE SMOOTH",
"318 644 OFFCURVE",
"358 637 OFFCURVE",
"402 625 CURVE",
"406 567 OFFCURVE",
"409 538 OFFCURVE",
"409 536 CURVE",
"411 524 OFFCURVE",
"418 519 OFFCURVE",
"430 519 CURVE SMOOTH",
"478 519 LINE",
"478 684 LINE",
"410 712 OFFCURVE",
"343 724 OFFCURVE",
"277 724 CURVE SMOOTH",
"211 724 OFFCURVE",
"158 704 OFFCURVE",
"117 664 CURVE SMOOTH",
"79 626 OFFCURVE",
"60 582 OFFCURVE",
"60 528 CURVE SMOOTH",
"60 471 OFFCURVE",
"77 426 OFFCURVE",
"113 394 CURVE SMOOTH",
"129 380 OFFCURVE",
"148 367 OFFCURVE",
"168 358 CURVE SMOOTH",
"188 349 OFFCURVE",
"230 336 OFFCURVE",
"294 316 CURVE SMOOTH",
"314 310 OFFCURVE",
"332 302 OFFCURVE",
"348 292 CURVE",
"384 272 OFFCURVE",
"402 242 OFFCURVE",
"402 204 CURVE SMOOTH",
"402 164 OFFCURVE",
"390 133 OFFCURVE",
"364 109 CURVE",
"352 97 OFFCURVE",
"336 88 OFFCURVE",
"318 82 CURVE SMOOTH",
"300 76 OFFCURVE",
"276 72 OFFCURVE",
"244 72 CURVE SMOOTH",
"212 72 OFFCURVE",
"172 82 OFFCURVE",
"122 100 CURVE",
"122 100 OFFCURVE",
"121 116 OFFCURVE",
"119 144 CURVE SMOOTH",
"117 172 OFFCURVE",
"115 189 OFFCURVE",
"114 193 CURVE",
"112 205 OFFCURVE",
"106 210 OFFCURVE",
"94 210 CURVE SMOOTH",
"45 210 LINE",
"45 30 LINE",
"74 20 LINE",
"94 14 OFFCURVE",
"120 7 OFFCURVE",
"154 1 CURVE SMOOTH",
"188 -5 OFFCURVE",
"221 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"326 -8 OFFCURVE",
"386 13 OFFCURVE",
"430 57 CURVE SMOOTH",
"472 99 OFFCURVE",
"492 152 OFFCURVE",
"492 218 CURVE SMOOTH",
"492 293 OFFCURVE",
"456 347 OFFCURVE",
"384 379 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 28 26 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "4F4C5BDB-E95B-4248-BEBF-0D087158C517";
name = "Aleo Bold";
paths = (
{
closed = 1;
nodes = (
"485 324 OFFCURVE",
"472 341 OFFCURVE",
"456 356 CURVE SMOOTH",
"440 371 OFFCURVE",
"422 383 OFFCURVE",
"402 392 CURVE SMOOTH",
"382 401 OFFCURVE",
"362 410 OFFCURVE",
"341 417 CURVE SMOOTH",
"320 424 OFFCURVE",
"300 431 OFFCURVE",
"280 437 CURVE SMOOTH",
"260 443 OFFCURVE",
"242 451 OFFCURVE",
"226 459 CURVE SMOOTH",
"210 467 OFFCURVE",
"198 477 OFFCURVE",
"189 488 CURVE SMOOTH",
"180 499 OFFCURVE",
"174 513 OFFCURVE",
"174 530 CURVE SMOOTH",
"174 543 OFFCURVE",
"176 556 OFFCURVE",
"181 567 CURVE SMOOTH",
"186 578 OFFCURVE",
"194 588 OFFCURVE",
"203 596 CURVE SMOOTH",
"212 604 OFFCURVE",
"224 610 OFFCURVE",
"238 615 CURVE",
"252 619 OFFCURVE",
"267 621 OFFCURVE",
"286 621 CURVE SMOOTH",
"338 621 OFFCURVE",
"378 616 OFFCURVE",
"403 605 CURVE",
"407 560 OFFCURVE",
"410 533 OFFCURVE",
"412 524 CURVE SMOOTH",
"415 512 OFFCURVE",
"422 505 OFFCURVE",
"435 505 CURVE SMOOTH",
"476 505 LINE",
"488 505 LINE",
"492 505 LINE",
"492 690 LINE",
"425 717 OFFCURVE",
"356 731 OFFCURVE",
"285 731 CURVE SMOOTH",
"247 731 OFFCURVE",
"213 725 OFFCURVE",
"184 713 CURVE SMOOTH",
"155 701 OFFCURVE",
"130 686 OFFCURVE",
"110 667 CURVE SMOOTH",
"90 648 OFFCURVE",
"74 625 OFFCURVE",
"64 600 CURVE SMOOTH",
"53 575 OFFCURVE",
"48 549 OFFCURVE",
"48 523 CURVE SMOOTH",
"48 490 OFFCURVE",
"54 462 OFFCURVE",
"63 440 CURVE SMOOTH",
"72 417 OFFCURVE",
"84 399 OFFCURVE",
"100 384 CURVE SMOOTH",
"116 369 OFFCURVE",
"134 356 OFFCURVE",
"154 347 CURVE SMOOTH",
"174 338 OFFCURVE",
"194 330 OFFCURVE",
"215 323 CURVE SMOOTH",
"235 316 OFFCURVE",
"256 311 OFFCURVE",
"276 305 CURVE SMOOTH",
"296 299 OFFCURVE",
"313 292 OFFCURVE",
"329 284 CURVE SMOOTH",
"345 276 OFFCURVE",
"358 266 OFFCURVE",
"367 254 CURVE SMOOTH",
"376 242 OFFCURVE",
"381 226 OFFCURVE",
"381 207 CURVE SMOOTH",
"381 173 OFFCURVE",
"371 147 OFFCURVE",
"350 129 CURVE SMOOTH",
"329 111 OFFCURVE",
"299 102 OFFCURVE",
"261 102 CURVE SMOOTH",
"199 102 OFFCURVE",
"153 106 OFFCURVE",
"124 115 CURVE",
"120 161 OFFCURVE",
"117 189 OFFCURVE",
"115 198 CURVE SMOOTH",
"112 210 OFFCURVE",
"105 216 OFFCURVE",
"92 216 CURVE SMOOTH",
"51 216 LINE",
"39 216 LINE",
"35 216 LINE",
"35 48 LINE",
"35 30 LINE",
"109 5 OFFCURVE",
"178 -8 OFFCURVE",
"242 -8 CURVE SMOOTH",
"257 -8 LINE SMOOTH",
"297 -8 OFFCURVE",
"332 -2 OFFCURVE",
"363 10 CURVE SMOOTH",
"394 22 OFFCURVE",
"421 39 OFFCURVE",
"442 60 CURVE SMOOTH",
"464 81 OFFCURVE",
"480 106 OFFCURVE",
"491 135 CURVE SMOOTH",
"502 164 OFFCURVE",
"508 193 OFFCURVE",
"508 226 CURVE SMOOTH",
"508 256 OFFCURVE",
"504 282 OFFCURVE",
"494 303 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 542;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "A631A58C-3705-447C-81DE-529C9ED0DE6C";
name = quadratic;
paths = (
{
closed = 1;
nodes = (
"408 675 OFFCURVE",
"329 708 OFFCURVE",
"278 708 QCURVE SMOOTH",
"233 708 OFFCURVE",
"162 680 OFFCURVE",
"114 633 OFFCURVE",
"89 572 OFFCURVE",
"89 538 QCURVE SMOOTH",
"89 504 OFFCURVE",
"110 453 OFFCURVE",
"145 417 OFFCURVE",
"191 391 OFFCURVE",
"244 371 OFFCURVE",
"299 355 OFFCURVE",
"352 335 OFFCURVE",
"399 311 OFFCURVE",
"434 276 OFFCURVE",
"454 228 OFFCURVE",
"454 195 QCURVE SMOOTH",
"454 156 OFFCURVE",
"427 86 OFFCURVE",
"374 33 OFFCURVE",
"299 2 OFFCURVE",
"250 2 QCURVE SMOOTH",
"217 2 OFFCURVE",
"166 15 OFFCURVE",
"126 34 OFFCURVE",
"98 56 OFFCURVE",
"78 76 OFFCURVE",
"66 88 OFFCURVE",
"63 88 QCURVE SMOOTH",
"61 88 OFFCURVE",
"59 87 OFFCURVE",
"57 85 QCURVE SMOOTH",
"55 83 LINE",
"73 62 OFFCURVE",
"112 28 OFFCURVE",
"159 5 OFFCURVE",
"215 -8 OFFCURVE",
"250 -8 QCURVE SMOOTH",
"301 -8 OFFCURVE",
"381 24 OFFCURVE",
"436 80 OFFCURVE",
"465 154 OFFCURVE",
"465 197 QCURVE SMOOTH",
"465 240 OFFCURVE",
"434 296 OFFCURVE",
"383 335 OFFCURVE",
"317 360 OFFCURVE",
"249 382 OFFCURVE",
"183 407 OFFCURVE",
"132 444 OFFCURVE",
"100 498 OFFCURVE",
"100 538 QCURVE SMOOTH",
"100 570 OFFCURVE",
"124 628 OFFCURVE",
"169 672 OFFCURVE",
"235 698 OFFCURVE",
"278 698 QCURVE SMOOTH",
"306 698 OFFCURVE",
"349 689 OFFCURVE",
"382 674 OFFCURVE",
"406 657 OFFCURVE",
"422 643 OFFCURVE",
"432 633 OFFCURVE",
"435 633 QCURVE SMOOTH",
"439 633 OFFCURVE",
"440 636 QCURVE SMOOTH",
"442 639 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
47 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
66 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 516;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 478, 610}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 45, 119}";
}
);
layerId = "2FE54C42-608B-4B55-8AE0-649C32A43FB1";
name = Lato;
paths = (
{
closed = 1;
nodes = (
"401.329 -8 OFFCURVE",
"494 87.257 OFFCURVE",
"494 218 CURVE SMOOTH",
"494 330.242 OFFCURVE",
"414.961 372.045 OFFCURVE",
"322 404 CURVE SMOOTH",
"237.844 432.929 OFFCURVE",
"150 452.404 OFFCURVE",
"150 533 CURVE SMOOTH",
"150 599.04 OFFCURVE",
"201.218 644 OFFCURVE",
"283 644 CURVE SMOOTH",
"334.844 644 OFFCURVE",
"410.978 590 OFFCURVE",
"432 590 CURVE SMOOTH",
"442.667 590 OFFCURVE",
"448 594 OFFCURVE",
"454 605 CURVE SMOOTH",
"478 651 LINE",
"428.667 699 OFFCURVE",
"362 725 OFFCURVE",
"282 725 CURVE SMOOTH",
"148.244 725 OFFCURVE",
"60 636.608 OFFCURVE",
"60 528 CURVE SMOOTH",
"60 407.939 OFFCURVE",
"136.99 366.034 OFFCURVE",
"231.5 335.5 CURVE SMOOTH",
"317.547 307.7 OFFCURVE",
"403 289.317 OFFCURVE",
"403 204 CURVE SMOOTH",
"403 123.806 OFFCURVE",
"345.562 73 OFFCURVE",
"257 73 CURVE SMOOTH",
"191.452 73 OFFCURVE",
"105.958 145 OFFCURVE",
"80 145 CURVE SMOOTH",
"70.667 145 OFFCURVE",
"62.333 138.667 OFFCURVE",
"57 132 CURVE",
"29 86 LINE",
"83.667 28.667 OFFCURVE",
"160.667 -8 OFFCURVE",
"254 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 28 26 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 4 3 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 442, 639}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 55, 83}";
}
);
layerId = "34116310-E709-4E6F-A9C6-D324B608C124";
name = "Jan 25 23, 15:12";
paths = (
{
closed = 1;
nodes = (
"381 -8 OFFCURVE",
"465 78 OFFCURVE",
"465 196 CURVE SMOOTH",
"465 301 OFFCURVE",
"393 337 OFFCURVE",
"283 371 CURVE SMOOTH",
"179 403 OFFCURVE",
"100 441 OFFCURVE",
"100 535 CURVE SMOOTH",
"100 628 OFFCURVE",
"168 698 OFFCURVE",
"281 698 CURVE SMOOTH",
"344 698 OFFCURVE",
"388 676 OFFCURVE",
"431 634 CURVE",
"438 634 LINE",
"442 639 LINE",
"397 687 OFFCURVE",
"345 708 OFFCURVE",
"281 708 CURVE SMOOTH",
"161 708 OFFCURVE",
"89 634 OFFCURVE",
"89 536 CURVE SMOOTH",
"89 448 OFFCURVE",
"147 407 OFFCURVE",
"217 381 CURVE SMOOTH",
"321 342 OFFCURVE",
"454 330 OFFCURVE",
"454 193 CURVE SMOOTH",
"454 82 OFFCURVE",
"370 2 OFFCURVE",
"247 2 CURVE SMOOTH",
"166 2 OFFCURVE",
"114 37 OFFCURVE",
"73 81 CURVE",
"61 85 LINE",
"58 86 LINE",
"55 83 LINE",
"105 24 OFFCURVE",
"162 -8 OFFCURVE",
"245 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
47 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
66 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 516;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 498, 584}";
},
{
name = SerifUpRightCaps;
transform = "{1, 0, 0, 1, 28, 137}";
}
);
layerId = "57566D5F-BE49-46C7-B72B-CE8C65B3C532";
name = "Jan 25 23, 15:14";
paths = (
{
closed = 1;
nodes = (
"416.653 -8 OFFCURVE",
"518 93.19 OFFCURVE",
"518 234 CURVE SMOOTH",
"518 349.688 OFFCURVE",
"445.83 397.403 OFFCURVE",
"355.5 428.5 CURVE SMOOTH",
"281.106 454.111 OFFCURVE",
"193 469.967 OFFCURVE",
"193 529 CURVE SMOOTH",
"193 574.333 OFFCURVE",
"224.333 604 OFFCURVE",
"287 604 CURVE SMOOTH",
"347.277 604 OFFCURVE",
"403 534 OFFCURVE",
"429 574 CURVE",
"463 626 LINE",
"508 659 LINE",
"455.906 708.353 OFFCURVE",
"368.547 737 OFFCURVE",
"285 737 CURVE SMOOTH",
"134.684 737 OFFCURVE",
"35 638.516 OFFCURVE",
"35 520 CURVE SMOOTH",
"35 393.015 OFFCURVE",
"105.113 345.291 OFFCURVE",
"197.5 315 CURVE SMOOTH",
"273.879 289.958 OFFCURVE",
"359 278.969 OFFCURVE",
"359 211 CURVE SMOOTH",
"359 152.333 OFFCURVE",
"323.333 126 OFFCURVE",
"262 126 CURVE SMOOTH",
"203.728 126 OFFCURVE",
"107 222 OFFCURVE",
"94 187 CURVE SMOOTH",
"63 104 LINE",
"35 30 LINE",
"94 -27 OFFCURVE",
"169.173 -8 OFFCURVE",
"257 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 17 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
61 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
leftKerningGroup = S;
note = S;
rightKerningGroup = S;
unicode = 0053;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 132, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 146, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 158, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 015A;
},
{
glyphname = Saltillo;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"78 246 OFFCURVE",
"79 247 OFFCURVE",
"79 250 CURVE SMOOTH",
"80 326 LINE",
"80 700 LINE",
"70 700 LINE",
"70 326 LINE",
"71 250 LINE SMOOTH",
"71 247 OFFCURVE",
"72 246 OFFCURVE",
"75 246 CURVE SMOOTH"
);
}
);
width = 150;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"128 205 OFFCURVE",
"136 217 OFFCURVE",
"139 238 CURVE SMOOTH",
"147 316 LINE",
"147 717 LINE",
"69 717 LINE",
"69 316 LINE",
"77 238 LINE",
"81 217 OFFCURVE",
"91 205 OFFCURVE",
"108 205 CURVE SMOOTH"
);
}
);
width = 216;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"157 173 OFFCURVE",
"170 193 OFFCURVE",
"175 229 CURVE SMOOTH",
"189 308 LINE",
"189 729 LINE",
"54 729 LINE",
"54 308 LINE",
"68 229 LINE SMOOTH",
"75 193 OFFCURVE",
"92 173 OFFCURVE",
"121 173 CURVE SMOOTH"
);
}
);
width = 243;
}
);
leftMetricsKey = quotesingle;
rightMetricsKey = quotesingle;
unicode = A78B;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 118, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 123, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 92, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 0160;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 118, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 015E;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 118, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 123, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 92, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 015C;
},
{
glyphname = Scommaaccent;
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 118, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 0218;
},
{
glyphname = Sdotbelow;
layers = (
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 515;
},
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 545;
},
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 574;
}
);
unicode = 1E62;
},
{
glyphname = Germandbls;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"521 -8 OFFCURVE",
"623 83 OFFCURVE",
"623 213 CURVE SMOOTH",
"623 346 OFFCURVE",
"515 402 OFFCURVE",
"360 402 CURVE SMOOTH",
"350 402 OFFCURVE",
"340 402 OFFCURVE",
"330 402 CURVE",
"576 688 LINE SMOOTH",
"579 692 OFFCURVE",
"580 693 OFFCURVE",
"580 699 CURVE SMOOTH",
"580 700 LINE",
"124 700 LINE",
"124 0 LINE",
"136 0 LINE",
"136 689 LINE",
"561 689 LINE",
"318 404 LINE SMOOTH",
"316 402 OFFCURVE",
"315 400 OFFCURVE",
"315 394 CURVE",
"315 392 LINE",
"359 392 LINE SMOOTH",
"526 392 OFFCURVE",
"611 329 OFFCURVE",
"611 211 CURVE SMOOTH",
"611 88 OFFCURVE",
"510 2 OFFCURVE",
"370 2 CURVE SMOOTH",
"298 2 OFFCURVE",
"248 30 OFFCURVE",
"239 30 CURVE SMOOTH",
"238 30 OFFCURVE",
"237 29 OFFCURVE",
"236 27 CURVE SMOOTH",
"233 22 LINE",
"270 5 OFFCURVE",
"318 -8 OFFCURVE",
"370 -8 CURVE"
);
}
);
width = 663;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"553 -8 OFFCURVE",
"680 83 OFFCURVE",
"680 231 CURVE SMOOTH",
"680 363 OFFCURVE",
"584 421 OFFCURVE",
"442 426 CURVE SMOOTH",
"441 426 OFFCURVE",
"439 426 OFFCURVE",
"438 426 CURVE",
"628 644 LINE SMOOTH",
"640 657 OFFCURVE",
"643 669 OFFCURVE",
"643 681 CURVE SMOOTH",
"643 717 LINE",
"105 717 LINE",
"105 0 LINE",
"202 0 LINE",
"202 638 LINE",
"519 638 LINE",
"338 429 LINE SMOOTH",
"329 418 OFFCURVE",
"324 408 OFFCURVE",
"324 397 CURVE SMOOTH",
"324 356 LINE",
"394 356 LINE SMOOTH",
"519 356 OFFCURVE",
"581 312 OFFCURVE",
"581 227 CURVE SMOOTH",
"581 136 OFFCURVE",
"510 75 OFFCURVE",
"401 75 CURVE SMOOTH",
"371 75 OFFCURVE",
"321 91 OFFCURVE",
"308 91 CURVE SMOOTH",
"297 91 OFFCURVE",
"289 88 OFFCURVE",
"286 76 CURVE SMOOTH",
"270 21 LINE",
"311 2 OFFCURVE",
"355 -8 OFFCURVE",
"402 -8 CURVE"
);
}
);
width = 710;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"597 -7 OFFCURVE",
"736 85 OFFCURVE",
"736 246 CURVE SMOOTH",
"736 363 OFFCURVE",
"660 431 OFFCURVE",
"534 443 CURVE SMOOTH",
"534 443 OFFCURVE",
"533 443 OFFCURVE",
"533 443 CURVE",
"680 610 LINE SMOOTH",
"699 632 OFFCURVE",
"704 651 OFFCURVE",
"704 668 CURVE SMOOTH",
"704 729 LINE",
"97 729 LINE",
"97 0 LINE",
"267 0 LINE",
"267 599 LINE",
"496 599 LINE",
"363 449 LINE SMOOTH",
"347 431 OFFCURVE",
"340 414 OFFCURVE",
"340 399 CURVE SMOOTH",
"340 328 LINE",
"432 328 LINE SMOOTH",
"519 328 OFFCURVE",
"563 301 OFFCURVE",
"563 239 CURVE SMOOTH",
"563 172 OFFCURVE",
"521 130 OFFCURVE",
"436 130 CURVE SMOOTH",
"424 130 OFFCURVE",
"413 131 OFFCURVE",
"404 134 CURVE SMOOTH",
"374 143 OFFCURVE",
"344 140 OFFCURVE",
"336 112 CURVE SMOOTH",
"309 20 LINE",
"353 0 OFFCURVE",
"392 -7 OFFCURVE",
"437 -7 CURVE"
);
}
);
width = 760;
}
);
leftKerningGroup = B;
leftMetricsKey = B;
rightMetricsKey = B;
unicode = 1E9E;
},
{
glyphname = Schwa;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"423 -5 OFFCURVE",
"498 31 OFFCURVE",
"550 91 CURVE SMOOTH",
"602 151 OFFCURVE",
"630 237 OFFCURVE",
"630 340 CURVE SMOOTH",
"630 457 OFFCURVE",
"601 548 OFFCURVE",
"548 611.5 CURVE SMOOTH",
"495 675 OFFCURVE",
"417 709 OFFCURVE",
"324 709 CURVE SMOOTH",
"216 709 OFFCURVE",
"139 672 OFFCURVE",
"83 619 CURVE",
"86 616 LINE SMOOTH",
"87 615 OFFCURVE",
"89 614 OFFCURVE",
"90 614 CURVE SMOOTH",
"92 614 OFFCURVE",
"94 615 OFFCURVE",
"96 617 CURVE SMOOTH",
"152 668 OFFCURVE",
"227 699 OFFCURVE",
"324 699 CURVE SMOOTH",
"411 699 OFFCURVE",
"484 666 OFFCURVE",
"536 605.5 CURVE SMOOTH",
"588 545 OFFCURVE",
"618 454 OFFCURVE",
"618 340 CURVE SMOOTH",
"618 327 OFFCURVE",
"617 314 OFFCURVE",
"616 301 CURVE",
"72 301 LINE SMOOTH",
"68 301 OFFCURVE",
"63 298 OFFCURVE",
"63 294 CURVE SMOOTH",
"63 198 OFFCURVE",
"93 124 OFFCURVE",
"140.5 73 CURVE SMOOTH",
"188 22 OFFCURVE",
"254 -5 OFFCURVE",
"327 -5 CURVE"
);
},
{
closed = 1;
nodes = (
"176 5 OFFCURVE",
"74 125 OFFCURVE",
"74 290 CURVE",
"615 290 LINE",
"599 120 OFFCURVE",
"495 5 OFFCURVE",
"327 5 CURVE"
);
}
);
width = 700;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"444 -7 OFFCURVE",
"529 31 OFFCURVE",
"586 94.5 CURVE SMOOTH",
"643 158 OFFCURVE",
"674 245 OFFCURVE",
"674 346 CURVE SMOOTH",
"674 468 OFFCURVE",
"638 564 OFFCURVE",
"578 628.5 CURVE SMOOTH",
"518 693 OFFCURVE",
"432 727 OFFCURVE",
"335 727 CURVE SMOOTH",
"229 727 OFFCURVE",
"126 695 OFFCURVE",
"56 617 CURVE",
"85 581 LINE SMOOTH",
"90 573 OFFCURVE",
"99 569 OFFCURVE",
"108 569 CURVE SMOOTH",
"122 569 OFFCURVE",
"156 592 OFFCURVE",
"181 605 CURVE SMOOTH",
"215 624 OFFCURVE",
"267 641 OFFCURVE",
"324 641 CURVE SMOOTH",
"399 641 OFFCURVE",
"461 617 OFFCURVE",
"504.5 570 CURVE SMOOTH",
"537 535 OFFCURVE",
"560 484 OFFCURVE",
"570 420 CURVE SMOOTH",
"573 401 OFFCURVE",
"574 381 OFFCURVE",
"575 360 CURVE",
"74 360 LINE SMOOTH",
"50 360 OFFCURVE",
"44 346 OFFCURVE",
"44 311 CURVE SMOOTH",
"44 206 OFFCURVE",
"78 128 OFFCURVE",
"129 76.5 CURVE SMOOTH",
"184 21 OFFCURVE",
"258 -7 OFFCURVE",
"341 -7 CURVE"
);
},
{
closed = 1;
nodes = (
"218 74 OFFCURVE",
"138 164 OFFCURVE",
"138 292 CURVE",
"571 292 LINE",
"555 160 OFFCURVE",
"473 74 OFFCURVE",
"342 74 CURVE"
);
}
);
width = 722;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"464 -9 OFFCURVE",
"554 33 OFFCURVE",
"616 98 CURVE SMOOTH",
"678 163 OFFCURVE",
"712 252 OFFCURVE",
"712 358 CURVE SMOOTH",
"712 474 OFFCURVE",
"671 575 OFFCURVE",
"604 641 CURVE SMOOTH",
"542 703 OFFCURVE",
"452 740 OFFCURVE",
"337 740 CURVE SMOOTH",
"216 740 OFFCURVE",
"106 699 OFFCURVE",
"32 615 CURVE",
"84 554 LINE SMOOTH",
"95 541 OFFCURVE",
"106 535 OFFCURVE",
"123 535 CURVE SMOOTH",
"145 535 OFFCURVE",
"169 546 OFFCURVE",
"195 558 CURVE SMOOTH",
"227 573 OFFCURVE",
"272 598 OFFCURVE",
"331 598 CURVE SMOOTH",
"373 598 OFFCURVE",
"421 585 OFFCURVE",
"459 558 CURVE SMOOTH",
"496 532 OFFCURVE",
"518 496 OFFCURVE",
"529 445 CURVE SMOOTH",
"532 432 OFFCURVE",
"534 415 OFFCURVE",
"535 404 CURVE",
"76 404 LINE SMOOTH",
"36 404 OFFCURVE",
"28 384 OFFCURVE",
"28 329 CURVE SMOOTH",
"28 222 OFFCURVE",
"59 138 OFFCURVE",
"119 79 CURVE SMOOTH",
"180 19 OFFCURVE",
"261 -9 OFFCURVE",
"354 -9 CURVE"
);
},
{
closed = 1;
nodes = (
"249 127 OFFCURVE",
"192 195 OFFCURVE",
"192 293 CURVE",
"534 293 LINE",
"518 191 OFFCURVE",
"458 127 OFFCURVE",
"355 127 CURVE"
);
}
);
width = 750;
}
);
unicode = 018F;
},
{
glyphname = T;
layers = (
{
anchors = (
{
name = bottom;
position = "{290, 0}";
},
{
name = center;
position = "{290, 350}";
},
{
name = top;
position = "{290, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 285, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 297, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 560, 689}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 20, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"297 0 LINE",
"297 689 LINE",
"560 689 LINE",
"560 700 LINE",
"20 700 LINE",
"20 689 LINE",
"285 689 LINE",
"285 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 3 4 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
anchors = (
{
name = bottom;
position = "{302, 0}";
},
{
name = center;
position = "{302, 365}";
},
{
name = top;
position = "{302, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 217, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 386, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 591, 595}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 12, 595}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"386 0 LINE",
"386 595 LINE",
"591 595 LINE",
"591 729 LINE",
"12 729 LINE",
"12 595 LINE",
"217 595 LINE",
"217 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 7 0 7 6 5 4 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 0 3 0 0 36 4 1 3 3 11 31 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 53 4 1 3 0 0 3 0 0 35 4 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 0 2 42 0 1 0 1 53 4 1 3 2 0 3 0 2 35 4 1 3 3 0 0 0 36 0 0 3 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
anchors = (
{
name = bottom;
position = "{300, 0}";
},
{
name = center;
position = "{300, 359}";
},
{
name = top;
position = "{300, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 252, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 349, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 580, 635}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 19, 635}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"349 0 LINE",
"349 635 LINE",
"580 635 LINE",
"580 717 LINE",
"19 717 LINE",
"19 635 LINE",
"252 635 LINE",
"252 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 7 0 7 6 5 4 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 0 3 0 0 36 4 1 3 3 11 31 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 2 1 0 1 3 0 0 0 38 0 1 1 15 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 53 4 1 3 0 0 3 0 0 35 4 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 0 2 42 0 1 0 1 53 4 1 3 2 0 3 0 2 35 4 1 3 3 0 0 0 36 0 0 3 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "A4379A3D-6612-43F0-B085-4B2553ED5013";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"20 708 LINE",
"20 562 LINE",
"45 562 LINE SMOOTH",
"59 562 OFFCURVE",
"65 570 OFFCURVE",
"66 586 CURVE",
"70 665 LINE",
"277 665 LINE",
"277 40 LINE",
"213 38 LINE",
"200 37 OFFCURVE",
"193 31 OFFCURVE",
"193 20 CURVE SMOOTH",
"193 0 LINE",
"413 0 LINE",
"413 20 LINE SMOOTH",
"413 31 OFFCURVE",
"406 37 OFFCURVE",
"393 38 CURVE",
"328 40 LINE",
"328 665 LINE",
"534 665 LINE",
"538 586 LINE",
"539 570 OFFCURVE",
"546 562 OFFCURVE",
"560 562 CURVE SMOOTH",
"584 562 LINE",
"584 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 3 4 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "FF25430E-28F0-485C-B68E-BEA26FEA19F1";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"593 716 LINE",
"559 716 LINE",
"19 716 LINE",
"19 558 LINE",
"67 558 LINE SMOOTH",
"79 558 OFFCURVE",
"85 561 OFFCURVE",
"87 568 CURVE SMOOTH",
"89 575 OFFCURVE",
"92 597 OFFCURVE",
"96 635 CURVE",
"265 635 LINE",
"265 73 LINE",
"239 68 OFFCURVE",
"221 64 OFFCURVE",
"210 62 CURVE SMOOTH",
"199 60 OFFCURVE",
"193 52 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 0 LINE",
"435 0 LINE",
"435 42 LINE SMOOTH",
"435 52 OFFCURVE",
"432 58 OFFCURVE",
"425 60 CURVE SMOOTH",
"418 62 OFFCURVE",
"401 65 OFFCURVE",
"375 70 CURVE",
"367 72 OFFCURVE",
"363 72 OFFCURVE",
"363 72 CURVE",
"363 634 LINE",
"531 634 LINE",
"535 596 OFFCURVE",
"539 575 OFFCURVE",
"541 568 CURVE SMOOTH",
"543 561 OFFCURVE",
"548 558 OFFCURVE",
"560 558 CURVE SMOOTH",
"609 558 LINE",
"609 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 7 0 7 6 5 4 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 0 3 0 0 36 4 1 3 3 11 31 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 2 1 0 1 3 0 0 0 38 0 1 1 15 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 53 4 1 3 0 0 3 0 0 35 4 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 0 2 42 0 1 0 1 53 4 1 3 2 0 3 0 2 35 4 1 3 3 0 0 0 36 0 0 3 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "AB6D3CEC-511D-4691-86E7-EE5DB1F5A911";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"597 723 LINE",
"597 723 LINE",
"28 723 LINE",
"27 723 LINE",
"12 723 LINE",
"12 552 LINE",
"16 552 LINE",
"28 552 LINE",
"70 552 LINE SMOOTH",
"83 552 OFFCURVE",
"90 559 OFFCURVE",
"93 571 CURVE",
"94 577 OFFCURVE",
"96 591 OFFCURVE",
"98 613 CURVE",
"245 613 LINE",
"245 99 LINE",
"233 97 OFFCURVE",
"223 95 OFFCURVE",
"216 94 CURVE SMOOTH",
"209 93 OFFCURVE",
"204 91 OFFCURVE",
"201 91 CURVE SMOOTH",
"198 91 OFFCURVE",
"196 90 OFFCURVE",
"195 90 CURVE",
"178 86 OFFCURVE",
"170 76 OFFCURVE",
"170 59 CURVE SMOOTH",
"170 0 LINE",
"245 0 LINE",
"380 0 LINE",
"456 0 LINE",
"456 59 LINE SMOOTH",
"456 76 OFFCURVE",
"447 86 OFFCURVE",
"430 90 CURVE",
"429 90 OFFCURVE",
"427 91 OFFCURVE",
"424 91 CURVE SMOOTH",
"421 91 OFFCURVE",
"416 93 OFFCURVE",
"409 94 CURVE SMOOTH",
"402 95 OFFCURVE",
"392 97 OFFCURVE",
"380 99 CURVE",
"380 612 LINE",
"527 612 LINE",
"529 590 OFFCURVE",
"531 577 OFFCURVE",
"532 571 CURVE",
"535 559 OFFCURVE",
"543 552 OFFCURVE",
"556 552 CURVE SMOOTH",
"597 552 LINE",
"609 552 LINE",
"613 552 LINE",
"613 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 7 0 7 6 5 4 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 0 3 0 0 36 4 1 3 3 11 31 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 53 4 1 3 0 0 3 0 0 35 4 1 3 3 0 0 0 36 2 1 0 3 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 0 2 42 0 1 0 1 53 4 1 3 2 0 3 0 2 35 4 1 3 3 0 0 0 36 0 0 3 0 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = Tbar;
layers = (
{
components = (
{
name = T;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 150, -290}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 149, -286}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 137, -284}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 150, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 146, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 107, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 0164;
},
{
glyphname = Tcedilla;
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 150, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 137, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 0162;
},
{
glyphname = Tcircumflexbelow;
layers = (
{
components = (
{
name = T;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 179, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 1E70;
},
{
glyphname = Tcommaaccent;
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 150, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 137, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 021A;
},
{
glyphname = Tdotbelow;
layers = (
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 252, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 1E6C;
},
{
glyphname = Thook;
layers = (
{
anchors = (
{
name = bottom;
position = "{349, 0}";
},
{
name = center;
position = "{350, 350}";
},
{
name = top;
position = "{349, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 344, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 356, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 619, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"356 0 LINE",
"356 689 LINE",
"619 689 LINE",
"619 700 LINE",
"206 700 LINE SMOOTH",
"101.981 700 OFFCURVE",
"36 653.571 OFFCURVE",
"36 568 CURVE SMOOTH",
"36 546.667 OFFCURVE",
"41 525 OFFCURVE",
"49 501 CURVE",
"54 502 LINE SMOOTH",
"59.333 503.333 OFFCURVE",
"57.333 506.667 OFFCURVE",
"56 512 CURVE SMOOTH",
"50.667 530.667 OFFCURVE",
"47 550.667 OFFCURVE",
"47 568 CURVE SMOOTH",
"47 644 OFFCURVE",
"100.667 689 OFFCURVE",
"206 689 CURVE SMOOTH",
"344 689 LINE",
"344 0 LINE"
);
}
);
width = 639;
},
{
anchors = (
{
name = bottom;
position = "{373, 0}";
},
{
name = center;
position = "{373, 359}";
},
{
name = top;
position = "{373, 717}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 422, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 653, 635}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 635 LINE",
"653 635 LINE",
"653 717 LINE",
"228 717 LINE SMOOTH",
"102.523 717 OFFCURVE",
"24 655.262 OFFCURVE",
"24 550 CURVE SMOOTH",
"24 516.667 OFFCURVE",
"30 490.667 OFFCURVE",
"42 460 CURVE",
"97 472 LINE SMOOTH",
"115.667 476 OFFCURVE",
"117 490.667 OFFCURVE",
"113 504 CURVE SMOOTH",
"110.333 514.667 OFFCURVE",
"106 532 OFFCURVE",
"106 548 CURVE SMOOTH",
"106 610.823 OFFCURVE",
"144.769 635 OFFCURVE",
"228 635 CURVE SMOOTH",
"325 635 LINE",
"325 0 LINE"
);
}
);
width = 672;
},
{
anchors = (
{
name = bottom;
position = "{405, 0}";
},
{
name = center;
position = "{405, 365}";
},
{
name = top;
position = "{405, 729}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 320, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 489, 0}";
},
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 694, 595}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"489 0 LINE",
"489 595 LINE",
"694 595 LINE",
"694 729 LINE",
"258 729 LINE SMOOTH",
"114.423 729 OFFCURVE",
"24 656.864 OFFCURVE",
"24 536 CURVE SMOOTH",
"24 494.667 OFFCURVE",
"32.667 465 OFFCURVE",
"46 429 CURVE",
"145 450 LINE SMOOTH",
"171.095 457.117 OFFCURVE",
"179.148 475.481 OFFCURVE",
"173 497 CURVE SMOOTH",
"171.667 502.333 OFFCURVE",
"167 517 OFFCURVE",
"167 533 CURVE SMOOTH",
"167 582.278 OFFCURVE",
"189.17 595 OFFCURVE",
"258 595 CURVE SMOOTH",
"320 595 LINE",
"320 0 LINE"
);
}
);
width = 706;
}
);
unicode = 01AC;
},
{
glyphname = Tlinebelow;
layers = (
{
components = (
{
name = T;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 150, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 580;
},
{
components = (
{
name = T;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 599;
},
{
components = (
{
name = T;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 137, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 603;
}
);
unicode = 1E6E;
},
{
glyphname = Tretroflexhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{290, 0}";
},
{
name = center;
position = "{290, 350}";
},
{
name = top;
position = "{290, 700}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 560, 689}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 20, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"297 0 LINE",
"297 689 LINE",
"560 689 LINE",
"560 700 LINE",
"20 700 LINE",
"20 689 LINE",
"285 689 LINE",
"285 0 LINE"
);
},
{
closed = 1;
nodes = (
"401 -188 OFFCURVE",
"416 -182 OFFCURVE",
"425 -177 CURVE",
"422 -172 LINE SMOOTH",
"418 -165 OFFCURVE",
"414 -178 OFFCURVE",
"380 -178 CURVE SMOOTH",
"311 -178 OFFCURVE",
"297 -119 OFFCURVE",
"297 -82 CURVE SMOOTH",
"297 46 LINE",
"285 46 LINE",
"285 -83 LINE SMOOTH",
"285 -174 OFFCURVE",
"353 -188 OFFCURVE",
"383 -188 CURVE SMOOTH"
);
}
);
width = 580;
},
{
anchors = (
{
name = bottom;
position = "{300, 0}";
},
{
name = center;
position = "{300, 359}";
},
{
name = top;
position = "{300, 717}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 580, 635}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 19, 635}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"349 0 LINE",
"349 635 LINE",
"580 635 LINE",
"580 717 LINE",
"19 717 LINE",
"19 635 LINE",
"252 635 LINE",
"252 0 LINE"
);
},
{
closed = 1;
nodes = (
"431 -182 OFFCURVE",
"446 -177 OFFCURVE",
"460 -172 CURVE",
"456 -129 LINE SMOOTH",
"454 -107 OFFCURVE",
"449 -115 OFFCURVE",
"415 -115 CURVE SMOOTH",
"370 -115 OFFCURVE",
"349 -101 OFFCURVE",
"349 -28 CURVE SMOOTH",
"349 50 LINE",
"252 50 LINE",
"252 -31 LINE SMOOTH",
"252 -140 OFFCURVE",
"318 -182 OFFCURVE",
"403 -182 CURVE SMOOTH"
);
}
);
width = 599;
},
{
anchors = (
{
name = bottom;
position = "{302, 0}";
},
{
name = center;
position = "{302, 365}";
},
{
name = top;
position = "{302, 729}";
}
);
components = (
{
name = SerifUpRightCaps;
transform = "{-1, 0, 0, -1, 591, 595}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 12, 595}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"386 0 LINE",
"386 595 LINE",
"591 595 LINE",
"591 729 LINE",
"12 729 LINE",
"12 595 LINE",
"217 595 LINE",
"217 25 LINE"
);
},
{
closed = 1;
nodes = (
"426 -180 OFFCURVE",
"459 -175 OFFCURVE",
"482 -170 CURVE",
"477 -90 LINE SMOOTH",
"476 -74 OFFCURVE",
"471 -68 OFFCURVE",
"441 -68 CURVE SMOOTH",
"399 -68 OFFCURVE",
"386 -53 OFFCURVE",
"386 -1 CURVE SMOOTH",
"386 90 LINE",
"217 90 LINE",
"217 10 LINE SMOOTH",
"217 -164 OFFCURVE",
"355 -180 OFFCURVE",
"399 -180 CURVE SMOOTH"
);
}
);
width = 603;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 01AE;
},
{
glyphname = U;
layers = (
{
anchors = (
{
name = bottom;
position = "{361, 0}";
},
{
name = ogonek;
position = "{359, -6}";
},
{
name = top;
position = "{361, 700}";
},
{
name = topright;
position = "{675, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 108, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 120, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 602, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 614, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"515 -9 OFFCURVE",
"614 112 OFFCURVE",
"614 260 CURVE SMOOTH",
"614 700 LINE",
"602 700 LINE",
"602 260 LINE SMOOTH",
"602 116 OFFCURVE",
"510 2 OFFCURVE",
"361 2 CURVE SMOOTH",
"213 2 OFFCURVE",
"120 116 OFFCURVE",
"120 261 CURVE SMOOTH",
"120 700 LINE",
"108 700 LINE",
"108 260 LINE SMOOTH",
"108 111 OFFCURVE",
"207 -9 OFFCURVE",
"361 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
21 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 1 13 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 722;
},
{
anchors = (
{
name = bottom;
position = "{409, 0}";
},
{
name = ogonek;
position = "{409, 0}";
},
{
name = top;
position = "{409, 729}";
},
{
name = topright;
position = "{752, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 126, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 265, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 583, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 722, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"597 -8 OFFCURVE",
"722 111 OFFCURVE",
"722 297 CURVE SMOOTH",
"722 729 LINE",
"553 729 LINE",
"553 297 LINE SMOOTH",
"553 196 OFFCURVE",
"502 134 OFFCURVE",
"409 134 CURVE SMOOTH",
"318 134 OFFCURVE",
"265 197 OFFCURVE",
"265 298 CURVE SMOOTH",
"265 729 LINE",
"96 729 LINE",
"96 297 LINE SMOOTH",
"96 114 OFFCURVE",
"218 -8 OFFCURVE",
"409 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 20 19 14 12 7 6 0 25 1 25 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 1 11 31 4 1 0 0 2 1 0 36 0 2 2 18 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 1 52 0 3 0 3 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 818;
},
{
anchors = (
{
name = bottom;
position = "{380, 0}";
},
{
name = ogonek;
position = "{384, 0}";
},
{
name = top;
position = "{380, 717}";
},
{
name = topright;
position = "{714, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 95, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 193, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 569, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 667, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"551 -9 OFFCURVE",
"666 111 OFFCURVE",
"666 281 CURVE SMOOTH",
"666 717 LINE",
"569 717 LINE",
"569 281 LINE SMOOTH",
"569 161 OFFCURVE",
"500 77 OFFCURVE",
"381 77 CURVE SMOOTH",
"261 77 OFFCURVE",
"192 163 OFFCURVE",
"192 282 CURVE SMOOTH",
"192 717 LINE",
"95 717 LINE",
"95 281 LINE SMOOTH",
"95 115 OFFCURVE",
"207 -9 OFFCURVE",
"381 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 20 19 14 12 7 6 0 25 1 25 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 1 11 31 4 1 0 0 2 1 0 36 0 2 2 18 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 0 1 52 4 1 0 0 2 1 0 36 0 2 2 21 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 1 52 0 3 0 3 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "CAB52046-7C75-4EF0-864E-1DEA94D290C0";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"498 708 LINE",
"498 689 LINE SMOOTH",
"498 678 OFFCURVE",
"505 672 OFFCURVE",
"518 671 CURVE",
"595 669 LINE",
"595 270 LINE SMOOTH",
"595 138 OFFCURVE",
"513 36 OFFCURVE",
"378 36 CURVE SMOOTH",
"244 36 OFFCURVE",
"161 137 OFFCURVE",
"161 270 CURVE SMOOTH",
"161 669 LINE",
"238 671 LINE",
"251 672 OFFCURVE",
"258 678 OFFCURVE",
"258 689 CURVE SMOOTH",
"258 708 LINE",
"26 708 LINE",
"26 689 LINE SMOOTH",
"26 678 OFFCURVE",
"32 672 OFFCURVE",
"45 671 CURVE",
"110 669 LINE",
"110 270 LINE SMOOTH",
"110 110 OFFCURVE",
"213 -8 OFFCURVE",
"378 -8 CURVE SMOOTH",
"540 -8 OFFCURVE",
"646 110 OFFCURVE",
"646 270 CURVE SMOOTH",
"646 669 LINE",
"710 671 LINE",
"723 672 OFFCURVE",
"730 678 OFFCURVE",
"730 689 CURVE SMOOTH",
"730 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
21 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 1 13 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 736;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "23FEA0B7-766F-430E-AD39-5DC8EE2A13EA";
name = "Jan 15 23, 17:47";
paths = (
{
closed = 1;
nodes = (
"666 716 LINE",
"570 716 LINE",
"488 716 LINE",
"488 674 LINE SMOOTH",
"488 664 OFFCURVE",
"494 657 OFFCURVE",
"504 655 CURVE SMOOTH",
"509 654 OFFCURVE",
"531 650 OFFCURVE",
"570 644 CURVE",
"570 281 LINE SMOOTH",
"570 220 OFFCURVE",
"553 171 OFFCURVE",
"520 134 CURVE SMOOTH",
"486 96 OFFCURVE",
"439 77 OFFCURVE",
"381 77 CURVE SMOOTH",
"323 77 OFFCURVE",
"276 96 OFFCURVE",
"242 134 CURVE SMOOTH",
"208 171 OFFCURVE",
"192 221 OFFCURVE",
"192 282 CURVE SMOOTH",
"192 644 LINE",
"232 650 OFFCURVE",
"253 654 OFFCURVE",
"258 655 CURVE SMOOTH",
"268 657 OFFCURVE",
"274 664 OFFCURVE",
"274 674 CURVE SMOOTH",
"274 716 LINE",
"23 716 LINE",
"23 674 LINE SMOOTH",
"23 664 OFFCURVE",
"28 657 OFFCURVE",
"38 655 CURVE",
"44 653 OFFCURVE",
"63 649 OFFCURVE",
"95 643 CURVE",
"95 280 LINE SMOOTH",
"95 196 OFFCURVE",
"121 128 OFFCURVE",
"172 74 CURVE SMOOTH",
"224 19 OFFCURVE",
"294 -9 OFFCURVE",
"380 -9 CURVE SMOOTH",
"467 -9 OFFCURVE",
"537 19 OFFCURVE",
"589 74 CURVE SMOOTH",
"639 128 OFFCURVE",
"665 196 OFFCURVE",
"665 280 CURVE SMOOTH",
"665 643 LINE",
"722 654 LINE SMOOTH",
"732 656 OFFCURVE",
"738 663 OFFCURVE",
"738 673 CURVE SMOOTH",
"738 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 20 19 14 12 7 6 0 25 1 25 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 1 11 31 4 1 0 0 2 1 0 36 0 2 2 18 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 0 1 52 4 1 0 0 2 1 0 36 0 2 2 21 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 1 52 0 3 0 3 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 730;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "06CD0FE4-C2A9-44D7-9F6D-DBEC555F20C3";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"694 723 LINE",
"560 723 LINE",
"480 723 LINE",
"480 664 LINE SMOOTH",
"480 647 OFFCURVE",
"488 637 OFFCURVE",
"505 633 CURVE",
"506 633 OFFCURVE",
"509 632 OFFCURVE",
"512 632 CURVE SMOOTH",
"515 632 OFFCURVE",
"521 630 OFFCURVE",
"529 629 CURVE SMOOTH",
"537 628 OFFCURVE",
"548 626 OFFCURVE",
"560 624 CURVE",
"560 290 LINE SMOOTH",
"560 262 OFFCURVE",
"555 237 OFFCURVE",
"548 215 CURVE",
"540 193 OFFCURVE",
"530 174 OFFCURVE",
"516 158 CURVE SMOOTH",
"502 142 OFFCURVE",
"484 131 OFFCURVE",
"464 122 CURVE SMOOTH",
"444 113 OFFCURVE",
"420 109 OFFCURVE",
"394 109 CURVE SMOOTH",
"368 109 OFFCURVE",
"344 113 OFFCURVE",
"324 122 CURVE SMOOTH",
"304 131 OFFCURVE",
"287 142 OFFCURVE",
"273 158 CURVE SMOOTH",
"259 174 OFFCURVE",
"247 194 OFFCURVE",
"240 216 CURVE",
"232 238 OFFCURVE",
"229 263 OFFCURVE",
"229 291 CURVE SMOOTH",
"229 624 LINE",
"241 626 OFFCURVE",
"252 628 OFFCURVE",
"260 629 CURVE SMOOTH",
"268 630 OFFCURVE",
"274 632 OFFCURVE",
"277 632 CURVE SMOOTH",
"280 632 OFFCURVE",
"283 633 OFFCURVE",
"284 633 CURVE",
"301 637 OFFCURVE",
"309 647 OFFCURVE",
"309 664 CURVE SMOOTH",
"309 723 LINE",
"229 723 LINE",
"95 723 LINE",
"19 723 LINE",
"19 664 LINE SMOOTH",
"19 647 OFFCURVE",
"27 637 OFFCURVE",
"44 633 CURVE",
"45 633 OFFCURVE",
"47 632 OFFCURVE",
"50 632 CURVE SMOOTH",
"53 632 OFFCURVE",
"58 630 OFFCURVE",
"65 629 CURVE SMOOTH",
"72 628 OFFCURVE",
"83 626 OFFCURVE",
"95 624 CURVE",
"95 290 LINE SMOOTH",
"95 247 OFFCURVE",
"101 207 OFFCURVE",
"115 171 CURVE SMOOTH",
"129 135 OFFCURVE",
"149 103 OFFCURVE",
"175 76 CURVE SMOOTH",
"201 50 OFFCURVE",
"232 29 OFFCURVE",
"269 14 CURVE SMOOTH",
"306 -1 OFFCURVE",
"348 -8 OFFCURVE",
"394 -8 CURVE SMOOTH",
"440 -8 OFFCURVE",
"482 -1 OFFCURVE",
"519 14 CURVE SMOOTH",
"556 29 OFFCURVE",
"588 50 OFFCURVE",
"614 76 CURVE SMOOTH",
"640 103 OFFCURVE",
"659 135 OFFCURVE",
"673 171 CURVE SMOOTH",
"687 207 OFFCURVE",
"694 247 OFFCURVE",
"694 290 CURVE SMOOTH",
"694 624 LINE",
"706 626 OFFCURVE",
"717 628 OFFCURVE",
"724 629 CURVE SMOOTH",
"731 630 OFFCURVE",
"736 632 OFFCURVE",
"739 632 CURVE SMOOTH",
"742 632 OFFCURVE",
"744 633 OFFCURVE",
"745 633 CURVE",
"762 637 OFFCURVE",
"770 647 OFFCURVE",
"770 664 CURVE SMOOTH",
"770 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 20 19 14 12 7 6 0 25 1 25 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 1 11 31 4 1 0 0 2 1 0 36 0 2 2 18 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 0 1 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 1 52 0 3 0 3 52 4 1 0 2 2 0 1 0 35 4 1 0 0 2 1 0 36 0 2 0 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 726;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = J;
unicode = 0055;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 235, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 249, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 280, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 00DA;
},
{
glyphname = Ubar;
layers = (
{
components = (
{
name = U;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"696 354 LINE",
"696 365 LINE",
"26 365 LINE",
"26 354 LINE"
);
}
);
width = 722;
},
{
components = (
{
name = U;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"739 322 LINE",
"739 396 LINE",
"23 396 LINE",
"23 322 LINE"
);
}
);
width = 762;
},
{
components = (
{
name = U;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"799 305 LINE",
"799 426 LINE",
"19 426 LINE",
"19 305 LINE"
);
}
);
width = 818;
}
);
unicode = 0244;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 244, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 016C;
},
{
glyphname = Ucaron;
layers = (
{
components = (
{
name = U;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 214, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 01D3;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 214, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 00DB;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 214, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 00DC;
},
{
glyphname = Udieresisacute;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 221, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 235, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 226, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 249, 361}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 214, 210}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 280, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 01D7;
},
{
glyphname = Udieresiscaron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 221, 210}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 221, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 226, 210}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 226, 361}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 214, 210}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 214, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 01D9;
},
{
glyphname = Udieresisgrave;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 221, 210}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 200, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 226, 210}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 193, 361}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 214, 210}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 188, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 01DB;
},
{
glyphname = Udieresismacron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 221, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 221, 357}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 226, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 233, 361}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 214, 210}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 244, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 01D5;
},
{
glyphname = Udotbelow;
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 1EE4;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 200, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 193, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 188, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 00D9;
},
{
glyphname = Uhookabove;
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 162, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 184, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 216, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
layers = (
{
anchors = (
{
name = bottom;
position = "{361, 0}";
},
{
name = ogonek;
position = "{359, -6}";
},
{
name = top;
position = "{361, 700}";
},
{
name = topright;
position = "{675, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 108, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 120, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 602, 700}";
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 466, 245}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"515 -9 OFFCURVE",
"614 112 OFFCURVE",
"614 260 CURVE SMOOTH",
"614 700 LINE",
"602 700 LINE",
"602 260 LINE SMOOTH",
"602 116 OFFCURVE",
"510 2 OFFCURVE",
"361 2 CURVE SMOOTH",
"213 2 OFFCURVE",
"120 116 OFFCURVE",
"120 261 CURVE SMOOTH",
"120 700 LINE",
"108 700 LINE",
"108 260 LINE SMOOTH",
"108 111 OFFCURVE",
"207 -9 OFFCURVE",
"361 -9 CURVE SMOOTH"
);
}
);
width = 722;
},
{
anchors = (
{
name = bottom;
position = "{380, 0}";
},
{
name = ogonek;
position = "{384, 0}";
},
{
name = top;
position = "{380, 717}";
},
{
name = topright;
position = "{714, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 95, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 193, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 569, 717}";
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 503, 250}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"551 -9 OFFCURVE",
"666 111 OFFCURVE",
"666 281 CURVE SMOOTH",
"666 717 LINE",
"569 717 LINE",
"569 281 LINE SMOOTH",
"569 161 OFFCURVE",
"500 77 OFFCURVE",
"381 77 CURVE SMOOTH",
"261 77 OFFCURVE",
"192 163 OFFCURVE",
"192 282 CURVE SMOOTH",
"192 717 LINE",
"95 717 LINE",
"95 281 LINE SMOOTH",
"95 115 OFFCURVE",
"207 -9 OFFCURVE",
"381 -9 CURVE SMOOTH"
);
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
position = "{409, 0}";
},
{
name = ogonek;
position = "{409, 0}";
},
{
name = top;
position = "{409, 729}";
},
{
name = topright;
position = "{752, 729}";
}
);
components = (
{
alignment = -1;
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 126, 729}";
},
{
alignment = -1;
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 265, 729}";
},
{
alignment = -1;
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 583, 729}";
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 579, 248}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"597 -8 OFFCURVE",
"722 111 OFFCURVE",
"722 297 CURVE SMOOTH",
"722 729 LINE",
"553 729 LINE",
"553 297 LINE SMOOTH",
"553 196 OFFCURVE",
"502 134 OFFCURVE",
"409 134 CURVE SMOOTH",
"318 134 OFFCURVE",
"265 197 OFFCURVE",
"265 298 CURVE SMOOTH",
"265 729 LINE",
"96 729 LINE",
"96 297 LINE SMOOTH",
"96 114 OFFCURVE",
"218 -8 OFFCURVE",
"409 -8 CURVE SMOOTH"
);
}
);
width = 884;
}
);
leftMetricsKey = U;
unicode = 01AF;
},
{
glyphname = Uhornacute;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 235, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = Uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 249, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 784;
},
{
components = (
{
name = Uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 280, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 884;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 784;
},
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 884;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 200, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = Uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 193, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 784;
},
{
components = (
{
name = Uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 188, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 884;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 162, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 184, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 784;
},
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 216, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 884;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 784;
},
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 231, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 884;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 244, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 0170;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 233, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 244, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 016A;
},
{
glyphname = Uogonek;
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 219, -6}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 230, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 244, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 0172;
},
{
glyphname = Upsilonafrican;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"479 -8 OFFCURVE",
"562 23 OFFCURVE",
"621.5 79 CURVE SMOOTH",
"688 142 OFFCURVE",
"720 235 OFFCURVE",
"720 332 CURVE SMOOTH",
"720 498 OFFCURVE",
"625 655 OFFCURVE",
"476 691 CURVE",
"487 690 OFFCURVE",
"503 688 OFFCURVE",
"510 688 CURVE SMOOTH",
"717 688 LINE",
"717 694 LINE SMOOTH",
"717 698 OFFCURVE",
"715 700 OFFCURVE",
"711 700 CURVE SMOOTH",
"462 700 LINE",
"462 684 LINE",
"612 651 OFFCURVE",
"708 500 OFFCURVE",
"708 332 CURVE SMOOTH",
"708 140 OFFCURVE",
"580 2 OFFCURVE",
"396 2 CURVE SMOOTH",
"214 2 OFFCURVE",
"84 138 OFFCURVE",
"84 332 CURVE SMOOTH",
"84 497 OFFCURVE",
"178 651 OFFCURVE",
"330 684 CURVE",
"330 700 LINE",
"81 700 LINE SMOOTH",
"77 700 OFFCURVE",
"75 698 OFFCURVE",
"75 694 CURVE SMOOTH",
"75 688 LINE",
"281 688 LINE SMOOTH",
"282 688 OFFCURVE",
"297 689 OFFCURVE",
"316 691 CURVE",
"168 655 OFFCURVE",
"72 502 OFFCURVE",
"72 332 CURVE SMOOTH",
"72 221.333 OFFCURVE",
"110 136.333 OFFCURVE",
"170 79 CURVE SMOOTH",
"230 21.667 OFFCURVE",
"310.667 -8 OFFCURVE",
"396 -8 CURVE"
);
}
);
width = 792;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"500 -8 OFFCURVE",
"586.5 25.333 OFFCURVE",
"648.5 84 CURVE SMOOTH",
"710.5 142.667 OFFCURVE",
"750 227 OFFCURVE",
"750 327 CURVE SMOOTH",
"750 474.186 OFFCURVE",
"661.16 600.861 OFFCURVE",
"535 642 CURVE",
"560.333 638 OFFCURVE",
"587.667 635 OFFCURVE",
"613 635 CURVE SMOOTH",
"756 635 LINE",
"756 685 LINE SMOOTH",
"756 703.667 OFFCURVE",
"743 717 OFFCURVE",
"723 717 CURVE SMOOTH",
"463 717 LINE",
"463 605 LINE",
"575.356 582.529 OFFCURVE",
"653 463.637 OFFCURVE",
"653 328 CURVE SMOOTH",
"653 167.883 OFFCURVE",
"545.283 76 OFFCURVE",
"404 76 CURVE SMOOTH",
"263.939 76 OFFCURVE",
"155 167.861 OFFCURVE",
"155 328 CURVE SMOOTH",
"155 462.793 OFFCURVE",
"232.969 582.945 OFFCURVE",
"346 605 CURVE",
"346 717 LINE",
"86 717 LINE SMOOTH",
"66 717 OFFCURVE",
"53 703.667 OFFCURVE",
"53 685 CURVE SMOOTH",
"53 635 LINE",
"196 635 LINE SMOOTH",
"220 635 OFFCURVE",
"247.667 638 OFFCURVE",
"273 642 CURVE",
"145.47 600.414 OFFCURVE",
"59 474.606 OFFCURVE",
"59 327 CURVE SMOOTH",
"59 227 OFFCURVE",
"97.333 142.667 OFFCURVE",
"160 84 CURVE SMOOTH",
"222.667 25.333 OFFCURVE",
"309.333 -8 OFFCURVE",
"404 -8 CURVE"
);
}
);
width = 809;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"516 -8 OFFCURVE",
"606.833 29.167 OFFCURVE",
"671.5 88.5 CURVE SMOOTH",
"736.167 147.833 OFFCURVE",
"775 231 OFFCURVE",
"775 323 CURVE SMOOTH",
"775 450.576 OFFCURVE",
"700.028 557.441 OFFCURVE",
"585 604 CURVE",
"622.333 598.667 OFFCURVE",
"662.667 595 OFFCURVE",
"700 595 CURVE SMOOTH",
"789 595 LINE",
"789 678 LINE SMOOTH",
"789 708.667 OFFCURVE",
"767.667 729 OFFCURVE",
"733 729 CURVE SMOOTH",
"463 729 LINE",
"463 544 LINE",
"545.038 532.684 OFFCURVE",
"607 432.426 OFFCURVE",
"607 325 CURVE SMOOTH",
"607 197.051 OFFCURVE",
"525.957 132 OFFCURVE",
"411 132 CURVE SMOOTH",
"297.259 132 OFFCURVE",
"216 197.234 OFFCURVE",
"216 325 CURVE SMOOTH",
"216 432.426 OFFCURVE",
"277.962 532.684 OFFCURVE",
"360 544 CURVE",
"360 729 LINE",
"90 729 LINE SMOOTH",
"55.333 729 OFFCURVE",
"34 708.667 OFFCURVE",
"34 678 CURVE SMOOTH",
"34 595 LINE",
"123 595 LINE SMOOTH",
"160.333 595 OFFCURVE",
"200.667 598.667 OFFCURVE",
"238 604 CURVE",
"122.707 558.419 OFFCURVE",
"48 449.739 OFFCURVE",
"48 323 CURVE SMOOTH",
"48 231 OFFCURVE",
"86.833 147.833 OFFCURVE",
"151.5 88.5 CURVE SMOOTH",
"216.167 29.167 OFFCURVE",
"308 -8 OFFCURVE",
"412 -8 CURVE"
);
}
);
width = 823;
}
);
unicode = 01B1;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 244, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 016E;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 722;
},
{
components = (
{
name = U;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 226, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 762;
},
{
components = (
{
name = U;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 231, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 818;
}
);
unicode = 0168;
},
{
glyphname = V;
layers = (
{
anchors = (
{
name = bottom;
position = "{383, 0}";
},
{
name = top;
position = "{383, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 98, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 94, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 671, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 667, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"387 0 LINE",
"679 700 LINE",
"671 700 LINE SMOOTH",
"668 700 OFFCURVE",
"665 698 OFFCURVE",
"664 695 CURVE SMOOTH",
"390 37 LINE SMOOTH",
"386 28 OFFCURVE",
"383 22 OFFCURVE",
"382 17 CURVE",
"381 22 OFFCURVE",
"378 28 OFFCURVE",
"374 37 CURVE SMOOTH",
"100 695 LINE SMOOTH",
"99 698 OFFCURVE",
"97 700 OFFCURVE",
"94 700 CURVE SMOOTH",
"85 700 LINE",
"377 0 LINE"
);
},
{
closed = 1;
nodes = (
"105 692 LINE",
"105 700 LINE",
"89 700 LINE",
"89 692 LINE"
);
},
{
closed = 1;
nodes = (
"675 692 LINE",
"675 700 LINE",
"659 700 LINE",
"659 692 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
},
{
anchors = (
{
name = bottom;
position = "{408, 0}";
},
{
name = top;
position = "{408, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 232, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 613, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 730, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"484 0 LINE",
"776 729 LINE",
"639 729 LINE SMOOTH",
"611 729 OFFCURVE",
"591 711 OFFCURVE",
"584 692 CURVE SMOOTH",
"444 302 LINE SMOOTH",
"432 269 OFFCURVE",
"419 228 OFFCURVE",
"410 184 CURVE",
"398 228 OFFCURVE",
"384 268 OFFCURVE",
"372 302 CURVE SMOOTH",
"231 692 LINE SMOOTH",
"223 715 OFFCURVE",
"204 729 OFFCURVE",
"175 729 CURVE SMOOTH",
"39 729 LINE",
"331 0 LINE"
);
},
{
closed = 1;
nodes = (
"242 691 LINE",
"242 729 LINE",
"168 729 LINE",
"168 691 LINE"
);
},
{
closed = 1;
nodes = (
"665 691 LINE",
"665 729 LINE",
"591 729 LINE",
"591 691 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 11 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 815;
},
{
anchors = (
{
name = bottom;
position = "{384, 0}";
},
{
name = top;
position = "{384, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 85, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 180, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 588, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 683, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"428 0 LINE",
"720 717 LINE",
"642 717 LINE SMOOTH",
"625 717 OFFCURVE",
"613 705 OFFCURVE",
"609 694 CURVE SMOOTH",
"407 188 LINE SMOOTH",
"398 165 OFFCURVE",
"392 138 OFFCURVE",
"385 110 CURVE",
"378 138 OFFCURVE",
"370 165 OFFCURVE",
"361 188 CURVE SMOOTH",
"159 694 LINE SMOOTH",
"154 707 OFFCURVE",
"143 717 OFFCURVE",
"126 717 CURVE SMOOTH",
"48 717 LINE",
"340 0 LINE"
);
},
{
closed = 1;
nodes = (
"184 692 LINE",
"184 717 LINE",
"109 717 LINE",
"109 692 LINE"
);
},
{
closed = 1;
nodes = (
"665 692 LINE",
"665 717 LINE",
"590 717 LINE",
"590 692 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 11 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 768;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "3E851BAB-7A74-4018-B7DE-D66D641235E6";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"526 708 LINE",
"526 689 LINE SMOOTH",
"526 678 OFFCURVE",
"532 672 OFFCURVE",
"545 671 CURVE",
"603 669 LINE",
"374 107 LINE SMOOTH",
"368 92 OFFCURVE",
"363 76 OFFCURVE",
"359 58 CURVE",
"355 75 OFFCURVE",
"350 92 OFFCURVE",
"344 107 CURVE SMOOTH",
"113 669 LINE",
"171 671 LINE",
"184 672 OFFCURVE",
"191 678 OFFCURVE",
"191 689 CURVE SMOOTH",
"191 708 LINE",
"1 708 LINE",
"1 689 LINE SMOOTH",
"1 678 OFFCURVE",
"8 672 OFFCURVE",
"21 671 CURVE",
"60 669 LINE",
"336 0 LINE",
"381 0 LINE",
"657 669 LINE",
"695 671 LINE",
"708 672 OFFCURVE",
"715 678 OFFCURVE",
"715 689 CURVE SMOOTH",
"715 708 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 614;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "AFBADD6E-1B2E-490F-AEB9-1FAB53CC9568";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"468 716 LINE",
"468 674 LINE SMOOTH",
"468 664 OFFCURVE",
"473 657 OFFCURVE",
"483 655 CURVE",
"489 653 OFFCURVE",
"508 649 OFFCURVE",
"540 643 CURVE",
"359 188 LINE",
"351 170 OFFCURVE",
"344 143 OFFCURVE",
"336 109 CURVE",
"327 145 OFFCURVE",
"319 171 OFFCURVE",
"312 187 CURVE SMOOTH",
"129 642 LINE",
"151 646 OFFCURVE",
"168 651 OFFCURVE",
"181 653 CURVE SMOOTH",
"194 655 OFFCURVE",
"201 662 OFFCURVE",
"201 672 CURVE SMOOTH",
"201 716 LINE",
"-37 716 LINE",
"-37 672 LINE SMOOTH",
"-37 662 OFFCURVE",
"-32 656 OFFCURVE",
"-22 654 CURVE",
"-16 652 OFFCURVE",
"1 648 OFFCURVE",
"29 642 CURVE",
"291 -2 LINE",
"378 -2 LINE",
"641 642 LINE",
"691 654 LINE",
"701 656 OFFCURVE",
"705 662 OFFCURVE",
"705 672 CURVE SMOOTH",
"705 715 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 11 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 680;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "BF205833-9F24-47EF-9DB3-77A3DBCA1B0A";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"740 723 LINE",
"699 723 LINE",
"632 723 LINE",
"504 723 LINE",
"504 664 LINE SMOOTH",
"504 647 OFFCURVE",
"512 637 OFFCURVE",
"529 633 CURVE",
"530 633 OFFCURVE",
"532 633 OFFCURVE",
"534 632 CURVE SMOOTH",
"536 631 OFFCURVE",
"540 630 OFFCURVE",
"545 629 CURVE SMOOTH",
"550 628 OFFCURVE",
"555 626 OFFCURVE",
"561 625 CURVE",
"418 251 LINE SMOOTH",
"407 222 OFFCURVE",
"397 188 OFFCURVE",
"389 150 CURVE",
"384 169 OFFCURVE",
"379 187 OFFCURVE",
"374 204 CURVE SMOOTH",
"369 221 OFFCURVE",
"364 237 OFFCURVE",
"358 251 CURVE",
"214 625 LINE",
"220 626 OFFCURVE",
"225 628 OFFCURVE",
"230 629 CURVE SMOOTH",
"235 630 OFFCURVE",
"238 631 OFFCURVE",
"240 632 CURVE SMOOTH",
"242 633 OFFCURVE",
"244 633 OFFCURVE",
"245 633 CURVE",
"262 637 OFFCURVE",
"270 647 OFFCURVE",
"270 664 CURVE SMOOTH",
"270 723 LINE",
"143 723 LINE",
"76 723 LINE",
"35 723 LINE",
"0 723 LINE",
"0 664 LINE SMOOTH",
"0 647 OFFCURVE",
"8 637 OFFCURVE",
"25 633 CURVE",
"27 633 OFFCURVE",
"28 633 OFFCURVE",
"31 632 CURVE",
"34 632 OFFCURVE",
"39 630 OFFCURVE",
"46 629 CURVE SMOOTH",
"53 628 OFFCURVE",
"62 626 OFFCURVE",
"74 624 CURVE",
"327 0 LINE",
"448 0 LINE",
"700 624 LINE",
"712 626 OFFCURVE",
"722 628 OFFCURVE",
"729 629 CURVE SMOOTH",
"736 630 OFFCURVE",
"740 632 OFFCURVE",
"743 632 CURVE SMOOTH",
"746 632 OFFCURVE",
"747 633 OFFCURVE",
"749 633 CURVE",
"766 637 OFFCURVE",
"774 647 OFFCURVE",
"774 664 CURVE SMOOTH",
"774 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 11 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
leftKerningGroup = V;
leftMetricsKey = A;
note = V;
rightKerningGroup = V;
rightMetricsKey = A;
unicode = 0056;
},
{
glyphname = Gammaafrican;
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 683, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 679, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 98, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 94, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"571 0 LINE",
"396 252 LINE",
"699 700 LINE",
"689 700 LINE SMOOTH",
"685 700 OFFCURVE",
"682 696 OFFCURVE",
"680 694 CURVE SMOOTH",
"389 259 LINE",
"98 693 LINE SMOOTH",
"96 695 OFFCURVE",
"94 700 OFFCURVE",
"89 700 CURVE SMOOTH",
"77 700 LINE",
"380 252 LINE",
"206 0 LINE"
);
},
{
closed = 1;
nodes = (
"228 11 OFFCURVE",
"230 14 OFFCURVE",
"232 17 CURVE SMOOTH",
"384 239 LINE SMOOTH",
"386 242 OFFCURVE",
"387 244 OFFCURVE",
"387 245 CURVE",
"543 18 LINE SMOOTH",
"546 14 OFFCURVE",
"548 12 OFFCURVE",
"551 10 CURVE",
"225 10 LINE"
);
},
{
closed = 1;
nodes = (
"693 694 LINE",
"693 700 LINE",
"680 700 LINE",
"680 693 LINE"
);
},
{
closed = 1;
nodes = (
"99 692 LINE",
"99 700 LINE",
"84 700 LINE",
"84 692 LINE"
);
}
);
width = 777;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 602, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 714, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 85, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 197, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"667 0 LINE",
"458 292 LINE",
"750 717 LINE",
"657 717 LINE SMOOTH",
"648 717 OFFCURVE",
"641 711 OFFCURVE",
"635 702 CURVE SMOOTH",
"405 356 LINE",
"169 701 LINE SMOOTH",
"161 712 OFFCURVE",
"157 717 OFFCURVE",
"142 717 CURVE SMOOTH",
"48 717 LINE",
"344 297 LINE",
"132 0 LINE"
);
},
{
closed = 1;
nodes = (
"287 78 OFFCURVE",
"292 82 OFFCURVE",
"295 86 CURVE SMOOTH",
"377 203 LINE",
"386 214 OFFCURVE",
"393 228 OFFCURVE",
"398 241 CURVE",
"506 89 LINE SMOOTH",
"510 84 OFFCURVE",
"516 78 OFFCURVE",
"521 74 CURVE",
"281 74 LINE"
);
},
{
closed = 1;
nodes = (
"695 692 LINE",
"695 717 LINE",
"620 717 LINE",
"620 692 LINE"
);
},
{
closed = 1;
nodes = (
"184 692 LINE",
"184 717 LINE",
"109 717 LINE",
"109 692 LINE"
);
}
);
width = 799;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 582, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 699, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 232, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"732 0 LINE",
"494 322 LINE",
"776 729 LINE",
"614 729 LINE SMOOTH",
"599 729 OFFCURVE",
"589 723 OFFCURVE",
"580 708 CURVE SMOOTH",
"403 431 LINE",
"214 707 LINE SMOOTH",
"203 724 OFFCURVE",
"194.333 729 OFFCURVE",
"173 729 CURVE SMOOTH",
"8 729 LINE",
"296 330 LINE",
"53 0 LINE"
);
},
{
closed = 1;
nodes = (
"322 127.667 OFFCURVE",
"328 132 OFFCURVE",
"332 138 CURVE SMOOTH",
"355 175 LINE",
"371 193.667 OFFCURVE",
"381 214.667 OFFCURVE",
"389 236 CURVE",
"458 143 LINE SMOOTH",
"464 135 OFFCURVE",
"471 128.333 OFFCURVE",
"479 123 CURVE",
"314 123 LINE"
);
},
{
closed = 1;
nodes = (
"623 667 LINE",
"623 729 LINE",
"549 729 LINE",
"549 666 LINE"
);
},
{
closed = 1;
nodes = (
"242 691 LINE",
"242 729 LINE",
"168 729 LINE",
"168 691 LINE"
);
}
);
width = 784;
}
);
leftMetricsKey = X;
rightMetricsKey = X;
unicode = 0194;
},
{
glyphname = Vhook;
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 108, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 120, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"298 -9 OFFCURVE",
"361 14 OFFCURVE",
"421 55 CURVE SMOOTH",
"450 76 OFFCURVE",
"478 102 OFFCURVE",
"505 133 CURVE SMOOTH",
"557 195 OFFCURVE",
"598 274 OFFCURVE",
"622 373 CURVE SMOOTH",
"633 422 OFFCURVE",
"639 476 OFFCURVE",
"639 533 CURVE SMOOTH",
"639 638 OFFCURVE",
"617 708 OFFCURVE",
"530 708 CURVE SMOOTH",
"507 708 OFFCURVE",
"486 703 OFFCURVE",
"462 695 CURVE",
"463 691 LINE SMOOTH",
"464 686 OFFCURVE",
"468 686 OFFCURVE",
"474 688 CURVE SMOOTH",
"493 695 OFFCURVE",
"513 698 OFFCURVE",
"530 698 CURVE SMOOTH",
"608 698 OFFCURVE",
"627 630 OFFCURVE",
"627 533 CURVE SMOOTH",
"627 424 OFFCURVE",
"603 329 OFFCURVE",
"566 250 CURVE SMOOTH",
"547 211 OFFCURVE",
"526 176 OFFCURVE",
"501 145 CURVE SMOOTH",
"451 84 OFFCURVE",
"393 41 OFFCURVE",
"332 19 CURVE SMOOTH",
"301 8 OFFCURVE",
"271 2 OFFCURVE",
"242 2 CURVE SMOOTH",
"148 2 OFFCURVE",
"120 64 OFFCURVE",
"120 199 CURVE SMOOTH",
"120 700 LINE",
"108 700 LINE",
"108 199 LINE SMOOTH",
"108 62 OFFCURVE",
"140 -9 OFFCURVE",
"241 -9 CURVE SMOOTH"
);
}
);
width = 708;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 95, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 193, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"351 -9 OFFCURVE",
"418 17 OFFCURVE",
"479 61 CURVE SMOOTH",
"509 83 OFFCURVE",
"537 110 OFFCURVE",
"563 141 CURVE SMOOTH",
"614 204 OFFCURVE",
"653 281 OFFCURVE",
"674 370 CURVE SMOOTH",
"685 415 OFFCURVE",
"690 462 OFFCURVE",
"690 511 CURVE SMOOTH",
"690 646 OFFCURVE",
"640 725 OFFCURVE",
"523 725 CURVE SMOOTH",
"488 725 OFFCURVE",
"464 718 OFFCURVE",
"432 707 CURVE",
"445 657 LINE SMOOTH",
"449 640 OFFCURVE",
"462 636 OFFCURVE",
"476 640 CURVE SMOOTH",
"491 644 OFFCURVE",
"504 646 OFFCURVE",
"517 646 CURVE SMOOTH",
"580 646 OFFCURVE",
"593 588 OFFCURVE",
"593 516 CURVE SMOOTH",
"593 428 OFFCURVE",
"575 349 OFFCURVE",
"547 284 CURVE SMOOTH",
"532 251 OFFCURVE",
"515 222 OFFCURVE",
"496 196 CURVE SMOOTH",
"457 144 OFFCURVE",
"414 108 OFFCURVE",
"367 89 CURVE SMOOTH",
"344 79 OFFCURVE",
"321 74 OFFCURVE",
"298 74 CURVE SMOOTH",
"225 74 OFFCURVE",
"193 127 OFFCURVE",
"193 227 CURVE SMOOTH",
"193 717 LINE",
"96 717 LINE",
"96 227 LINE SMOOTH",
"96 73 OFFCURVE",
"163 -9 OFFCURVE",
"283 -9 CURVE SMOOTH"
);
}
);
width = 737;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 126, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 265, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"404 -8 OFFCURVE",
"476 20 OFFCURVE",
"537 66 CURVE SMOOTH",
"568 89 OFFCURVE",
"596 116 OFFCURVE",
"621 147 CURVE SMOOTH",
"671 210 OFFCURVE",
"707 285 OFFCURVE",
"727 368 CURVE SMOOTH",
"737 409 OFFCURVE",
"742 452 OFFCURVE",
"742 495 CURVE SMOOTH",
"742 651 OFFCURVE",
"669 737 OFFCURVE",
"526 737 CURVE SMOOTH",
"487 737 OFFCURVE",
"449 729 OFFCURVE",
"416 716 CURVE",
"438 631 LINE SMOOTH",
"445 604 OFFCURVE",
"463 596 OFFCURVE",
"486 604 CURVE SMOOTH",
"495 607 OFFCURVE",
"506 608 OFFCURVE",
"515 608 CURVE SMOOTH",
"565 608 OFFCURVE",
"573 558 OFFCURVE",
"573 504 CURVE SMOOTH",
"573 431 OFFCURVE",
"559 365 OFFCURVE",
"538 310 CURVE SMOOTH",
"527 282 OFFCURVE",
"515 257 OFFCURVE",
"501 235 CURVE SMOOTH",
"483 206 OFFCURVE",
"462 181 OFFCURVE",
"439 163 CURVE SMOOTH",
"412 142 OFFCURVE",
"383 129 OFFCURVE",
"354 129 CURVE SMOOTH",
"298 129 OFFCURVE",
"265 175 OFFCURVE",
"265 247 CURVE SMOOTH",
"265 729 LINE",
"96 729 LINE",
"96 247 LINE SMOOTH",
"96 82 OFFCURVE",
"188 -8 OFFCURVE",
"328 -8 CURVE SMOOTH"
);
}
);
width = 771;
}
);
leftMetricsKey = U;
unicode = 01B2;
},
{
glyphname = Vturned;
layers = (
{
components = (
{
name = V;
transform = "{-1, 0, 0, -1, 765, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 765;
},
{
components = (
{
alignment = -1;
name = V;
transform = "{-1, 0, 0, -1, 782, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 782;
},
{
components = (
{
alignment = -1;
name = V;
transform = "{-1, 0, 0, -1, 815, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 815;
}
);
unicode = 0245;
},
{
glyphname = W;
layers = (
{
anchors = (
{
name = bottom;
position = "{555, 0}";
},
{
name = top;
position = "{555, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 98, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 94, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 1016, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 1012, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"317 0 LINE",
"550 672 LINE SMOOTH",
"552 679 OFFCURVE",
"554 684 OFFCURVE",
"555 688 CURVE",
"556 684 OFFCURVE",
"557 679 OFFCURVE",
"559 672 CURVE SMOOTH",
"792 0 LINE",
"802 0 LINE",
"1024 700 LINE",
"1016 700 LINE SMOOTH",
"1013 700 OFFCURVE",
"1010 698 OFFCURVE",
"1009 695 CURVE SMOOTH",
"805 42 LINE",
"802 34 OFFCURVE",
"799 25 OFFCURVE",
"797 15 CURVE",
"796 24 OFFCURVE",
"793 33 OFFCURVE",
"790 42 CURVE SMOOTH",
"562 695 LINE",
"561 698 OFFCURVE",
"559 700 OFFCURVE",
"556 700 CURVE SMOOTH",
"553 700 LINE SMOOTH",
"550 700 OFFCURVE",
"548 698 OFFCURVE",
"547 695 CURVE SMOOTH",
"320 42 LINE SMOOTH",
"319 38 OFFCURVE",
"313 18 OFFCURVE",
"312 15 CURVE",
"311 19 OFFCURVE",
"309 29 OFFCURVE",
"305 42 CURVE SMOOTH",
"100 695 LINE SMOOTH",
"99 698 OFFCURVE",
"97 700 OFFCURVE",
"94 700 CURVE SMOOTH",
"85 700 LINE",
"307 0 LINE"
);
},
{
closed = 1;
nodes = (
"88 692 LINE",
"105 692 LINE",
"105 700 LINE",
"88 700 LINE"
);
},
{
closed = 1;
nodes = (
"1004 691 LINE",
"1020 691 LINE",
"1020 700 LINE",
"1004 700 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
},
{
anchors = (
{
name = bottom;
position = "{570, 0}";
},
{
name = top;
position = "{570, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 232, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 937, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 1054, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"417 0 LINE",
"556 452 LINE SMOOTH",
"557 455 OFFCURVE",
"565 481 OFFCURVE",
"571 501 CURVE",
"572 497 OFFCURVE",
"577 478 OFFCURVE",
"585 452 CURVE SMOOTH",
"722 0 LINE",
"875 0 LINE",
"1100 729 LINE",
"967 729 LINE SMOOTH",
"939 729 OFFCURVE",
"917 712 OFFCURVE",
"912 692 CURVE SMOOTH",
"812 312 LINE SMOOTH",
"806 289 OFFCURVE",
"800 262 OFFCURVE",
"795 233 CURVE",
"790 262 OFFCURVE",
"780 289 OFFCURVE",
"773 312 CURVE SMOOTH",
"656 692 LINE SMOOTH",
"649 715 OFFCURVE",
"629 729 OFFCURVE",
"600 729 CURVE SMOOTH",
"550 729 LINE SMOOTH",
"522 729 OFFCURVE",
"501 711 OFFCURVE",
"495 692 CURVE SMOOTH",
"377 312 LINE SMOOTH",
"367 280 OFFCURVE",
"358 242 OFFCURVE",
"355 229 CURVE",
"351 260 OFFCURVE",
"343 288 OFFCURVE",
"337 312 CURVE SMOOTH",
"237 692 LINE SMOOTH",
"231 715 OFFCURVE",
"210 729 OFFCURVE",
"181 729 CURVE SMOOTH",
"39 729 LINE",
"264 0 LINE"
);
},
{
closed = 1;
nodes = (
"242 691 LINE",
"242 729 LINE",
"168 729 LINE",
"168 691 LINE"
);
},
{
closed = 1;
nodes = (
"980 691 LINE",
"980 729 LINE",
"906 729 LINE",
"906 691 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 41 33 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
37 23 8 3 3 0 1 30 2 1 2 0 0 11 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
37 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
37 23 8 3 4 2 1 30 0 0 1 0 52 0 1 2 1 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1139;
},
{
anchors = (
{
name = bottom;
position = "{557, 0}";
},
{
name = top;
position = "{557, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 85, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 180, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 938, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 1033, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"365 0 LINE",
"547 547 LINE SMOOTH",
"549 553 OFFCURVE",
"556 579 OFFCURVE",
"557 583 CURVE",
"560 569 OFFCURVE",
"564 557 OFFCURVE",
"567 547 CURVE SMOOTH",
"748 0 LINE",
"835 0 LINE",
"1059 717 LINE",
"983 717 LINE SMOOTH",
"967 717 OFFCURVE",
"955 706 OFFCURVE",
"951 694 CURVE SMOOTH",
"802 196 LINE SMOOTH",
"799 187 OFFCURVE",
"795 165 OFFCURVE",
"790 136 CURVE",
"785 159 OFFCURVE",
"780 179 OFFCURVE",
"774 196 CURVE SMOOTH",
"607 694 LINE SMOOTH",
"602 708 OFFCURVE",
"591 717 OFFCURVE",
"574 717 CURVE SMOOTH",
"546 717 LINE SMOOTH",
"529 717 OFFCURVE",
"517 705 OFFCURVE",
"513 694 CURVE SMOOTH",
"344 196 LINE SMOOTH",
"343 192 OFFCURVE",
"340 183 OFFCURVE",
"329 134 CURVE",
"325 157 OFFCURVE",
"322 177 OFFCURVE",
"316 196 CURVE SMOOTH",
"168 694 LINE SMOOTH",
"164 707 OFFCURVE",
"152 717 OFFCURVE",
"135 717 CURVE SMOOTH",
"54 717 LINE",
"278 0 LINE"
);
},
{
closed = 1;
nodes = (
"184 692 LINE",
"184 717 LINE",
"109 717 LINE",
"109 692 LINE"
);
},
{
closed = 1;
nodes = (
"1017 692 LINE",
"1017 717 LINE",
"942 717 LINE",
"942 692 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
40 39 32 31 30 28 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 0 11 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 15 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
35 22 8 3 4 2 1 30 0 0 1 0 52 0 1 2 1 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1118;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D9162469-2873-47DB-8E41-33103DBEF26F";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"866 708 LINE",
"866 689 LINE SMOOTH",
"866 678 OFFCURVE",
"872 672 OFFCURVE",
"885 671 CURVE",
"947 669 LINE",
"777 113 LINE SMOOTH",
"773 100 OFFCURVE",
"770 83 OFFCURVE",
"767 68 CURVE",
"764 83 OFFCURVE",
"760 100 OFFCURVE",
"756 113 CURVE",
"556 695 LINE",
"553 702 OFFCURVE",
"550 708 OFFCURVE",
"537 708 CURVE SMOOTH",
"523 708 LINE SMOOTH",
"513 708 OFFCURVE",
"505 701 OFFCURVE",
"504 695 CURVE",
"304 112 LINE",
"301 102 OFFCURVE",
"297 82 OFFCURVE",
"293 67 CURVE",
"290 82 OFFCURVE",
"286 102 OFFCURVE",
"283 113 CURVE SMOOTH",
"113 669 LINE",
"171 671 LINE",
"184 672 OFFCURVE",
"191 678 OFFCURVE",
"191 689 CURVE SMOOTH",
"191 708 LINE",
"1 708 LINE",
"1 689 LINE SMOOTH",
"1 678 OFFCURVE",
"8 672 OFFCURVE",
"21 671 CURVE",
"56 669 LINE",
"267 0 LINE",
"312 0 LINE",
"522 614 LINE SMOOTH",
"525 622 OFFCURVE",
"527 630 OFFCURVE",
"529 639 CURVE",
"531 630 OFFCURVE",
"533 622 OFFCURVE",
"536 614 CURVE SMOOTH",
"745 0 LINE",
"791 0 LINE",
"1001 669 LINE",
"1036 671 LINE",
"1049 672 OFFCURVE",
"1055 678 OFFCURVE",
"1055 689 CURVE SMOOTH",
"1055 708 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 959;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "37B837AC-DE43-4BD0-81D8-405303E52482";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"1049 716 LINE",
"853 716 LINE",
"853 674 LINE SMOOTH",
"853 664 OFFCURVE",
"859 657 OFFCURVE",
"869 655 CURVE SMOOTH",
"903 648 OFFCURVE",
"921 644 OFFCURVE",
"925 644 CURVE",
"792 196 LINE",
"790 188 OFFCURVE",
"788 178 OFFCURVE",
"786 168 CURVE SMOOTH",
"784 158 OFFCURVE",
"783 146 OFFCURVE",
"781 136 CURVE",
"777 158 OFFCURVE",
"771 178 OFFCURVE",
"765 196 CURVE SMOOTH",
"597 694 LINE SMOOTH",
"591 710 OFFCURVE",
"580 718 OFFCURVE",
"564 718 CURVE SMOOTH",
"536 718 LINE SMOOTH",
"528 718 OFFCURVE",
"521 715 OFFCURVE",
"515 710 CURVE SMOOTH",
"509 705 OFFCURVE",
"505 700 OFFCURVE",
"503 694 CURVE SMOOTH",
"334 196 LINE SMOOTH",
"330 184 OFFCURVE",
"325 164 OFFCURVE",
"319 134 CURVE",
"315 160 OFFCURVE",
"309 181 OFFCURVE",
"305 196 CURVE SMOOTH",
"173 644 LINE",
"177 644 OFFCURVE",
"195 649 OFFCURVE",
"229 656 CURVE SMOOTH",
"239 658 OFFCURVE",
"245 664 OFFCURVE",
"245 674 CURVE SMOOTH",
"245 717 LINE",
"1 717 LINE",
"1 674 LINE SMOOTH",
"1 664 OFFCURVE",
"7 658 OFFCURVE",
"17 656 CURVE",
"23 654 OFFCURVE",
"39 650 OFFCURVE",
"67 644 CURVE",
"267 0 LINE",
"355 0 LINE",
"537 546 LINE",
"539 551 OFFCURVE",
"539 558 OFFCURVE",
"541 564 CURVE SMOOTH",
"543 570 OFFCURVE",
"544 576 OFFCURVE",
"546 582 CURVE",
"549 568 OFFCURVE",
"552 556 OFFCURVE",
"556 546 CURVE",
"737 0 LINE",
"825 0 LINE",
"1025 643 LINE",
"1075 654 LINE SMOOTH",
"1085 656 OFFCURVE",
"1091 663 OFFCURVE",
"1091 673 CURVE SMOOTH",
"1091 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
40 39 32 31 30 28 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 0 11 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 15 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
35 22 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
35 22 8 3 4 2 1 30 0 0 1 0 52 0 1 2 1 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1019;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "F1E1BC68-34CF-46A3-AA94-399D3FC47A99";
name = "Jan 15 23, 17:48";
paths = (
{
closed = 1;
nodes = (
"1070 723 LINE",
"1028 723 LINE",
"964 723 LINE",
"834 723 LINE",
"834 664 LINE SMOOTH",
"834 647 OFFCURVE",
"842 637 OFFCURVE",
"859 633 CURVE SMOOTH",
"876 629 OFFCURVE",
"890 626 OFFCURVE",
"900 624 CURVE",
"797 260 LINE SMOOTH",
"794 250 OFFCURVE",
"791 238 OFFCURVE",
"789 226 CURVE",
"786 214 OFFCURVE",
"784 202 OFFCURVE",
"782 189 CURVE",
"777 215 OFFCURVE",
"770 239 OFFCURVE",
"763 260 CURVE SMOOTH",
"622 692 LINE SMOOTH",
"619 701 OFFCURVE",
"614 709 OFFCURVE",
"606 715 CURVE SMOOTH",
"598 721 OFFCURVE",
"589 723 OFFCURVE",
"577 723 CURVE SMOOTH",
"537 723 LINE SMOOTH",
"526 723 OFFCURVE",
"517 719 OFFCURVE",
"509 713 CURVE SMOOTH",
"501 707 OFFCURVE",
"496 700 OFFCURVE",
"493 692 CURVE",
"351 260 LINE SMOOTH",
"347 249 OFFCURVE",
"344 238 OFFCURVE",
"341 225 CURVE SMOOTH",
"338 213 OFFCURVE",
"335 199 OFFCURVE",
"332 185 CURVE",
"330 199 OFFCURVE",
"327 213 OFFCURVE",
"325 225 CURVE",
"322 237 OFFCURVE",
"319 249 OFFCURVE",
"316 260 CURVE SMOOTH",
"213 625 LINE",
"219 627 OFFCURVE",
"225 628 OFFCURVE",
"230 629 CURVE SMOOTH",
"235 630 OFFCURVE",
"239 631 OFFCURVE",
"241 632 CURVE SMOOTH",
"243 633 OFFCURVE",
"245 633 OFFCURVE",
"246 633 CURVE",
"263 637 OFFCURVE",
"271 647 OFFCURVE",
"271 664 CURVE SMOOTH",
"271 723 LINE",
"148 723 LINE",
"77 723 LINE",
"36 723 LINE",
"1 723 LINE",
"1 664 LINE SMOOTH",
"1 647 OFFCURVE",
"9 637 OFFCURVE",
"26 633 CURVE",
"27 633 OFFCURVE",
"30 632 OFFCURVE",
"37 631 CURVE SMOOTH",
"44 630 OFFCURVE",
"54 628 OFFCURVE",
"66 626 CURVE",
"260 0 LINE",
"381 0 LINE",
"541 494 LINE SMOOTH",
"543 500 OFFCURVE",
"545 506 OFFCURVE",
"547 514 CURVE SMOOTH",
"549 521 OFFCURVE",
"551 530 OFFCURVE",
"553 538 CURVE",
"555 530 OFFCURVE",
"558 521 OFFCURVE",
"560 514 CURVE SMOOTH",
"562 507 OFFCURVE",
"564 500 OFFCURVE",
"566 494 CURVE SMOOTH",
"724 0 LINE",
"845 0 LINE",
"1040 626 LINE",
"1052 628 OFFCURVE",
"1061 630 OFFCURVE",
"1068 631 CURVE SMOOTH",
"1075 632 OFFCURVE",
"1078 633 OFFCURVE",
"1079 633 CURVE",
"1096 637 OFFCURVE",
"1104 647 OFFCURVE",
"1104 664 CURVE SMOOTH",
"1104 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 41 33 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
37 23 8 3 3 0 1 30 2 1 2 0 0 11 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
37 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
37 23 8 3 4 2 1 30 0 0 1 0 52 0 1 2 1 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1071;
}
);
leftKerningGroup = V;
leftMetricsKey = A;
note = W;
rightKerningGroup = V;
rightMetricsKey = A;
unicode = 0057;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 429, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 1110;
},
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 426, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 1118;
},
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 441, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 1139;
}
);
unicode = 1E82;
},
{
glyphname = Wcircumflex;
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 415, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 1110;
},
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 403, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 1118;
},
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 375, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 1139;
}
);
unicode = 0174;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 415, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 1110;
},
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 403, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 1118;
},
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 375, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 1139;
}
);
unicode = 1E84;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 394, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 1110;
},
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 370, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 1118;
},
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 349, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 1139;
}
);
unicode = 1E80;
},
{
glyphname = Whook;
layers = (
{
anchors = (
{
name = bottom;
position = "{564, 0}";
},
{
name = top;
position = "{564, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 700}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"326 0 LINE",
"559 672 LINE SMOOTH",
"561 679 OFFCURVE",
"563 684 OFFCURVE",
"564 688 CURVE",
"565 684 OFFCURVE",
"566 679 OFFCURVE",
"568 672 CURVE SMOOTH",
"801 0 LINE",
"811 0 LINE",
"814 42 LINE",
"811 34 OFFCURVE",
"808 25 OFFCURVE",
"806 15 CURVE",
"805 24 OFFCURVE",
"802 33 OFFCURVE",
"799 42 CURVE SMOOTH",
"571 695 LINE",
"570 698 OFFCURVE",
"568 700 OFFCURVE",
"565 700 CURVE SMOOTH",
"562 700 LINE SMOOTH",
"559 700 OFFCURVE",
"557 698 OFFCURVE",
"556 695 CURVE SMOOTH",
"329 42 LINE SMOOTH",
"328 38 OFFCURVE",
"322 18 OFFCURVE",
"321 15 CURVE",
"320 19 OFFCURVE",
"318 29 OFFCURVE",
"314 42 CURVE SMOOTH",
"109 695 LINE SMOOTH",
"108 698 OFFCURVE",
"106 700 OFFCURVE",
"103 700 CURVE SMOOTH",
"94 700 LINE",
"316 0 LINE"
);
},
{
closed = 1;
nodes = (
"114 692 LINE",
"114 700 LINE",
"97 700 LINE",
"97 692 LINE"
);
},
{
closed = 1;
nodes = (
"1011 630 LINE SMOOTH",
"1027 679 OFFCURVE",
"1065 697 OFFCURVE",
"1107 697 CURVE SMOOTH",
"1115 697 OFFCURVE",
"1113 699 OFFCURVE",
"1156 688 CURVE SMOOTH",
"1162 687 OFFCURVE",
"1166 686 OFFCURVE",
"1167 690 CURVE SMOOTH",
"1168 694 LINE",
"1144 703 OFFCURVE",
"1122 707 OFFCURVE",
"1103 707 CURVE SMOOTH",
"1056 707 OFFCURVE",
"1014 682 OFFCURVE",
"999 634 CURVE SMOOTH",
"814 42 LINE",
"811 0 LINE"
);
}
);
width = 1169;
},
{
anchors = (
{
name = bottom;
position = "{564, 0}";
},
{
name = top;
position = "{564, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 92, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 187, 717}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"372 0 LINE",
"554 547 LINE SMOOTH",
"556 553 OFFCURVE",
"563 579 OFFCURVE",
"564 583 CURVE",
"567 569 OFFCURVE",
"571 557 OFFCURVE",
"574 547 CURVE SMOOTH",
"755 0 LINE",
"842 0 LINE",
"809 196 LINE",
"806 187 OFFCURVE",
"802 165 OFFCURVE",
"797 136 CURVE",
"792 159 OFFCURVE",
"787 179 OFFCURVE",
"781 196 CURVE SMOOTH",
"614 694 LINE SMOOTH",
"609 708 OFFCURVE",
"598 717 OFFCURVE",
"581 717 CURVE SMOOTH",
"553 717 LINE SMOOTH",
"536 717 OFFCURVE",
"524 705 OFFCURVE",
"520 694 CURVE SMOOTH",
"351 196 LINE SMOOTH",
"350 192 OFFCURVE",
"347 183 OFFCURVE",
"336 134 CURVE",
"332 157 OFFCURVE",
"329 177 OFFCURVE",
"323 196 CURVE SMOOTH",
"175 694 LINE SMOOTH",
"171 707 OFFCURVE",
"159 717 OFFCURVE",
"142 717 CURVE SMOOTH",
"61 717 LINE",
"285 0 LINE"
);
},
{
closed = 1;
nodes = (
"191 692 LINE",
"191 717 LINE",
"116 717 LINE",
"116 692 LINE"
);
},
{
closed = 1;
nodes = (
"1029 598 LINE SMOOTH",
"1040 634 OFFCURVE",
"1074 650 OFFCURVE",
"1107 650 CURVE SMOOTH",
"1122 650 OFFCURVE",
"1137 646 OFFCURVE",
"1148 643 CURVE SMOOTH",
"1161 639 OFFCURVE",
"1174 640 OFFCURVE",
"1179 659 CURVE SMOOTH",
"1192 706 LINE",
"1165 717 OFFCURVE",
"1123 724 OFFCURVE",
"1093 724 CURVE SMOOTH",
"1026 724 OFFCURVE",
"956 688 OFFCURVE",
"932 607 CURVE SMOOTH",
"809 196 LINE",
"842 0 LINE"
);
}
);
width = 1191;
},
{
anchors = (
{
name = bottom;
position = "{570, 0}";
},
{
name = top;
position = "{570, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 232, 729}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"417 0 LINE",
"556 452 LINE SMOOTH",
"557 455 OFFCURVE",
"565 481 OFFCURVE",
"571 501 CURVE",
"572 497 OFFCURVE",
"577 478 OFFCURVE",
"585 452 CURVE SMOOTH",
"722 0 LINE",
"875 0 LINE",
"812 312 LINE",
"806 289 OFFCURVE",
"800 262 OFFCURVE",
"795 233 CURVE",
"790 262 OFFCURVE",
"780 289 OFFCURVE",
"773 312 CURVE SMOOTH",
"656 692 LINE SMOOTH",
"649 715 OFFCURVE",
"629 729 OFFCURVE",
"600 729 CURVE SMOOTH",
"550 729 LINE SMOOTH",
"522 729 OFFCURVE",
"501 711 OFFCURVE",
"495 692 CURVE SMOOTH",
"377 312 LINE SMOOTH",
"367 280 OFFCURVE",
"358 242 OFFCURVE",
"355 229 CURVE",
"351 260 OFFCURVE",
"343 288 OFFCURVE",
"337 312 CURVE SMOOTH",
"237 692 LINE SMOOTH",
"231 715 OFFCURVE",
"210 729 OFFCURVE",
"181 729 CURVE SMOOTH",
"39 729 LINE",
"264 0 LINE"
);
},
{
closed = 1;
nodes = (
"242 691 LINE",
"242 729 LINE",
"168 729 LINE",
"168 691 LINE"
);
},
{
closed = 1;
nodes = (
"1052 573 LINE SMOOTH",
"1062 604 OFFCURVE",
"1087 614 OFFCURVE",
"1115 614 CURVE SMOOTH",
"1129 614 OFFCURVE",
"1145 610 OFFCURVE",
"1149 609 CURVE SMOOTH",
"1170 603 OFFCURVE",
"1190 609 OFFCURVE",
"1197 635 CURVE SMOOTH",
"1219 715 LINE",
"1190 727 OFFCURVE",
"1136 737 OFFCURVE",
"1086 737 CURVE SMOOTH",
"1003 737 OFFCURVE",
"917 710 OFFCURVE",
"890 609 CURVE SMOOTH",
"812 312 LINE",
"875 0 LINE"
);
}
);
width = 1220;
}
);
unicode = 2C72;
},
{
glyphname = X;
layers = (
{
anchors = (
{
name = bottom;
position = "{350, 0}";
},
{
name = top;
position = "{350, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 110, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 106, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 590, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 586, 700}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 98, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 94, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 598, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 602, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"88 0 LINE SMOOTH",
"90 0 OFFCURVE",
"96 5 OFFCURVE",
"97 7 CURVE SMOOTH",
"344 346 LINE SMOOTH",
"346 349 OFFCURVE",
"348 352 OFFCURVE",
"348 353 CURVE",
"599 7 LINE SMOOTH",
"602 2 OFFCURVE",
"604 0 OFFCURVE",
"608 0 CURVE SMOOTH",
"619 0 LINE",
"357 360 LINE",
"607 700 LINE",
"596 700 LINE SMOOTH",
"592 700 OFFCURVE",
"590 697 OFFCURVE",
"587 693 CURVE SMOOTH",
"355 375 LINE SMOOTH",
"353 372 OFFCURVE",
"351 368 OFFCURVE",
"349 365 CURVE",
"109 693 LINE SMOOTH",
"106 697 OFFCURVE",
"105 700 OFFCURVE",
"100 700 CURVE SMOOTH",
"89 700 LINE",
"340 358 LINE",
"77 0 LINE"
);
},
{
closed = 1;
nodes = (
"102 0 LINE",
"102 9 LINE",
"85 9 LINE",
"85 0 LINE"
);
},
{
closed = 1;
nodes = (
"612 0 LINE",
"612 8 LINE",
"597 8 LINE",
"597 0 LINE"
);
},
{
closed = 1;
nodes = (
"111 692 LINE",
"111 700 LINE",
"96 700 LINE",
"96 692 LINE"
);
},
{
closed = 1;
nodes = (
"600 694 LINE",
"600 700 LINE",
"587 700 LINE",
"587 694 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 696;
},
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = top;
position = "{359, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 124, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 241, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 511, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 628, 729}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 85, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 202, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 603, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 486, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"166 0 LINE SMOOTH",
"186 0 OFFCURVE",
"199 14 OFFCURVE",
"207 27 CURVE SMOOTH",
"343 263 LINE SMOOTH",
"346 268 OFFCURVE",
"349 275 OFFCURVE",
"352 282 CURVE",
"498 27 LINE SMOOTH",
"506 13 OFFCURVE",
"520 0 OFFCURVE",
"541 0 CURVE SMOOTH",
"710 0 LINE",
"477 382 LINE",
"705 729 LINE",
"543 729 LINE SMOOTH",
"529 729 OFFCURVE",
"517 722 OFFCURVE",
"509 708 CURVE SMOOTH",
"382 490 LINE SMOOTH",
"380 486 OFFCURVE",
"374 475 OFFCURVE",
"369 465 CURVE",
"224 710 LINE SMOOTH",
"216 723 OFFCURVE",
"209 729 OFFCURVE",
"186 729 CURVE SMOOTH",
"17 729 LINE",
"243 375 LINE",
"8 0 LINE"
);
},
{
closed = 1;
nodes = (
"236 0 LINE",
"236 78 LINE",
"162 78 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"552 0 LINE",
"552 78 LINE",
"478 78 LINE",
"478 0 LINE"
);
},
{
closed = 1;
nodes = (
"251 691 LINE",
"251 729 LINE",
"177 729 LINE",
"177 691 LINE"
);
},
{
closed = 1;
nodes = (
"552 666 LINE",
"552 729 LINE",
"478 729 LINE",
"478 666 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
14 0 2 2 0 1 30 1 1 0 0 11 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 0 2 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
14 0 2 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = top;
position = "{359, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 96, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 208, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 516, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 628, 717}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 85, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 197, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 631, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 519, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"134 0 LINE SMOOTH",
"149 0 OFFCURVE",
"155 9 OFFCURVE",
"161 19 CURVE SMOOTH",
"348 299 LINE SMOOTH",
"351 306 OFFCURVE",
"354 312 OFFCURVE",
"357 319 CURVE",
"549 19 LINE SMOOTH",
"555 10 OFFCURVE",
"561 0 OFFCURVE",
"576 0 CURVE SMOOTH",
"672 0 LINE",
"427 373 LINE",
"664 717 LINE",
"572 717 LINE SMOOTH",
"561 717 OFFCURVE",
"556 711 OFFCURVE",
"549 701 CURVE SMOOTH",
"373 439 LINE SMOOTH",
"368 431 OFFCURVE",
"365 423 OFFCURVE",
"362 416 CURVE",
"175 703 LINE SMOOTH",
"169 712 OFFCURVE",
"164 717 OFFCURVE",
"151 717 CURVE SMOOTH",
"54 717 LINE",
"291 368 LINE",
"44 0 LINE"
);
},
{
closed = 1;
nodes = (
"182 0 LINE",
"182 40 LINE",
"97 40 LINE",
"97 0 LINE"
);
},
{
closed = 1;
nodes = (
"615 0 LINE",
"615 40 LINE",
"530 40 LINE",
"530 0 LINE"
);
},
{
closed = 1;
nodes = (
"195 692 LINE",
"195 717 LINE",
"120 717 LINE",
"120 692 LINE"
);
},
{
closed = 1;
nodes = (
"609 692 LINE",
"609 717 LINE",
"534 717 LINE",
"534 692 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
14 0 2 2 0 1 30 1 1 0 0 11 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
14 0 2 2 0 1 30 1 1 0 0 2 1 0 36 3 1 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 0 2 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
14 0 2 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "EC2E736B-B98E-4555-9120-810F7CF1BA2F";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"576 38 LINE SMOOTH",
"573 38 OFFCURVE",
"568 39 OFFCURVE",
"563 39 CURVE SMOOTH",
"558 39 OFFCURVE",
"552 40 OFFCURVE",
"545 40 CURVE",
"318 366 LINE",
"535 669 LINE",
"575 671 LINE",
"588 672 OFFCURVE",
"595 678 OFFCURVE",
"595 689 CURVE SMOOTH",
"595 708 LINE",
"397 708 LINE",
"397 689 LINE SMOOTH",
"397 678 OFFCURVE",
"404 672 OFFCURVE",
"417 671 CURVE",
"478 669 LINE",
"291 403 LINE SMOOTH",
"289 400 OFFCURVE",
"286 393 OFFCURVE",
"284 387 CURVE",
"90 669 LINE",
"145 671 LINE",
"158 672 OFFCURVE",
"164 678 OFFCURVE",
"164 689 CURVE SMOOTH",
"164 708 LINE",
"-30 708 LINE",
"-30 689 LINE SMOOTH",
"-30 678 OFFCURVE",
"-23 672 OFFCURVE",
"-10 671 CURVE",
"31 669 LINE",
"246 363 LINE",
"19 40 LINE",
"-22 38 LINE",
"-35 37 OFFCURVE",
"-42 31 OFFCURVE",
"-42 20 CURVE SMOOTH",
"-42 0 LINE",
"157 0 LINE",
"157 20 LINE SMOOTH",
"157 31 OFFCURVE",
"150 37 OFFCURVE",
"137 38 CURVE",
"75 40 LINE",
"275 324 LINE",
"278 329 OFFCURVE",
"281 333 OFFCURVE",
"282 338 CURVE",
"486 40 LINE",
"475 40 OFFCURVE",
"465 39 OFFCURVE",
"456 39 CURVE SMOOTH",
"447 39 OFFCURVE",
"440 38 OFFCURVE",
"437 38 CURVE SMOOTH",
"430 38 LINE",
"417 37 OFFCURVE",
"410 31 OFFCURVE",
"410 20 CURVE SMOOTH",
"410 0 LINE",
"518 0 LINE",
"522 0 LINE",
"558 0 LINE",
"573 0 LINE",
"602 0 LINE",
"602 20 LINE SMOOTH",
"602 31 OFFCURVE",
"595 37 OFFCURVE",
"582 38 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 562;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "5BBB79B5-BDCF-480E-8C67-F5E8C7D1954B";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"654 62 LINE",
"648 64 OFFCURVE",
"626 68 OFFCURVE",
"588 74 CURVE",
"391 373 LINE",
"578 644 LINE",
"616 650 OFFCURVE",
"639 654 OFFCURVE",
"647 656 CURVE SMOOTH",
"655 658 OFFCURVE",
"660 664 OFFCURVE",
"660 674 CURVE SMOOTH",
"660 717 LINE",
"402 717 LINE",
"402 674 LINE SMOOTH",
"402 664 OFFCURVE",
"408 658 OFFCURVE",
"418 656 CURVE SMOOTH",
"444 651 OFFCURVE",
"462 646 OFFCURVE",
"474 644 CURVE",
"337 440 LINE SMOOTH",
"332 432 OFFCURVE",
"328 423 OFFCURVE",
"326 416 CURVE",
"177 646 LINE",
"199 650 OFFCURVE",
"215 653 OFFCURVE",
"225 655 CURVE SMOOTH",
"235 657 OFFCURVE",
"241 664 OFFCURVE",
"241 674 CURVE SMOOTH",
"241 716 LINE",
"-14 716 LINE",
"-14 674 LINE SMOOTH",
"-14 664 OFFCURVE",
"-9 657 OFFCURVE",
"1 655 CURVE",
"7 653 OFFCURVE",
"29 649 OFFCURVE",
"67 643 CURVE",
"254 368 LINE",
"56 72 LINE",
"14 65 OFFCURVE",
"-8 61 OFFCURVE",
"-10 61 CURVE",
"-20 59 OFFCURVE",
"-26 52 OFFCURVE",
"-26 42 CURVE SMOOTH",
"-26 0 LINE",
"232 0 LINE",
"232 42 LINE SMOOTH",
"232 52 OFFCURVE",
"227 59 OFFCURVE",
"217 61 CURVE SMOOTH",
"181 68 OFFCURVE",
"162 72 OFFCURVE",
"160 72 CURVE",
"311 298 LINE SMOOTH",
"315 304 OFFCURVE",
"318 311 OFFCURVE",
"320 318 CURVE",
"477 72 LINE",
"477 72 OFFCURVE",
"468 71 OFFCURVE",
"451 67 CURVE SMOOTH",
"434 63 OFFCURVE",
"424 61 OFFCURVE",
"420 61 CURVE",
"410 59 OFFCURVE",
"405 52 OFFCURVE",
"405 42 CURVE SMOOTH",
"405 0 LINE",
"668 0 LINE",
"668 42 LINE SMOOTH",
"668 52 OFFCURVE",
"664 59 OFFCURVE",
"654 61 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
14 0 2 2 0 1 30 1 1 0 0 11 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
14 0 2 2 0 1 30 1 1 0 0 2 1 0 36 3 1 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 0 2 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
14 0 2 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 643;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "E187F192-FA77-4705-A742-5C1D037AFD70";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"693 91 OFFCURVE",
"668 94 OFFCURVE",
"623 99 CURVE",
"447 378 LINE",
"613 624 LINE",
"658 629 OFFCURVE",
"683 632 OFFCURVE",
"689 633 CURVE",
"706 637 OFFCURVE",
"714 647 OFFCURVE",
"714 664 CURVE SMOOTH",
"714 723 LINE",
"680 723 LINE",
"645 723 LINE",
"634 723 LINE",
"551 723 LINE",
"409 723 LINE",
"409 664 LINE SMOOTH",
"409 647 OFFCURVE",
"417 637 OFFCURVE",
"434 633 CURVE SMOOTH",
"451 629 OFFCURVE",
"464 627 OFFCURVE",
"472 625 CURVE",
"372 467 LINE",
"369 463 OFFCURVE",
"367 458 OFFCURVE",
"365 454 CURVE SMOOTH",
"363 450 OFFCURVE",
"361 445 OFFCURVE",
"359 441 CURVE",
"245 626 LINE",
"251 627 OFFCURVE",
"262 630 OFFCURVE",
"278 633 CURVE",
"295 637 OFFCURVE",
"303 647 OFFCURVE",
"303 664 CURVE SMOOTH",
"303 723 LINE",
"163 723 LINE",
"72 723 LINE",
"67 723 LINE",
"29 723 LINE",
"-8 723 LINE",
"-8 664 LINE SMOOTH",
"-8 647 OFFCURVE",
"0 637 OFFCURVE",
"17 633 CURVE SMOOTH",
"22 632 OFFCURVE",
"48 629 OFFCURVE",
"94 624 CURVE",
"260 372 LINE",
"83 99 LINE",
"38 94 OFFCURVE",
"13 91 OFFCURVE",
"8 90 CURVE SMOOTH",
"-9 86 OFFCURVE",
"-18 76 OFFCURVE",
"-18 59 CURVE SMOOTH",
"-18 0 LINE",
"19 0 LINE",
"57 0 LINE",
"63 0 LINE",
"145 0 LINE",
"293 0 LINE",
"293 59 LINE SMOOTH",
"293 76 OFFCURVE",
"285 86 OFFCURVE",
"268 90 CURVE SMOOTH",
"251 94 OFFCURVE",
"236 97 OFFCURVE",
"226 99 CURVE",
"339 279 LINE SMOOTH",
"341 282 OFFCURVE",
"342 285 OFFCURVE",
"344 289 CURVE",
"346 292 OFFCURVE",
"348 296 OFFCURVE",
"349 300 CURVE",
"472 96 LINE",
"468 95 OFFCURVE",
"457 93 OFFCURVE",
"442 90 CURVE SMOOTH",
"425 86 OFFCURVE",
"417 76 OFFCURVE",
"417 59 CURVE SMOOTH",
"417 0 LINE",
"552 0 LINE",
"644 0 LINE",
"653 0 LINE",
"686 0 LINE",
"724 0 LINE",
"724 59 LINE SMOOTH",
"724 76 OFFCURVE",
"716 86 OFFCURVE",
"699 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
14 0 2 2 0 1 30 1 1 0 0 11 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 0 2 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
14 0 2 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 712;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 43, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 39, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 523, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 519, 700}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 27, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 31, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 531, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 535, 0}";
}
);
layerId = "7ED21053-82B6-4EE0-A9CE-0FAC64B47095";
name = "Jan 25 23, 15:57";
paths = (
{
closed = 1;
nodes = (
"21 0 LINE SMOOTH",
"23 0 OFFCURVE",
"24.667 0.833 OFFCURVE",
"26 2.5 CURVE SMOOTH",
"27.333 4.167 OFFCURVE",
"29 5 OFFCURVE",
"30 7 CURVE SMOOTH",
"277 346 LINE SMOOTH",
"279 349 OFFCURVE",
"281 351.667 OFFCURVE",
"281 353 CURVE",
"532 7 LINE SMOOTH",
"533 6 OFFCURVE",
"533.667 5 OFFCURVE",
"535 3 CURVE SMOOTH",
"536.333 1 OFFCURVE",
"538.333 0 OFFCURVE",
"541 0 CURVE SMOOTH",
"552 0 LINE",
"290 360 LINE",
"540 700 LINE",
"529 700 LINE SMOOTH",
"525 700 OFFCURVE",
"523 697 OFFCURVE",
"520 693 CURVE SMOOTH",
"286 372 LINE",
"282 365 LINE",
"42 693 LINE",
"40.667 695.667 OFFCURVE",
"38.333 700 OFFCURVE",
"33 700 CURVE SMOOTH",
"22 700 LINE",
"273 358 LINE",
"10 0 LINE"
);
},
{
closed = 1;
nodes = (
"35 0 LINE",
"35 9 LINE",
"18 9 LINE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"545 0 LINE",
"545 8 LINE",
"530 8 LINE",
"530 0 LINE"
);
},
{
closed = 1;
nodes = (
"44 692 LINE",
"44 700 LINE",
"29 700 LINE",
"29 692 LINE"
);
},
{
closed = 1;
nodes = (
"533 694 LINE",
"533 700 LINE",
"520 700 LINE",
"520 694 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 562;
},
{
anchors = (
{
name = bottom;
position = "{332, 0}";
},
{
name = top;
position = "{332, 700}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 92, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 88, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 572, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 568, 700}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 80, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 76, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 580, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 584, 0}";
}
);
layerId = "4796E1D2-1061-47AF-9CAE-3DC59817E60E";
name = "Jan 25 23, 17:07";
paths = (
{
closed = 1;
nodes = (
"70 0 LINE SMOOTH",
"72 0 OFFCURVE",
"78 5 OFFCURVE",
"79 7 CURVE SMOOTH",
"326 346 LINE SMOOTH",
"328 349 OFFCURVE",
"330 352 OFFCURVE",
"330 353 CURVE",
"581 7 LINE SMOOTH",
"584 2 OFFCURVE",
"586 0 OFFCURVE",
"590 0 CURVE SMOOTH",
"601 0 LINE",
"339 360 LINE",
"589 700 LINE",
"578 700 LINE SMOOTH",
"574 700 OFFCURVE",
"572 697 OFFCURVE",
"569 693 CURVE SMOOTH",
"337 375 LINE SMOOTH",
"335 372 OFFCURVE",
"333 368 OFFCURVE",
"331 365 CURVE",
"91 693 LINE SMOOTH",
"88 697 OFFCURVE",
"87 700 OFFCURVE",
"82 700 CURVE SMOOTH",
"71 700 LINE",
"322 358 LINE",
"59 0 LINE"
);
},
{
closed = 1;
nodes = (
"84 0 LINE",
"84 9 LINE",
"67 9 LINE",
"67 0 LINE"
);
},
{
closed = 1;
nodes = (
"594 0 LINE",
"594 8 LINE",
"579 8 LINE",
"579 0 LINE"
);
},
{
closed = 1;
nodes = (
"93 692 LINE",
"93 700 LINE",
"78 700 LINE",
"78 692 LINE"
);
},
{
closed = 1;
nodes = (
"582 694 LINE",
"582 700 LINE",
"569 700 LINE",
"569 694 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 664;
},
{
anchors = (
{
name = bottom;
position = "{322, 0}";
},
{
name = top;
position = "{322, 717}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 59, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 171, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 479, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 591, 717}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 48, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 160, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 594, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 482, 0}";
}
);
layerId = "52EC5C61-9548-46F2-ACB3-06AB6AE6D5E6";
name = "Jan 25 23, 17:07";
paths = (
{
closed = 1;
nodes = (
"97 0 LINE SMOOTH",
"112 0 OFFCURVE",
"118 9 OFFCURVE",
"124 19 CURVE SMOOTH",
"311 299 LINE SMOOTH",
"314 306 OFFCURVE",
"317 312 OFFCURVE",
"320 319 CURVE",
"512 19 LINE SMOOTH",
"518 10 OFFCURVE",
"524 0 OFFCURVE",
"539 0 CURVE SMOOTH",
"635 0 LINE",
"390 373 LINE",
"627 717 LINE",
"535 717 LINE SMOOTH",
"524 717 OFFCURVE",
"519 711 OFFCURVE",
"512 701 CURVE SMOOTH",
"336 439 LINE SMOOTH",
"331 431 OFFCURVE",
"328 423 OFFCURVE",
"325 416 CURVE",
"138 703 LINE SMOOTH",
"132 712 OFFCURVE",
"127 717 OFFCURVE",
"114 717 CURVE SMOOTH",
"17 717 LINE",
"254 368 LINE",
"7 0 LINE"
);
},
{
closed = 1;
nodes = (
"145 0 LINE",
"145 40 LINE",
"60 40 LINE",
"60 0 LINE"
);
},
{
closed = 1;
nodes = (
"578 0 LINE",
"578 40 LINE",
"493 40 LINE",
"493 0 LINE"
);
},
{
closed = 1;
nodes = (
"158 692 LINE",
"158 717 LINE",
"83 717 LINE",
"83 692 LINE"
);
},
{
closed = 1;
nodes = (
"572 692 LINE",
"572 717 LINE",
"497 717 LINE",
"497 692 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
14 0 2 2 0 1 30 1 1 0 0 11 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
14 0 2 2 0 1 30 1 1 0 0 2 1 0 36 3 1 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 0 2 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
14 0 2 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
leftKerningGroup = X;
leftMetricsKey = A;
note = X;
rightKerningGroup = K;
rightMetricsKey = A;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
anchors = (
{
name = bottom;
position = "{350, 0}";
},
{
name = top;
position = "{350, 700}";
},
{
name = topleft;
position = "{83, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 98, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 94, 700}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 606, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 602, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 344, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"356 0 LINE",
"356 298 LINE",
"617 700 LINE",
"607 700 LINE SMOOTH",
"604 700 OFFCURVE",
"602 699 OFFCURVE",
"600 696 CURVE SMOOTH",
"365 331 LINE SMOOTH",
"361 325 OFFCURVE",
"353 313 OFFCURVE",
"350 307 CURVE",
"346 315 OFFCURVE",
"341 323 OFFCURVE",
"336 331 CURVE SMOOTH",
"100 696 LINE SMOOTH",
"98 699 OFFCURVE",
"96 700 OFFCURVE",
"93 700 CURVE SMOOTH",
"83 700 LINE",
"344 298 LINE",
"344 0 LINE"
);
},
{
closed = 1;
nodes = (
"105 691 LINE",
"105 700 LINE",
"90 700 LINE",
"90 691 LINE"
);
},
{
closed = 1;
nodes = (
"610 691 LINE",
"610 700 LINE",
"596 700 LINE",
"596 691 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
11 2 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
},
{
anchors = (
{
name = bottom;
position = "{357, 0}";
},
{
name = top;
position = "{357, 729}";
},
{
name = topleft;
position = "{78, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 218, 729}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 525, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 628, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 272, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"441 0 LINE",
"441 277 LINE",
"705 729 LINE",
"555 729 LINE SMOOTH",
"531 729 OFFCURVE",
"509 710 OFFCURVE",
"500 692 CURVE SMOOTH",
"398 480 LINE SMOOTH",
"379 441 OFFCURVE",
"365 412 OFFCURVE",
"358 391 CURVE",
"347 419 OFFCURVE",
"332 446 OFFCURVE",
"316 480 CURVE SMOOTH",
"213 692 LINE SMOOTH",
"203 713 OFFCURVE",
"186 729 OFFCURVE",
"157 729 CURVE SMOOTH",
"8 729 LINE",
"272 277 LINE",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"229 666 LINE",
"229 729 LINE",
"155 729 LINE",
"155 666 LINE"
);
},
{
closed = 1;
nodes = (
"559 666 LINE",
"559 729 LINE",
"485 729 LINE",
"485 666 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
22 20 6 4 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 1 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
12 3 0 3 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 713;
},
{
anchors = (
{
name = bottom;
position = "{352, 0}";
},
{
name = top;
position = "{352, 717}";
},
{
name = topleft;
position = "{87, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 85, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 197, 717}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 506, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 618, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 304, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 400, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"400 0 LINE",
"400 285 LINE",
"663 717 LINE",
"577 717 LINE SMOOTH",
"561 717 OFFCURVE",
"551 704 OFFCURVE",
"545 694 CURVE SMOOTH",
"381 416 LINE SMOOTH",
"368 393 OFFCURVE",
"360 373 OFFCURVE",
"353 352 CURVE",
"345 372 OFFCURVE",
"338 392 OFFCURVE",
"324 416 CURVE SMOOTH",
"160 694 LINE SMOOTH",
"152 707 OFFCURVE",
"143 717 OFFCURVE",
"126 717 CURVE SMOOTH",
"41 717 LINE",
"304 285 LINE",
"304 0 LINE"
);
},
{
closed = 1;
nodes = (
"184 663 LINE",
"184 717 LINE",
"109 717 LINE",
"109 663 LINE"
);
},
{
closed = 1;
nodes = (
"605 663 LINE",
"605 717 LINE",
"504 717 LINE",
"504 663 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
20 18 6 4 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 1 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 15 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
12 3 0 3 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "F469BF20-6D05-4D46-BB20-EABA24941B16";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"455 708 LINE",
"455 689 LINE SMOOTH",
"455 678 OFFCURVE",
"462 672 OFFCURVE",
"475 671 CURVE",
"527 669 LINE",
"342 370 LINE SMOOTH",
"333 356 OFFCURVE",
"331 349 OFFCURVE",
"321 326 CURVE",
"313 345 OFFCURVE",
"310 354 OFFCURVE",
"300 370 CURVE SMOOTH",
"114 669 LINE",
"166 671 LINE",
"179 672 OFFCURVE",
"186 678 OFFCURVE",
"186 689 CURVE SMOOTH",
"186 708 LINE",
"1 708 LINE",
"1 689 LINE SMOOTH",
"1 678 OFFCURVE",
"8 672 OFFCURVE",
"21 671 CURVE",
"58 669 LINE",
"295 292 LINE",
"295 40 LINE",
"231 38 LINE",
"218 37 OFFCURVE",
"211 31 OFFCURVE",
"211 20 CURVE SMOOTH",
"211 0 LINE",
"430 0 LINE",
"430 20 LINE SMOOTH",
"430 31 OFFCURVE",
"424 37 OFFCURVE",
"411 38 CURVE",
"346 40 LINE",
"346 292 LINE",
"583 669 LINE",
"620 671 LINE",
"633 672 OFFCURVE",
"640 678 OFFCURVE",
"640 689 CURVE SMOOTH",
"640 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
11 2 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 574;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "06E072AB-A918-4B46-A942-0AA9B6E917D6";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"407 716 LINE",
"407 674 LINE SMOOTH",
"407 664 OFFCURVE",
"411 657 OFFCURVE",
"421 655 CURVE SMOOTH",
"455 648 OFFCURVE",
"475 644 OFFCURVE",
"479 644 CURVE",
"345 416 LINE SMOOTH",
"335 399 OFFCURVE",
"325 378 OFFCURVE",
"316 352 CURVE",
"308 376 OFFCURVE",
"297 397 OFFCURVE",
"287 415 CURVE SMOOTH",
"153 643 LINE",
"157 643 OFFCURVE",
"176 647 OFFCURVE",
"210 654 CURVE SMOOTH",
"220 656 OFFCURVE",
"225 663 OFFCURVE",
"225 673 CURVE SMOOTH",
"225 716 LINE",
"-15 716 LINE",
"-15 673 LINE SMOOTH",
"-15 663 OFFCURVE",
"-11 656 OFFCURVE",
"-1 654 CURVE SMOOTH",
"9 652 OFFCURVE",
"25 648 OFFCURVE",
"49 642 CURVE",
"267 284 LINE",
"267 72 LINE",
"211 60 LINE SMOOTH",
"201 58 OFFCURVE",
"195 52 OFFCURVE",
"195 42 CURVE SMOOTH",
"195 -1 LINE",
"267 -1 LINE",
"364 -1 LINE",
"436 -1 LINE",
"436 42 LINE SMOOTH",
"436 52 OFFCURVE",
"431 58 OFFCURVE",
"421 60 CURVE SMOOTH",
"387 66 OFFCURVE",
"368 71 OFFCURVE",
"364 72 CURVE",
"364 284 LINE",
"583 642 LINE",
"609 648 OFFCURVE",
"627 652 OFFCURVE",
"635 654 CURVE SMOOTH",
"643 656 OFFCURVE",
"647 662 OFFCURVE",
"647 672 CURVE SMOOTH",
"647 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
20 18 6 4 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 1 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 15 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
12 3 0 3 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 629;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "0019768F-251C-4C56-B659-AC6CF1137688";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"672 723 LINE",
"654 723 LINE",
"612 723 LINE",
"553 723 LINE",
"418 723 LINE",
"418 664 LINE SMOOTH",
"418 647 OFFCURVE",
"426 637 OFFCURVE",
"443 633 CURVE",
"444 633 OFFCURVE",
"446 633 OFFCURVE",
"448 632 CURVE",
"450 632 OFFCURVE",
"453 630 OFFCURVE",
"457 629 CURVE SMOOTH",
"461 628 OFFCURVE",
"467 627 OFFCURVE",
"472 626 CURVE",
"377 451 LINE SMOOTH",
"369 437 OFFCURVE",
"363 424 OFFCURVE",
"357 411 CURVE SMOOTH",
"351 398 OFFCURVE",
"346 386 OFFCURVE",
"342 373 CURVE",
"337 385 OFFCURVE",
"333 398 OFFCURVE",
"327 411 CURVE SMOOTH",
"321 424 OFFCURVE",
"315 437 OFFCURVE",
"307 451 CURVE SMOOTH",
"211 626 LINE",
"216 627 OFFCURVE",
"221 628 OFFCURVE",
"225 629 CURVE SMOOTH",
"229 630 OFFCURVE",
"233 631 OFFCURVE",
"235 632 CURVE",
"237 632 OFFCURVE",
"238 633 OFFCURVE",
"239 633 CURVE",
"256 637 OFFCURVE",
"264 647 OFFCURVE",
"264 664 CURVE SMOOTH",
"264 723 LINE",
"129 723 LINE",
"70 723 LINE",
"29 723 LINE",
"11 723 LINE",
"-6 723 LINE",
"-6 664 LINE SMOOTH",
"-6 647 OFFCURVE",
"2 637 OFFCURVE",
"19 633 CURVE",
"20 633 OFFCURVE",
"22 633 OFFCURVE",
"25 632 CURVE",
"28 632 OFFCURVE",
"33 630 OFFCURVE",
"40 629 CURVE SMOOTH",
"47 628 OFFCURVE",
"58 626 OFFCURVE",
"70 624 CURVE",
"274 281 LINE",
"274 99 LINE",
"262 97 OFFCURVE",
"252 95 OFFCURVE",
"245 94 CURVE SMOOTH",
"238 93 OFFCURVE",
"233 92 OFFCURVE",
"230 91 CURVE SMOOTH",
"227 90 OFFCURVE",
"224 90 OFFCURVE",
"223 90 CURVE",
"206 86 OFFCURVE",
"198 76 OFFCURVE",
"198 59 CURVE SMOOTH",
"198 0 LINE",
"274 0 LINE",
"409 0 LINE",
"484 0 LINE",
"484 59 LINE SMOOTH",
"484 76 OFFCURVE",
"476 86 OFFCURVE",
"459 90 CURVE",
"458 90 OFFCURVE",
"456 91 OFFCURVE",
"453 91 CURVE SMOOTH",
"450 91 OFFCURVE",
"445 93 OFFCURVE",
"438 94 CURVE SMOOTH",
"431 95 OFFCURVE",
"421 97 OFFCURVE",
"409 99 CURVE",
"409 281 LINE",
"613 624 LINE",
"625 626 OFFCURVE",
"635 628 OFFCURVE",
"642 629 CURVE SMOOTH",
"649 630 OFFCURVE",
"654 632 OFFCURVE",
"657 632 CURVE SMOOTH",
"660 632 OFFCURVE",
"661 633 OFFCURVE",
"663 633 CURVE",
"680 637 OFFCURVE",
"688 647 OFFCURVE",
"688 664 CURVE SMOOTH",
"688 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
22 20 6 4 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
12 3 0 3 0 1 1 30 2 1 1 1 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 3 0 3 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
12 3 0 3 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 677;
}
);
leftKerningGroup = Y;
leftMetricsKey = V;
note = Y;
rightKerningGroup = Y;
rightMetricsKey = V;
unicode = 0059;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 224, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 221, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 228, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 00DD;
},
{
glyphname = Ycircumflex;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 210, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 198, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 162, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 0176;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 210, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 198, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 162, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 0178;
},
{
glyphname = Ydotbelow;
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 312, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 285, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 265, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 189, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 165, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 136, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 1EF2;
},
{
glyphname = Yhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = top;
position = "{359, 700}";
},
{
name = topleft;
position = "{92, 700}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 700}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 700}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 353, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 365, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"365 0 LINE",
"365 298 LINE",
"572 629 LINE SMOOTH",
"598 670 OFFCURVE",
"627.333 697 OFFCURVE",
"666 697 CURVE SMOOTH",
"683.333 697 OFFCURVE",
"698.333 693.333 OFFCURVE",
"717 688 CURVE SMOOTH",
"722.333 686.667 OFFCURVE",
"727 686 OFFCURVE",
"728 690 CURVE SMOOTH",
"729 694 LINE",
"705 703.333 OFFCURVE",
"688.333 707 OFFCURVE",
"667 707 CURVE SMOOTH",
"621.667 707 OFFCURVE",
"591 679 OFFCURVE",
"563 635 CURVE SMOOTH",
"374 331 LINE SMOOTH",
"371 327 OFFCURVE",
"368.667 323 OFFCURVE",
"366 319 CURVE SMOOTH",
"363.333 315 OFFCURVE",
"361 311 OFFCURVE",
"359 307 CURVE",
"358 311 OFFCURVE",
"356 315 OFFCURVE",
"353 319 CURVE SMOOTH",
"350 323 OFFCURVE",
"348 327 OFFCURVE",
"345 331 CURVE SMOOTH",
"109 696 LINE SMOOTH",
"107 699 OFFCURVE",
"105.333 700 OFFCURVE",
"102 700 CURVE SMOOTH",
"92 700 LINE",
"353 298 LINE",
"353 0 LINE"
);
},
{
closed = 1;
nodes = (
"114 691 LINE",
"114 700 LINE",
"99 700 LINE",
"99 691 LINE"
);
}
);
width = 730;
},
{
anchors = (
{
name = bottom;
position = "{359, 0}";
},
{
name = top;
position = "{359, 717}";
},
{
name = topleft;
position = "{94, 717}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 92, 717}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 204, 717}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 311, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 407, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"408 0 LINE",
"408 286 LINE",
"595 597 LINE SMOOTH",
"615 631 OFFCURVE",
"639.667 650 OFFCURVE",
"673 650 CURVE SMOOTH",
"687.667 650 OFFCURVE",
"703.333 645.667 OFFCURVE",
"714 643 CURVE SMOOTH",
"727.333 639 OFFCURVE",
"740 640 OFFCURVE",
"745 659 CURVE SMOOTH",
"758 706 LINE",
"731.308 717.122 OFFCURVE",
"698.979 724 OFFCURVE",
"669 724 CURVE SMOOTH",
"602.333 724 OFFCURVE",
"557 693 OFFCURVE",
"513 620 CURVE SMOOTH",
"390 416 LINE SMOOTH",
"383 404 OFFCURVE",
"377 392 OFFCURVE",
"372 381 CURVE SMOOTH",
"368 372 OFFCURVE",
"364 362 OFFCURVE",
"360 353 CURVE",
"356.667 363 OFFCURVE",
"352.5 373 OFFCURVE",
"347.5 383 CURVE SMOOTH",
"342.5 393 OFFCURVE",
"338 404 OFFCURVE",
"331 416 CURVE SMOOTH",
"167 694 LINE",
"160.333 707.333 OFFCURVE",
"151.333 717 OFFCURVE",
"134 717 CURVE SMOOTH",
"49 717 LINE",
"311 286 LINE",
"311 0 LINE"
);
},
{
closed = 1;
nodes = (
"191 663 LINE",
"191 717 LINE",
"116 717 LINE",
"116 663 LINE"
);
}
);
width = 759;
},
{
anchors = (
{
name = bottom;
position = "{357, 0}";
},
{
name = top;
position = "{357, 729}";
},
{
name = topleft;
position = "{78, 729}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 115, 729}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 218, 729}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 272, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"441 0 LINE",
"441 278 LINE",
"611 572 LINE SMOOTH",
"628.333 601.333 OFFCURVE",
"646 614 OFFCURVE",
"674 614 CURVE SMOOTH",
"688.667 614 OFFCURVE",
"704 610.333 OFFCURVE",
"708 609 CURVE SMOOTH",
"729.61 602.826 OFFCURVE",
"748.947 609.138 OFFCURVE",
"756 635 CURVE SMOOTH",
"778 715 LINE",
"744.663 727.822 OFFCURVE",
"706.605 737 OFFCURVE",
"668 737 CURVE SMOOTH",
"576.887 737 OFFCURVE",
"517.968 700.742 OFFCURVE",
"467 609 CURVE SMOOTH",
"399 480 LINE SMOOTH",
"391 466 OFFCURVE",
"384 452 OFFCURVE",
"378 439 CURVE SMOOTH",
"370 423 OFFCURVE",
"363 408 OFFCURVE",
"357 392 CURVE",
"351 408 OFFCURVE",
"344 425 OFFCURVE",
"335 442 CURVE SMOOTH",
"330 454 OFFCURVE",
"323 467 OFFCURVE",
"316 480 CURVE SMOOTH",
"213 692 LINE",
"201 713.333 OFFCURVE",
"186.333 729 OFFCURVE",
"157 729 CURVE SMOOTH",
"7 729 LINE",
"272 277 LINE",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"229 666 LINE",
"229 729 LINE",
"155 729 LINE",
"155 666 LINE"
);
}
);
width = 713;
}
);
unicode = 01B3;
},
{
glyphname = Yhookabove;
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 151, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 156, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 164, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 1EF6;
},
{
glyphname = Ymacron;
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 210, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 205, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 192, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 0232;
},
{
glyphname = Ytilde;
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 210, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 700;
},
{
components = (
{
name = Y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 198, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 703;
},
{
components = (
{
name = Y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 179, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 713;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
layers = (
{
anchors = (
{
name = bottom;
position = "{286, 0}";
},
{
name = center;
position = "{286, 346}";
},
{
name = top;
position = "{286, 700}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 542, 11}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 43, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"542 0 LINE",
"542 11 LINE",
"52 11 LINE",
"539 688 LINE SMOOTH",
"542 692 OFFCURVE",
"543 695 OFFCURVE",
"543 698 CURVE SMOOTH",
"543 700 LINE",
"43 700 LINE",
"43 689 LINE",
"526 689 LINE",
"38 11 LINE SMOOTH",
"36 9 OFFCURVE",
"35 6 OFFCURVE",
"35 2 CURVE SMOOTH",
"35 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 8 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
4 8 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
12 8 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 578;
},
{
anchors = (
{
name = bottom;
position = "{316, 0}";
},
{
name = center;
position = "{316, 365}";
},
{
name = top;
position = "{316, 729}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 593, 130}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 59, 599}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"593 0 LINE",
"593 130 LINE",
"246 130 LINE",
"588 619 LINE SMOOTH",
"598 634 OFFCURVE",
"604 651 OFFCURVE",
"604 668 CURVE SMOOTH",
"604 729 LINE",
"59 729 LINE",
"59 599 LINE",
"389 599 LINE",
"46 109 LINE SMOOTH",
"37 96 OFFCURVE",
"31 81 OFFCURVE",
"31 65 CURVE SMOOTH",
"31 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 15 0 15 14 13 8 7 6 5 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 3 0 0 36 4 1 3 3 11 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = center;
position = "{303, 359}";
},
{
name = top;
position = "{303, 717}";
}
);
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 570, 79}";
},
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 53, 638}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"570 0 LINE",
"570 79 LINE",
"161 79 LINE",
"567 649 LINE SMOOTH",
"574 659 OFFCURVE",
"577 670 OFFCURVE",
"577 681 CURVE SMOOTH",
"577 717 LINE",
"53 717 LINE",
"53 638 LINE",
"450 638 LINE",
"44 67 LINE SMOOTH",
"37 58 OFFCURVE",
"34 48 OFFCURVE",
"34 38 CURVE SMOOTH",
"34 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 12 11 7 6 5 4 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 3 0 0 36 4 1 3 3 11 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 0 1 0 0 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "FF662A2E-4418-466F-BA8D-2181E8E058D5";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"554 0 LINE",
"554 42 LINE",
"102 42 LINE",
"551 670 LINE SMOOTH",
"556 677 OFFCURVE",
"558 684 OFFCURVE",
"558 691 CURVE SMOOTH",
"558 708 LINE",
"47 708 LINE",
"47 666 LINE",
"490 666 LINE",
"40 36 LINE SMOOTH",
"36 30 OFFCURVE",
"35 25 OFFCURVE",
"35 19 CURVE SMOOTH",
"35 0 LINE"
);
},
{
closed = 1;
nodes = (
"554 152 LINE",
"530 152 LINE SMOOTH",
"516 152 OFFCURVE",
"510 143 OFFCURVE",
"509 127 CURVE",
"502 42 LINE",
"554 0 LINE"
);
},
{
closed = 1;
nodes = (
"47 556 LINE",
"71 556 LINE SMOOTH",
"85 556 OFFCURVE",
"91 565 OFFCURVE",
"92 581 CURVE",
"99 666 LINE",
"47 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 8 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
4 8 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
12 8 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 641;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "3BC53B7B-A818-421F-B3C6-DF804D09EFE4";
name = "Jan 15 23, 17:49";
paths = (
{
closed = 1;
nodes = (
"576 648 LINE SMOOTH",
"583 658 OFFCURVE",
"586 668 OFFCURVE",
"586 680 CURVE SMOOTH",
"586 716 LINE",
"62 716 LINE",
"62 638 LINE",
"62 542 LINE",
"110 542 LINE SMOOTH",
"122 542 OFFCURVE",
"130 547 OFFCURVE",
"132 559 CURVE",
"133 563 OFFCURVE",
"134 590 OFFCURVE",
"138 638 CURVE",
"459 638 LINE",
"53 66 LINE SMOOTH",
"47 57 OFFCURVE",
"44 48 OFFCURVE",
"44 38 CURVE SMOOTH",
"44 0 LINE",
"580 0 LINE",
"580 79 LINE",
"580 174 LINE",
"531 174 LINE SMOOTH",
"519 174 OFFCURVE",
"512 170 OFFCURVE",
"510 158 CURVE",
"509 154 OFFCURVE",
"507 127 OFFCURVE",
"503 79 CURVE",
"170 79 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 12 11 7 6 5 4 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 3 0 0 36 4 1 3 3 11 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 0 1 0 0 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 624;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "0626A71E-8C73-4E6D-9BFA-DFBC671E415F";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"560 631 LINE SMOOTH",
"569 644 OFFCURVE",
"573 658 OFFCURVE",
"573 673 CURVE SMOOTH",
"573 723 LINE",
"38 723 LINE",
"39 526 LINE",
"92 526 LINE SMOOTH",
"105 526 OFFCURVE",
"112 533 OFFCURVE",
"115 545 CURVE",
"115 548 OFFCURVE",
"119 571 OFFCURVE",
"124 616 CURVE",
"399 616 LINE",
"27 90 LINE",
"23 85 OFFCURVE",
"20 78 OFFCURVE",
"18 72 CURVE SMOOTH",
"16 66 OFFCURVE",
"15 60 OFFCURVE",
"15 53 CURVE SMOOTH",
"15 0 LINE",
"564 0 LINE",
"564 107 LINE",
"564 195 LINE",
"511 195 LINE SMOOTH",
"498 195 OFFCURVE",
"491 188 OFFCURVE",
"488 176 CURVE",
"488 173 OFFCURVE",
"484 150 OFFCURVE",
"479 107 CURVE",
"189 107 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 15 0 15 14 13 8 7 6 5 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 3 0 0 36 4 1 3 3 11 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
leftKerningGroup = Z;
note = Z;
rightKerningGroup = uni01F1;
unicode = 005A;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 160, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 578;
},
{
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 172, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 611;
},
{
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 187, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 635;
}
);
unicode = 0179;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 146, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 578;
},
{
components = (
{
name = Z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 149, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 611;
},
{
components = (
{
name = Z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 121, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 635;
}
);
unicode = 017D;
},
{
glyphname = Zdotaccent;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 248, 210}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 578;
},
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 218, 210}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 611;
},
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 212, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 635;
}
);
unicode = 017B;
},
{
glyphname = Zdotbelow;
layers = (
{
components = (
{
name = Z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 248, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 578;
},
{
components = (
{
name = Z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 236, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 611;
},
{
components = (
{
name = Z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 224, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 635;
}
);
unicode = 1E92;
},
{
color = 3;
glyphname = a;
layers = (
{
anchors = (
{
name = bottom;
position = "{218, 0}";
},
{
name = ogonek;
position = "{411, 2}";
},
{
name = top;
position = "{228, 490}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 377, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"254 -8 OFFCURVE",
"309 29 OFFCURVE",
"365 88 CURVE",
"368 8 LINE SMOOTH",
"368 3 OFFCURVE",
"370 0 OFFCURVE",
"375 0 CURVE SMOOTH",
"377 0 LINE",
"377 324 LINE SMOOTH",
"377 431 OFFCURVE",
"333 498 OFFCURVE",
"232 498 CURVE SMOOTH",
"164 498 OFFCURVE",
"116 471 OFFCURVE",
"68 420 CURVE",
"71 417 LINE SMOOTH",
"74 414 OFFCURVE",
"77 416 OFFCURVE",
"80 419 CURVE SMOOTH",
"124 461 OFFCURVE",
"169 488 OFFCURVE",
"232 488 CURVE SMOOTH",
"322 488 OFFCURVE",
"365 426 OFFCURVE",
"365 324 CURVE SMOOTH",
"365 261 LINE",
"254 258 OFFCURVE",
"174 244 OFFCURVE",
"122 220 CURVE SMOOTH",
"69 195 OFFCURVE",
"43 159 OFFCURVE",
"43 115 CURVE SMOOTH",
"43 34 OFFCURVE",
"103 -8 OFFCURVE",
"168 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"108 2 OFFCURVE",
"55 42 OFFCURVE",
"55 115 CURVE SMOOTH",
"55 220 OFFCURVE",
"213 246 OFFCURVE",
"365 251 CURVE",
"365 100 LINE",
"310 45 OFFCURVE",
"258 2 OFFCURVE",
"168 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
34 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 481;
},
{
anchors = (
{
name = bottom;
position = "{256, 0}";
},
{
name = ogonek;
position = "{461, 2}";
},
{
name = top;
position = "{266, 519}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 475, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"245 -8 OFFCURVE",
"292 16 OFFCURVE",
"341 60 CURVE",
"352 31 LINE SMOOTH",
"362 5 OFFCURVE",
"375 0 OFFCURVE",
"404 0 CURVE SMOOTH",
"475 0 LINE",
"475 324 LINE SMOOTH",
"475 444 OFFCURVE",
"396 529 OFFCURVE",
"272 529 CURVE SMOOTH",
"185 529 OFFCURVE",
"108 502 OFFCURVE",
"45 447 CURVE",
"73 398 LINE SMOOTH",
"82 383 OFFCURVE",
"97 371 OFFCURVE",
"118 371 CURVE SMOOTH",
"166 371 OFFCURVE",
"187 410 OFFCURVE",
"252 410 CURVE SMOOTH",
"299 410 OFFCURVE",
"324 385 OFFCURVE",
"324 324 CURVE SMOOTH",
"324 302 LINE",
"205 299 OFFCURVE",
"130 276 OFFCURVE",
"84 245 CURVE SMOOTH",
"38 213 OFFCURVE",
"21 172 OFFCURVE",
"21 135 CURVE SMOOTH",
"21 43 OFFCURVE",
"82 -8 OFFCURVE",
"177 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 95 OFFCURVE",
"169 107 OFFCURVE",
"169 143 CURVE SMOOTH",
"169 187 OFFCURVE",
"223 207 OFFCURVE",
"324 211 CURVE",
"324 139 LINE",
"293 108 OFFCURVE",
"266 95 OFFCURVE",
"226 95 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
43 42 1 0 47 46 42 53 43 53 36 34 29 27 24 22 19 18 10 8 0 41 1 41 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 9 1 6 6 0 1 0 36 1 8 2 0 0 12 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 8 1 0 0 12 31 9 1 6 6 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 8 1 0 6 1 6 0 1 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 9 1 6 0 1 6 1 0 35 9 1 6 6 1 1 0 36 0 1 6 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
anchors = (
{
name = bottom;
position = "{244, 0}";
},
{
name = ogonek;
position = "{438, 0}";
},
{
name = top;
position = "{254, 507}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 435, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"253 -8 OFFCURVE",
"300 20 OFFCURVE",
"354 68 CURVE",
"364 21 LINE SMOOTH",
"368 4 OFFCURVE",
"379 0 OFFCURVE",
"396 0 CURVE SMOOTH",
"435 0 LINE",
"435 324 LINE SMOOTH",
"435 439 OFFCURVE",
"372 516 OFFCURVE",
"259 516 CURVE SMOOTH",
"180 516 OFFCURVE",
"117 490 OFFCURVE",
"61 435 CURVE",
"77 407 LINE SMOOTH",
"82 398 OFFCURVE",
"91 390 OFFCURVE",
"103 390 CURVE SMOOTH",
"130 390 OFFCURVE",
"196 444 OFFCURVE",
"248 444 CURVE SMOOTH",
"313 444 OFFCURVE",
"348 403 OFFCURVE",
"348 324 CURVE SMOOTH",
"348 285 LINE",
"233 282 OFFCURVE",
"155 262 OFFCURVE",
"106 234 CURVE SMOOTH",
"57 205 OFFCURVE",
"36 167 OFFCURVE",
"36 127 CURVE SMOOTH",
"36 39 OFFCURVE",
"98 -8 OFFCURVE",
"178 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"157 55 OFFCURVE",
"122 78 OFFCURVE",
"122 131 CURVE SMOOTH",
"122 197 OFFCURVE",
"209 224 OFFCURVE",
"348 228 CURVE",
"348 123 LINE",
"307 80 OFFCURVE",
"264 55 OFFCURVE",
"204 55 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
43 42 49 48 42 57 43 57 37 35 30 28 25 23 20 19 11 9 2 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 8 1 6 6 0 1 0 36 1 1 0 0 12 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 0 0 0 12 31 8 1 6 6 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 0 0 0 15 31 8 1 6 6 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 0 6 1 6 0 1 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 8 1 6 0 1 6 1 0 35 8 1 6 6 1 1 0 36 0 1 6 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 520;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "2A5283F6-4316-4279-8B92-5595E8CB69B6";
name = "Jan 27 23, 12:36";
paths = (
{
closed = 1;
nodes = (
"271.327 -8 OFFCURVE",
"325.641 28.957 OFFCURVE",
"382 88 CURVE",
"385 8 LINE SMOOTH",
"385 3 OFFCURVE",
"387.333 0 OFFCURVE",
"392 0 CURVE SMOOTH",
"394 0 LINE",
"394 324 LINE SMOOTH",
"394 430.861 OFFCURVE",
"350 498 OFFCURVE",
"249 498 CURVE SMOOTH",
"181 498 OFFCURVE",
"133 470.667 OFFCURVE",
"85 420 CURVE",
"88 417 LINE SMOOTH",
"89 416 OFFCURVE",
"90.667 415 OFFCURVE",
"92 415 CURVE SMOOTH",
"96.127 415 OFFCURVE",
"122.026 440.438 OFFCURVE",
"136 451.5 CURVE SMOOTH",
"160.276 470.719 OFFCURVE",
"204.075 488 OFFCURVE",
"249 488 CURVE SMOOTH",
"338.832 488 OFFCURVE",
"382 425.659 OFFCURVE",
"382 324 CURVE SMOOTH",
"382 261 LINE",
"271.333 258.333 OFFCURVE",
"191.167 244.167 OFFCURVE",
"138.5 219.5 CURVE SMOOTH",
"85.833 194.833 OFFCURVE",
"60 159 OFFCURVE",
"60 115 CURVE SMOOTH",
"60 33.602 OFFCURVE",
"120.269 -8 OFFCURVE",
"185 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"124.599 2 OFFCURVE",
"72 42.451 OFFCURVE",
"72 115 CURVE SMOOTH",
"72 157 OFFCURVE",
"97.5 189.333 OFFCURVE",
"148.5 212 CURVE SMOOTH",
"199.5 234.667 OFFCURVE",
"277.333 247.667 OFFCURVE",
"382 251 CURVE",
"382 100 LINE",
"326.947 44.947 OFFCURVE",
"275.438 2 OFFCURVE",
"185 2 CURVE",
"185 2 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
34 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 469;
},
{
anchors = (
{
name = ogonek;
position = "{473, 0}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = "alpha-latin";
}
);
layerId = "927D9FDB-09DE-4B5A-9445-392DECA56DED";
name = Italic;
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
34 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 535;
},
{
anchors = (
{
name = ogonek;
position = "{481, 0}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = "alpha-latin";
}
);
layerId = "9401C768-2AE7-40C0-8F4C-45E817EB530C";
name = Italic;
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
43 42 49 48 42 57 43 57 37 35 30 28 25 23 20 19 11 9 2 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 8 1 6 6 0 1 0 36 1 1 0 0 12 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 0 0 0 12 31 8 1 6 6 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 0 0 0 15 31 8 1 6 6 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
33 1 4 3 47 5 2 6 7 2 30 0 4 3 2 3 4 2 50 0 0 6 1 6 0 1 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 8 1 6 0 1 6 1 0 35 8 1 6 6 1 1 0 36 0 1 6 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = ogonek;
position = "{494, 0}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = "alpha-latin";
}
);
layerId = "1C38F569-0A00-4625-9C18-2548FA7265E0";
name = Italic;
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
43 42 1 0 47 46 42 53 43 53 36 34 29 27 24 22 19 18 10 8 0 41 1 41 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 9 1 6 6 0 1 0 36 1 8 2 0 0 12 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 20 31 8 1 0 0 12 31 9 1 6 6 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
32 1 3 5 45 1 6 7 4 1 0 6 3 30 0 4 3 2 3 4 2 50 8 1 0 6 1 6 0 1 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 9 1 6 0 1 6 1 0 35 9 1 6 6 1 1 0 36 0 1 6 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
leftKerningGroup = a;
note = a;
rightMetricsKey = n;
unicode = 0061;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 102, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 123, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 137, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E1;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 0103;
},
{
glyphname = abreveacute;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 86, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 74, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 180, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 177, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 164, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 126, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 99, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EB5;
},
{
glyphname = acaron;
layers = (
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 01CE;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E2;
},
{
glyphname = acircumflexacute;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 88, -44}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 180, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 177, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 164, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EAB;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E4;
},
{
glyphname = adieresismacron;
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 88, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 88, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 107, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 71, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 101, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 01DF;
},
{
glyphname = adotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 177, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 164, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EA1;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 67, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 67, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 45, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E0;
},
{
glyphname = ahookabove;
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 29, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 73, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 1EA3;
},
{
glyphname = "alpha-latin";
layers = (
{
anchors = (
{
name = bottom;
position = "{268, 0}";
},
{
name = top;
position = "{268, 490}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 431, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"310 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"421 8 LINE SMOOTH",
"421 3 OFFCURVE",
"423 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"431 0 LINE",
"431 490 LINE",
"428 490 LINE SMOOTH",
"423 490 OFFCURVE",
"421 487 OFFCURVE",
"421 482 CURVE SMOOTH",
"419 410 LINE",
"382 470 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"114 498 OFFCURVE",
"41 388 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 75 OFFCURVE",
"109 -6 OFFCURVE",
"237 -6 CURVE"
);
},
{
closed = 1;
nodes = (
"116 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 384 OFFCURVE",
"120 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"326 488 OFFCURVE",
"377 461 OFFCURVE",
"419 395 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"309 4 OFFCURVE",
"237 4 CURVE"
);
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
position = "{286, 0}";
},
{
name = top;
position = "{286, 507}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"298 -7 OFFCURVE",
"352 28 OFFCURVE",
"396 81 CURVE",
"404 19 LINE SMOOTH",
"407 6 OFFCURVE",
"414 0 OFFCURVE",
"427 0 CURVE SMOOTH",
"481 0 LINE",
"481 507 LINE",
"427 507 LINE SMOOTH",
"414 507 OFFCURVE",
"407 501 OFFCURVE",
"404 488 CURVE SMOOTH",
"398 449 LINE",
"362 492 OFFCURVE",
"318 516 OFFCURVE",
"253 516 CURVE SMOOTH",
"116 516 OFFCURVE",
"34 399 OFFCURVE",
"34 252 CURVE SMOOTH",
"34 95 OFFCURVE",
"102 -7 OFFCURVE",
"226 -7 CURVE"
);
},
{
closed = 1;
nodes = (
"166 65 OFFCURVE",
"126 130 OFFCURVE",
"126 252 CURVE SMOOTH",
"126 376 OFFCURVE",
"178 446 OFFCURVE",
"273 446 CURVE SMOOTH",
"321 446 OFFCURVE",
"359 431 OFFCURVE",
"391 387 CURVE",
"391 142 LINE",
"355 93 OFFCURVE",
"312 65 OFFCURVE",
"255 65 CURVE"
);
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
position = "{302, 0}";
},
{
name = top;
position = "{302, 519}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"275 -8 OFFCURVE",
"326 21 OFFCURVE",
"368 66 CURVE",
"380 26 LINE SMOOTH",
"385 9 OFFCURVE",
"399 0 OFFCURVE",
"418 0 CURVE SMOOTH",
"514 0 LINE",
"514 519 LINE",
"418 519 LINE SMOOTH",
"399 519 OFFCURVE",
"386 510 OFFCURVE",
"380 493 CURVE SMOOTH",
"373 472 LINE",
"340 508 OFFCURVE",
"299 529 OFFCURVE",
"241 529 CURVE SMOOTH",
"105 529 OFFCURVE",
"19 410 OFFCURVE",
"19 258 CURVE SMOOTH",
"19 102 OFFCURVE",
"90 -8 OFFCURVE",
"207 -8 CURVE"
);
},
{
closed = 1;
nodes = (
"204 111 OFFCURVE",
"179 162 OFFCURVE",
"179 258 CURVE SMOOTH",
"179 359 OFFCURVE",
"213 415 OFFCURVE",
"278 415 CURVE SMOOTH",
"307 415 OFFCURVE",
"335 405 OFFCURVE",
"359 380 CURVE",
"359 160 LINE",
"334 129 OFFCURVE",
"303 111 OFFCURVE",
"261 111 CURVE"
);
}
);
width = 611;
}
);
leftMetricsKey = o;
rightMetricsKey = d;
unicode = 0251;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 107, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 0101;
},
{
glyphname = aogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 271, 2}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 296, 2}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 0105;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E5;
},
{
glyphname = aringacute;
layers = (
{
components = (
{
name = a;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 114, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = ringacutecomb;
transform = "{1, 0, 0, 1, 123, 12}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 01FB;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 481;
},
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 520;
},
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 572;
}
);
unicode = 00E3;
},
{
color = 3;
glyphname = ae;
layers = (
{
anchors = (
{
name = bottom;
position = "{381, 0}";
},
{
name = top;
position = "{381, 490}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 324, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"288 -8 OFFCURVE",
"367 62 OFFCURVE",
"374 174 CURVE",
"374 330 LINE SMOOTH",
"374 432 OFFCURVE",
"326 498 OFFCURVE",
"232 498 CURVE SMOOTH",
"164 498 OFFCURVE",
"116 471 OFFCURVE",
"68 420 CURVE",
"70 418 LINE SMOOTH",
"72 416 OFFCURVE",
"74 415 OFFCURVE",
"75 415 CURVE SMOOTH",
"87 415 OFFCURVE",
"127 488 OFFCURVE",
"232 488 CURVE SMOOTH",
"322 488 OFFCURVE",
"365 426 OFFCURVE",
"365 324 CURVE SMOOTH",
"365 281 LINE",
"254 278 OFFCURVE",
"174 262 OFFCURVE",
"122 235 CURVE SMOOTH",
"69 207 OFFCURVE",
"43 169 OFFCURVE",
"43 125 CURVE SMOOTH",
"43 31 OFFCURVE",
"103 -8 OFFCURVE",
"185 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"108 2 OFFCURVE",
"55 41 OFFCURVE",
"55 125 CURVE SMOOTH",
"55 231 OFFCURVE",
"211 267 OFFCURVE",
"365 271 CURVE",
"365 185 LINE SMOOTH",
"365 76 OFFCURVE",
"287 2 OFFCURVE",
"185 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
83 3 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
73 4 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 4 100 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
24 44 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
78 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
106 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
21 2 24 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
65 2 62 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
49 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
16 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
88 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 803;
},
{
anchors = (
{
name = bottom;
position = "{403, 0}";
},
{
name = top;
position = "{403, 519}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 307, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"270 -8 OFFCURVE",
"351 20 OFFCURVE",
"394 84 CURVE",
"419 432 LINE",
"393 500 OFFCURVE",
"331 529 OFFCURVE",
"255 529 CURVE SMOOTH",
"174 529 OFFCURVE",
"108 502 OFFCURVE",
"45 447 CURVE",
"73 398 LINE SMOOTH",
"82 383 OFFCURVE",
"97 371 OFFCURVE",
"118 371 CURVE SMOOTH",
"165 371 OFFCURVE",
"189 415 OFFCURVE",
"252 415 CURVE SMOOTH",
"299 415 OFFCURVE",
"324 385 OFFCURVE",
"324 324 CURVE SMOOTH",
"324 313 LINE",
"239 310 OFFCURVE",
"142 295 OFFCURVE",
"84 253 CURVE SMOOTH",
"42 222 OFFCURVE",
"21 180 OFFCURVE",
"21 141 CURVE SMOOTH",
"21 46 OFFCURVE",
"81 -8 OFFCURVE",
"188 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 95 OFFCURVE",
"169 112 OFFCURVE",
"169 148 CURVE SMOOTH",
"169 194 OFFCURVE",
"222 215 OFFCURVE",
"324 222 CURVE",
"324 214 LINE SMOOTH",
"324 132 OFFCURVE",
"288 95 OFFCURVE",
"226 95 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
70 69 1 0 87 85 79 78 73 72 69 77 70 77 64 62 57 55 52 50 47 46 38 36 28 26 20 18 15 13 11 9 0 68 1 68 16 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
66 60 2 7 0 32 22 2 4 2 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 11 1 6 12 1 1 3 6 1 1 0 38 15 10 2 7 7 0 1 0 36 9 14 2 0 0 20 31 13 1 2 2 4 1 0 36 5 1 4 4 18 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
66 60 2 7 0 32 22 2 4 13 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 11 1 6 12 1 1 3 6 1 1 0 38 15 10 2 7 7 0 1 0 36 9 14 2 0 0 20 31 0 2 2 4 1 0 36 5 1 4 4 18 31 0 13 13 4 1 0 36 5 1 4 4 18 4 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 97 values pushed */
66 60 2 10 0 32 22 2 4 13 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 11 1 6 12 1 1 3 6 1 1 0 38 15 1 10 10 0 1 0 36 9 14 2 0 0 20 31 0 7 7 0 1 0 36 9 14 2 0 0 20 31 0 2 2 4 1 0 36 5 1 4 4 18 31 0 13 13 4 1 0 36 5 1 4 4 18 4 32 12 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
111 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 93 values pushed */
66 60 2 10 0 32 22 2 4 13 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 15 1 10 7 0 10 1 0 35 9 14 2 0 0 7 8 0 7 1 0 38 11 1 6 12 1 1 3 6 1 1 0 38 0 2 13 4 2 1 0 35 0 13 4 4 13 1 0 35 0 13 13 4 1 0 36 5 1 4 13 4 1 0 33 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
144 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
66 60 2 10 0 32 22 2 4 13 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 14 1 0 15 1 10 7 0 10 1 0 38 0 9 0 7 8 9 7 1 0 38 11 1 6 12 1 1 3 6 1 1 0 38 0 2 13 4 2 1 0 35 0 13 4 4 13 1 0 35 0 13 13 4 1 0 36 5 1 4 13 4 1 0 33 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 101 values pushed */
66 60 2 10 0 32 22 2 4 13 2 30 0 8 7 6 7 8 6 50 0 3 12 2 12 3 2 50 14 1 0 15 1 10 7 0 10 1 0 38 0 9 0 7 8 9 7 1 0 38 0 1 12 6 1 1 0 35 11 1 6 0 12 3 6 12 1 0 38 0 2 13 4 2 1 0 35 0 13 4 4 13 1 0 35 0 13 13 4 1 0 36 5 1 4 13 4 1 0 33 11 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 103 values pushed */
66 60 2 10 0 32 22 2 5 13 2 30 0 8 7 6 7 8 6 50 0 3 12 2 12 3 2 50 14 1 0 15 1 10 7 0 10 1 0 38 0 9 0 7 8 9 7 1 0 38 0 11 0 1 12 11 1 1 0 38 0 6 0 12 3 6 12 1 0 38 0 2 13 4 2 1 0 35 0 13 0 5 4 13 5 1 0 38 0 2 2 4 1 0 36 0 4 2 4 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 834;
},
{
anchors = (
{
name = bottom;
position = "{398, 0}";
},
{
name = top;
position = "{398, 507}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 314, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"274 -8 OFFCURVE",
"355 28 OFFCURVE",
"391 108 CURVE",
"407 385 LINE",
"394 477 OFFCURVE",
"330 516 OFFCURVE",
"250 516 CURVE SMOOTH",
"174 516 OFFCURVE",
"117 490 OFFCURVE",
"61 435 CURVE",
"77 407 LINE SMOOTH",
"82 398 OFFCURVE",
"91 390 OFFCURVE",
"103 390 CURVE SMOOTH",
"131 390 OFFCURVE",
"196 446 OFFCURVE",
"248 446 CURVE SMOOTH",
"313 446 OFFCURVE",
"348 403 OFFCURVE",
"348 324 CURVE SMOOTH",
"348 299 LINE",
"233 296 OFFCURVE",
"155 276 OFFCURVE",
"106 245 CURVE SMOOTH",
"57 214 OFFCURVE",
"36 174 OFFCURVE",
"36 134 CURVE SMOOTH",
"36 40 OFFCURVE",
"99 -8 OFFCURVE",
"192 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"159 55 OFFCURVE",
"122 81 OFFCURVE",
"122 138 CURVE SMOOTH",
"122 204 OFFCURVE",
"209 239 OFFCURVE",
"348 243 CURVE",
"348 202 LINE SMOOTH",
"348 108 OFFCURVE",
"292 55 OFFCURVE",
"212 55 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
83 82 1 0 88 87 82 92 83 92 77 75 69 68 63 61 56 54 51 49 46 45 37 35 29 27 20 18 15 13 9 7 0 67 1 67 16 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 13 1 6 10 1 1 3 6 1 1 0 38 15 12 2 7 7 0 1 0 36 9 14 2 0 0 20 31 11 1 2 2 4 1 0 36 5 1 4 4 18 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 13 1 6 10 1 1 3 6 1 1 0 38 15 12 2 7 7 0 1 0 36 9 14 2 0 0 20 31 11 1 2 2 4 1 0 36 5 1 4 4 21 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 13 1 6 10 1 1 3 6 1 1 0 38 15 12 2 7 7 0 1 0 36 9 14 2 0 0 20 31 0 2 2 4 1 0 36 5 1 4 4 21 31 0 11 11 4 1 0 36 5 1 4 4 21 4 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 97 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 13 1 6 10 1 1 3 6 1 1 0 38 15 1 12 12 0 1 0 36 9 14 2 0 0 20 31 0 7 7 0 1 0 36 9 14 2 0 0 20 31 0 2 2 4 1 0 36 5 1 4 4 21 31 0 11 11 4 1 0 36 5 1 4 4 21 4 32 12 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 15 1 12 7 0 12 1 0 35 9 14 2 0 0 7 8 0 7 1 0 38 13 1 6 10 1 1 3 6 1 1 0 38 0 2 2 4 1 0 36 5 1 4 4 21 31 0 11 11 4 1 0 36 5 1 4 4 21 4 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
143 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 93 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 1 2 1 3 2 50 15 1 12 7 0 12 1 0 35 9 14 2 0 0 7 8 0 7 1 0 38 13 1 6 10 1 1 3 6 1 1 0 38 0 2 11 4 2 1 0 35 0 11 4 4 11 1 0 35 0 11 11 4 1 0 36 5 1 4 11 4 1 0 33 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
199 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 100 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 10 2 10 3 2 50 15 1 12 7 0 12 1 0 35 9 14 2 0 0 7 8 0 7 1 0 38 0 1 10 6 1 1 0 35 13 1 6 0 10 3 6 10 1 0 38 0 2 11 4 2 1 0 35 0 11 4 4 11 1 0 35 0 11 11 4 1 0 36 5 1 4 11 4 1 0 33 11 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 102 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 6 7 8 6 50 0 3 10 2 10 3 2 50 14 1 0 15 1 12 7 0 12 1 0 38 0 9 0 7 8 9 7 1 0 38 0 1 10 6 1 1 0 35 13 1 6 0 10 3 6 10 1 0 38 0 11 4 5 11 1 0 35 0 2 0 4 5 2 4 1 0 38 0 11 11 5 1 0 36 0 5 11 5 1 0 33 11 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 103 values pushed */
65 59 2 8 7 31 23 2 2 3 2 30 0 8 7 13 7 8 13 50 0 3 10 2 10 3 2 50 14 1 0 15 1 12 7 0 12 1 0 38 0 9 0 7 8 9 7 1 0 38 0 13 0 1 10 13 1 1 0 38 0 6 0 10 3 6 10 1 0 38 0 11 4 5 11 1 0 35 0 2 0 4 5 2 4 1 0 38 0 11 11 5 1 0 36 0 5 11 5 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 829;
}
);
leftKerningGroup = a;
note = ae;
rightMetricsKey = e;
unicode = 00E6;
},
{
glyphname = aeacute;
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 255, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 803;
},
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 267, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 829;
},
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 834;
}
);
unicode = 01FD;
},
{
glyphname = b;
layers = (
{
anchors = (
{
name = bottom;
position = "{261, 0}";
},
{
name = top;
position = "{261, 720}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 91, 720}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"407 -6 OFFCURVE",
"481 105 OFFCURVE",
"481 248 CURVE SMOOTH",
"481 419 OFFCURVE",
"412 498 OFFCURVE",
"285 498 CURVE SMOOTH",
"213 498 OFFCURVE",
"147 456 OFFCURVE",
"103 389 CURVE",
"103 720 LINE",
"91 720 LINE",
"91 29 LINE",
"134 0 OFFCURVE",
"194 -6 OFFCURVE",
"266 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 4 OFFCURVE",
"147 10 OFFCURVE",
"103 33 CURVE",
"103 373 LINE",
"148 445 OFFCURVE",
"214 488 OFFCURVE",
"285 488 CURVE SMOOTH",
"406 488 OFFCURVE",
"469 411 OFFCURVE",
"469 248 CURVE SMOOTH",
"469 110 OFFCURVE",
"402 4 OFFCURVE",
"266 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
26 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 522;
},
{
anchors = (
{
name = bottom;
position = "{297, 0}";
},
{
name = top;
position = "{297, 805}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 110, 749}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"500 -8 OFFCURVE",
"575 112 OFFCURVE",
"575 264 CURVE SMOOTH",
"575 419 OFFCURVE",
"504 527 OFFCURVE",
"387 527 CURVE SMOOTH",
"322 527 OFFCURVE",
"274 501 OFFCURVE",
"235 464 CURVE",
"235 749 LINE",
"80 749 LINE",
"80 20 LINE",
"146 -4 OFFCURVE",
"239 -8 OFFCURVE",
"299 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 106 OFFCURVE",
"272 106 OFFCURVE",
"235 115 CURVE",
"235 361 LINE",
"263 394 OFFCURVE",
"287 410 OFFCURVE",
"333 410 CURVE SMOOTH",
"390 410 OFFCURVE",
"415 360 OFFCURVE",
"415 264 CURVE SMOOTH",
"415 161 OFFCURVE",
"381 106 OFFCURVE",
"316 106 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
27 26 0 0 36 34 26 44 27 44 0 25 0 24 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
3 1 4 1 32 31 2 5 4 21 1 2 5 3 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 18 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 6 1 3 3 12 31 0 5 5 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 5 2 1 0 37 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 1 7 1 4 5 1 4 1 0 38 0 5 3 2 5 1 0 35 0 0 6 1 3 2 0 3 1 0 38 0 5 5 2 1 0 36 0 2 5 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 594;
},
{
anchors = (
{
name = bottom;
position = "{279, 0}";
},
{
name = top;
position = "{279, 805}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 78, 737}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"453 -7 OFFCURVE",
"524 104 OFFCURVE",
"524 263 CURVE SMOOTH",
"524 412 OFFCURVE",
"456 515 OFFCURVE",
"333 515 CURVE SMOOTH",
"263 515 OFFCURVE",
"208 482 OFFCURVE",
"167 434 CURVE",
"167 737 LINE",
"78 737 LINE",
"78 20 LINE",
"148 2 OFFCURVE",
"212 -7 OFFCURVE",
"276 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 62 OFFCURVE",
"207 68 OFFCURVE",
"167 78 CURVE",
"167 367 LINE",
"203 416 OFFCURVE",
"246 444 OFFCURVE",
"303 444 CURVE SMOOTH",
"391 444 OFFCURVE",
"432 380 OFFCURVE",
"432 260 CURVE SMOOTH",
"432 126 OFFCURVE",
"381 62 OFFCURVE",
"275 62 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 31 29 23 37 24 37 0 22 0 21 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 18 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 21 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 6 1 3 3 12 31 0 5 5 2 1 0 36 0 2 2 21 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 0 0 13 31 6 1 3 3 15 31 0 5 5 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 5 2 1 0 37 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 5 3 2 5 1 0 35 0 0 6 1 3 2 0 3 1 0 38 0 5 5 2 1 0 36 0 2 5 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 558;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "64FB4622-94E9-429E-82B6-BE76EAA2FD4D";
name = "Jan 27 23, 12:45";
paths = (
{
closed = 1;
nodes = (
"522 256 LINE",
"522 298 OFFCURVE",
"517 336 OFFCURVE",
"508 368 CURVE SMOOTH",
"499 400 OFFCURVE",
"486 426 OFFCURVE",
"470 448 CURVE SMOOTH",
"454 470 OFFCURVE",
"434 487 OFFCURVE",
"410 498 CURVE SMOOTH",
"386 509 OFFCURVE",
"360 514 OFFCURVE",
"330 514 CURVE SMOOTH",
"295 514 OFFCURVE",
"265 507 OFFCURVE",
"238 492 CURVE SMOOTH",
"211 477 OFFCURVE",
"187 457 OFFCURVE",
"166 433 CURVE",
"166 736 LINE",
"79 736 LINE",
"76 736 LINE",
"-3 736 LINE",
"-3 693 LINE SMOOTH",
"-3 684 OFFCURVE",
"3 676 OFFCURVE",
"12 674 CURVE SMOOTH",
"20 672 OFFCURVE",
"64 666 OFFCURVE",
"76 664 CURVE",
"76 101 LINE",
"76 28 LINE",
"76 20 LINE",
"76 20 OFFCURVE",
"210 -8 OFFCURVE",
"300 -8 CURVE SMOOTH",
"332 -8 OFFCURVE",
"361 -2 OFFCURVE",
"388 10 CURVE SMOOTH",
"415 22 OFFCURVE",
"438 38 OFFCURVE",
"458 60 CURVE SMOOTH",
"478 82 OFFCURVE",
"494 110 OFFCURVE",
"506 142 CURVE SMOOTH",
"518 174 OFFCURVE",
"524 211 OFFCURVE",
"524 253 CURVE SMOOTH",
"524 254 LINE",
"524 256 LINE"
);
},
{
closed = 1;
nodes = (
"392 112 LINE",
"380 96 OFFCURVE",
"364 82 OFFCURVE",
"346 74 CURVE",
"330 66 OFFCURVE",
"312 63 OFFCURVE",
"292 62 CURVE",
"285 62 LINE",
"266 62 LINE",
"222 64 OFFCURVE",
"179 74 OFFCURVE",
"166 78 CURVE",
"166 122 LINE",
"166 248 LINE",
"166 367 LINE",
"184 391 OFFCURVE",
"204 410 OFFCURVE",
"226 424 CURVE SMOOTH",
"248 438 OFFCURVE",
"274 444 OFFCURVE",
"303 444 CURVE SMOOTH",
"323 444 OFFCURVE",
"342 441 OFFCURVE",
"358 434 CURVE SMOOTH",
"374 427 OFFCURVE",
"387 415 OFFCURVE",
"398 400 CURVE SMOOTH",
"409 385 OFFCURVE",
"418 366 OFFCURVE",
"424 342 CURVE SMOOTH",
"430 318 OFFCURVE",
"432 291 OFFCURVE",
"432 258 CURVE SMOOTH",
"432 250 LINE SMOOTH",
"432 222 OFFCURVE",
"428 196 OFFCURVE",
"422 174 CURVE SMOOTH",
"415 150 OFFCURVE",
"405 130 OFFCURVE",
"393 114 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 31 29 23 37 24 37 0 22 0 21 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 18 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 21 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
27 26 19 3 4 5 4 1 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 6 1 3 3 12 31 0 5 5 2 1 0 36 0 2 2 21 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 0 0 13 31 6 1 3 3 15 31 0 5 5 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 5 2 1 0 37 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
27 26 19 3 4 5 4 1 30 0 1 7 1 4 5 1 4 1 0 38 0 5 3 2 5 1 0 35 0 0 6 1 3 2 0 3 1 0 38 0 5 5 2 1 0 36 0 2 5 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "7040D4C6-17FD-40FF-AD66-938D8C72ABF4";
name = "Jan 27 23, 12:53";
paths = (
{
closed = 1;
nodes = (
"462 -8 OFFCURVE",
"549 112 OFFCURVE",
"549 264 CURVE SMOOTH",
"549 419 OFFCURVE",
"478 527 OFFCURVE",
"361 527 CURVE SMOOTH",
"296 527 OFFCURVE",
"248 501 OFFCURVE",
"209 464 CURVE",
"209 749 LINE",
"54 749 LINE",
"54 0 LINE",
"157 0 LINE",
"157 0 LINE",
"177 0 OFFCURVE",
"190 7 OFFCURVE",
"194 28 CURVE SMOOTH",
"200 54 LINE",
"235 16 OFFCURVE",
"267 -8 OFFCURVE",
"327 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"261 106 OFFCURVE",
"233 116 OFFCURVE",
"209 141 CURVE",
"209 361 LINE",
"237 394 OFFCURVE",
"261 410 OFFCURVE",
"307 410 CURVE",
"307 410 LINE",
"364 410 OFFCURVE",
"389 360 OFFCURVE",
"389 264 CURVE SMOOTH",
"389 161 OFFCURVE",
"355 106 OFFCURVE",
"290 106 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
27 26 0 0 36 34 26 44 27 44 0 25 0 24 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
3 1 4 1 32 31 2 5 4 21 1 2 5 3 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 6 3 2 2 2 18 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 6 1 3 3 12 31 0 5 5 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 5 2 1 0 37 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 4 1 32 31 2 5 4 21 1 3 5 3 30 0 1 7 1 4 5 1 4 1 0 38 0 5 3 2 5 1 0 35 0 0 6 1 3 2 0 3 1 0 38 0 5 5 2 1 0 36 0 2 5 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "216CFDA2-38CA-4491-8C8F-0A34A40F6557";
name = "Jan 27 23, 12:53";
paths = (
{
closed = 1;
nodes = (
"104 0 OFFCURVE",
"105 4 OFFCURVE",
"105 7 CURVE SMOOTH",
"107 82 LINE",
"144.333 22 OFFCURVE",
"198 -6 OFFCURVE",
"270 -6 CURVE SMOOTH",
"411.387 -6 OFFCURVE",
"485 105.447 OFFCURVE",
"485 248 CURVE SMOOTH",
"485 418.667 OFFCURVE",
"415.667 498 OFFCURVE",
"289 498 CURVE SMOOTH",
"215.667 498 OFFCURVE",
"151 455.667 OFFCURVE",
"107 389 CURVE",
"107 720 LINE",
"95 720 LINE",
"95 0 LINE",
"99 0 LINE",
"99 0 LINE"
);
},
{
closed = 1;
nodes = (
"289 488 LINE",
"410.333 488 OFFCURVE",
"473 410.667 OFFCURVE",
"473 248 CURVE SMOOTH",
"473 110.155 OFFCURVE",
"405.79 4 OFFCURVE",
"270 4 CURVE SMOOTH",
"200.667 4 OFFCURVE",
"149.667 28.667 OFFCURVE",
"107 98 CURVE",
"107 373 LINE",
"152.333 445 OFFCURVE",
"217 488 OFFCURVE",
"289 488 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
26 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 535;
}
);
leftKerningGroup = h;
leftMetricsKey = u;
note = b;
rightKerningGroup = b;
rightMetricsKey = o;
unicode = 0062;
},
{
glyphname = bdotbelow;
layers = (
{
components = (
{
name = b;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 223, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 522;
},
{
components = (
{
name = b;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 212, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 558;
},
{
components = (
{
name = b;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 205, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 594;
}
);
unicode = 1E05;
},
{
glyphname = bhook;
layers = (
{
components = (
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"407 -6 OFFCURVE",
"481 105 OFFCURVE",
"481 248 CURVE SMOOTH",
"481 419 OFFCURVE",
"412 498 OFFCURVE",
"285 498 CURVE SMOOTH",
"213 498 OFFCURVE",
"147 456 OFFCURVE",
"103 390 CURVE",
"91 397 LINE",
"91 29 LINE",
"134 0 OFFCURVE",
"194 -6 OFFCURVE",
"266 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 4 OFFCURVE",
"147 10 OFFCURVE",
"103 33 CURVE",
"103 373 LINE",
"148 445 OFFCURVE",
"214 488 OFFCURVE",
"285 488 CURVE SMOOTH",
"406 488 OFFCURVE",
"469 411 OFFCURVE",
"469 248 CURVE SMOOTH",
"469 110 OFFCURVE",
"402 4 OFFCURVE",
"266 4 CURVE SMOOTH"
);
}
);
width = 522;
},
{
components = (
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"453 -7 OFFCURVE",
"524 104 OFFCURVE",
"524 263 CURVE SMOOTH",
"524 412 OFFCURVE",
"456 515 OFFCURVE",
"333 515 CURVE SMOOTH",
"263 515 OFFCURVE",
"208 482 OFFCURVE",
"167 435 CURVE",
"80 461 LINE",
"80 20 LINE",
"150 2 OFFCURVE",
"212 -7 OFFCURVE",
"276 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 62 OFFCURVE",
"207 68 OFFCURVE",
"167 78 CURVE",
"167 367 LINE",
"203 416 OFFCURVE",
"246 444 OFFCURVE",
"303 444 CURVE SMOOTH",
"391 444 OFFCURVE",
"432 380 OFFCURVE",
"432 260 CURVE SMOOTH",
"432 126 OFFCURVE",
"381 62 OFFCURVE",
"275 62 CURVE SMOOTH"
);
}
);
width = 558;
},
{
components = (
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"500 -8 OFFCURVE",
"575 112 OFFCURVE",
"575 264 CURVE SMOOTH",
"575 419 OFFCURVE",
"504 527 OFFCURVE",
"387 527 CURVE SMOOTH",
"322 527 OFFCURVE",
"274 501 OFFCURVE",
"235 464 CURVE",
"80 494 LINE",
"80 20 LINE",
"146 -4 OFFCURVE",
"239 -8 OFFCURVE",
"299 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 106 OFFCURVE",
"272 106 OFFCURVE",
"235 115 CURVE",
"235 361 LINE",
"263 394 OFFCURVE",
"287 410 OFFCURVE",
"333 410 CURVE SMOOTH",
"390 410 OFFCURVE",
"415 360 OFFCURVE",
"415 264 CURVE SMOOTH",
"415 161 OFFCURVE",
"381 106 OFFCURVE",
"316 106 CURVE SMOOTH"
);
}
);
width = 594;
}
);
rightMetricsKey = b;
unicode = 0253;
},
{
glyphname = c;
layers = (
{
anchors = (
{
name = bottom;
position = "{249, 0}";
},
{
name = top;
position = "{250, 490}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 384, 459}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"319 -6 OFFCURVE",
"378 23 OFFCURVE",
"402 58 CURVE",
"400 60 LINE SMOOTH",
"398 62 OFFCURVE",
"394 62 OFFCURVE",
"392 60 CURVE SMOOTH",
"359 23 OFFCURVE",
"306 4 OFFCURVE",
"247 4 CURVE SMOOTH",
"126 4 OFFCURVE",
"53 99 OFFCURVE",
"53 245 CURVE SMOOTH",
"53 390 OFFCURVE",
"127 488 OFFCURVE",
"255 488 CURVE SMOOTH",
"299 488 OFFCURVE",
"338 478 OFFCURVE",
"375 458 CURVE",
"384 458 LINE",
"384 465 LINE",
"342 488 OFFCURVE",
"299 498 OFFCURVE",
"255 498 CURVE SMOOTH",
"119 498 OFFCURVE",
"41 395 OFFCURVE",
"41 245 CURVE SMOOTH",
"41 94 OFFCURVE",
"117 -6 OFFCURVE",
"247 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 35 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 2 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
},
{
anchors = (
{
name = bottom;
position = "{258, 0}";
},
{
name = top;
position = "{261, 519}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 449, 402}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"330 -8 OFFCURVE",
"408 9 OFFCURVE",
"472 81 CURVE",
"427 137 LINE SMOOTH",
"420 145 OFFCURVE",
"412 150 OFFCURVE",
"399 150 CURVE SMOOTH",
"367 150 OFFCURVE",
"338 106 OFFCURVE",
"286 106 CURVE SMOOTH",
"219 106 OFFCURVE",
"178 161 OFFCURVE",
"178 261 CURVE SMOOTH",
"178 352 OFFCURVE",
"210 413 OFFCURVE",
"288 413 CURVE SMOOTH",
"328 413 OFFCURVE",
"349 406 OFFCURVE",
"376 385 CURVE",
"449 402 LINE",
"449 489 LINE",
"392 515 OFFCURVE",
"336 527 OFFCURVE",
"278 527 CURVE SMOOTH",
"113 527 OFFCURVE",
"19 415 OFFCURVE",
"19 261 CURVE SMOOTH",
"19 98 OFFCURVE",
"123 -8 OFFCURVE",
"257 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 22 20 17 15 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 24 1 4 2 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
42 1 1 5 24 1 4 2 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
anchors = (
{
name = bottom;
position = "{258, 0}";
},
{
name = top;
position = "{258, 507}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 423, 425}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"332 -7 OFFCURVE",
"401 18 OFFCURVE",
"445 71 CURVE",
"420 104 LINE SMOOTH",
"416 109 OFFCURVE",
"410 112 OFFCURVE",
"403 112 CURVE SMOOTH",
"384 112 OFFCURVE",
"350 62 OFFCURVE",
"273 62 CURVE SMOOTH",
"178 62 OFFCURVE",
"126 138 OFFCURVE",
"126 254 CURVE SMOOTH",
"126 370 OFFCURVE",
"176 445 OFFCURVE",
"278 445 CURVE SMOOTH",
"315 445 OFFCURVE",
"344 437 OFFCURVE",
"371 428 CURVE",
"423 425 LINE",
"423 479 LINE",
"374 499 OFFCURVE",
"314 515 OFFCURVE",
"273 515 CURVE SMOOTH",
"115 515 OFFCURVE",
"34 406 OFFCURVE",
"34 254 CURVE SMOOTH",
"34 97 OFFCURVE",
"126 -7 OFFCURVE",
"258 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 24 22 19 17 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 473;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "CF6DDCBE-5926-4AB2-B091-422FAB1FFA8D";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"412 80 LINE",
"408 86 OFFCURVE",
"399 88 OFFCURVE",
"388 77 CURVE SMOOTH",
"361 50 OFFCURVE",
"311 31 OFFCURVE",
"262 31 CURVE SMOOTH",
"149 31 OFFCURVE",
"90 122 OFFCURVE",
"90 249 CURVE SMOOTH",
"90 376 OFFCURVE",
"150 468 OFFCURVE",
"269 468 CURVE SMOOTH",
"294 468 OFFCURVE",
"322 462 OFFCURVE",
"354 451 CURVE",
"355 430 OFFCURVE",
"360 374 OFFCURVE",
"360 373 CURVE",
"361 357 OFFCURVE",
"368 349 OFFCURVE",
"382 349 CURVE SMOOTH",
"406 349 LINE",
"406 474 LINE",
"354 495 OFFCURVE",
"303 505 OFFCURVE",
"266 505 CURVE SMOOTH",
"120 505 OFFCURVE",
"41 397 OFFCURVE",
"41 249 CURVE SMOOTH",
"41 104 OFFCURVE",
"119 -7 OFFCURVE",
"255 -7 CURVE SMOOTH",
"315 -7 OFFCURVE",
"385 14 OFFCURVE",
"425 64 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 35 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 2 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 445;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "A1A636B5-CA59-433F-82AA-D4CB21ABDA3A";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"424 105 LINE",
"420 111 OFFCURVE",
"415 113 OFFCURVE",
"408 113 CURVE SMOOTH",
"401 113 OFFCURVE",
"394 111 OFFCURVE",
"388 105 CURVE",
"356 77 OFFCURVE",
"319 63 OFFCURVE",
"277 63 CURVE SMOOTH",
"231 63 OFFCURVE",
"196 80 OFFCURVE",
"170 113 CURVE SMOOTH",
"144 147 OFFCURVE",
"130 195 OFFCURVE",
"130 255 CURVE SMOOTH",
"130 315 OFFCURVE",
"142 361 OFFCURVE",
"168 395 CURVE SMOOTH",
"181 411 OFFCURVE",
"197 424 OFFCURVE",
"215 432 CURVE SMOOTH",
"233 440 OFFCURVE",
"252 445 OFFCURVE",
"270 445 CURVE SMOOTH",
"288 445 OFFCURVE",
"306 444 OFFCURVE",
"326 441 CURVE",
"334 439 OFFCURVE",
"346 437 OFFCURVE",
"362 432 CURVE",
"362 431 OFFCURVE",
"363 421 OFFCURVE",
"365 399 CURVE SMOOTH",
"367 377 OFFCURVE",
"368 365 OFFCURVE",
"369 361 CURVE",
"371 351 OFFCURVE",
"376 347 OFFCURVE",
"386 347 CURVE SMOOTH",
"426 347 LINE",
"426 479 LINE",
"364 503 OFFCURVE",
"314 515 OFFCURVE",
"276 515 CURVE SMOOTH",
"201 515 OFFCURVE",
"141 491 OFFCURVE",
"98 442 CURVE SMOOTH",
"57 394 OFFCURVE",
"37 333 OFFCURVE",
"37 255 CURVE SMOOTH",
"37 175 OFFCURVE",
"59 111 OFFCURVE",
"102 63 CURVE SMOOTH",
"143 17 OFFCURVE",
"195 -6 OFFCURVE",
"260 -6 CURVE SMOOTH",
"342 -6 OFFCURVE",
"406 20 OFFCURVE",
"448 72 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 24 22 19 17 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
42 1 1 5 26 1 2 3 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 467;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "6C79EAE2-A28B-421C-88DB-F563F320AAC3";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"422 122 LINE",
"417 130 OFFCURVE",
"409 133 OFFCURVE",
"399 133 CURVE SMOOTH",
"391 133 OFFCURVE",
"385 131 OFFCURVE",
"379 126 CURVE SMOOTH",
"373 121 OFFCURVE",
"365 116 OFFCURVE",
"357 110 CURVE SMOOTH",
"349 104 OFFCURVE",
"338 99 OFFCURVE",
"326 94 CURVE SMOOTH",
"314 89 OFFCURVE",
"298 87 OFFCURVE",
"278 87 CURVE SMOOTH",
"258 87 OFFCURVE",
"241 91 OFFCURVE",
"225 98 CURVE",
"209 106 OFFCURVE",
"196 117 OFFCURVE",
"185 131 CURVE SMOOTH",
"174 146 OFFCURVE",
"166 164 OFFCURVE",
"160 185 CURVE SMOOTH",
"154 206 OFFCURVE",
"151 231 OFFCURVE",
"151 258 CURVE SMOOTH",
"151 284 OFFCURVE",
"154 307 OFFCURVE",
"159 328 CURVE SMOOTH",
"164 349 OFFCURVE",
"173 367 OFFCURVE",
"184 382 CURVE SMOOTH",
"195 397 OFFCURVE",
"208 407 OFFCURVE",
"224 415 CURVE SMOOTH",
"240 423 OFFCURVE",
"259 427 OFFCURVE",
"281 427 CURVE SMOOTH",
"298 427 OFFCURVE",
"321 424 OFFCURVE",
"347 417 CURVE",
"351 377 OFFCURVE",
"354 353 OFFCURVE",
"355 345 CURVE",
"358 333 OFFCURVE",
"365 326 OFFCURVE",
"378 326 CURVE SMOOTH",
"419 326 LINE",
"431 326 LINE",
"435 326 LINE",
"436 484 LINE",
"370 509 OFFCURVE",
"316 521 OFFCURVE",
"274 521 CURVE SMOOTH",
"234 521 OFFCURVE",
"198 514 OFFCURVE",
"167 501 CURVE SMOOTH",
"136 488 OFFCURVE",
"110 470 OFFCURVE",
"89 446 CURVE SMOOTH",
"68 422 OFFCURVE",
"52 394 OFFCURVE",
"41 362 CURVE SMOOTH",
"30 330 OFFCURVE",
"25 296 OFFCURVE",
"25 258 CURVE SMOOTH",
"25 216 OFFCURVE",
"31 178 OFFCURVE",
"43 145 CURVE SMOOTH",
"55 112 OFFCURVE",
"72 85 OFFCURVE",
"93 62 CURVE SMOOTH",
"114 39 OFFCURVE",
"138 22 OFFCURVE",
"166 10 CURVE SMOOTH",
"194 -2 OFFCURVE",
"223 -7 OFFCURVE",
"255 -7 CURVE SMOOTH",
"273 -7 OFFCURVE",
"292 -6 OFFCURVE",
"310 -3 CURVE SMOOTH",
"328 0 OFFCURVE",
"346 4 OFFCURVE",
"363 10 CURVE",
"380 17 OFFCURVE",
"397 25 OFFCURVE",
"413 36 CURVE SMOOTH",
"429 47 OFFCURVE",
"443 61 OFFCURVE",
"457 77 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 22 20 17 15 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
42 1 1 5 24 1 4 2 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 1 1 5 1 0 36 0 5 5 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
42 1 1 5 24 1 4 2 2 30 0 0 1 3 1 0 3 50 0 3 2 1 3 2 48 0 5 0 1 0 5 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 486;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "3054D6B9-6CC0-4537-9451-BA50270D08CC";
name = quadratic;
paths = (
{
closed = 1;
nodes = (
"388 470 OFFCURVE",
"319 498 OFFCURVE",
"274 498 QCURVE SMOOTH",
"224 498 OFFCURVE",
"144 462 OFFCURVE",
"89 396 OFFCURVE",
"60 302 OFFCURVE",
"60 245 QCURVE SMOOTH",
"60 186 OFFCURVE",
"89 93 OFFCURVE",
"143 28 OFFCURVE",
"219 -6 OFFCURVE",
"266 -6 QCURVE SMOOTH",
"295 -6 OFFCURVE",
"345 6 OFFCURVE",
"385 25 OFFCURVE",
"414 47 OFFCURVE",
"421 58 QCURVE",
"419 60 LINE SMOOTH",
"417 62 OFFCURVE",
"415 62 QCURVE SMOOTH",
"412 62 OFFCURVE",
"394 44 OFFCURVE",
"359 22 OFFCURVE",
"305 4 OFFCURVE",
"266 4 QCURVE SMOOTH",
"222 4 OFFCURVE",
"151 36 OFFCURVE",
"100 98 OFFCURVE",
"72 187 OFFCURVE",
"72 245 QCURVE SMOOTH",
"72 301 OFFCURVE",
"100 391 OFFCURVE",
"152 454 OFFCURVE",
"227 488 OFFCURVE",
"274 488 QCURVE SMOOTH",
"308 488 OFFCURVE",
"355 474 OFFCURVE",
"387 457 OFFCURVE",
"403 442 OFFCURVE",
"406 442 QCURVE SMOOTH",
"408 442 OFFCURVE",
"410 444 QCURVE SMOOTH",
"413 447 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 35 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 2 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 445;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = c;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 0107;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 010D;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 93, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 00E7;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 0109;
},
{
glyphname = cdotaccent;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 212, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 173, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 157, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 010B;
},
{
glyphname = chook;
layers = (
{
components = (
{
name = c;
},
{
alignment = -1;
name = hookrightc_part;
transform = "{1, 0, 0, 1, 374, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
},
{
alignment = -1;
name = hookrightc_part;
transform = "{1, 0, 0, 1, 346, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
},
{
alignment = -1;
name = hookrightc_part;
transform = "{1, 0, 0, 1, 314, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
leftKerningGroup = c;
leftMetricsKey = c;
unicode = 0188;
},
{
glyphname = d;
layers = (
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = center;
position = "{425, 245}";
},
{
name = top;
position = "{389, 720}";
},
{
name = topright;
position = "{425, 609}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 720}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 431, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"312 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"421 8 LINE SMOOTH",
"421 3 OFFCURVE",
"423 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"431 0 LINE",
"431 720 LINE",
"419 720 LINE",
"419 410 LINE",
"382 470 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"115 498 OFFCURVE",
"41 388 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 75 OFFCURVE",
"110 -6 OFFCURVE",
"237 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 383 OFFCURVE",
"121 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"325 488 OFFCURVE",
"376 463 OFFCURVE",
"419 394 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"310 4 OFFCURVE",
"237 4 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = center;
position = "{441, 260}";
},
{
name = top;
position = "{282, 749}";
},
{
name = topright;
position = "{440, 561}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 389, 749}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 514, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"274 -8 OFFCURVE",
"328 21 OFFCURVE",
"368 66 CURVE",
"380 26 LINE SMOOTH",
"385 9 OFFCURVE",
"399 0 OFFCURVE",
"418 0 CURVE SMOOTH",
"514 0 LINE",
"514 749 LINE",
"359 749 LINE",
"359 486 LINE",
"330 511 OFFCURVE",
"294 529 OFFCURVE",
"241 529 CURVE SMOOTH",
"106 529 OFFCURVE",
"19 409 OFFCURVE",
"19 258 CURVE SMOOTH",
"19 102 OFFCURVE",
"92 -8 OFFCURVE",
"207 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"205 111 OFFCURVE",
"179 162 OFFCURVE",
"179 258 CURVE SMOOTH",
"179 359 OFFCURVE",
"214 415 OFFCURVE",
"278 415 CURVE SMOOTH",
"309 415 OFFCURVE",
"335 405 OFFCURVE",
"359 380 CURVE",
"359 160 LINE",
"333 129 OFFCURVE",
"305 111 OFFCURVE",
"261 111 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
27 26 1 0 36 34 26 44 27 44 24 23 20 18 10 8 0 25 1 25 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
22 1 5 2 32 31 2 4 5 4 1 0 4 3 30 7 1 4 5 0 5 4 0 50 0 3 3 13 31 0 5 5 2 1 0 36 0 2 2 20 31 1 6 2 0 0 12 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
22 1 5 2 32 31 2 4 5 4 1 0 4 3 30 7 1 4 5 0 5 4 0 50 0 3 3 13 31 0 5 5 2 1 0 36 0 2 2 20 31 6 1 0 0 12 31 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
22 1 5 2 32 31 2 4 5 4 1 0 4 3 30 7 1 4 5 0 5 4 0 50 0 1 0 1 53 0 2 0 5 4 2 5 1 0 38 6 1 0 0 3 0 0 36 0 3 3 13 0 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
22 1 5 2 32 31 2 4 5 4 1 0 4 3 30 7 1 4 5 0 5 4 0 50 0 1 0 1 53 0 3 2 0 3 0 0 35 0 2 0 5 4 2 5 1 0 38 0 3 3 0 1 0 36 6 1 0 3 0 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
anchors = (
{
name = bottom;
position = "{278, 0}";
},
{
name = center;
position = "{442, 254}";
},
{
name = top;
position = "{278, 737}";
},
{
name = topright;
position = "{442, 561}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 392, 737}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"298 -7 OFFCURVE",
"352 28 OFFCURVE",
"396 80 CURVE",
"404 19 LINE",
"407 6 OFFCURVE",
"415 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"481 0 LINE",
"481 737 LINE",
"392 737 LINE",
"392 456 LINE",
"357 493 OFFCURVE",
"316 516 OFFCURVE",
"253 516 CURVE SMOOTH",
"116 516 OFFCURVE",
"34 399 OFFCURVE",
"34 252 CURVE SMOOTH",
"34 95 OFFCURVE",
"102 -7 OFFCURVE",
"226 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 65 OFFCURVE",
"126 130 OFFCURVE",
"126 252 CURVE SMOOTH",
"126 376 OFFCURVE",
"178 446 OFFCURVE",
"273 446 CURVE SMOOTH",
"321 446 OFFCURVE",
"359 431 OFFCURVE",
"392 387 CURVE",
"392 142 LINE",
"355 93 OFFCURVE",
"314 65 OFFCURVE",
"255 65 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 1 0 31 29 23 37 24 37 21 20 17 15 7 5 0 22 1 22 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 3 3 13 31 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 0 1 0 36 1 6 2 0 0 12 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 3 3 13 31 0 5 5 2 1 0 36 0 2 2 20 31 6 1 0 0 12 31 7 1 4 4 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 2 0 5 4 2 5 1 0 38 0 3 3 13 31 6 1 0 0 15 31 7 1 4 4 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 4 1 1 0 37 6 1 0 0 3 0 0 36 0 3 3 13 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 4 1 0 35 0 3 6 1 0 1 3 0 1 0 38 7 1 4 4 1 1 0 36 0 1 4 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = d;
rightMetricsKey = l;
unicode = 0064;
},
{
glyphname = eth;
layers = (
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "E9E817B0-444D-428D-AF25-E8B211AFE97F";
name = "Feb 19 23, 15:34";
paths = (
{
closed = 1;
nodes = (
"313 -5 OFFCURVE",
"394 40 OFFCURVE",
"447 119 OFFCURVE",
"473 230 OFFCURVE",
"473 297 QCURVE SMOOTH",
"473 359 OFFCURVE",
"451 459 OFFCURVE",
"411 538 OFFCURVE",
"357 598 OFFCURVE",
"325 620 QCURVE",
"386 687 LINE SMOOTH",
"389 690 OFFCURVE",
"389 695 OFFCURVE",
"387 697 QCURVE",
"385 699 LINE",
"317 625 LINE",
"278 651 OFFCURVE",
"192 679 OFFCURVE",
"149 686 QCURVE",
"148 682 LINE SMOOTH",
"147 679 OFFCURVE",
"153 676 OFFCURVE",
"154 676 QCURVE",
"196 669 OFFCURVE",
"275 642 OFFCURVE",
"311 619 QCURVE",
"242 546 LINE SMOOTH",
"240 544 OFFCURVE",
"241 539 OFFCURVE",
"243 537 QCURVE",
"245 535 LINE",
"319 614 LINE",
"350 592 OFFCURVE",
"403 534 OFFCURVE",
"442 457 OFFCURVE",
"464 362 OFFCURVE",
"464 304 QCURVE",
"451 346 OFFCURVE",
"405 405 OFFCURVE",
"350 442 OFFCURVE",
"290 458 OFFCURVE",
"262 458 QCURVE SMOOTH",
"211 458 OFFCURVE",
"132 422 OFFCURVE",
"78 358 OFFCURVE",
"50 272 OFFCURVE",
"50 223 QCURVE SMOOTH",
"50 171 OFFCURVE",
"83 86 OFFCURVE",
"140 27 OFFCURVE",
"215 -5 OFFCURVE",
"257 -5 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"218 5 OFFCURVE",
"148 35 OFFCURVE",
"94 91 OFFCURVE",
"62 172 OFFCURVE",
"62 223 QCURVE SMOOTH",
"62 271 OFFCURVE",
"88 353 OFFCURVE",
"138 414 OFFCURVE",
"213 448 OFFCURVE",
"262 448 QCURVE SMOOTH",
"306 448 OFFCURVE",
"375 417 OFFCURVE",
"424 369 OFFCURVE",
"456 309 OFFCURVE",
"463 280 QCURVE",
"462 220 OFFCURVE",
"435 119 OFFCURVE",
"384 46 OFFCURVE",
"308 5 OFFCURVE",
"257 5 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
71 3 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
55 4 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
21 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
29 4 49 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
14 39 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
44 1 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
56 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 521;
},
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"323 -5 OFFCURVE",
"376 27 OFFCURVE",
"412 80 CURVE SMOOTH",
"447 132 OFFCURVE",
"464 208 OFFCURVE",
"464 297 CURVE SMOOTH",
"464 450 OFFCURVE",
"410 556 OFFCURVE",
"316 620 CURVE",
"379 689 LINE SMOOTH",
"381 692 OFFCURVE",
"381 694 OFFCURVE",
"379 696 CURVE SMOOTH",
"376 699 LINE",
"308 625 LINE",
"256 660 OFFCURVE",
"197 677 OFFCURVE",
"140 686 CURVE",
"139 683 LINE SMOOTH",
"138 680 OFFCURVE",
"140 677 OFFCURVE",
"144 676 CURVE SMOOTH",
"204 666 OFFCURVE",
"256 649 OFFCURVE",
"302 619 CURVE",
"233 546 LINE",
"231 543 OFFCURVE",
"231 540 OFFCURVE",
"233 538 CURVE SMOOTH",
"236 535 LINE",
"309 613 LINE",
"400 553 OFFCURVE",
"453 448 OFFCURVE",
"455 304 CURVE",
"423 408 OFFCURVE",
"335 458 OFFCURVE",
"253 458 CURVE SMOOTH",
"119 458 OFFCURVE",
"41 357 OFFCURVE",
"41 223 CURVE SMOOTH",
"41 89 OFFCURVE",
"131 -5 OFFCURVE",
"248 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139 5 OFFCURVE",
"53 94 OFFCURVE",
"53 223 CURVE SMOOTH",
"53 353 OFFCURVE",
"124 448 OFFCURVE",
"253 448 CURVE SMOOTH",
"362 448 OFFCURVE",
"433 365 OFFCURVE",
"454 280 CURVE",
"449 124 OFFCURVE",
"385 5 OFFCURVE",
"248 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
71 3 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
55 4 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
21 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
29 4 49 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
14 39 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
44 1 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
56 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 520;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "891174B5-20B4-41D1-9602-63935F97F0DE";
name = "Feb 19 23, 15:34";
paths = (
{
closed = 1;
nodes = (
"331 -7 OFFCURVE",
"422 37 OFFCURVE",
"484 117 OFFCURVE",
"515 231 OFFCURVE",
"515 302 QCURVE SMOOTH",
"515 357 OFFCURVE",
"496 450 OFFCURVE",
"460 527 OFFCURVE",
"411 589 OFFCURVE",
"381 614 QCURVE",
"429 647 LINE SMOOTH",
"438 653 OFFCURVE",
"442 669 OFFCURVE",
"436 678 QCURVE SMOOTH",
"419 706 LINE",
"336 645 LINE",
"295 669 OFFCURVE",
"205 700 OFFCURVE",
"157 707 QCURVE",
"147 676 LINE SMOOTH",
"140 658 OFFCURVE",
"154 637 OFFCURVE",
"166 634 QCURVE",
"223 620 OFFCURVE",
"267 600 QCURVE",
"216 564 LINE SMOOTH",
"207 559 OFFCURVE",
"203 542 OFFCURVE",
"209 533 QCURVE SMOOTH",
"225 505 LINE",
"317 573 LINE",
"365 540 OFFCURVE",
"423 446 OFFCURVE",
"433 378 QCURVE",
"401 421 OFFCURVE",
"312 464 OFFCURVE",
"262 464 QCURVE SMOOTH",
"210 464 OFFCURVE",
"127 427 OFFCURVE",
"69 364 OFFCURVE",
"38 280 OFFCURVE",
"38 233 QCURVE SMOOTH",
"38 177 OFFCURVE",
"74 88 OFFCURVE",
"137 27 OFFCURVE",
"222 -7 OFFCURVE",
"271 -7 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243 63 OFFCURVE",
"190 85 OFFCURVE",
"150 128 OFFCURVE",
"127 192 OFFCURVE",
"127 232 QCURVE SMOOTH",
"127 266 OFFCURVE",
"147 326 OFFCURVE",
"185 369 OFFCURVE",
"242 394 OFFCURVE",
"279 394 QCURVE SMOOTH",
"310 394 OFFCURVE",
"359 376 OFFCURVE",
"397 344 OFFCURVE",
"423 304 OFFCURVE",
"431 282 QCURVE",
"430 227 OFFCURVE",
"407 145 OFFCURVE",
"366 90 OFFCURVE",
"308 63 OFFCURVE",
"273 63 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
54 53 64 62 53 72 54 72 46 44 36 34 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
58 48 2 2 3 1 30 52 51 25 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 2 0 1 0 36 0 0 0 21 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
58 48 2 2 3 1 30 52 51 25 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 0 0 2 1 0 35 4 1 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"347 -7 OFFCURVE",
"408 24 OFFCURVE",
"449 77 CURVE SMOOTH",
"490 130 OFFCURVE",
"511 207 OFFCURVE",
"511 302 CURVE SMOOTH",
"511 440 OFFCURVE",
"461 544 OFFCURVE",
"377 614 CURVE",
"425 647 LINE SMOOTH",
"437 656 OFFCURVE",
"439 666 OFFCURVE",
"432 678 CURVE SMOOTH",
"415 706 LINE",
"331 645 LINE",
"278 677 OFFCURVE",
"217 696 OFFCURVE",
"153 707 CURVE",
"142 672 LINE SMOOTH",
"136 653 OFFCURVE",
"143 638 OFFCURVE",
"164 633 CURVE SMOOTH",
"211 621 OFFCURVE",
"239 611 OFFCURVE",
"263 600 CURVE",
"209 562 LINE SMOOTH",
"200 555 OFFCURVE",
"197 546 OFFCURVE",
"203 535 CURVE SMOOTH",
"221 505 LINE",
"313 572 LINE",
"376 529 OFFCURVE",
"416 468 OFFCURVE",
"429 377 CURVE",
"385 436 OFFCURVE",
"325 464 OFFCURVE",
"258 464 CURVE SMOOTH",
"122 464 OFFCURVE",
"34 361 OFFCURVE",
"34 233 CURVE SMOOTH",
"34 89 OFFCURVE",
"132 -7 OFFCURVE",
"267 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"183 63 OFFCURVE",
"123 129 OFFCURVE",
"123 232 CURVE SMOOTH",
"123 325 OFFCURVE",
"178 394 OFFCURVE",
"275 394 CURVE SMOOTH",
"353 394 OFFCURVE",
"404 345 OFFCURVE",
"427 282 CURVE",
"422 145 OFFCURVE",
"371 63 OFFCURVE",
"269 63 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
54 53 64 62 53 72 54 72 46 44 36 34 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
58 48 2 2 3 1 30 52 51 25 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 2 0 1 0 36 0 0 0 21 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
58 48 2 2 3 1 30 52 51 25 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 0 0 2 1 0 35 4 1 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 558;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "5D38BCD1-B3BE-4144-85AB-DBC2130CD354";
name = "Feb 19 23, 15:34";
paths = (
{
closed = 1;
nodes = (
"346 -8 OFFCURVE",
"446 34 OFFCURVE",
"514 114 OFFCURVE",
"550 231 OFFCURVE",
"550 306 QCURVE SMOOTH",
"550 403 OFFCURVE",
"487 550 OFFCURVE",
"433 601 QCURVE",
"466 618 LINE SMOOTH",
"479 625 OFFCURVE",
"486 650 OFFCURVE",
"478 663 QCURVE SMOOTH",
"447 712 LINE",
"355 658 LINE",
"313 683 OFFCURVE",
"216 715 OFFCURVE",
"163 723 QCURVE",
"145 672 LINE SMOOTH",
"139 657 OFFCURVE",
"139 633 OFFCURVE",
"148 616 OFFCURVE",
"165 605 OFFCURVE",
"175 602 QCURVE SMOOTH",
"186 599 OFFCURVE",
"206 592 OFFCURVE",
"216 589 QCURVE",
"193 578 LINE SMOOTH",
"178 570 OFFCURVE",
"170 544 OFFCURVE",
"179 530 QCURVE SMOOTH",
"208 482 LINE",
"314 544 LINE",
"352 519 OFFCURVE",
"395 456 OFFCURVE",
"405 415 QCURVE",
"376 440 OFFCURVE",
"306 468 OFFCURVE",
"261 468 QCURVE SMOOTH",
"209 468 OFFCURVE",
"123 431 OFFCURVE",
"61 368 OFFCURVE",
"28 285 OFFCURVE",
"28 240 QCURVE SMOOTH",
"28 182 OFFCURVE",
"66 90 OFFCURVE",
"134 26 OFFCURVE",
"227 -8 OFFCURVE",
"282 -8 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 106 OFFCURVE",
"226 123 OFFCURVE",
"198 157 OFFCURVE",
"182 207 OFFCURVE",
"182 239 QCURVE SMOOTH",
"182 263 OFFCURVE",
"196 305 OFFCURVE",
"224 336 OFFCURVE",
"266 354 OFFCURVE",
"293 354 QCURVE SMOOTH",
"335 354 OFFCURVE",
"389 312 OFFCURVE",
"403 281 QCURVE",
"402 230 OFFCURVE",
"382 162 OFFCURVE",
"350 123 OFFCURVE",
"308 106 OFFCURVE",
"286 106 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
53 52 61 59 52 69 53 69 45 43 35 33 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
47 1 3 1 57 1 2 3 2 30 51 50 26 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
47 1 3 1 57 1 2 3 2 30 51 50 26 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 0 0 2 1 0 35 4 1 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"358 -8 OFFCURVE",
"426 21 OFFCURVE",
"472 74 CURVE SMOOTH",
"518 127 OFFCURVE",
"541 206 OFFCURVE",
"541 306 CURVE SMOOTH",
"541 435 OFFCURVE",
"497 533 OFFCURVE",
"424 601 CURVE",
"457 618 LINE SMOOTH",
"476 626 OFFCURVE",
"480 646 OFFCURVE",
"469 663 CURVE SMOOTH",
"438 712 LINE",
"347 658 LINE",
"290 691 OFFCURVE",
"225 712 OFFCURVE",
"154 723 CURVE",
"136 672 LINE SMOOTH",
"125 638 OFFCURVE",
"133 611 OFFCURVE",
"166 602 CURVE SMOOTH",
"173 600 OFFCURVE",
"204 590 OFFCURVE",
"207 589 CURVE",
"184 578 LINE SMOOTH",
"164 568 OFFCURVE",
"158 549 OFFCURVE",
"170 530 CURVE SMOOTH",
"199 482 LINE",
"305 544 LINE",
"356 509 OFFCURVE",
"383 469 OFFCURVE",
"396 414 CURVE",
"359 449 OFFCURVE",
"312 468 OFFCURVE",
"252 468 CURVE SMOOTH",
"117 468 OFFCURVE",
"19 365 OFFCURVE",
"19 240 CURVE SMOOTH",
"19 88 OFFCURVE",
"127 -8 OFFCURVE",
"273 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"214 106 OFFCURVE",
"173 158 OFFCURVE",
"173 239 CURVE SMOOTH",
"173 304 OFFCURVE",
"215 354 OFFCURVE",
"284 354 CURVE SMOOTH",
"341 354 OFFCURVE",
"375 322 OFFCURVE",
"395 281 CURVE",
"390 163 OFFCURVE",
"350 106 OFFCURVE",
"277 106 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
53 52 61 59 52 69 53 69 45 43 35 33 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
47 1 3 1 57 1 2 3 2 30 51 50 26 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 2 0 1 0 36 0 0 0 18 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
47 1 3 1 57 1 2 3 2 30 51 50 26 19 18 15 6 7 1 28 0 1 0 3 2 1 3 1 0 38 4 1 2 0 0 2 1 0 35 4 1 2 2 0 1 0 36 0 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 566;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = eth;
unicode = 00F0;
},
{
glyphname = dcaron;
layers = (
{
components = (
{
name = d;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 400, 4}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 535;
},
{
components = (
{
alignment = -1;
name = d;
},
{
alignment = -1;
name = quoteright;
transform = "{1, 0, 0, 1, 448, 4}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 615;
},
{
components = (
{
alignment = -1;
name = d;
},
{
alignment = -1;
name = quoteright;
transform = "{1, 0, 0, 1, 473, 4}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 688;
}
);
unicode = 010F;
},
{
glyphname = dcircumflexbelow;
layers = (
{
components = (
{
name = d;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 176, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 535;
},
{
components = (
{
name = d;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 571;
},
{
components = (
{
name = d;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 96, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 611;
}
);
unicode = 1E13;
},
{
glyphname = dcroat;
layers = (
{
components = (
{
name = d;
},
{
alignment = -1;
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 285, -63}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 535;
},
{
components = (
{
name = d;
},
{
alignment = -1;
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 291, -65}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 571;
},
{
components = (
{
name = d;
},
{
alignment = -1;
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 276, -75}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 611;
}
);
unicode = 0111;
},
{
glyphname = ddotbelow;
layers = (
{
components = (
{
name = d;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 249, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 535;
},
{
components = (
{
name = d;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 211, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 571;
},
{
components = (
{
name = d;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 611;
}
);
unicode = 1E0D;
},
{
glyphname = dhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{257, 0}";
},
{
name = center;
position = "{425, 245}";
},
{
name = top;
position = "{389, 720}";
},
{
name = topright;
position = "{425, 609}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 431, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 419, -1}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"312 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"421 8 LINE SMOOTH",
"421 3 OFFCURVE",
"423 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"431 0 LINE",
"431 389 LINE",
"419 396 LINE",
"419 410 LINE",
"382 470 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"115 498 OFFCURVE",
"41 388 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 75 OFFCURVE",
"110 -6 OFFCURVE",
"237 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 383 OFFCURVE",
"121 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"325 488 OFFCURVE",
"376 463 OFFCURVE",
"419 394 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"310 4 OFFCURVE",
"237 4 CURVE"
);
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
position = "{278, 0}";
},
{
name = center;
position = "{442, 254}";
},
{
name = top;
position = "{278, 737}";
},
{
name = topright;
position = "{442, 561}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"298 -7 OFFCURVE",
"352 28 OFFCURVE",
"396 80 CURVE",
"404 19 LINE",
"407 6 OFFCURVE",
"415 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"481 0 LINE",
"481 434 LINE",
"392 461 LINE",
"392 456 LINE",
"357 493 OFFCURVE",
"316 516 OFFCURVE",
"253 516 CURVE SMOOTH",
"116 516 OFFCURVE",
"34 399 OFFCURVE",
"34 252 CURVE SMOOTH",
"34 95 OFFCURVE",
"102 -7 OFFCURVE",
"226 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166 65 OFFCURVE",
"126 130 OFFCURVE",
"126 252 CURVE SMOOTH",
"126 376 OFFCURVE",
"178 446 OFFCURVE",
"273 446 CURVE SMOOTH",
"321 446 OFFCURVE",
"359 431 OFFCURVE",
"392 387 CURVE",
"392 142 LINE",
"355 93 OFFCURVE",
"314 65 OFFCURVE",
"255 65 CURVE"
);
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
position = "{284, 0}";
},
{
name = center;
position = "{441, 260}";
},
{
name = top;
position = "{282, 749}";
},
{
name = topright;
position = "{440, 561}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 514, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"274 -8 OFFCURVE",
"328 21 OFFCURVE",
"368 66 CURVE",
"380 26 LINE SMOOTH",
"385 9 OFFCURVE",
"399 0 OFFCURVE",
"418 0 CURVE SMOOTH",
"514 0 LINE",
"514 464 LINE",
"359 494 LINE",
"359 486 LINE",
"330 511 OFFCURVE",
"294 529 OFFCURVE",
"241 529 CURVE SMOOTH",
"106 529 OFFCURVE",
"19 409 OFFCURVE",
"19 258 CURVE SMOOTH",
"19 102 OFFCURVE",
"92 -8 OFFCURVE",
"207 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"205 111 OFFCURVE",
"179 162 OFFCURVE",
"179 258 CURVE SMOOTH",
"179 359 OFFCURVE",
"214 415 OFFCURVE",
"278 415 CURVE SMOOTH",
"309 415 OFFCURVE",
"335 405 OFFCURVE",
"359 380 CURVE",
"359 160 LINE",
"333 129 OFFCURVE",
"305 111 OFFCURVE",
"261 111 CURVE"
);
}
);
width = 611;
}
);
leftMetricsKey = d;
unicode = 0257;
},
{
glyphname = dlinebelow;
layers = (
{
components = (
{
name = d;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 147, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 535;
},
{
components = (
{
name = d;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 571;
},
{
components = (
{
name = d;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 611;
}
);
unicode = 1E0F;
},
{
glyphname = dtail;
layers = (
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = center;
position = "{425, 245}";
},
{
name = top;
position = "{389, 720}";
},
{
name = topright;
position = "{425, 609}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 720}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"431 720 LINE",
"419 720 LINE",
"419 410 LINE",
"382 470 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"115 498 OFFCURVE",
"41 388 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 75 OFFCURVE",
"110 -6 OFFCURVE",
"237 -6 CURVE SMOOTH",
"312 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"419 -58 LINE",
"431 -58 LINE"
);
},
{
closed = 1;
nodes = (
"117 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 383 OFFCURVE",
"121 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"325 488 OFFCURVE",
"376 463 OFFCURVE",
"419 394 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"310 4 OFFCURVE",
"237 4 CURVE"
);
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
position = "{278, 0}";
},
{
name = center;
position = "{442, 254}";
},
{
name = top;
position = "{278, 737}";
},
{
name = topright;
position = "{442, 561}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 392, 737}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 392, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"481 737 LINE",
"392 737 LINE",
"392 456 LINE",
"357 493 OFFCURVE",
"316 516 OFFCURVE",
"253 516 CURVE SMOOTH",
"116 516 OFFCURVE",
"34 399 OFFCURVE",
"34 252 CURVE SMOOTH",
"34 95 OFFCURVE",
"102 -7 OFFCURVE",
"226 -7 CURVE SMOOTH",
"296 -7 OFFCURVE",
"349 26 OFFCURVE",
"392 75 CURVE",
"392 -27 LINE",
"481 -34 LINE"
);
},
{
closed = 1;
nodes = (
"166 65 OFFCURVE",
"126 130 OFFCURVE",
"126 252 CURVE SMOOTH",
"126 376 OFFCURVE",
"178 446 OFFCURVE",
"273 446 CURVE SMOOTH",
"321 446 OFFCURVE",
"359 431 OFFCURVE",
"392 387 CURVE",
"392 142 LINE",
"355 93 OFFCURVE",
"314 65 OFFCURVE",
"255 65 CURVE"
);
}
);
width = 551;
},
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = center;
position = "{441, 260}";
},
{
name = top;
position = "{282, 749}";
},
{
name = topright;
position = "{440, 561}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 389, 749}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"514 749 LINE",
"359 749 LINE",
"359 486 LINE",
"330 511 OFFCURVE",
"294 529 OFFCURVE",
"241 529 CURVE SMOOTH",
"106 529 OFFCURVE",
"19 409 OFFCURVE",
"19 258 CURVE SMOOTH",
"19 102 OFFCURVE",
"92 -8 OFFCURVE",
"207 -8 CURVE SMOOTH",
"269 -8 OFFCURVE",
"320 17 OFFCURVE",
"359 56 CURVE",
"359 -3 LINE",
"514 -15 LINE"
);
},
{
closed = 1;
nodes = (
"205 111 OFFCURVE",
"179 162 OFFCURVE",
"179 258 CURVE SMOOTH",
"179 359 OFFCURVE",
"214 415 OFFCURVE",
"278 415 CURVE SMOOTH",
"309 415 OFFCURVE",
"335 405 OFFCURVE",
"359 380 CURVE",
"359 160 LINE",
"333 129 OFFCURVE",
"305 111 OFFCURVE",
"261 111 CURVE"
);
}
);
width = 567;
}
);
unicode = 0256;
},
{
color = 3;
glyphname = e;
layers = (
{
anchors = (
{
name = bottom;
position = "{232, 0}";
},
{
name = ogonek;
position = "{240, 0}";
},
{
name = top;
position = "{252, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "84968275-ADCB-4BB9-B2B5-8868A8649A40";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"307 -6 OFFCURVE",
"354 27 OFFCURVE",
"407 91 CURVE",
"406 92 LINE SMOOTH",
"405 93 OFFCURVE",
"403 94 OFFCURVE",
"401 94 CURVE SMOOTH",
"394 94 OFFCURVE",
"367 63 OFFCURVE",
"353 50 CURVE SMOOTH",
"328 26 OFFCURVE",
"283 4 OFFCURVE",
"233 4 CURVE SMOOTH",
"132 4 OFFCURVE",
"73 73 OFFCURVE",
"60 181 CURVE SMOOTH",
"58 200 OFFCURVE",
"56 220 OFFCURVE",
"57 239 CURVE",
"152 250 OFFCURVE",
"273 270 OFFCURVE",
"332 306 CURVE SMOOTH",
"373 332 OFFCURVE",
"386 366 OFFCURVE",
"381 407 CURVE SMOOTH",
"376 451 OFFCURVE",
"332 497 OFFCURVE",
"251 497 CURVE SMOOTH",
"199 497 OFFCURVE",
"157 479 OFFCURVE",
"126 448 CURVE SMOOTH",
"110 433 OFFCURVE",
"96 415 OFFCURVE",
"86 394 CURVE SMOOTH",
"63 353 OFFCURVE",
"50 306 OFFCURVE",
"47 255 CURVE SMOOTH",
"45 230 OFFCURVE",
"46 205 OFFCURVE",
"49 181 CURVE SMOOTH",
"63 66 OFFCURVE",
"125 -6 OFFCURVE",
"233 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65 370 OFFCURVE",
"127 487 OFFCURVE",
"252 487 CURVE SMOOTH",
"322 487 OFFCURVE",
"367 449 OFFCURVE",
"372 407 CURVE SMOOTH",
"377 371 OFFCURVE",
"365 341 OFFCURVE",
"327 316 CURVE SMOOTH",
"274 281 OFFCURVE",
"152 259 OFFCURVE",
"58 249 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
46 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
22 2 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
46 1 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 442;
},
{
anchors = (
{
name = bottom;
position = "{240, 0}";
},
{
name = ogonek;
position = "{264, 0}";
},
{
name = top;
position = "{255, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"325 -6 OFFCURVE",
"401 26 OFFCURVE",
"427 58 CURVE",
"426 59 LINE SMOOTH",
"424 61 OFFCURVE",
"421 61 OFFCURVE",
"418 59 CURVE SMOOTH",
"399 46 OFFCURVE",
"338 4 OFFCURVE",
"257 4 CURVE SMOOTH",
"128 4 OFFCURVE",
"53 101 OFFCURVE",
"53 255 CURVE SMOOTH",
"53 268 OFFCURVE",
"53 273 OFFCURVE",
"54 282 CURVE",
"432 282 LINE SMOOTH",
"436 282 OFFCURVE",
"438 284 OFFCURVE",
"438 287 CURVE SMOOTH",
"438 418 OFFCURVE",
"364 498 OFFCURVE",
"255 498 CURVE SMOOTH",
"119 498 OFFCURVE",
"41 399 OFFCURVE",
"41 255 CURVE SMOOTH",
"41 98 OFFCURVE",
"120 -6 OFFCURVE",
"257 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"66 409 OFFCURVE",
"139 488 OFFCURVE",
"255 488 CURVE SMOOTH",
"358 488 OFFCURVE",
"427 412 OFFCURVE",
"427 291 CURVE",
"55 291 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
46 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
22 2 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
46 1 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 479;
},
{
anchors = (
{
name = bottom;
position = "{252, 0}";
},
{
name = ogonek;
position = "{259, 0}";
},
{
name = top;
position = "{257, 507}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B1EE7319-47EB-4C99-BCD5-1B3CF621EEF5";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"336 -7 OFFCURVE",
"399 27 OFFCURVE",
"453 94 CURVE",
"427 121 LINE SMOOTH",
"422 127 OFFCURVE",
"416 130 OFFCURVE",
"409 130 CURVE SMOOTH",
"394 130 OFFCURVE",
"376 110 OFFCURVE",
"360 97 CURVE SMOOTH",
"338 79 OFFCURVE",
"304 63 OFFCURVE",
"261 63 CURVE SMOOTH",
"182 63 OFFCURVE",
"138 112 OFFCURVE",
"127 201 CURVE SMOOTH",
"128 200 OFFCURVE",
"126 215 OFFCURVE",
"125 222 CURVE",
"255 235 OFFCURVE",
"333 258 OFFCURVE",
"378 288 CURVE SMOOTH",
"422 318 OFFCURVE",
"433 354 OFFCURVE",
"427 398 CURVE SMOOTH",
"420 458 OFFCURVE",
"358 514 OFFCURVE",
"265 514 CURVE SMOOTH",
"212 514 OFFCURVE",
"166 496 OFFCURVE",
"131 467 CURVE SMOOTH",
"114 452 OFFCURVE",
"98 435 OFFCURVE",
"85 415 CURVE SMOOTH",
"59 375 OFFCURVE",
"45 328 OFFCURVE",
"40 277 CURVE SMOOTH",
"37 251 OFFCURVE",
"37 225 OFFCURVE",
"41 199 CURVE SMOOTH",
"56 75 OFFCURVE",
"136 -7 OFFCURVE",
"253 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 374 OFFCURVE",
"184 450 OFFCURVE",
"268 450 CURVE SMOOTH",
"315 450 OFFCURVE",
"345 423 OFFCURVE",
"349 395 CURVE SMOOTH",
"352 371 OFFCURVE",
"346 349 OFFCURVE",
"316 330 CURVE SMOOTH",
"285 310 OFFCURVE",
"228 294 OFFCURVE",
"127 281 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
38 37 1 0 41 40 37 45 38 45 28 26 20 18 15 13 9 7 0 36 1 36 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 479;
},
{
anchors = (
{
name = bottom;
position = "{258, 0}";
},
{
name = ogonek;
position = "{281, 0}";
},
{
name = top;
position = "{271, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"345 -7 OFFCURVE",
"433 19 OFFCURVE",
"474 71 CURVE",
"449 104 LINE SMOOTH",
"445 109 OFFCURVE",
"439 112 OFFCURVE",
"432 112 CURVE SMOOTH",
"412 112 OFFCURVE",
"345 63 OFFCURVE",
"283 63 CURVE SMOOTH",
"187 63 OFFCURVE",
"129 128 OFFCURVE",
"122 240 CURVE SMOOTH",
"122 245 OFFCURVE",
"122 249 OFFCURVE",
"122 253 CURVE",
"459 253 LINE SMOOTH",
"476 253 OFFCURVE",
"481 260 OFFCURVE",
"481 288 CURVE SMOOTH",
"481 427 OFFCURVE",
"396 515 OFFCURVE",
"271 515 CURVE SMOOTH",
"126 515 OFFCURVE",
"34 406 OFFCURVE",
"34 264 CURVE SMOOTH",
"34 97 OFFCURVE",
"129 -7 OFFCURVE",
"276 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"137 397 OFFCURVE",
"186 449 OFFCURVE",
"273 449 CURVE SMOOTH",
"353 449 OFFCURVE",
"401 392 OFFCURVE",
"401 309 CURVE",
"125 309 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
38 37 1 0 41 40 37 45 38 45 28 26 20 18 15 13 9 7 0 36 1 36 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 2 3 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 515;
},
{
anchors = (
{
name = bottom;
position = "{260, 0}";
},
{
name = ogonek;
position = "{267, 0}";
},
{
name = top;
position = "{260, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "8C005BF3-2B60-4F03-9626-FDDED476A11A";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"360 -8 OFFCURVE",
"419 25 OFFCURVE",
"483 96 CURVE",
"437 143 LINE SMOOTH",
"429 152 OFFCURVE",
"418 156 OFFCURVE",
"409 156 CURVE SMOOTH",
"387 156 OFFCURVE",
"373 144 OFFCURVE",
"357 132 CURVE SMOOTH",
"339 119 OFFCURVE",
"313 108 OFFCURVE",
"278 108 CURVE SMOOTH",
"227 108 OFFCURVE",
"196 131 OFFCURVE",
"181 183 CURVE SMOOTH",
"179 191 OFFCURVE",
"177 200 OFFCURVE",
"176 210 CURVE",
"294 222 OFFCURVE",
"366 243 OFFCURVE",
"409 274 CURVE SMOOTH",
"452 305 OFFCURVE",
"464 344 OFFCURVE",
"458 391 CURVE SMOOTH",
"449 463 OFFCURVE",
"369 526 OFFCURVE",
"268 526 CURVE SMOOTH",
"212 526 OFFCURVE",
"163 509 OFFCURVE",
"126 481 CURVE SMOOTH",
"107 467 OFFCURVE",
"91 450 OFFCURVE",
"76 431 CURVE SMOOTH",
"48 392 OFFCURVE",
"30 345 OFFCURVE",
"24 293 CURVE SMOOTH",
"21 266 OFFCURVE",
"22 239 OFFCURVE",
"25 212 CURVE SMOOTH",
"41 82 OFFCURVE",
"136 -8 OFFCURVE",
"261 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"185 378 OFFCURVE",
"220 421 OFFCURVE",
"272 421 CURVE SMOOTH",
"301 421 OFFCURVE",
"317 402 OFFCURVE",
"319 385 CURVE SMOOTH",
"321 366 OFFCURVE",
"313 351 OFFCURVE",
"294 340 CURVE SMOOTH",
"271 325 OFFCURVE",
"231 315 OFFCURVE",
"175 306 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
38 37 1 0 41 40 37 45 38 45 28 26 20 18 15 13 11 9 0 36 1 36 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 4 2 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 4 2 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 493;
},
{
anchors = (
{
name = bottom;
position = "{264, 0}";
},
{
name = ogonek;
position = "{278, 0}";
},
{
name = top;
position = "{275, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"360 -8 OFFCURVE",
"443 11 OFFCURVE",
"505 81 CURVE",
"460 137 LINE SMOOTH",
"452 146 OFFCURVE",
"445 150 OFFCURVE",
"432 150 CURVE SMOOTH",
"397 150 OFFCURVE",
"343 108 OFFCURVE",
"296 108 CURVE SMOOTH",
"232 108 OFFCURVE",
"189 142 OFFCURVE",
"176 221 CURVE SMOOTH",
"175 225 OFFCURVE",
"174 228 OFFCURVE",
"174 232 CURVE",
"473 232 LINE SMOOTH",
"503 232 OFFCURVE",
"508 247 OFFCURVE",
"508 289 CURVE SMOOTH",
"508 436 OFFCURVE",
"415 527 OFFCURVE",
"275 527 CURVE SMOOTH",
"122 527 OFFCURVE",
"19 414 OFFCURVE",
"19 271 CURVE SMOOTH",
"19 106 OFFCURVE",
"122 -8 OFFCURVE",
"282 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 385 OFFCURVE",
"219 420 OFFCURVE",
"278 420 CURVE SMOOTH",
"342 420 OFFCURVE",
"369 375 OFFCURVE",
"369 322 CURVE",
"176 322 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
38 37 1 0 41 40 37 45 38 45 28 26 20 18 15 13 11 9 0 36 1 36 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
22 1 4 2 1 30 0 3 1 2 1 3 2 50 0 6 0 1 3 6 1 1 0 38 8 1 5 5 0 1 0 36 7 1 0 0 20 31 0 2 2 4 1 0 36 0 4 4 18 4 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
22 1 4 2 1 30 0 3 1 2 1 3 2 50 7 1 0 8 1 5 6 0 5 1 0 38 0 6 0 1 3 6 1 1 0 38 0 2 4 4 2 1 0 35 0 2 2 4 1 0 36 0 4 2 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = e;
rightKerningGroup = e;
rightMetricsKey = o;
unicode = 0065;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 00E9;
},
{
glyphname = ebreve;
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0115;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 011B;
},
{
glyphname = ecedilla;
layers = (
{
components = (
{
name = e;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 99, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0229;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 115, -44}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 202, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 191, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 172, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EC5;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 00EB;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 217, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 186, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 171, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0117;
},
{
glyphname = edotbelow;
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 202, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 191, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EB9;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 00E8;
},
{
glyphname = ehookabove;
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 75, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EBB;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0113;
},
{
glyphname = eogonek;
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0119;
},
{
glyphname = eopen;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"308.995 -6 OFFCURVE",
"374 25 OFFCURVE",
"398 58 CURVE",
"396 60 LINE SMOOTH",
"393 63 OFFCURVE",
"391 63 OFFCURVE",
"387 59 CURVE SMOOTH",
"374 46 OFFCURVE",
"325 4 OFFCURVE",
"241 4 CURVE SMOOTH",
"147 4 OFFCURVE",
"72 56 OFFCURVE",
"72 135 CURVE SMOOTH",
"72 212 OFFCURVE",
"142 257 OFFCURVE",
"246 257 CURVE SMOOTH",
"301 257 LINE",
"301 267 LINE",
"246 267 LINE SMOOTH",
"156 267 OFFCURVE",
"86 311 OFFCURVE",
"86 378 CURVE SMOOTH",
"86 441 OFFCURVE",
"144 488 OFFCURVE",
"244 488 CURVE SMOOTH",
"335 488 OFFCURVE",
"372 449 OFFCURVE",
"382 443 CURVE SMOOTH",
"384 442 OFFCURVE",
"385 442 OFFCURVE",
"387 444 CURVE SMOOTH",
"390 447 LINE",
"357 478 OFFCURVE",
"307 498 OFFCURVE",
"243 498 CURVE SMOOTH",
"139 498 OFFCURVE",
"75 444 OFFCURVE",
"75 378 CURVE SMOOTH",
"75 322 OFFCURVE",
"121 274 OFFCURVE",
"208 262 CURVE",
"115 252 OFFCURVE",
"60 205 OFFCURVE",
"60 135 CURVE SMOOTH",
"60 50 OFFCURVE",
"140 -6 OFFCURVE",
"237 -6 CURVE SMOOTH"
);
}
);
width = 445;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"310 -7 OFFCURVE",
"384 20 OFFCURVE",
"427 71 CURVE",
"402 104 LINE SMOOTH",
"399 108 OFFCURVE",
"394 112 OFFCURVE",
"385 112 CURVE SMOOTH",
"364 112 OFFCURVE",
"301 62 OFFCURVE",
"251 62 CURVE SMOOTH",
"183 62 OFFCURVE",
"133 98 OFFCURVE",
"133 153 CURVE SMOOTH",
"133 202 OFFCURVE",
"175 236 OFFCURVE",
"260 236 CURVE SMOOTH",
"317 236 LINE",
"317 295 LINE",
"260 295 LINE SMOOTH",
"192 295 OFFCURVE",
"141 323 OFFCURVE",
"141 371 CURVE SMOOTH",
"141 417 OFFCURVE",
"183 445 OFFCURVE",
"251 445 CURVE SMOOTH",
"294 445 OFFCURVE",
"362 407 OFFCURVE",
"375 407 CURVE SMOOTH",
"385 407 OFFCURVE",
"389 411 OFFCURVE",
"395 420 CURVE SMOOTH",
"415 455 LINE",
"378 491 OFFCURVE",
"324 515 OFFCURVE",
"250 515 CURVE SMOOTH",
"132 515 OFFCURVE",
"54 458 OFFCURVE",
"54 379 CURVE SMOOTH",
"54 332 OFFCURVE",
"86 286 OFFCURVE",
"140 266 CURVE",
"80 245 OFFCURVE",
"43 204 OFFCURVE",
"43 145 CURVE SMOOTH",
"43 52 OFFCURVE",
"137 -7 OFFCURVE",
"244 -7 CURVE SMOOTH"
);
}
);
width = 454;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"308.595 -7 OFFCURVE",
"394.209 15.985 OFFCURVE",
"452 81 CURVE",
"407 137 LINE SMOOTH",
"400.333 145.667 OFFCURVE",
"391 150 OFFCURVE",
"379 150 CURVE SMOOTH",
"344.991 150 OFFCURVE",
"314.268 106 OFFCURVE",
"257 106 CURVE SMOOTH",
"209 106 OFFCURVE",
"186 132.667 OFFCURVE",
"186 166 CURVE SMOOTH",
"186 200.667 OFFCURVE",
"208.333 219 OFFCURVE",
"271 219 CURVE SMOOTH",
"330 219 LINE",
"330 316 LINE",
"271 316 LINE SMOOTH",
"216.333 316 OFFCURVE",
"188 335.333 OFFCURVE",
"188 366 CURVE SMOOTH",
"188 396.667 OFFCURVE",
"213.667 413 OFFCURVE",
"259 413 CURVE SMOOTH",
"296.706 413 OFFCURVE",
"347.47 381 OFFCURVE",
"368 381 CURVE SMOOTH",
"382.667 381 OFFCURVE",
"391.333 384.667 OFFCURVE",
"402 402 CURVE SMOOTH",
"437 460 LINE",
"395.667 500 OFFCURVE",
"338.333 527 OFFCURVE",
"257 527 CURVE SMOOTH",
"125.235 527 OFFCURVE",
"37 470.238 OFFCURVE",
"37 380 CURVE SMOOTH",
"37 338.667 OFFCURVE",
"56.333 296 OFFCURVE",
"107 268 CURVE",
"60.333 245.333 OFFCURVE",
"28 207.667 OFFCURVE",
"28 153 CURVE SMOOTH",
"28 49.935 OFFCURVE",
"135.613 -7 OFFCURVE",
"248 -7 CURVE SMOOTH"
);
}
);
width = 461;
}
);
unicode = 025B;
},
{
glyphname = esh;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"62 -183 OFFCURVE",
"104 -131.333 OFFCURVE",
"104 -38 CURVE SMOOTH",
"104 562 LINE SMOOTH",
"104 652.667 OFFCURVE",
"144.667 697 OFFCURVE",
"214 697 CURVE SMOOTH",
"231 697 OFFCURVE",
"245 695 OFFCURVE",
"255 692 CURVE SMOOTH",
"264 689 OFFCURVE",
"270 687 OFFCURVE",
"273 687 CURVE SMOOTH",
"274.333 687 OFFCURVE",
"276.667 687 OFFCURVE",
"278 691 CURVE SMOOTH",
"279 694 LINE",
"257.667 703.333 OFFCURVE",
"236.667 707 OFFCURVE",
"214 707 CURVE SMOOTH",
"135.333 707 OFFCURVE",
"92 655.333 OFFCURVE",
"92 562 CURVE SMOOTH",
"92 -38 LINE SMOOTH",
"92 -128.667 OFFCURVE",
"52.667 -173 OFFCURVE",
"-18 -173 CURVE SMOOTH",
"-35.333 -173 OFFCURVE",
"-48.833 -171.333 OFFCURVE",
"-58.5 -168 CURVE SMOOTH",
"-68.167 -164.667 OFFCURVE",
"-74.333 -163 OFFCURVE",
"-77 -163 CURVE SMOOTH",
"-78.333 -163 OFFCURVE",
"-80.667 -163 OFFCURVE",
"-82 -167 CURVE SMOOTH",
"-83 -170 LINE",
"-61.667 -179.333 OFFCURVE",
"-40.667 -183 OFFCURVE",
"-18 -183 CURVE SMOOTH"
);
}
);
width = 196;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"105.588 -181 OFFCURVE",
"160 -104.936 OFFCURVE",
"160 5 CURVE SMOOTH",
"160 551 LINE SMOOTH",
"160 621.667 OFFCURVE",
"190 656 OFFCURVE",
"246 656 CURVE SMOOTH",
"258.667 656 OFFCURVE",
"268.5 654.833 OFFCURVE",
"275.5 652.5 CURVE SMOOTH",
"282.5 650.167 OFFCURVE",
"288 649 OFFCURVE",
"292 649 CURVE SMOOTH",
"301.333 649 OFFCURVE",
"309 651 OFFCURVE",
"313 667 CURVE SMOOTH",
"322 705 LINE",
"292.667 718.333 OFFCURVE",
"270 723 OFFCURVE",
"238 723 CURVE SMOOTH",
"125.432 723 OFFCURVE",
"71 652.016 OFFCURVE",
"71 541 CURVE SMOOTH",
"71 -8 LINE SMOOTH",
"71 -80 OFFCURVE",
"41 -114 OFFCURVE",
"-15 -114 CURVE SMOOTH",
"-27.667 -114 OFFCURVE",
"-37.667 -112.667 OFFCURVE",
"-45 -110 CURVE SMOOTH",
"-52.333 -107.333 OFFCURVE",
"-58 -106 OFFCURVE",
"-62 -106 CURVE SMOOTH",
"-70 -106 OFFCURVE",
"-78 -109.333 OFFCURVE",
"-82 -124 CURVE SMOOTH",
"-92 -163 LINE",
"-62.667 -175 OFFCURVE",
"-39 -181 OFFCURVE",
"-7 -181 CURVE SMOOTH"
);
}
);
width = 230;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"143.62 -179 OFFCURVE",
"208 -89.07 OFFCURVE",
"208 38 CURVE SMOOTH",
"208 542 LINE SMOOTH",
"208 599.333 OFFCURVE",
"229 625 OFFCURVE",
"273 625 CURVE SMOOTH",
"280 625 OFFCURVE",
"286 624 OFFCURVE",
"293 622 CURVE SMOOTH",
"299 621 OFFCURVE",
"305 620 OFFCURVE",
"309 620 CURVE SMOOTH",
"323.667 620 OFFCURVE",
"336.333 625.333 OFFCURVE",
"343 648 CURVE SMOOTH",
"360 714 LINE",
"324 728.667 OFFCURVE",
"296.667 735 OFFCURVE",
"258 735 CURVE SMOOTH",
"117.471 735 OFFCURVE",
"53 650.14 OFFCURVE",
"53 525 CURVE SMOOTH",
"53 15 LINE SMOOTH",
"53 -42.333 OFFCURVE",
"32.333 -68 OFFCURVE",
"-13 -68 CURVE SMOOTH",
"-20 -68 OFFCURVE",
"-27 -67 OFFCURVE",
"-33 -66 CURVE SMOOTH",
"-39 -65 OFFCURVE",
"-45 -64 OFFCURVE",
"-49 -64 CURVE SMOOTH",
"-63.667 -64 OFFCURVE",
"-76.333 -68 OFFCURVE",
"-83 -92 CURVE SMOOTH",
"-100 -157 LINE",
"-68.351 -170.564 OFFCURVE",
"-32.342 -179 OFFCURVE",
"2 -179 CURVE SMOOTH"
);
}
);
width = 260;
}
);
unicode = 0283;
},
{
glyphname = etilde;
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 1EBD;
},
{
glyphname = eturned;
layers = (
{
components = (
{
name = e;
transform = "{-1, 0, 0, -1, 479, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = e;
transform = "{-1, 0, 0, -1, 515, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = e;
transform = "{-1, 0, 0, -1, 527, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 01DD;
},
{
glyphname = schwa;
layers = (
{
components = (
{
name = eturned;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 479;
},
{
components = (
{
name = eturned;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 515;
},
{
components = (
{
name = eturned;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 527;
}
);
unicode = 0259;
},
{
glyphname = ezh;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"298.882 -187 OFFCURVE",
"380 -106.622 OFFCURVE",
"380 20 CURVE SMOOTH",
"380 133.008 OFFCURVE",
"311 203 OFFCURVE",
"182 203 CURVE SMOOTH",
"160 203 OFFCURVE",
"139 203 OFFCURVE",
"117 203 CURVE",
"339 479 LINE SMOOTH",
"341 482 OFFCURVE",
"342 483.667 OFFCURVE",
"342 485 CURVE SMOOTH",
"342 490 LINE",
"26 490 LINE",
"26 480 LINE",
"326 480 LINE",
"106 204 LINE SMOOTH",
"104 202 OFFCURVE",
"103 199.667 OFFCURVE",
"103 197 CURVE SMOOTH",
"103 193 LINE",
"183 193 LINE SMOOTH",
"302.955 193 OFFCURVE",
"368 126.789 OFFCURVE",
"368 19 CURVE SMOOTH",
"368 -101.618 OFFCURVE",
"287.299 -177 OFFCURVE",
"169 -177 CURVE SMOOTH",
"68 -177 OFFCURVE",
"31 -122 OFFCURVE",
"23 -122 CURVE SMOOTH",
"22 -122 OFFCURVE",
"20 -123 OFFCURVE",
"18 -125 CURVE SMOOTH",
"15 -128 LINE",
"55.965 -166.234 OFFCURVE",
"104.481 -187 OFFCURVE",
"169 -187 CURVE"
);
}
);
width = 423;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"313.748 -180 OFFCURVE",
"406 -89.254 OFFCURVE",
"406 42 CURVE SMOOTH",
"406 151 OFFCURVE",
"341 219 OFFCURVE",
"218 230 CURVE SMOOTH",
"210 231 OFFCURVE",
"202 232 OFFCURVE",
"194 232 CURVE",
"359 430 LINE SMOOTH",
"368 441 OFFCURVE",
"377 453 OFFCURVE",
"377 469 CURVE SMOOTH",
"377 507 LINE",
"17 507 LINE",
"17 437 LINE",
"269 437 LINE",
"98 225 LINE SMOOTH",
"91 217 OFFCURVE",
"86 210.667 OFFCURVE",
"86 200 CURVE SMOOTH",
"86 172 LINE",
"174 172 LINE SMOOTH",
"270.758 172 OFFCURVE",
"319 120.419 OFFCURVE",
"319 36 CURVE SMOOTH",
"319 -57.219 OFFCURVE",
"258.682 -113 OFFCURVE",
"166 -113 CURVE SMOOTH",
"118.939 -113 OFFCURVE",
"56.46 -71 OFFCURVE",
"36 -71 CURVE SMOOTH",
"26 -71 OFFCURVE",
"18 -75 OFFCURVE",
"13 -84 CURVE SMOOTH",
"-8 -118 LINE",
"32 -154 OFFCURVE",
"85.333 -180 OFFCURVE",
"164 -180 CURVE SMOOTH"
);
}
);
width = 440;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"357.164 -174 OFFCURVE",
"458 -75.398 OFFCURVE",
"458 59 CURVE SMOOTH",
"458 155 OFFCURVE",
"403 221 OFFCURVE",
"300 245 CURVE SMOOTH",
"294 247 OFFCURVE",
"288 248 OFFCURVE",
"282 249 CURVE",
"405 392 LINE SMOOTH",
"420 410 OFFCURVE",
"435 430 OFFCURVE",
"435 457 CURVE SMOOTH",
"435 519 LINE",
"39 519 LINE",
"39 404 LINE",
"250 404 LINE",
"120 241 LINE SMOOTH",
"108 226 OFFCURVE",
"100 219 OFFCURVE",
"100 203 CURVE SMOOTH",
"100 156 LINE",
"196 156 LINE SMOOTH",
"271.864 156 OFFCURVE",
"306 116.868 OFFCURVE",
"306 49 CURVE SMOOTH",
"306 -25.667 OFFCURVE",
"265.333 -64 OFFCURVE",
"192 -64 CURVE SMOOTH",
"138.782 -64 OFFCURVE",
"109.872 -32 OFFCURVE",
"76 -32 CURVE SMOOTH",
"57.333 -32 OFFCURVE",
"45 -40 OFFCURVE",
"37 -53 CURVE SMOOTH",
"1 -110 LINE",
"42.882 -149.09 OFFCURVE",
"109.745 -174 OFFCURVE",
"189 -174 CURVE SMOOTH"
);
}
);
width = 483;
}
);
unicode = 0292;
},
{
color = 4;
glyphname = f;
layers = (
{
anchors = (
{
name = bottom;
position = "{126, 0}";
},
{
name = top;
position = "{169, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 131, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"306 459 LINE",
"306 469 LINE",
"131 469 LINE",
"131 544 LINE SMOOTH",
"131 647 OFFCURVE",
"178 697 OFFCURVE",
"253 697 CURVE SMOOTH",
"268 697 OFFCURVE",
"280 696 OFFCURVE",
"288 693 CURVE SMOOTH",
"299 689 OFFCURVE",
"307 688 OFFCURVE",
"308 692 CURVE SMOOTH",
"309 696 LINE",
"296 704 OFFCURVE",
"273 707 OFFCURVE",
"253 707 CURVE SMOOTH",
"170 707 OFFCURVE",
"119 650 OFFCURVE",
"119 544 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 351;
},
{
anchors = (
{
name = bottom;
position = "{181, 0}";
},
{
name = top;
position = "{201, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 412 LINE",
"375 412 LINE",
"375 518 LINE",
"253 518 LINE",
"253 542 LINE SMOOTH",
"253 608 OFFCURVE",
"281 630 OFFCURVE",
"338 630 CURVE SMOOTH",
"338 630 OFFCURVE",
"339 630 OFFCURVE",
"345 630 CURVE SMOOTH",
"357 630 OFFCURVE",
"376 638 OFFCURVE",
"377 658 CURVE SMOOTH",
"380 733 LINE",
"357 740 OFFCURVE",
"336 743 OFFCURVE",
"311 743 CURVE SMOOTH",
"184 743 OFFCURVE",
"103 667 OFFCURVE",
"103 547 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 32 0 32 31 30 29 28 23 21 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
16 1 2 1 1 1 4 0 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
16 1 2 1 1 1 4 0 2 30 0 1 0 2 0 1 2 1 0 38 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
16 1 2 1 1 1 4 0 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
16 1 2 1 1 1 4 3 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 397;
},
{
anchors = (
{
name = bottom;
position = "{155, 0}";
},
{
name = top;
position = "{184, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 108, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 198, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"341 432 LINE",
"341 497 LINE",
"195 497 LINE",
"195 543 LINE SMOOTH",
"195 624 OFFCURVE",
"230 659 OFFCURVE",
"297 659 CURVE SMOOTH",
"304 659 OFFCURVE",
"309 659 OFFCURVE",
"326 659 CURVE SMOOTH",
"335 659 OFFCURVE",
"342 661 OFFCURVE",
"343 673 CURVE SMOOTH",
"345 717 LINE",
"326 724 OFFCURVE",
"305 727 OFFCURVE",
"282 727 CURVE SMOOTH",
"175 727 OFFCURVE",
"108 660 OFFCURVE",
"108 546 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 26 21 18 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
15 1 2 1 1 1 5 4 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
15 1 2 1 1 1 5 4 2 30 3 1 0 0 4 5 0 4 0 0 38 0 2 2 1 1 0 36 0 1 1 17 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
15 1 2 1 1 1 5 4 2 30 0 1 0 2 0 1 2 1 0 38 3 1 0 0 4 5 0 4 0 0 38 6 1 5 5 15 5 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
15 1 2 1 1 1 5 4 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 1 1 1 5 4 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "58D90C1D-35F3-4662-BC68-28403069CAC8";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"247 0 LINE",
"247 20 LINE SMOOTH",
"247 31 OFFCURVE",
"240 37 OFFCURVE",
"227 38 CURVE",
"163 40 LINE",
"163 446 LINE",
"323 446 LINE",
"323 482 LINE",
"162 482 LINE",
"162 543 LINE SMOOTH",
"162 622 OFFCURVE",
"190 679 OFFCURVE",
"274 679 CURVE SMOOTH",
"280 679 OFFCURVE",
"304 677 OFFCURVE",
"311 676 CURVE SMOOTH",
"317 675 OFFCURVE",
"326 678 OFFCURVE",
"326 683 CURVE",
"327 706 LINE",
"307 713 OFFCURVE",
"289 716 OFFCURVE",
"268 716 CURVE SMOOTH",
"166 716 OFFCURVE",
"116 646 OFFCURVE",
"116 545 CURVE SMOOTH",
"116 482 LINE",
"31 482 LINE",
"31 462 LINE SMOOTH",
"31 454 OFFCURVE",
"35 451 OFFCURVE",
"45 450 CURVE SMOOTH",
"116 445 LINE",
"116 40 LINE",
"53 38 LINE",
"40 37 OFFCURVE",
"33 31 OFFCURVE",
"33 20 CURVE SMOOTH",
"33 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 309;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "D3ACC918-DBAB-416E-9F4C-BD51D4E5B4C3";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"296 658 LINE",
"311 658 LINE SMOOTH",
"321 658 OFFCURVE",
"328 658 OFFCURVE",
"334 660 CURVE SMOOTH",
"340 662 OFFCURVE",
"343 666 OFFCURVE",
"343 672 CURVE",
"345 717 LINE",
"325 723 OFFCURVE",
"304 727 OFFCURVE",
"282 727 CURVE SMOOTH",
"228 727 OFFCURVE",
"186 712 OFFCURVE",
"155 680 CURVE SMOOTH",
"123 648 OFFCURVE",
"108 603 OFFCURVE",
"108 545 CURVE SMOOTH",
"108 496 LINE",
"28 496 LINE",
"28 460 LINE SMOOTH",
"28 448 OFFCURVE",
"36 441 OFFCURVE",
"52 437 CURVE",
"108 430 LINE",
"108 73 LINE",
"46 62 LINE SMOOTH",
"36 60 OFFCURVE",
"31 53 OFFCURVE",
"31 43 CURVE SMOOTH",
"31 0 LINE",
"279 0 LINE",
"279 43 LINE SMOOTH",
"279 53 OFFCURVE",
"274 60 OFFCURVE",
"264 62 CURVE SMOOTH",
"259 63 OFFCURVE",
"237 67 OFFCURVE",
"197 73 CURVE",
"197 432 LINE",
"341 432 LINE",
"341 496 LINE",
"195 496 LINE",
"195 543 LINE SMOOTH",
"195 620 OFFCURVE",
"229 658 OFFCURVE",
"297 658 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 26 21 18 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
15 1 2 1 1 1 5 4 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
15 1 2 1 1 1 5 4 2 30 3 1 0 0 4 5 0 4 0 0 38 0 2 2 1 1 0 36 0 1 1 17 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
15 1 2 1 1 1 5 4 2 30 0 1 0 2 0 1 2 1 0 38 3 1 0 0 4 5 0 4 0 0 38 6 1 5 5 15 5 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
15 1 2 1 1 1 5 4 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 1 1 1 5 4 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 337;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "2AD8895A-21F5-4B81-9FA1-0B336FBE5574";
name = "Jan 15 23, 17:50";
paths = (
{
closed = 1;
nodes = (
"230 603 OFFCURVE",
"236 613 OFFCURVE",
"244 621 CURVE SMOOTH",
"252 629 OFFCURVE",
"262 635 OFFCURVE",
"273 638 CURVE SMOOTH",
"284 641 OFFCURVE",
"297 642 OFFCURVE",
"312 642 CURVE SMOOTH",
"323 642 OFFCURVE",
"333 644 OFFCURVE",
"341 646 CURVE SMOOTH",
"349 648 OFFCURVE",
"354 654 OFFCURVE",
"355 664 CURVE",
"357 726 LINE",
"337 732 OFFCURVE",
"315 735 OFFCURVE",
"291 735 CURVE SMOOTH",
"261 735 OFFCURVE",
"235 731 OFFCURVE",
"211 722 CURVE SMOOTH",
"187 713 OFFCURVE",
"168 701 OFFCURVE",
"151 685 CURVE SMOOTH",
"134 669 OFFCURVE",
"122 648 OFFCURVE",
"113 625 CURVE SMOOTH",
"104 602 OFFCURVE",
"100 575 OFFCURVE",
"100 546 CURVE SMOOTH",
"100 508 LINE",
"24 508 LINE",
"24 458 LINE SMOOTH",
"24 449 OFFCURVE",
"26 442 OFFCURVE",
"32 437 CURVE SMOOTH",
"38 432 OFFCURVE",
"46 429 OFFCURVE",
"56 427 CURVE",
"100 420 LINE",
"100 99 LINE",
"88 97 OFFCURVE",
"78 95 OFFCURVE",
"71 94 CURVE SMOOTH",
"64 93 OFFCURVE",
"59 92 OFFCURVE",
"56 91 CURVE SMOOTH",
"53 90 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"100 0 LINE",
"223 0 LINE",
"224 0 LINE",
"305 0 LINE",
"305 59 LINE SMOOTH",
"305 76 OFFCURVE",
"297 86 OFFCURVE",
"280 90 CURVE",
"279 90 OFFCURVE",
"276 91 OFFCURVE",
"272 91 CURVE SMOOTH",
"268 91 OFFCURVE",
"262 93 OFFCURVE",
"254 94 CURVE SMOOTH",
"246 95 OFFCURVE",
"236 97 OFFCURVE",
"224 99 CURVE",
"224 421 LINE",
"353 421 LINE",
"353 509 LINE",
"219 509 LINE",
"219 543 LINE SMOOTH",
"219 562 OFFCURVE",
"222 577 OFFCURVE",
"226 590 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 32 0 32 31 30 29 28 23 21 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
16 1 2 1 1 1 4 0 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
16 1 2 1 1 1 4 0 2 30 0 1 0 2 0 1 2 1 0 38 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
16 1 2 1 1 1 4 0 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
16 1 2 1 1 1 4 3 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 362;
},
{
anchors = (
{
name = bottom;
position = "{155, 0}";
},
{
name = top;
position = "{184, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 108, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 198, 0}";
},
{
name = x;
}
);
layerId = "61D88841-54EA-4411-A640-3C13A8F94BB6";
name = "Feb 27 23, 18:22";
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"341 432 LINE",
"341 497 LINE",
"195 497 LINE",
"195 543 LINE SMOOTH",
"195 624 OFFCURVE",
"230 659 OFFCURVE",
"297 659 CURVE SMOOTH",
"304 659 OFFCURVE",
"309 659 OFFCURVE",
"326 659 CURVE SMOOTH",
"335 659 OFFCURVE",
"342 661 OFFCURVE",
"343 673 CURVE SMOOTH",
"345 717 LINE",
"326 724 OFFCURVE",
"305 727 OFFCURVE",
"282 727 CURVE SMOOTH",
"175 727 OFFCURVE",
"108 660 OFFCURVE",
"108 546 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 26 21 18 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
15 1 2 1 1 1 5 4 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
15 1 2 1 1 1 5 4 2 30 3 1 0 0 4 5 0 4 0 0 38 0 2 2 1 1 0 36 0 1 1 17 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
15 1 2 1 1 1 5 4 2 30 0 1 0 2 0 1 2 1 0 38 3 1 0 0 4 5 0 4 0 0 38 6 1 5 5 15 5 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
15 1 2 1 1 1 5 4 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 1 1 1 5 4 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
position = "{126, -177}";
},
{
name = top;
position = "{169, 700}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = fitalictail;
}
);
layerId = "42A27AAB-C9EE-46C8-84EB-D2988CA2B16D";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"306 459 LINE",
"306 469 LINE",
"131 469 LINE",
"131 544 LINE SMOOTH",
"131 647 OFFCURVE",
"178 697 OFFCURVE",
"253 697 CURVE SMOOTH",
"268 697 OFFCURVE",
"280 696 OFFCURVE",
"288 693 CURVE SMOOTH",
"299 689 OFFCURVE",
"307 688 OFFCURVE",
"308 692 CURVE SMOOTH",
"309 696 LINE",
"296 704 OFFCURVE",
"273 707 OFFCURVE",
"253 707 CURVE SMOOTH",
"170 707 OFFCURVE",
"119 650 OFFCURVE",
"119 544 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 351;
},
{
anchors = (
{
name = bottom;
position = "{155, -172}";
},
{
name = top;
position = "{184, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = fitalictail;
}
);
layerId = "C4E301B2-5255-4191-9220-779760A23009";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"341 432 LINE",
"341 497 LINE",
"195 497 LINE",
"195 543 LINE SMOOTH",
"195 624 OFFCURVE",
"230 659 OFFCURVE",
"297 659 CURVE SMOOTH",
"304 659 OFFCURVE",
"309 659 OFFCURVE",
"326 659 CURVE SMOOTH",
"335 659 OFFCURVE",
"342 661 OFFCURVE",
"343 673 CURVE SMOOTH",
"345 717 LINE",
"326 724 OFFCURVE",
"305 727 OFFCURVE",
"282 727 CURVE SMOOTH",
"175 727 OFFCURVE",
"108 660 OFFCURVE",
"108 546 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 26 21 18 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
15 1 2 1 1 1 5 4 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
15 1 2 1 1 1 5 4 2 30 3 1 0 0 4 5 0 4 0 0 38 0 2 2 1 1 0 36 0 1 1 17 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
15 1 2 1 1 1 5 4 2 30 0 1 0 2 0 1 2 1 0 38 3 1 0 0 4 5 0 4 0 0 38 6 1 5 5 15 5 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
15 1 2 1 1 1 5 4 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 1 1 1 5 4 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
position = "{181, -173}";
},
{
name = top;
position = "{201, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = fitalictail;
}
);
layerId = "3DB706A2-C902-4E8A-9BA0-77DBA2A6F6D4";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 111 LINE",
"258 412 LINE",
"375 412 LINE",
"375 518 LINE",
"253 518 LINE",
"253 542 LINE SMOOTH",
"253 608 OFFCURVE",
"281 630 OFFCURVE",
"338 630 CURVE SMOOTH",
"338 630 OFFCURVE",
"339 630 OFFCURVE",
"345 630 CURVE SMOOTH",
"357 630 OFFCURVE",
"376 638 OFFCURVE",
"377 658 CURVE SMOOTH",
"380 733 LINE",
"357 740 OFFCURVE",
"336 743 OFFCURVE",
"311 743 CURVE SMOOTH",
"184 743 OFFCURVE",
"103 667 OFFCURVE",
"103 547 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 32 0 32 31 30 29 28 23 21 14 12 7 6 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
16 1 2 1 1 1 4 0 2 30 0 2 2 1 1 0 36 0 1 1 17 31 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
16 1 2 1 1 1 4 0 2 30 0 1 0 2 0 1 2 1 0 38 0 4 4 0 0 0 36 3 1 0 0 14 31 6 1 5 5 12 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
16 1 2 1 1 1 4 0 2 30 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 0 36 0 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
16 1 2 1 1 1 4 3 2 30 0 0 2 3 2 0 3 50 6 1 5 4 5 53 0 1 0 2 0 1 2 1 0 38 0 3 4 4 3 0 0 35 0 3 3 4 0 0 36 0 4 3 4 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 397;
}
);
note = f;
rightKerningGroup = f;
unicode = 0066;
},
{
color = 3;
glyphname = g;
layers = (
{
anchors = (
{
name = bottom;
position = "{240, -185}";
},
{
name = top;
position = "{248, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "DAB6C434-C2F2-4B8C-B3AB-1F131725784E";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"343 -188 OFFCURVE",
"439 -130 OFFCURVE",
"430 -38 CURVE SMOOTH",
"426 -4 OFFCURVE",
"402 32 OFFCURVE",
"372 59 CURVE SMOOTH",
"347 81 OFFCURVE",
"320 106 OFFCURVE",
"317 133 CURVE SMOOTH",
"313 164 OFFCURVE",
"330 193 OFFCURVE",
"354 233 CURVE SMOOTH",
"380 275 OFFCURVE",
"393 320 OFFCURVE",
"390 370 CURVE SMOOTH",
"385 410 OFFCURVE",
"368 442 OFFCURVE",
"344 463 CURVE",
"447 464 LINE SMOOTH",
"451 464 OFFCURVE",
"456 466 OFFCURVE",
"455 469 CURVE SMOOTH",
"455 473 LINE",
"331 473 LINE",
"307 489 OFFCURVE",
"279 497 OFFCURVE",
"247 497 CURVE SMOOTH",
"150 497 OFFCURVE",
"91 417 OFFCURVE",
"103 320 CURVE SMOOTH",
"113 238 OFFCURVE",
"168 189 OFFCURVE",
"246 189 CURVE SMOOTH",
"278 189 OFFCURVE",
"310 202 OFFCURVE",
"338 224 CURVE",
"311 186 OFFCURVE",
"303 161 OFFCURVE",
"307 133 CURVE SMOOTH",
"309 106 OFFCURVE",
"326 87 OFFCURVE",
"347 69 CURVE",
"199 88 OFFCURVE",
"46 45 OFFCURVE",
"58 -75 CURVE SMOOTH",
"68 -150 OFFCURVE",
"147 -188 OFFCURVE",
"239 -188 CURVE"
);
},
{
closed = 1;
nodes = (
"156 -178 OFFCURVE",
"78 -146 OFFCURVE",
"69 -75 CURVE SMOOTH",
"58 41 OFFCURVE",
"206 77 OFFCURVE",
"358 59 CURVE",
"386 33 OFFCURVE",
"413 6 OFFCURVE",
"419 -38 CURVE SMOOTH",
"426 -120 OFFCURVE",
"339 -178 OFFCURVE",
"239 -178 CURVE"
);
},
{
closed = 1;
nodes = (
"175 199 OFFCURVE",
"124 240 OFFCURVE",
"114 320 CURVE SMOOTH",
"103 410 OFFCURVE",
"154 487 OFFCURVE",
"248 487 CURVE SMOOTH",
"319 487 OFFCURVE",
"370 447 OFFCURVE",
"380 370 CURVE SMOOTH",
"390 282 OFFCURVE",
"337 199 OFFCURVE",
"245 199 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
74 3 43 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
99 3 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
12 3 89 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 3 62 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
9 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
46 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
54 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
79 1 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
4 1 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
84 1 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
94 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 509;
},
{
anchors = (
{
name = bottom;
position = "{219, -186}";
},
{
name = top;
position = "{218, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"113 498 OFFCURVE",
"47 435 OFFCURVE",
"47 342 CURVE SMOOTH",
"47 283 OFFCURVE",
"73 237 OFFCURVE",
"118 210 CURVE",
"86 192 OFFCURVE",
"59 157 OFFCURVE",
"59 129 CURVE SMOOTH",
"59 92 OFFCURVE",
"84 72 OFFCURVE",
"121 63 CURVE",
"56 42 OFFCURVE",
"15 0 OFFCURVE",
"15 -56 CURVE SMOOTH",
"15 -136 OFFCURVE",
"101 -188 OFFCURVE",
"219 -188 CURVE SMOOTH",
"338 -188 OFFCURVE",
"432 -125 OFFCURVE",
"432 -39 CURVE SMOOTH",
"432 46 OFFCURVE",
"345 55 OFFCURVE",
"251 60 CURVE SMOOTH",
"163 63 OFFCURVE",
"70 63 OFFCURVE",
"70 129 CURVE SMOOTH",
"70 156 OFFCURVE",
"97 188 OFFCURVE",
"127 205 CURVE",
"152 192 OFFCURVE",
"180 186 OFFCURVE",
"213 186 CURVE SMOOTH",
"313 186 OFFCURVE",
"379 249 OFFCURVE",
"379 342 CURVE SMOOTH",
"379 389 OFFCURVE",
"364 427 OFFCURVE",
"333 455 CURVE",
"431 457 LINE SMOOTH",
"435 457 OFFCURVE",
"439 460 OFFCURVE",
"439 464 CURVE SMOOTH",
"439 466 LINE",
"320 466 LINE",
"292 486 OFFCURVE",
"257 498 OFFCURVE",
"213 498 CURVE"
);
},
{
closed = 1;
nodes = (
"421 -124 OFFCURVE",
"322 -178 OFFCURVE",
"219 -178 CURVE SMOOTH",
"112 -178 OFFCURVE",
"27 -130 OFFCURVE",
"27 -56 CURVE SMOOTH",
"27 2 OFFCURVE",
"74 36 OFFCURVE",
"135 60 CURVE",
"170 53 OFFCURVE",
"288 48 OFFCURVE",
"319 45 CURVE SMOOTH",
"377 38 OFFCURVE",
"421 16 OFFCURVE",
"421 -39 CURVE"
);
},
{
closed = 1;
nodes = (
"121 196 OFFCURVE",
"59 254 OFFCURVE",
"59 342 CURVE SMOOTH",
"59 430 OFFCURVE",
"121 488 OFFCURVE",
"213 488 CURVE SMOOTH",
"308 488 OFFCURVE",
"367 431 OFFCURVE",
"367 342 CURVE SMOOTH",
"367 253 OFFCURVE",
"308 196 OFFCURVE",
"213 196 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
74 3 43 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
99 3 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
12 3 89 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 3 62 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
9 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
46 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
54 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
79 1 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
4 1 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
84 1 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
94 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 467;
},
{
anchors = (
{
name = bottom;
position = "{273, -183}";
},
{
name = top;
position = "{262, 507}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "C7687C9E-6739-4011-B464-E386A1878B47";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"391 -182 OFFCURVE",
"482 -108 OFFCURVE",
"470 -6 CURVE SMOOTH",
"465 30 OFFCURVE",
"447 59 OFFCURVE",
"427 84 CURVE SMOOTH",
"407 107 OFFCURVE",
"388 132 OFFCURVE",
"385 158 CURVE SMOOTH",
"381 192 OFFCURVE",
"396 224 OFFCURVE",
"411 252 CURVE SMOOTH",
"427 281 OFFCURVE",
"442 322 OFFCURVE",
"436 366 CURVE SMOOTH",
"434 387 OFFCURVE",
"428 407 OFFCURVE",
"419 424 CURVE",
"482 435 LINE SMOOTH",
"491 437 OFFCURVE",
"499 447 OFFCURVE",
"499 459 CURVE SMOOTH",
"498 488 LINE",
"361 488 LINE",
"334 505 OFFCURVE",
"299 514 OFFCURVE",
"263 514 CURVE SMOOTH",
"140 514 OFFCURVE",
"72 424 OFFCURVE",
"85 321 CURVE SMOOTH",
"96 228 OFFCURVE",
"162 173 OFFCURVE",
"243 173 CURVE SMOOTH",
"283 173 OFFCURVE",
"313 183 OFFCURVE",
"336 200 CURVE",
"324 172 OFFCURVE",
"321 151 OFFCURVE",
"323 131 CURVE SMOOTH",
"325 115 OFFCURVE",
"332 101 OFFCURVE",
"338 89 CURVE",
"197 109 OFFCURVE",
"32 69 OFFCURVE",
"47 -57 CURVE SMOOTH",
"57 -136 OFFCURVE",
"146 -182 OFFCURVE",
"255 -182 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181 -120 OFFCURVE",
"137 -94 OFFCURVE",
"131 -46 CURVE SMOOTH",
"122 28 OFFCURVE",
"222 57 OFFCURVE",
"375 34 CURVE",
"382 21 OFFCURVE",
"387 6 OFFCURVE",
"390 -13 CURVE SMOOTH",
"397 -73 OFFCURVE",
"338 -120 OFFCURVE",
"256 -120 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"208 229 OFFCURVE",
"173 261 OFFCURVE",
"166 321 CURVE SMOOTH",
"157 390 OFFCURVE",
"192 452 OFFCURVE",
"261 452 CURVE SMOOTH",
"313 452 OFFCURVE",
"348 422 OFFCURVE",
"356 363 CURVE SMOOTH",
"364 295 OFFCURVE",
"329 229 OFFCURVE",
"260 229 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
79 78 1 0 87 85 78 93 79 93 74 72 64 62 35 33 25 23 16 14 4 3 0 57 1 57 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 0 4 6 4 1 0 37 0 8 8 0 1 0 36 9 1 0 0 20 8 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 9 1 0 0 8 7 0 8 1 0 38 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 4 4 6 1 0 35 0 6 6 4 1 0 36 0 4 6 4 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
anchors = (
{
name = bottom;
position = "{236, -180}";
},
{
name = top;
position = "{231, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"120 515 OFFCURVE",
"39 453 OFFCURVE",
"39 352 CURVE SMOOTH",
"39 291 OFFCURVE",
"68 243 OFFCURVE",
"119 215 CURVE",
"80 195 OFFCURVE",
"54 159 OFFCURVE",
"54 129 CURVE SMOOTH",
"54 92 OFFCURVE",
"73 70 OFFCURVE",
"101 57 CURVE",
"46 37 OFFCURVE",
"12 2 OFFCURVE",
"12 -49 CURVE SMOOTH",
"12 -129 OFFCURVE",
"102 -183 OFFCURVE",
"234 -183 CURVE SMOOTH",
"369 -183 OFFCURVE",
"471 -109 OFFCURVE",
"471 -13 CURVE SMOOTH",
"471 78 OFFCURVE",
"392 97 OFFCURVE",
"301 105 CURVE SMOOTH",
"226 110 OFFCURVE",
"131 103 OFFCURVE",
"131 153 CURVE SMOOTH",
"131 168 OFFCURVE",
"143 184 OFFCURVE",
"164 197 CURVE",
"185 192 OFFCURVE",
"207 189 OFFCURVE",
"231 189 CURVE SMOOTH",
"338 189 OFFCURVE",
"421 252 OFFCURVE",
"421 352 CURVE SMOOTH",
"421 379 OFFCURVE",
"415 403 OFFCURVE",
"404 425 CURVE",
"461 433 LINE SMOOTH",
"475 435 OFFCURVE",
"482 443 OFFCURVE",
"482 454 CURVE SMOOTH",
"482 487 LINE",
"345 487 LINE",
"313 506 OFFCURVE",
"275 515 OFFCURVE",
"231 515 CURVE"
);
},
{
closed = 1;
nodes = (
"389 -86 OFFCURVE",
"322 -118 OFFCURVE",
"235 -118 CURVE SMOOTH",
"148 -118 OFFCURVE",
"90 -88 OFFCURVE",
"90 -37 CURVE SMOOTH",
"90 -1 OFFCURVE",
"117 24 OFFCURVE",
"154 43 CURVE",
"191 37 OFFCURVE",
"280 34 OFFCURVE",
"309 30 CURVE SMOOTH",
"353 24 OFFCURVE",
"389 11 OFFCURVE",
"389 -28 CURVE"
);
},
{
closed = 1;
nodes = (
"162 248 OFFCURVE",
"121 288 OFFCURVE",
"121 350 CURVE SMOOTH",
"121 411 OFFCURVE",
"159 451 OFFCURVE",
"231 451 CURVE SMOOTH",
"303 451 OFFCURVE",
"341 411 OFFCURVE",
"341 350 CURVE SMOOTH",
"341 288 OFFCURVE",
"300 248 OFFCURVE",
"231 248 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
79 78 1 0 87 85 78 93 79 93 74 72 64 62 35 33 25 23 16 14 4 3 0 57 1 57 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 0 4 6 4 1 0 37 0 8 8 0 1 0 36 9 1 0 0 20 8 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
8 1 7 8 50 17 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 9 1 0 0 8 7 0 8 1 0 38 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 4 4 6 1 0 35 0 6 6 4 1 0 36 0 4 6 4 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
anchors = (
{
name = bottom;
position = "{273, -178}";
},
{
name = top;
position = "{277, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "19DA4B9B-33BB-45AD-9147-554A2F10B63B";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"424 -178 OFFCURVE",
"520 -96 OFFCURVE",
"506 19 CURVE SMOOTH",
"501 53 OFFCURVE",
"486 79 OFFCURVE",
"472 105 CURVE SMOOTH",
"459 128 OFFCURVE",
"446 150 OFFCURVE",
"443 176 CURVE SMOOTH",
"439 214 OFFCURVE",
"448 240 OFFCURVE",
"459 266 CURVE SMOOTH",
"470 293 OFFCURVE",
"481 321 OFFCURVE",
"476 364 CURVE SMOOTH",
"475 376 OFFCURVE",
"472 387 OFFCURVE",
"469 398 CURVE",
"511 413 LINE SMOOTH",
"527 419 OFFCURVE",
"535 432 OFFCURVE",
"535 451 CURVE SMOOTH",
"536 500 LINE",
"387 500 LINE",
"354 517 OFFCURVE",
"317 527 OFFCURVE",
"277 527 CURVE SMOOTH",
"135 527 OFFCURVE",
"57 434 OFFCURVE",
"70 322 CURVE SMOOTH",
"83 218 OFFCURVE",
"156 161 OFFCURVE",
"240 161 CURVE SMOOTH",
"291 161 OFFCURVE",
"322 172 OFFCURVE",
"345 189 CURVE",
"338 167 OFFCURVE",
"336 147 OFFCURVE",
"338 128 CURVE SMOOTH",
"339 119 OFFCURVE",
"341 111 OFFCURVE",
"343 103 CURVE",
"196 130 OFFCURVE",
"22 91 OFFCURVE",
"38 -43 CURVE SMOOTH",
"48 -126 OFFCURVE",
"149 -178 OFFCURVE",
"271 -178 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"212 -75 OFFCURVE",
"187 -57 OFFCURVE",
"183 -24 CURVE SMOOTH",
"177 23 OFFCURVE",
"249 37 OFFCURVE",
"365 19 CURVE",
"364 27 OFFCURVE",
"367 2 OFFCURVE",
"366 7 CURVE SMOOTH",
"372 -44 OFFCURVE",
"331 -75 OFFCURVE",
"271 -75 CURVE"
);
},
{
closed = 1;
nodes = (
"238 251 OFFCURVE",
"217 277 OFFCURVE",
"211 321 CURVE SMOOTH",
"205 377 OFFCURVE",
"223 426 OFFCURVE",
"272 426 CURVE SMOOTH",
"309 426 OFFCURVE",
"330 401 OFFCURVE",
"335 358 CURVE SMOOTH",
"341 306 OFFCURVE",
"322 251 OFFCURVE",
"274 251 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
79 78 1 0 85 83 78 91 79 91 74 72 64 62 35 33 24 23 17 15 4 3 0 57 1 57 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 3 3 5 1 0 36 0 5 5 12 31 0 6 6 4 1 0 36 0 4 4 22 4 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 0 4 6 4 1 0 37 0 8 8 0 1 0 36 9 1 0 0 20 8 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 9 1 0 0 8 7 0 8 1 0 38 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 4 4 6 1 0 35 0 6 6 4 1 0 36 0 4 6 4 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
anchors = (
{
name = bottom;
position = "{245, -176}";
},
{
name = top;
position = "{244, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"121 528 OFFCURVE",
"26 464 OFFCURVE",
"26 359 CURVE SMOOTH",
"26 296 OFFCURVE",
"60 248 OFFCURVE",
"113 220 CURVE",
"69 198 OFFCURVE",
"44 163 OFFCURVE",
"44 128 CURVE SMOOTH",
"44 92 OFFCURVE",
"59 69 OFFCURVE",
"83 53 CURVE",
"34 36 OFFCURVE",
"4 4 OFFCURVE",
"4 -43 CURVE SMOOTH",
"4 -124 OFFCURVE",
"98 -179 OFFCURVE",
"240 -179 CURVE SMOOTH",
"391 -179 OFFCURVE",
"498 -97 OFFCURVE",
"498 7 CURVE SMOOTH",
"498 105 OFFCURVE",
"426 129 OFFCURVE",
"338 138 CURVE SMOOTH",
"273 145 OFFCURVE",
"177 136 OFFCURVE",
"177 171 CURVE SMOOTH",
"177 180 OFFCURVE",
"183 187 OFFCURVE",
"194 194 CURVE",
"209 192 OFFCURVE",
"224 191 OFFCURVE",
"240 191 CURVE SMOOTH",
"357 191 OFFCURVE",
"450 255 OFFCURVE",
"450 359 CURVE SMOOTH",
"450 375 OFFCURVE",
"448 391 OFFCURVE",
"443 406 CURVE",
"481 414 LINE SMOOTH",
"505 419 OFFCURVE",
"513 429 OFFCURVE",
"513 446 CURVE SMOOTH",
"513 503 LINE",
"357 503 LINE",
"324 519 OFFCURVE",
"284 528 OFFCURVE",
"240 528 CURVE"
);
},
{
closed = 1;
nodes = (
"355 -56 OFFCURVE",
"318 -72 OFFCURVE",
"243 -72 CURVE SMOOTH",
"174 -72 OFFCURVE",
"138 -58 OFFCURVE",
"138 -23 CURVE SMOOTH",
"138 -2 OFFCURVE",
"152 15 OFFCURVE",
"171 28 CURVE",
"201 24 OFFCURVE",
"274 23 OFFCURVE",
"296 20 CURVE SMOOTH",
"328 16 OFFCURVE",
"355 6 OFFCURVE",
"355 -19 CURVE"
);
},
{
closed = 1;
nodes = (
"193 287 OFFCURVE",
"167 314 OFFCURVE",
"167 356 CURVE SMOOTH",
"167 397 OFFCURVE",
"189 423 OFFCURVE",
"240 423 CURVE SMOOTH",
"292 423 OFFCURVE",
"313 397 OFFCURVE",
"313 356 CURVE SMOOTH",
"313 315 OFFCURVE",
"292 287 OFFCURVE",
"240 287 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
79 78 1 0 85 83 78 91 79 91 74 72 64 62 35 33 24 23 17 15 4 3 0 57 1 57 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 3 3 5 1 0 36 0 5 5 12 31 0 6 6 4 1 0 36 0 4 4 22 4 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 1 1 14 31 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 8 8 0 1 0 36 9 1 0 0 20 31 0 6 6 4 1 0 36 0 4 4 22 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 0 4 6 4 1 0 37 0 8 8 0 1 0 36 9 1 0 0 20 8 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
9 1 7 8 50 18 2 2 7 65 42 2 5 3 3 30 0 1 0 8 0 1 8 50 9 1 0 0 8 7 0 8 1 0 38 10 1 7 0 2 3 7 2 1 0 38 0 3 0 5 6 3 5 1 0 38 0 6 4 4 6 1 0 35 0 6 6 4 1 0 36 0 4 6 4 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
leftKerningGroup = c;
note = g;
rightKerningGroup = g;
unicode = 0067;
},
{
glyphname = "gamma-latin";
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 525, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 521, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"359 -188 OFFCURVE",
"391 -152 OFFCURVE",
"391 -98 CURVE SMOOTH",
"391 -69 OFFCURVE",
"378 -32 OFFCURVE",
"360 2 CURVE SMOOTH",
"321 78 LINE",
"536 490 LINE",
"528 490 LINE SMOOTH",
"525 490 OFFCURVE",
"521 488 OFFCURVE",
"519 483 CURVE SMOOTH",
"320 99 LINE SMOOTH",
"317 93 OFFCURVE",
"315 86 OFFCURVE",
"314 83 CURVE",
"314 88 OFFCURVE",
"313 91 OFFCURVE",
"309 98 CURVE SMOOTH",
"109 483 LINE SMOOTH",
"107 488 OFFCURVE",
"104 490 OFFCURVE",
"100 490 CURVE SMOOTH",
"92 490 LINE",
"307 78 LINE",
"268 2 LINE SMOOTH",
"250 -32 OFFCURVE",
"238 -66 OFFCURVE",
"238 -97 CURVE SMOOTH",
"238 -145 OFFCURVE",
"266 -188 OFFCURVE",
"314 -188 CURVE"
);
},
{
closed = 1;
nodes = (
"274 -178 OFFCURVE",
"249 -141 OFFCURVE",
"249 -97 CURVE SMOOTH",
"249 -72 OFFCURVE",
"259 -37 OFFCURVE",
"276 -5 CURVE SMOOTH",
"314 68 LINE",
"352 -5 LINE SMOOTH",
"369 -37 OFFCURVE",
"380 -71 OFFCURVE",
"380 -98 CURVE SMOOTH",
"380 -149 OFFCURVE",
"352 -178 OFFCURVE",
"316 -178 CURVE"
);
},
{
closed = 1;
nodes = (
"532 482 LINE",
"532 490 LINE",
"516 490 LINE",
"516 482 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
}
);
width = 628;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 511, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"375 -183 OFFCURVE",
"417 -131 OFFCURVE",
"417 -59 CURVE SMOOTH",
"417 -23 OFFCURVE",
"404 14 OFFCURVE",
"380 61 CURVE SMOOTH",
"348 123 LINE",
"552 507 LINE",
"476 507 LINE SMOOTH",
"464 507 OFFCURVE",
"455 499 OFFCURVE",
"450 488 CURVE SMOOTH",
"312 215 LINE SMOOTH",
"309 208 OFFCURVE",
"306 201 OFFCURVE",
"303 193 CURVE",
"301 201 OFFCURVE",
"298 208 OFFCURVE",
"295 215 CURVE SMOOTH",
"156 488 LINE SMOOTH",
"151 499 OFFCURVE",
"137 507 OFFCURVE",
"125 507 CURVE SMOOTH",
"49 507 LINE",
"254 123 LINE",
"222 60 LINE SMOOTH",
"200 17 OFFCURVE",
"183 -28 OFFCURVE",
"183 -60 CURVE SMOOTH",
"183 -129 OFFCURVE",
"226 -183 OFFCURVE",
"300 -183 CURVE"
);
},
{
closed = 1;
nodes = (
"275 -119 OFFCURVE",
"258 -90 OFFCURVE",
"258 -62 CURVE SMOOTH",
"258 -41 OFFCURVE",
"265 -11 OFFCURVE",
"281 19 CURVE SMOOTH",
"301 57 LINE",
"319 20 LINE SMOOTH",
"333 -9 OFFCURVE",
"343 -36 OFFCURVE",
"343 -63 CURVE SMOOTH",
"343 -99 OFFCURVE",
"326 -119 OFFCURVE",
"302 -119 CURVE"
);
},
{
closed = 1;
nodes = (
"503 482 LINE",
"503 507 LINE",
"428 507 LINE",
"428 482 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
}
);
width = 601;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 416, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 490, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"389 -179 OFFCURVE",
"440 -116 OFFCURVE",
"440 -30 CURVE SMOOTH",
"440 14 OFFCURVE",
"430 44 OFFCURVE",
"397 105 CURVE SMOOTH",
"369 156 LINE",
"565 519 LINE",
"432 519 LINE SMOOTH",
"412 519 OFFCURVE",
"399 507 OFFCURVE",
"391 492 CURVE",
"305 303 LINE SMOOTH",
"303 299 OFFCURVE",
"294 279 OFFCURVE",
"293 276 CURVE",
"290 285 OFFCURVE",
"286 294 OFFCURVE",
"282 303 CURVE SMOOTH",
"196 492 LINE",
"187 507 OFFCURVE",
"164 519 OFFCURVE",
"145 519 CURVE SMOOTH",
"12 519 LINE",
"208 157 LINE",
"182 105 LINE SMOOTH",
"153 46 OFFCURVE",
"137 9 OFFCURVE",
"137 -31 CURVE SMOOTH",
"137 -116 OFFCURVE",
"190 -179 OFFCURVE",
"289 -179 CURVE"
);
},
{
closed = 1;
nodes = (
"273 -73 OFFCURVE",
"266 -55 OFFCURVE",
"266 -35 CURVE SMOOTH",
"266 -18 OFFCURVE",
"270 9 OFFCURVE",
"285 36 CURVE SMOOTH",
"289 43 LINE",
"291 38 LINE SMOOTH",
"302 11 OFFCURVE",
"311 -11 OFFCURVE",
"311 -36 CURVE SMOOTH",
"311 -61 OFFCURVE",
"304 -73 OFFCURVE",
"290 -73 CURVE"
);
},
{
closed = 1;
nodes = (
"444 481 LINE",
"444 519 LINE",
"370 519 LINE",
"370 481 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
}
);
width = 577;
}
);
leftMetricsKey = v;
rightMetricsKey = v;
unicode = 0263;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 467;
},
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 504;
},
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 79, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 522;
}
);
unicode = 011F;
},
{
glyphname = gcaron;
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 467;
},
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 504;
},
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 522;
}
);
unicode = 01E7;
},
{
glyphname = gcircumflex;
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 467;
},
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 504;
},
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 522;
}
);
unicode = 011D;
},
{
glyphname = gcommaaccent;
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 467;
},
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 504;
},
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 79, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 522;
}
);
unicode = 0123;
},
{
glyphname = gdotaccent;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 467;
},
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 504;
},
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 522;
}
);
unicode = 0121;
},
{
glyphname = ghook;
layers = (
{
anchors = (
{
name = bottom;
position = "{272, 0}";
},
{
name = top;
position = "{272, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"384.918 -187 OFFCURVE",
"452 -109.474 OFFCURVE",
"452 5 CURVE SMOOTH",
"452 577 LINE SMOOTH",
"452 649.057 OFFCURVE",
"473.469 698 OFFCURVE",
"537 698 CURVE SMOOTH",
"549 698 OFFCURVE",
"560 696 OFFCURVE",
"568 694 CURVE SMOOTH",
"581 691 OFFCURVE",
"589 687 OFFCURVE",
"593 687 CURVE SMOOTH",
"594.333 687 OFFCURVE",
"596.667 687 OFFCURVE",
"598 691 CURVE SMOOTH",
"599 694 LINE",
"577.667 703.333 OFFCURVE",
"557 707 OFFCURVE",
"537 707 CURVE SMOOTH",
"466.641 707 OFFCURVE",
"440 654.875 OFFCURVE",
"440 577 CURVE SMOOTH",
"440 411 LINE",
"403.333 469 OFFCURVE",
"349 498 OFFCURVE",
"277 498 CURVE SMOOTH",
"135.11 498 OFFCURVE",
"62 392.305 OFFCURVE",
"62 249 CURVE SMOOTH",
"62 90.409 OFFCURVE",
"123.297 4 OFFCURVE",
"247 4 CURVE SMOOTH",
"332.333 4 OFFCURVE",
"396 46.333 OFFCURVE",
"440 113 CURVE",
"440 5 LINE SMOOTH",
"440 -107.136 OFFCURVE",
"374 -177 OFFCURVE",
"262 -177 CURVE SMOOTH",
"173 -177 OFFCURVE",
"120.636 -122 OFFCURVE",
"109 -122 CURVE SMOOTH",
"105 -122 OFFCURVE",
"104.333 -122.333 OFFCURVE",
"103 -125 CURVE",
"100 -128 LINE",
"140 -164 OFFCURVE",
"193 -187 OFFCURVE",
"261 -187 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131.947 14 OFFCURVE",
"74 97.403 OFFCURVE",
"74 249 CURVE SMOOTH",
"74 387.208 OFFCURVE",
"141.948 488 OFFCURVE",
"277 488 CURVE SMOOTH",
"346.333 488 OFFCURVE",
"400 460.333 OFFCURVE",
"440 395 CURVE",
"440 129 LINE",
"394.667 57 OFFCURVE",
"330.667 14 OFFCURVE",
"248 14 CURVE SMOOTH"
);
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
position = "{280, 0}";
},
{
name = top;
position = "{280, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"399.863 -182 OFFCURVE",
"490 -99.517 OFFCURVE",
"490 28 CURVE SMOOTH",
"490 575 LINE SMOOTH",
"490 631 OFFCURVE",
"506.333 660 OFFCURVE",
"549 660 CURVE SMOOTH",
"560.333 660 OFFCURVE",
"570 658.833 OFFCURVE",
"578 656.5 CURVE SMOOTH",
"586 654.167 OFFCURVE",
"592 653 OFFCURVE",
"596 653 CURVE SMOOTH",
"604 653 OFFCURVE",
"613 655.333 OFFCURVE",
"617 670 CURVE SMOOTH",
"624 706 LINE",
"594.667 719.333 OFFCURVE",
"571.333 724 OFFCURVE",
"538 724 CURVE SMOOTH",
"445.043 724 OFFCURVE",
"401 655.828 OFFCURVE",
"401 568 CURVE SMOOTH",
"401 456 LINE",
"366 493 OFFCURVE",
"325 515 OFFCURVE",
"262 515 CURVE SMOOTH",
"126.021 515 OFFCURVE",
"44 403.8 OFFCURVE",
"44 260 CURVE SMOOTH",
"44 103.228 OFFCURVE",
"112.779 6 OFFCURVE",
"242 6 CURVE SMOOTH",
"309.32 6 OFFCURVE",
"359.474 36.092 OFFCURVE",
"401 88 CURVE",
"401 24 LINE SMOOTH",
"401 -60.261 OFFCURVE",
"348.91 -117 OFFCURVE",
"253 -117 CURVE SMOOTH",
"204.125 -117 OFFCURVE",
"138.463 -72 OFFCURVE",
"118 -72 CURVE SMOOTH",
"107.333 -72 OFFCURVE",
"99.333 -76.333 OFFCURVE",
"94 -85 CURVE SMOOTH",
"73 -119 LINE",
"113 -155 OFFCURVE",
"172.333 -182 OFFCURVE",
"255 -182 CURVE"
);
},
{
closed = 1;
nodes = (
"175.94 78 OFFCURVE",
"136 141.715 OFFCURVE",
"136 260 CURVE SMOOTH",
"136 372.796 OFFCURVE",
"184.563 446 OFFCURVE",
"282 446 CURVE SMOOTH",
"330 446 OFFCURVE",
"369 429.667 OFFCURVE",
"401 387 CURVE",
"401 155 LINE",
"365 105.667 OFFCURVE",
"322.333 78 OFFCURVE",
"265 78 CURVE"
);
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
position = "{287, 0}";
},
{
name = top;
position = "{287, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"411.201 -179 OFFCURVE",
"523 -88.946 OFFCURVE",
"523 46 CURVE SMOOTH",
"523 573 LINE SMOOTH",
"523 617 OFFCURVE",
"536 631 OFFCURVE",
"560 631 CURVE SMOOTH",
"568 631 OFFCURVE",
"575.167 630.333 OFFCURVE",
"581.5 629 CURVE SMOOTH",
"587.833 627.667 OFFCURVE",
"593.667 627 OFFCURVE",
"599 627 CURVE SMOOTH",
"611 627 OFFCURVE",
"626.333 631 OFFCURVE",
"633 655 CURVE SMOOTH",
"645 716 LINE",
"606.239 729.843 OFFCURVE",
"582.608 737 OFFCURVE",
"539 737 CURVE SMOOTH",
"426.881 737 OFFCURVE",
"368 654.604 OFFCURVE",
"368 561 CURVE SMOOTH",
"368 486 LINE",
"337.333 511.333 OFFCURVE",
"303.333 528 OFFCURVE",
"250 528 CURVE SMOOTH",
"115.689 528 OFFCURVE",
"28 412.617 OFFCURVE",
"28 267 CURVE SMOOTH",
"28 114.457 OFFCURVE",
"103.837 7 OFFCURVE",
"237 7 CURVE SMOOTH",
"292.898 7 OFFCURVE",
"331.983 28.837 OFFCURVE",
"368 70 CURVE",
"368 39 LINE SMOOTH",
"368 -23.995 OFFCURVE",
"322.734 -72 OFFCURVE",
"246 -72 CURVE SMOOTH",
"200.279 -72 OFFCURVE",
"156.337 -34 OFFCURVE",
"126 -34 CURVE SMOOTH",
"106 -34 OFFCURVE",
"95 -42.667 OFFCURVE",
"87 -56 CURVE SMOOTH",
"51 -113 LINE",
"97.422 -153.232 OFFCURVE",
"161.904 -179 OFFCURVE",
"250 -179 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"220.333 126 OFFCURVE",
"188 167 OFFCURVE",
"188 267 CURVE SMOOTH",
"188 361.265 OFFCURVE",
"223.119 415 OFFCURVE",
"287 415 CURVE SMOOTH",
"316.333 415 OFFCURVE",
"344 405.333 OFFCURVE",
"368 380 CURVE",
"368 175 LINE",
"341.333 143 OFFCURVE",
"316.333 126 OFFCURVE",
"279 126 CURVE SMOOTH"
);
}
);
width = 574;
}
);
unicode = 0260;
},
{
glyphname = glottalstop;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 83, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"95 0 LINE",
"95 241 LINE",
"226 258 OFFCURVE",
"309 347 OFFCURVE",
"309 482 CURVE SMOOTH",
"309 617 OFFCURVE",
"226 704 OFFCURVE",
"98 704 CURVE SMOOTH",
"21 704 OFFCURVE",
"-50 673 OFFCURVE",
"-77 640 CURVE",
"-75 638 LINE SMOOTH",
"-74 637 OFFCURVE",
"-73 636 OFFCURVE",
"-71 636 CURVE SMOOTH",
"-65 636 OFFCURVE",
"-8 694 OFFCURVE",
"95 694 CURVE SMOOTH",
"219 694 OFFCURVE",
"297 611 OFFCURVE",
"297 481 CURVE SMOOTH",
"297 348 OFFCURVE",
"216 264 OFFCURVE",
"83 250 CURVE",
"83 0 LINE"
);
}
);
width = 349;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 73, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 162, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"162 0 LINE",
"162 239 LINE",
"285 270 OFFCURVE",
"358 366 OFFCURVE",
"358 485 CURVE SMOOTH",
"358 636 OFFCURVE",
"257 721 OFFCURVE",
"114 721 CURVE SMOOTH",
"43 721 OFFCURVE",
"-39 697 OFFCURVE",
"-82 643 CURVE",
"-57 611 LINE SMOOTH",
"-52 604 OFFCURVE",
"-47 602 OFFCURVE",
"-40 602 CURVE SMOOTH",
"-20 602 OFFCURVE",
"19 651 OFFCURVE",
"112 651 CURVE SMOOTH",
"211 651 OFFCURVE",
"270 592 OFFCURVE",
"270 482 CURVE SMOOTH",
"270 371 OFFCURVE",
"201 304 OFFCURVE",
"73 286 CURVE",
"73 0 LINE"
);
}
);
width = 383;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 78, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"233 0 LINE",
"233 241 LINE",
"348 283 OFFCURVE",
"413 380 OFFCURVE",
"413 489 CURVE SMOOTH",
"413 646 OFFCURVE",
"299 735 OFFCURVE",
"143 735 CURVE SMOOTH",
"72 735 OFFCURVE",
"-13 714 OFFCURVE",
"-73 646 CURVE",
"-28 591 LINE SMOOTH",
"-21 582 OFFCURVE",
"-13 577 OFFCURVE",
"0 577 CURVE SMOOTH",
"34 577 OFFCURVE",
"84 619 OFFCURVE",
"139 619 CURVE SMOOTH",
"219 619 OFFCURVE",
"260 577 OFFCURVE",
"260 484 CURVE SMOOTH",
"260 395 OFFCURVE",
"204 331 OFFCURVE",
"78 314 CURVE",
"78 0 LINE"
);
}
);
width = 425;
}
);
unicode = 0294;
},
{
glyphname = glottalstopreversed;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 254, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"266 0 LINE",
"266 250 LINE",
"133 264 OFFCURVE",
"52 348 OFFCURVE",
"52 481 CURVE SMOOTH",
"52 611 OFFCURVE",
"130 694 OFFCURVE",
"254 694 CURVE SMOOTH",
"357 694 OFFCURVE",
"414 636 OFFCURVE",
"420 636 CURVE SMOOTH",
"422 636 OFFCURVE",
"423 637 OFFCURVE",
"424 638 CURVE SMOOTH",
"426 640 LINE",
"399 673 OFFCURVE",
"328 704 OFFCURVE",
"251 704 CURVE SMOOTH",
"123 704 OFFCURVE",
"40 617 OFFCURVE",
"40 482 CURVE SMOOTH",
"40 347 OFFCURVE",
"123 258 OFFCURVE",
"254 241 CURVE",
"254 0 LINE"
);
}
);
width = 349;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 221, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 310, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"310 0 LINE",
"310 286 LINE",
"182 304 OFFCURVE",
"113 371 OFFCURVE",
"113 482 CURVE SMOOTH",
"113 592 OFFCURVE",
"172 651 OFFCURVE",
"271 651 CURVE SMOOTH",
"364 651 OFFCURVE",
"403 602 OFFCURVE",
"423 602 CURVE SMOOTH",
"430 602 OFFCURVE",
"435 604 OFFCURVE",
"440 611 CURVE SMOOTH",
"465 643 LINE",
"422 697 OFFCURVE",
"340 721 OFFCURVE",
"269 721 CURVE SMOOTH",
"126 721 OFFCURVE",
"25 636 OFFCURVE",
"25 485 CURVE SMOOTH",
"25 366 OFFCURVE",
"98 270 OFFCURVE",
"221 239 CURVE",
"221 0 LINE"
);
}
);
width = 383;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 192, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"347 0 LINE",
"347 314 LINE",
"221 331 OFFCURVE",
"165 395 OFFCURVE",
"165 484 CURVE SMOOTH",
"165 577 OFFCURVE",
"206 619 OFFCURVE",
"286 619 CURVE SMOOTH",
"341 619 OFFCURVE",
"391 577 OFFCURVE",
"425 577 CURVE SMOOTH",
"438 577 OFFCURVE",
"446 582 OFFCURVE",
"453 591 CURVE SMOOTH",
"498 646 LINE",
"438 714 OFFCURVE",
"353 735 OFFCURVE",
"282 735 CURVE SMOOTH",
"126 735 OFFCURVE",
"12 646 OFFCURVE",
"12 489 CURVE SMOOTH",
"12 380 OFFCURVE",
"77 283 OFFCURVE",
"192 241 CURVE",
"192 0 LINE"
);
}
);
width = 425;
}
);
unicode = 0295;
},
{
glyphname = glottalstopsmall;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"199 0 LINE",
"199 132 LINE",
"309.954 147.851 OFFCURVE",
"393 220.671 OFFCURVE",
"393 324 CURVE SMOOTH",
"393 424.177 OFFCURVE",
"316.115 495 OFFCURVE",
"201 495 CURVE SMOOTH",
"129 495 OFFCURVE",
"55 464 OFFCURVE",
"27 431 CURVE",
"29 429 LINE SMOOTH",
"31 427 OFFCURVE",
"32 427 OFFCURVE",
"33 427 CURVE SMOOTH",
"37 426 OFFCURVE",
"99 485 OFFCURVE",
"200 485 CURVE SMOOTH",
"310.613 485 OFFCURVE",
"381 417.525 OFFCURVE",
"381 323 CURVE SMOOTH",
"381 222.223 OFFCURVE",
"297.23 154.123 OFFCURVE",
"187 141 CURVE",
"187 0 LINE"
);
}
);
width = 439;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 161, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 250, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"250 0 LINE",
"250 117 LINE",
"352.321 145.86 OFFCURVE",
"426 222.881 OFFCURVE",
"426 325 CURVE SMOOTH",
"426 437.436 OFFCURVE",
"336.86 512 OFFCURVE",
"210 512 CURVE SMOOTH",
"128.754 512 OFFCURVE",
"46.709 480.524 OFFCURVE",
"6 434 CURVE",
"31 401 LINE SMOOTH",
"35 395 OFFCURVE",
"40.667 393 OFFCURVE",
"48 393 CURVE SMOOTH",
"69.009 393 OFFCURVE",
"132 442 OFFCURVE",
"200 442 CURVE SMOOTH",
"285.734 442 OFFCURVE",
"338 392.584 OFFCURVE",
"338 319 CURVE SMOOTH",
"338 230.15 OFFCURVE",
"262.572 177.697 OFFCURVE",
"161 165 CURVE",
"161 0 LINE"
);
}
);
width = 459;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 139, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"294 0 LINE",
"294 142 LINE",
"388 180 OFFCURVE",
"454 229 OFFCURVE",
"454 328 CURVE SMOOTH",
"454 451 OFFCURVE",
"353 524 OFFCURVE",
"218 524 CURVE SMOOTH",
"135 524 OFFCURVE",
"42 495 OFFCURVE",
"-12 436 CURVE",
"33 380 LINE SMOOTH",
"40 372 OFFCURVE",
"48 367 OFFCURVE",
"61 367 CURVE SMOOTH",
"95 367 OFFCURVE",
"152 408 OFFCURVE",
"200 408 CURVE SMOOTH",
"268 408 OFFCURVE",
"301 375 OFFCURVE",
"301 322 CURVE SMOOTH",
"301 237 OFFCURVE",
"236 206 OFFCURVE",
"139 193 CURVE",
"139 0 LINE"
);
}
);
width = 476;
}
);
unicode = 0242;
},
{
color = 4;
glyphname = h;
layers = (
{
anchors = (
{
name = bottom;
position = "{289, 0}";
},
{
name = center;
position = "{174, 600}";
},
{
name = top;
position = "{289, 720}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"240 498 OFFCURVE",
"170 455 OFFCURVE",
"125 388 CURVE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 582;
},
{
anchors = (
{
name = bottom;
position = "{333, 0}";
},
{
name = center;
position = "{195, 576}";
},
{
name = top;
position = "{333, 749}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"337 527 OFFCURVE",
"295 505 OFFCURVE",
"258 473 CURVE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
3 1 3 1 20 1 4 3 2 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
anchors = (
{
name = bottom;
position = "{304, 0}";
},
{
name = center;
position = "{189, 580}";
},
{
name = top;
position = "{304, 737}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"227.667 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437.021 OFFCURVE",
"463.22 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"284 515 OFFCURVE",
"233 484.333 OFFCURVE",
"189 439 CURVE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 13 31 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
20 3 2 2 3 1 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
20 3 2 4 3 1 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "B4773420-A56C-47FD-A7DD-1F9704BB585D";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"494 40 LINE",
"494 318 LINE SMOOTH",
"494 433 OFFCURVE",
"440 505 OFFCURVE",
"329 505 CURVE SMOOTH",
"258 505 OFFCURVE",
"202 474 OFFCURVE",
"151 412 CURVE",
"151 727 LINE",
"31 727 LINE",
"31 708 LINE SMOOTH",
"31 697 OFFCURVE",
"38 691 OFFCURVE",
"51 690 CURVE",
"103 688 LINE",
"103 40 LINE",
"51 38 LINE",
"38 37 OFFCURVE",
"31 31 OFFCURVE",
"31 20 CURVE SMOOTH",
"31 0 LINE",
"223 0 LINE",
"223 20 LINE SMOOTH",
"223 31 OFFCURVE",
"216 37 OFFCURVE",
"203 38 CURVE",
"151 40 LINE",
"151 373 LINE",
"192 428 OFFCURVE",
"247 467 OFFCURVE",
"317 467 CURVE SMOOTH",
"407 467 OFFCURVE",
"447 411 OFFCURVE",
"447 318 CURVE SMOOTH",
"447 0 LINE",
"566 0 LINE",
"566 20 LINE SMOOTH",
"566 31 OFFCURVE",
"560 37 OFFCURVE",
"547 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 528;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "9859B636-60EA-44D3-B005-9184BEF71098";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"200 736 LINE",
"28 736 LINE",
"28 694 LINE SMOOTH",
"28 684 OFFCURVE",
"34 677 OFFCURVE",
"44 675 CURVE",
"50 673 OFFCURVE",
"72 669 OFFCURVE",
"110 663 CURVE",
"110 72 LINE",
"54 61 LINE SMOOTH",
"44 59 OFFCURVE",
"38 52 OFFCURVE",
"38 42 CURVE SMOOTH",
"38 0 LINE",
"272 0 LINE",
"272 42 LINE SMOOTH",
"272 52 OFFCURVE",
"266 59 OFFCURVE",
"256 61 CURVE",
"252 62 OFFCURVE",
"238 65 OFFCURVE",
"212 70 CURVE SMOOTH",
"200 72 LINE",
"200 372 LINE",
"242 419 OFFCURVE",
"286 443 OFFCURVE",
"336 443 CURVE SMOOTH",
"407 443 OFFCURVE",
"443 402 OFFCURVE",
"443 322 CURVE SMOOTH",
"443 0 LINE",
"604 0 LINE",
"604 42 LINE SMOOTH",
"604 52 OFFCURVE",
"599 59 OFFCURVE",
"589 61 CURVE",
"583 63 OFFCURVE",
"564 67 OFFCURVE",
"532 73 CURVE",
"532 322 LINE SMOOTH",
"532 380 OFFCURVE",
"517 428 OFFCURVE",
"488 462 CURVE SMOOTH",
"458 497 OFFCURVE",
"416 514 OFFCURVE",
"362 514 CURVE SMOOTH",
"301 514 OFFCURVE",
"248 488 OFFCURVE",
"200 438 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 13 31 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
20 3 2 2 3 1 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
20 3 2 4 3 1 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "50111BE6-6833-485F-90BA-1249891832FA";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"596 90 OFFCURVE",
"594 90 OFFCURVE",
"591 91 CURVE SMOOTH",
"588 92 OFFCURVE",
"583 93 OFFCURVE",
"576 94 CURVE SMOOTH",
"569 95 OFFCURVE",
"559 97 OFFCURVE",
"547 99 CURVE",
"547 327 LINE SMOOTH",
"547 356 OFFCURVE",
"542 381 OFFCURVE",
"535 405 CURVE",
"527 429 OFFCURVE",
"516 450 OFFCURVE",
"502 467 CURVE SMOOTH",
"487 484 OFFCURVE",
"470 498 OFFCURVE",
"448 507 CURVE SMOOTH",
"426 516 OFFCURVE",
"402 521 OFFCURVE",
"374 521 CURVE SMOOTH",
"342 521 OFFCURVE",
"313 515 OFFCURVE",
"289 503 CURVE SMOOTH",
"265 491 OFFCURVE",
"243 476 OFFCURVE",
"223 457 CURVE",
"223 743 LINE",
"100 743 LINE",
"24 743 LINE",
"24 684 LINE SMOOTH",
"24 667 OFFCURVE",
"32 657 OFFCURVE",
"49 653 CURVE",
"50 653 OFFCURVE",
"52 652 OFFCURVE",
"55 652 CURVE SMOOTH",
"58 652 OFFCURVE",
"63 650 OFFCURVE",
"70 649 CURVE SMOOTH",
"77 648 OFFCURVE",
"88 646 OFFCURVE",
"100 644 CURVE",
"100 99 LINE",
"88 97 OFFCURVE",
"77 95 OFFCURVE",
"70 94 CURVE SMOOTH",
"63 93 OFFCURVE",
"58 91 OFFCURVE",
"55 91 CURVE SMOOTH",
"52 91 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"100 0 LINE",
"223 0 LINE",
"299 0 LINE",
"299 59 LINE SMOOTH",
"299 76 OFFCURVE",
"291 86 OFFCURVE",
"274 90 CURVE",
"273 90 OFFCURVE",
"271 90 OFFCURVE",
"268 91 CURVE",
"265 91 OFFCURVE",
"260 93 OFFCURVE",
"253 94 CURVE SMOOTH",
"246 95 OFFCURVE",
"235 97 OFFCURVE",
"223 99 CURVE",
"223 371 LINE",
"240 388 OFFCURVE",
"257 400 OFFCURVE",
"276 410 CURVE SMOOTH",
"295 420 OFFCURVE",
"315 425 OFFCURVE",
"336 425 CURVE SMOOTH",
"365 425 OFFCURVE",
"387 416 OFFCURVE",
"401 399 CURVE SMOOTH",
"416 382 OFFCURVE",
"423 357 OFFCURVE",
"423 326 CURVE SMOOTH",
"423 0 LINE",
"547 0 LINE",
"622 0 LINE",
"622 59 LINE SMOOTH",
"622 76 OFFCURVE",
"614 86 OFFCURVE",
"597 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
3 1 3 1 20 1 4 3 2 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
anchors = (
{
name = bottom;
position = "{333, 0}";
},
{
name = center;
position = "{195, 576}";
},
{
name = top;
position = "{333, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
}
);
layerId = "890CA8BF-3D67-484E-8582-0514424C8500";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"337 527 OFFCURVE",
"295 505 OFFCURVE",
"258 473 CURVE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
3 1 3 1 20 1 2 3 2 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
3 1 3 1 20 1 2 3 2 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
3 1 3 1 20 1 4 3 2 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
anchors = (
{
name = bottom;
position = "{304, 0}";
},
{
name = center;
position = "{189, 580}";
},
{
name = top;
position = "{304, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
}
);
layerId = "1D906B34-B364-420F-A873-59AC39DEA42B";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"227.667 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437.021 OFFCURVE",
"463.22 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"284 515 OFFCURVE",
"233 484.333 OFFCURVE",
"189 439 CURVE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 21 0 21 18 16 13 12 7 5 2 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 0 0 13 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 13 31 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
20 3 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 5 4 2 2 2 0 0 0 36 0 0 0 13 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
20 3 2 2 3 1 30 0 0 1 2 0 0 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
20 3 2 4 3 1 30 0 2 4 2 53 0 0 1 4 0 0 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
anchors = (
{
name = bottom;
position = "{289, 0}";
},
{
name = center;
position = "{174, 600}";
},
{
name = top;
position = "{289, 720}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
}
);
layerId = "60C9E73C-13D9-4F5C-AA48-ABD961146558";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"240 498 OFFCURVE",
"170 455 OFFCURVE",
"125 388 CURVE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 582;
}
);
leftKerningGroup = h;
leftMetricsKey = n;
note = h;
rightMetricsKey = n;
unicode = 0068;
},
{
glyphname = hbar;
layers = (
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 34, -40}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 38, -65}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 30, -73}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 0127;
},
{
glyphname = hcircumflex;
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 149, 230}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 150, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 138, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 0125;
},
{
glyphname = hdotbelow;
layers = (
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 237, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 241, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 1E25;
},
{
glyphname = hhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{289, 0}";
},
{
name = center;
position = "{174, 600}";
},
{
name = top;
position = "{289, 720}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"240 498 OFFCURVE",
"170 455 OFFCURVE",
"125 388 CURVE",
"125 393 LINE",
"113 397 LINE",
"113 0 LINE"
);
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
position = "{304, 0}";
},
{
name = center;
position = "{189, 580}";
},
{
name = top;
position = "{304, 737}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"228 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437 OFFCURVE",
"463 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"284 515 OFFCURVE",
"233 484 OFFCURVE",
"189 439 CURVE",
"189 442 LINE",
"100 461 LINE",
"100 0 LINE"
);
}
);
width = 607;
},
{
anchors = (
{
name = bottom;
position = "{333, 0}";
},
{
name = center;
position = "{195, 576}";
},
{
name = top;
position = "{333, 749}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"337 527 OFFCURVE",
"295 505 OFFCURVE",
"258 473 CURVE",
"258 476 LINE",
"103 494 LINE",
"103 0 LINE"
);
}
);
width = 670;
}
);
leftMetricsKey = h;
rightMetricsKey = h;
unicode = 0266;
},
{
color = 4;
glyphname = i;
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 81, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 10 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
2 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 20 18 10 8 0 3 0 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 2 3 1 0 36 0 3 3 19 31 4 1 1 1 14 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 1 0 0 1 0 0 0 37 0 2 2 3 1 0 36 0 3 3 19 2 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 1 0 38 4 1 1 0 0 1 0 0 35 4 1 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 355;
},
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 20 18 10 8 0 3 0 3 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 2 3 1 0 36 0 3 3 17 31 4 1 1 1 14 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 2 3 1 0 36 0 3 3 13 31 4 1 1 1 14 31 0 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 3 1 0 36 0 3 3 13 31 4 1 1 1 0 0 0 36 0 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 1 0 0 1 0 0 0 37 0 2 2 3 1 0 36 0 3 3 13 2 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 1 0 38 4 1 1 0 0 1 0 0 35 4 1 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 274;
}
);
leftMetricsKey = n;
note = i;
rightMetricsKey = n;
unicode = 0069;
},
{
glyphname = idotless;
layers = (
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = ogonek;
position = "{115, 2}";
},
{
name = top;
position = "{119, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 490 LINE",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 229;
},
{
anchors = (
{
name = bottom;
position = "{181, 0}";
},
{
name = ogonek;
position = "{182, 0}";
},
{
name = top;
position = "{181, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 519 LINE",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 14 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 355;
},
{
anchors = (
{
name = bottom;
position = "{145, 0}";
},
{
name = ogonek;
position = "{141, 2}";
},
{
name = top;
position = "{145, 507}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 507 LINE",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 14 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
2 1 1 1 0 0 0 36 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = ogonek;
position = "{115, 2}";
},
{
name = top;
position = "{119, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "5E801F6E-F4BC-4970-B255-EFA6D3545864";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 490 LINE",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 229;
},
{
anchors = (
{
name = bottom;
position = "{145, 0}";
},
{
name = ogonek;
position = "{141, 2}";
},
{
name = top;
position = "{145, 507}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "1FB4923C-1381-4CF3-952D-8BC27C8CD3DF";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 507 LINE",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 14 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
2 1 1 1 0 0 0 36 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
anchors = (
{
name = bottom;
position = "{181, 0}";
},
{
name = ogonek;
position = "{182, 0}";
},
{
name = top;
position = "{181, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "B6490630-6033-4A6E-80D3-E1F9886B5DE6";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 519 LINE",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 14 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
leftMetricsKey = n;
note = dotlessi;
rightMetricsKey = n;
unicode = 0131;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -7, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 14, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 52, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 00ED;
},
{
glyphname = ibreve;
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 012D;
},
{
glyphname = icaron;
layers = (
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -14, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 01D0;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -14, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -14, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 00EF;
},
{
glyphname = idieresisacute;
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -21, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -7, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -9, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 14, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -14, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 52, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 1E2F;
},
{
glyphname = idotaccent;
layers = (
{
components = (
{
name = i;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = i;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = i;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
},
{
glyphname = idotbelow;
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 81, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 1ECB;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -42, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -42, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -40, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 00EC;
},
{
glyphname = ihookabove;
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -80, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -51, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 1EC9;
},
{
glyphname = ij;
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 229, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 412;
},
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 539;
},
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 355, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 641;
}
);
unicode = 0133;
},
{
glyphname = imacron;
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -2, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 012B;
},
{
glyphname = iogonek;
layers = (
{
components = (
{
alignment = -1;
name = i;
},
{
alignment = -1;
name = ogonek;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
alignment = -1;
name = i;
},
{
alignment = -1;
name = ogonek;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
alignment = -1;
name = i;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
leftMetricsKey = i;
rightMetricsKey = i;
unicode = 012F;
},
{
glyphname = "iota-latin";
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 91, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"210 -7 OFFCURVE",
"227 -6 OFFCURVE",
"227 -2 CURVE SMOOTH",
"227 4 LINE",
"197 4 LINE SMOOTH",
"133 4 OFFCURVE",
"103 39 OFFCURVE",
"103 106 CURVE SMOOTH",
"103 490 LINE",
"91 490 LINE",
"91 106 LINE SMOOTH",
"91 33 OFFCURVE",
"128 -7 OFFCURVE",
"197 -7 CURVE SMOOTH"
);
}
);
width = 247;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 78, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"241 -6 OFFCURVE",
"278 7 OFFCURVE",
"278 33 CURVE SMOOTH",
"278 61 LINE",
"237 61 LINE SMOOTH",
"188 61 OFFCURVE",
"167 88 OFFCURVE",
"167 139 CURVE SMOOTH",
"167 507 LINE",
"78 507 LINE",
"78 134 LINE SMOOTH",
"78 51 OFFCURVE",
"121 -6 OFFCURVE",
"203 -6 CURVE SMOOTH"
);
}
);
width = 289;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 110, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"272 -6 OFFCURVE",
"335 17 OFFCURVE",
"335 59 CURVE SMOOTH",
"335 104 LINE",
"284 104 LINE SMOOTH",
"248 104 OFFCURVE",
"235 124 OFFCURVE",
"235 163 CURVE SMOOTH",
"235 519 LINE",
"80 519 LINE",
"80 154 LINE SMOOTH",
"80 63 OFFCURVE",
"129 -6 OFFCURVE",
"221 -6 CURVE SMOOTH"
);
}
);
width = 337;
}
);
leftMetricsKey = u;
unicode = 0269;
},
{
glyphname = istroke;
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 81, 0}";
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -24, -380}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -13, -382}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 77, 0}";
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 13, -377}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 0268;
},
{
glyphname = itilde;
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 274;
},
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 0129;
},
{
glyphname = j;
layers = (
{
components = (
{
name = jdotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
20 26 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
18 26 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
15 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 183;
},
{
components = (
{
name = jdotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 36 34 26 24 0 19 0 19 14 12 7 5 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 9 2 0 1 1 30 0 3 3 4 1 0 36 0 4 4 19 31 5 1 2 2 14 31 0 1 1 0 1 2 36 0 0 0 22 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 9 2 0 1 1 30 0 1 0 0 1 0 1 2 37 0 3 3 4 1 0 36 0 4 4 19 31 5 1 2 2 14 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 9 2 0 1 1 30 5 1 2 3 1 3 2 1 50 0 1 0 0 1 0 1 2 37 0 3 3 4 1 0 36 0 4 4 19 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
10 9 2 0 1 1 30 5 1 2 3 1 3 2 1 50 0 4 0 3 2 4 3 1 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 2 36 0 0 1 0 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 286;
},
{
components = (
{
name = jdotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 37 35 27 25 0 20 0 20 17 12 7 5 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 0 1 1 30 0 3 3 4 1 0 36 0 4 4 17 31 5 1 2 2 14 31 0 1 1 0 1 0 36 0 0 0 22 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 0 1 1 30 0 3 3 4 1 0 36 0 4 4 13 31 5 1 2 2 14 31 0 1 1 0 1 0 36 0 0 0 22 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 0 1 1 30 0 1 0 0 1 0 1 0 37 0 3 3 4 1 0 36 0 4 4 13 31 5 1 2 2 14 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 0 1 1 30 5 1 2 3 1 3 2 1 50 0 1 0 0 1 0 1 0 37 0 3 3 4 1 0 36 0 4 4 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
9 1 0 1 1 30 5 1 2 3 1 3 2 1 50 0 4 0 3 2 4 3 1 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
leftKerningGroup = j;
note = j;
unicode = 006A;
},
{
glyphname = jdotless;
layers = (
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "923D37D9-0CF8-4785-A26B-073C687D83A2";
name = "Jan 24 23, 21:38";
paths = (
{
closed = 1;
nodes = (
"78 -187 OFFCURVE",
"117 -145 OFFCURVE",
"117 -86 CURVE SMOOTH",
"117 490 LINE",
"105 490 LINE",
"105 -86 LINE SMOOTH",
"105 -141 OFFCURVE",
"75 -177 OFFCURVE",
"22 -177 CURVE SMOOTH",
"9 -177 OFFCURVE",
"0 -175 OFFCURVE",
"-5 -173 CURVE SMOOTH",
"-11 -171 OFFCURVE",
"-14 -168 OFFCURVE",
"-17 -168 CURVE SMOOTH",
"-19 -168 OFFCURVE",
"-21 -173 OFFCURVE",
"-23 -176 CURVE",
"-11 -184 OFFCURVE",
"2 -187 OFFCURVE",
"19 -187 CURVE SMOOTH"
);
}
);
width = 162;
},
{
anchors = (
{
name = top;
position = "{97, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 91, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"35 -187 OFFCURVE",
"103 -173 OFFCURVE",
"103 -82 CURVE SMOOTH",
"103 490 LINE",
"91 490 LINE",
"91 -81 LINE SMOOTH",
"91 -118 OFFCURVE",
"77 -177 OFFCURVE",
"8 -177 CURVE SMOOTH",
"-26 -177 OFFCURVE",
"-30 -164 OFFCURVE",
"-34 -171 CURVE SMOOTH",
"-37 -176 LINE",
"-28 -181 OFFCURVE",
"-13 -187 OFFCURVE",
"5 -187 CURVE SMOOTH"
);
}
);
width = 183;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "9EC97DCA-BDB5-4089-9A02-B26C1D84F3C1";
name = "Jan 24 23, 21:39";
paths = (
{
closed = 1;
nodes = (
"127 -182 OFFCURVE",
"172 -124 OFFCURVE",
"172 -38 CURVE SMOOTH",
"172 507 LINE",
"83 507 LINE",
"83 -38 LINE SMOOTH",
"83 -93 OFFCURVE",
"66 -115 OFFCURVE",
"18 -115 CURVE SMOOTH",
"5 -115 OFFCURVE",
"-2 -113 OFFCURVE",
"-6 -113 CURVE SMOOTH",
"-11 -113 OFFCURVE",
"-16 -113 OFFCURVE",
"-19 -115 CURVE SMOOTH",
"-24 -119 OFFCURVE",
"-24 -121 OFFCURVE",
"-28 -172 CURVE",
"-10 -179 OFFCURVE",
"9 -182 OFFCURVE",
"29 -182 CURVE SMOOTH"
);
}
);
width = 204;
},
{
anchors = (
{
name = top;
position = "{146, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 101, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"132 -182 OFFCURVE",
"190 -140 OFFCURVE",
"190 -31 CURVE SMOOTH",
"190 507 LINE",
"101 507 LINE",
"101 -28 LINE SMOOTH",
"101 -100 OFFCURVE",
"80 -115 OFFCURVE",
"38 -115 CURVE SMOOTH",
"2 -115 OFFCURVE",
"-4 -107 OFFCURVE",
"-6 -129 CURVE SMOOTH",
"-10 -172 LINE",
"4 -177 OFFCURVE",
"19 -182 OFFCURVE",
"47 -182 CURVE SMOOTH"
);
}
);
width = 265;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "0C5847A4-84A0-4225-A590-2B06137FD0CD";
name = "Jan 24 23, 21:39";
paths = (
{
closed = 1;
nodes = (
"156 -180 OFFCURVE",
"220 -107 OFFCURVE",
"220 -1 CURVE SMOOTH",
"220 519 LINE",
"65 519 LINE",
"65 -1 LINE SMOOTH",
"65 -53 OFFCURVE",
"54 -68 OFFCURVE",
"5 -68 CURVE SMOOTH",
"-2 -68 OFFCURVE",
"-8 -69 OFFCURVE",
"-12 -70 CURVE SMOOTH",
"-15 -71 OFFCURVE",
"-17 -72 OFFCURVE",
"-19 -73 CURVE SMOOTH",
"-27 -77 OFFCURVE",
"-26 -92 OFFCURVE",
"-31 -170 CURVE",
"-23 -172 OFFCURVE",
"17 -180 OFFCURVE",
"52 -180 CURVE SMOOTH"
);
}
);
visible = 1;
width = 208;
},
{
anchors = (
{
name = top;
position = "{144, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 96, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"97 -180 OFFCURVE",
"221 -164 OFFCURVE",
"221 10 CURVE SMOOTH",
"221 519 LINE",
"66 519 LINE",
"66 -1 LINE SMOOTH",
"66 -53 OFFCURVE",
"53 -68 OFFCURVE",
"11 -68 CURVE SMOOTH",
"-19 -68 OFFCURVE",
"-24 -74 OFFCURVE",
"-25 -90 CURVE SMOOTH",
"-30 -170 LINE",
"-7 -175 OFFCURVE",
"26 -180 OFFCURVE",
"53 -180 CURVE SMOOTH"
);
}
);
width = 286;
}
);
unicode = 0237;
},
{
glyphname = jacute;
layers = (
{
components = (
{
name = jdotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 183;
},
{
components = (
{
name = jdotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 265;
},
{
components = (
{
name = jdotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 286;
}
);
},
{
glyphname = jcircumflex;
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -43, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 183;
},
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -8, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 265;
},
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -51, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 286;
}
);
unicode = 0135;
},
{
color = 4;
glyphname = k;
layers = (
{
anchors = (
{
name = bottom;
position = "{280, 0}";
},
{
name = top;
position = "{280, 720}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 424, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 259 LINE",
"145 259 LINE SMOOTH",
"165 259 OFFCURVE",
"171 257 OFFCURVE",
"183 245 CURVE SMOOTH",
"429 6 LINE SMOOTH",
"434 1 OFFCURVE",
"438 0 OFFCURVE",
"443 0 CURVE SMOOTH",
"452 0 LINE",
"193 252 LINE SMOOTH",
"188 257 OFFCURVE",
"181 262 OFFCURVE",
"172 265 CURVE",
"176 266 OFFCURVE",
"180 269 OFFCURVE",
"184 273 CURVE SMOOTH",
"432 490 LINE",
"423 490 LINE SMOOTH",
"415 490 OFFCURVE",
"411 487 OFFCURVE",
"405 482 CURVE SMOOTH",
"172 277 LINE SMOOTH",
"162 268 OFFCURVE",
"155 268 OFFCURVE",
"148 268 CURVE SMOOTH",
"125 268 LINE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 478 LINE",
"445 490 LINE",
"421 490 LINE",
"409 482 LINE",
"400 477 LINE"
);
},
{
closed = 1;
nodes = (
"447 12 LINE",
"423 13 LINE",
"446 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
29 3 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
2 1 27 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 569;
},
{
anchors = (
{
name = bottom;
position = "{318, 0}";
},
{
name = top;
position = "{318, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 531, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 540, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 230 LINE",
"288 230 LINE SMOOTH",
"308 230 OFFCURVE",
"316 226 OFFCURVE",
"325 210 CURVE SMOOTH",
"423 26 LINE SMOOTH",
"433 7 OFFCURVE",
"451 0 OFFCURVE",
"474 0 CURVE SMOOTH",
"614 0 LINE",
"468 248 LINE SMOOTH",
"457 267 OFFCURVE",
"444 282 OFFCURVE",
"429 293 CURVE",
"446 304 OFFCURVE",
"462 317 OFFCURVE",
"474 334 CURVE SMOOTH",
"608 519 LINE",
"466 519 LINE SMOOTH",
"442 519 OFFCURVE",
"428 512 OFFCURVE",
"416 494 CURVE SMOOTH",
"318 348 LINE SMOOTH",
"308 334 OFFCURVE",
"301 329 OFFCURVE",
"281 329 CURVE SMOOTH",
"258 329 LINE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"530 402 LINE",
"553 519 LINE",
"382 519 LINE",
"382 478 LINE",
"491 394 LINE"
);
},
{
closed = 1;
nodes = (
"539 117 LINE",
"464 131 LINE",
"520 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 29 0 29 28 27 26 24 19 17 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
anchors = (
{
name = bottom;
position = "{285, 0}";
},
{
name = top;
position = "{285, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 449, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 388, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 242 LINE",
"214 242 LINE SMOOTH",
"234 242 OFFCURVE",
"242 240 OFFCURVE",
"251 225 CURVE",
"418 18 LINE SMOOTH",
"428 6 OFFCURVE",
"436 0 OFFCURVE",
"451 0 CURVE SMOOTH",
"531 0 LINE",
"333 250 LINE",
"325 263 OFFCURVE",
"315 274 OFFCURVE",
"303 282 CURVE",
"315 289 OFFCURVE",
"322 298 OFFCURVE",
"332 308 CURVE SMOOTH",
"519 507 LINE",
"438 507 LINE SMOOTH",
"421 507 OFFCURVE",
"413 499 OFFCURVE",
"403 489 CURVE SMOOTH",
"243 317 LINE SMOOTH",
"233 306 OFFCURVE",
"225 303 OFFCURVE",
"212 303 CURVE SMOOTH",
"189 303 LINE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 429 LINE",
"511 507 LINE",
"395 507 LINE",
"395 459 LINE",
"416 426 LINE"
);
},
{
closed = 1;
nodes = (
"462 78 LINE",
"403 91 LINE",
"451 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 25 20 18 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 2 1 0 36 4 1 2 2 15 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "9A34DE25-E091-4EB0-962E-9AA498FADB62";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"449 39 LINE",
"254 251 LINE",
"248 258 OFFCURVE",
"237 267 OFFCURVE",
"229 272 CURVE",
"235 278 OFFCURVE",
"244 284 OFFCURVE",
"249 289 CURVE SMOOTH",
"427 458 LINE",
"463 460 LINE",
"476 461 OFFCURVE",
"482 467 OFFCURVE",
"482 478 CURVE SMOOTH",
"482 498 LINE",
"328 498 LINE",
"328 478 LINE SMOOTH",
"328 467 OFFCURVE",
"335 461 OFFCURVE",
"348 460 CURVE",
"373 459 LINE",
"201 295 LINE SMOOTH",
"194 288 OFFCURVE",
"184 284 OFFCURVE",
"174 284 CURVE SMOOTH",
"151 284 LINE",
"151 727 LINE",
"31 727 LINE",
"31 708 LINE SMOOTH",
"31 697 OFFCURVE",
"38 691 OFFCURVE",
"51 690 CURVE",
"103 688 LINE",
"103 40 LINE",
"51 38 LINE",
"38 37 OFFCURVE",
"31 31 OFFCURVE",
"31 20 CURVE SMOOTH",
"31 0 LINE",
"223 0 LINE",
"223 20 LINE SMOOTH",
"223 31 OFFCURVE",
"216 37 OFFCURVE",
"203 38 CURVE",
"151 40 LINE",
"151 251 LINE",
"173 251 LINE SMOOTH",
"192 251 OFFCURVE",
"197 249 OFFCURVE",
"211 235 CURVE SMOOTH",
"420 12 LINE SMOOTH",
"424 8 OFFCURVE",
"431 0 OFFCURVE",
"443 0 CURVE",
"507 0 LINE",
"507 20 LINE SMOOTH",
"507 31 OFFCURVE",
"500 37 OFFCURVE",
"487 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
29 3 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
2 1 27 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 464;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "CCEF29CD-D5E1-44BA-B655-1E7C5A26BD17";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"532 62 LINE",
"528 62 OFFCURVE",
"517 64 OFFCURVE",
"500 68 CURVE",
"474 72 LINE",
"334 250 LINE",
"326 264 OFFCURVE",
"316 273 OFFCURVE",
"304 281 CURVE",
"314 287 OFFCURVE",
"323 296 OFFCURVE",
"333 308 CURVE",
"451 434 LINE",
"484 440 OFFCURVE",
"505 444 OFFCURVE",
"513 446 CURVE SMOOTH",
"521 448 OFFCURVE",
"526 454 OFFCURVE",
"526 464 CURVE SMOOTH",
"526 506 LINE",
"520 506 LINE",
"438 506 LINE",
"314 506 LINE",
"314 464 LINE SMOOTH",
"314 454 OFFCURVE",
"320 447 OFFCURVE",
"330 445 CURVE",
"334 444 OFFCURVE",
"338 444 OFFCURVE",
"346 442 CURVE",
"350 442 OFFCURVE",
"354 440 OFFCURVE",
"358 440 CURVE",
"244 318 LINE",
"236 308 OFFCURVE",
"224 304 OFFCURVE",
"212 304 CURVE SMOOTH",
"190 304 LINE",
"190 737 LINE",
"100 737 LINE",
"28 737 LINE",
"28 694 LINE SMOOTH",
"28 684 OFFCURVE",
"33 678 OFFCURVE",
"43 676 CURVE",
"49 674 OFFCURVE",
"68 670 OFFCURVE",
"100 664 CURVE",
"100 73 LINE",
"43 62 LINE SMOOTH",
"33 60 OFFCURVE",
"28 53 OFFCURVE",
"28 43 CURVE SMOOTH",
"28 0 LINE",
"262 0 LINE",
"262 43 LINE SMOOTH",
"262 53 OFFCURVE",
"256 60 OFFCURVE",
"246 62 CURVE SMOOTH",
"212 69 OFFCURVE",
"194 73 OFFCURVE",
"190 73 CURVE",
"190 242 LINE",
"214 242 LINE SMOOTH",
"224 242 OFFCURVE",
"232 241 OFFCURVE",
"237 239 CURVE SMOOTH",
"242 237 OFFCURVE",
"247 233 OFFCURVE",
"252 226 CURVE",
"418 18 LINE SMOOTH",
"428 6 OFFCURVE",
"439 0 OFFCURVE",
"452 0 CURVE SMOOTH",
"546 0 LINE",
"546 44 LINE SMOOTH",
"546 54 OFFCURVE",
"541 60 OFFCURVE",
"531 62 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 25 20 18 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 2 1 0 36 4 1 2 2 15 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "30D2207E-7A54-42A2-9A80-27F3879A7240";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"566 90 OFFCURVE",
"562 91 OFFCURVE",
"558 92 CURVE SMOOTH",
"554 93 OFFCURVE",
"547 93 OFFCURVE",
"537 94 CURVE SMOOTH",
"527 95 OFFCURVE",
"516 97 OFFCURVE",
"505 99 CURVE",
"402 249 LINE",
"397 257 OFFCURVE",
"391 264 OFFCURVE",
"386 271 CURVE SMOOTH",
"381 278 OFFCURVE",
"375 283 OFFCURVE",
"368 288 CURVE",
"375 292 OFFCURVE",
"381 297 OFFCURVE",
"387 303 CURVE SMOOTH",
"393 309 OFFCURVE",
"399 316 OFFCURVE",
"405 323 CURVE SMOOTH",
"481 415 LINE",
"491 416 OFFCURVE",
"499 418 OFFCURVE",
"508 419 CURVE SMOOTH",
"517 420 OFFCURVE",
"524 421 OFFCURVE",
"528 422 CURVE SMOOTH",
"532 423 OFFCURVE",
"534 423 OFFCURVE",
"536 423 CURVE",
"553 427 OFFCURVE",
"561 437 OFFCURVE",
"561 454 CURVE SMOOTH",
"561 513 LINE",
"561 513 LINE",
"451 513 LINE SMOOTH",
"448 513 OFFCURVE",
"445 513 OFFCURVE",
"441 512 CURVE",
"441 513 LINE",
"318 513 LINE",
"318 454 LINE SMOOTH",
"318 437 OFFCURVE",
"326 427 OFFCURVE",
"343 423 CURVE",
"344 423 OFFCURVE",
"347 422 OFFCURVE",
"352 421 CURVE",
"281 334 LINE SMOOTH",
"276 328 OFFCURVE",
"271 323 OFFCURVE",
"266 321 CURVE SMOOTH",
"261 319 OFFCURVE",
"254 318 OFFCURVE",
"246 318 CURVE SMOOTH",
"223 318 LINE",
"223 743 LINE",
"100 743 LINE",
"24 743 LINE",
"24 684 LINE SMOOTH",
"24 667 OFFCURVE",
"32 657 OFFCURVE",
"49 653 CURVE",
"50 653 OFFCURVE",
"52 652 OFFCURVE",
"55 652 CURVE SMOOTH",
"58 652 OFFCURVE",
"63 650 OFFCURVE",
"70 649 CURVE SMOOTH",
"77 648 OFFCURVE",
"88 646 OFFCURVE",
"100 644 CURVE",
"100 99 LINE",
"88 97 OFFCURVE",
"77 95 OFFCURVE",
"70 94 CURVE SMOOTH",
"63 93 OFFCURVE",
"58 91 OFFCURVE",
"55 91 CURVE SMOOTH",
"52 91 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"100 0 LINE",
"223 0 LINE",
"299 0 LINE",
"299 59 LINE SMOOTH",
"299 76 OFFCURVE",
"291 86 OFFCURVE",
"274 90 CURVE",
"273 90 OFFCURVE",
"271 91 OFFCURVE",
"268 91 CURVE",
"265 92 OFFCURVE",
"260 93 OFFCURVE",
"253 94 CURVE SMOOTH",
"246 95 OFFCURVE",
"235 97 OFFCURVE",
"223 99 CURVE",
"223 235 LINE",
"251 235 LINE SMOOTH",
"261 235 OFFCURVE",
"269 234 OFFCURVE",
"274 232 CURVE SMOOTH",
"279 230 OFFCURVE",
"284 225 OFFCURVE",
"289 217 CURVE SMOOTH",
"419 22 LINE SMOOTH",
"424 14 OFFCURVE",
"430 8 OFFCURVE",
"437 5 CURVE SMOOTH",
"444 2 OFFCURVE",
"452 0 OFFCURVE",
"462 0 CURVE SMOOTH",
"517 0 LINE",
"573 0 LINE",
"593 0 LINE",
"593 59 LINE SMOOTH",
"593 76 OFFCURVE",
"585 86 OFFCURVE",
"568 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 29 0 29 28 27 26 24 19 17 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
anchors = (
{
name = bottom;
position = "{318, 0}";
},
{
name = top;
position = "{318, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 531, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 540, 0}";
}
);
layerId = "D509EDD1-C102-4036-8898-973240ECFD7D";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 230 LINE",
"288 230 LINE SMOOTH",
"308 230 OFFCURVE",
"316 226 OFFCURVE",
"325 210 CURVE SMOOTH",
"423 26 LINE SMOOTH",
"433 7 OFFCURVE",
"451 0 OFFCURVE",
"474 0 CURVE SMOOTH",
"614 0 LINE",
"468 248 LINE SMOOTH",
"457 267 OFFCURVE",
"444 282 OFFCURVE",
"429 293 CURVE",
"446 304 OFFCURVE",
"462 317 OFFCURVE",
"474 334 CURVE SMOOTH",
"608 519 LINE",
"466 519 LINE SMOOTH",
"442 519 OFFCURVE",
"428 512 OFFCURVE",
"416 494 CURVE SMOOTH",
"318 348 LINE SMOOTH",
"308 334 OFFCURVE",
"301 329 OFFCURVE",
"281 329 CURVE SMOOTH",
"258 329 LINE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"530 402 LINE",
"553 519 LINE",
"382 519 LINE",
"382 478 LINE",
"491 394 LINE"
);
},
{
closed = 1;
nodes = (
"539 117 LINE",
"464 131 LINE",
"520 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 29 0 29 28 27 26 24 19 17 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 635;
},
{
anchors = (
{
name = bottom;
position = "{285, 0}";
},
{
name = top;
position = "{285, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 449, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 388, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "105EAE75-D38C-41AD-BC43-39F0B329E9F5";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 242 LINE",
"214 242 LINE SMOOTH",
"234 242 OFFCURVE",
"242 240 OFFCURVE",
"251 225 CURVE",
"418 18 LINE SMOOTH",
"428 6 OFFCURVE",
"436 0 OFFCURVE",
"451 0 CURVE SMOOTH",
"531 0 LINE",
"333 250 LINE",
"325 263 OFFCURVE",
"315 274 OFFCURVE",
"303 282 CURVE",
"315 289 OFFCURVE",
"322 298 OFFCURVE",
"332 308 CURVE SMOOTH",
"519 507 LINE",
"438 507 LINE SMOOTH",
"421 507 OFFCURVE",
"413 499 OFFCURVE",
"403 489 CURVE SMOOTH",
"243 317 LINE SMOOTH",
"233 306 OFFCURVE",
"225 303 OFFCURVE",
"212 303 CURVE SMOOTH",
"189 303 LINE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 429 LINE",
"511 507 LINE",
"395 507 LINE",
"395 459 LINE",
"416 426 LINE"
);
},
{
closed = 1;
nodes = (
"462 78 LINE",
"403 91 LINE",
"451 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 30 0 30 29 28 27 25 20 18 10 8 3 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 14 31 4 1 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
14 1 3 0 1 30 0 0 0 3 2 0 3 1 0 38 6 1 5 5 13 31 0 1 1 2 1 0 36 4 1 2 2 15 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 4 1 2 2 5 0 0 36 6 1 5 5 13 5 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 3 0 1 30 6 1 5 1 2 5 0 0 35 0 1 0 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 4 1 2 1 2 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
14 1 3 0 1 30 0 1 0 2 1 1 0 35 0 0 0 3 4 0 3 1 0 38 6 1 5 0 4 2 5 4 0 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
anchors = (
{
name = bottom;
position = "{280, 0}";
},
{
name = top;
position = "{280, 720}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 424, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "0A9F3E0B-88A8-4E33-BC73-D01BC6A8A241";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 259 LINE",
"145 259 LINE SMOOTH",
"165 259 OFFCURVE",
"171 257 OFFCURVE",
"183 245 CURVE SMOOTH",
"429 6 LINE SMOOTH",
"434 1 OFFCURVE",
"438 0 OFFCURVE",
"443 0 CURVE SMOOTH",
"452 0 LINE",
"193 252 LINE SMOOTH",
"188 257 OFFCURVE",
"181 262 OFFCURVE",
"172 265 CURVE",
"176 266 OFFCURVE",
"180 269 OFFCURVE",
"184 273 CURVE SMOOTH",
"432 490 LINE",
"423 490 LINE SMOOTH",
"415 490 OFFCURVE",
"411 487 OFFCURVE",
"405 482 CURVE SMOOTH",
"172 277 LINE SMOOTH",
"162 268 OFFCURVE",
"155 268 OFFCURVE",
"148 268 CURVE SMOOTH",
"125 268 LINE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 478 LINE",
"445 490 LINE",
"421 490 LINE",
"409 482 LINE",
"400 477 LINE"
);
},
{
closed = 1;
nodes = (
"447 12 LINE",
"423 13 LINE",
"446 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
29 3 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
2 1 27 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 569;
}
);
leftKerningGroup = k;
leftMetricsKey = n;
note = k;
rightKerningGroup = k;
rightMetricsKey = x;
unicode = 006B;
},
{
glyphname = kcommaaccent;
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 569;
},
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 131, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 583;
},
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 153, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 635;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
layers = (
{
anchors = (
{
name = bottom;
position = "{280, 0}";
},
{
name = top;
position = "{280, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 424, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 449, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 259 LINE",
"145 259 LINE SMOOTH",
"165 259 OFFCURVE",
"171 257 OFFCURVE",
"183 245 CURVE SMOOTH",
"429 6 LINE SMOOTH",
"434 1 OFFCURVE",
"438 0 OFFCURVE",
"443 0 CURVE SMOOTH",
"452 0 LINE",
"193 252 LINE SMOOTH",
"188 257 OFFCURVE",
"181 262 OFFCURVE",
"172 265 CURVE",
"176 266 OFFCURVE",
"180 269 OFFCURVE",
"184 273 CURVE SMOOTH",
"432 490 LINE",
"423 490 LINE SMOOTH",
"415 490 OFFCURVE",
"411 487 OFFCURVE",
"405 482 CURVE SMOOTH",
"172 277 LINE SMOOTH",
"162 268 OFFCURVE",
"155 268 OFFCURVE",
"148 268 CURVE SMOOTH",
"125 268 LINE",
"125 490 LINE",
"113 490 LINE",
"113 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 478 LINE",
"445 490 LINE",
"421 490 LINE",
"409 482 LINE",
"400 477 LINE"
);
},
{
closed = 1;
nodes = (
"447 12 LINE",
"423 13 LINE",
"446 0 LINE"
);
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
position = "{285, 0}";
},
{
name = top;
position = "{285, 507}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 449, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 388, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 242 LINE",
"214 242 LINE SMOOTH",
"234 242 OFFCURVE",
"242 240 OFFCURVE",
"251 225 CURVE",
"418 18 LINE SMOOTH",
"428 6 OFFCURVE",
"436 0 OFFCURVE",
"451 0 CURVE SMOOTH",
"531 0 LINE",
"333 250 LINE",
"325 263 OFFCURVE",
"315 274 OFFCURVE",
"303 282 CURVE",
"315 289 OFFCURVE",
"322 298 OFFCURVE",
"332 308 CURVE SMOOTH",
"519 507 LINE",
"438 507 LINE SMOOTH",
"421 507 OFFCURVE",
"413 499 OFFCURVE",
"403 489 CURVE SMOOTH",
"243 317 LINE SMOOTH",
"233 306 OFFCURVE",
"225 303 OFFCURVE",
"212 303 CURVE SMOOTH",
"189 303 LINE",
"189 507 LINE",
"100 507 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 429 LINE",
"511 507 LINE",
"395 507 LINE",
"395 459 LINE",
"416 426 LINE"
);
},
{
closed = 1;
nodes = (
"462 78 LINE",
"403 91 LINE",
"451 0 LINE"
);
}
);
width = 583;
},
{
anchors = (
{
name = bottom;
position = "{318, 0}";
},
{
name = top;
position = "{318, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 531, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 540, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 230 LINE",
"288 230 LINE SMOOTH",
"308 230 OFFCURVE",
"316 226 OFFCURVE",
"325 210 CURVE SMOOTH",
"423 26 LINE SMOOTH",
"433 7 OFFCURVE",
"451 0 OFFCURVE",
"474 0 CURVE SMOOTH",
"614 0 LINE",
"468 248 LINE SMOOTH",
"457 267 OFFCURVE",
"444 282 OFFCURVE",
"429 293 CURVE",
"446 304 OFFCURVE",
"462 317 OFFCURVE",
"474 334 CURVE SMOOTH",
"608 519 LINE",
"466 519 LINE SMOOTH",
"442 519 OFFCURVE",
"428 512 OFFCURVE",
"416 494 CURVE SMOOTH",
"318 348 LINE SMOOTH",
"308 334 OFFCURVE",
"301 329 OFFCURVE",
"281 329 CURVE SMOOTH",
"258 329 LINE",
"258 519 LINE",
"103 519 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"530 402 LINE",
"553 519 LINE",
"382 519 LINE",
"382 478 LINE",
"491 394 LINE"
);
},
{
closed = 1;
nodes = (
"539 117 LINE",
"464 131 LINE",
"520 0 LINE"
);
}
);
width = 635;
}
);
leftMetricsKey = k;
rightMetricsKey = k;
unicode = 0138;
},
{
glyphname = khook;
layers = (
{
anchors = (
{
name = bottom;
position = "{280, 0}";
},
{
name = top;
position = "{280, 720}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 424, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 419, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 449, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 259 LINE",
"145 259 LINE SMOOTH",
"165 259 OFFCURVE",
"171 257 OFFCURVE",
"183 245 CURVE SMOOTH",
"429 6 LINE SMOOTH",
"434 1 OFFCURVE",
"438 0 OFFCURVE",
"443 0 CURVE SMOOTH",
"452 0 LINE",
"193 252 LINE SMOOTH",
"188 257 OFFCURVE",
"181 262 OFFCURVE",
"172 265 CURVE",
"176 266 OFFCURVE",
"180 269 OFFCURVE",
"184 273 CURVE SMOOTH",
"432 490 LINE",
"423 490 LINE SMOOTH",
"415 490 OFFCURVE",
"411 487 OFFCURVE",
"405 482 CURVE SMOOTH",
"172 277 LINE SMOOTH",
"162 268 OFFCURVE",
"155 268 OFFCURVE",
"148 268 CURVE SMOOTH",
"125 268 LINE",
"125 397 LINE",
"113 397 LINE",
"113 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 478 LINE",
"445 490 LINE",
"421 490 LINE",
"409 482 LINE",
"400 477 LINE"
);
},
{
closed = 1;
nodes = (
"447 12 LINE",
"423 13 LINE",
"446 0 LINE"
);
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
position = "{285, 0}";
},
{
name = top;
position = "{285, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 459, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 398, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 481, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 242 LINE",
"214 242 LINE SMOOTH",
"234 242 OFFCURVE",
"242 240 OFFCURVE",
"251 225 CURVE",
"418 18 LINE SMOOTH",
"428 6 OFFCURVE",
"436 0 OFFCURVE",
"451 0 CURVE SMOOTH",
"531 0 LINE",
"333 250 LINE",
"325 263 OFFCURVE",
"315 274 OFFCURVE",
"303 282 CURVE",
"315 289 OFFCURVE",
"322 298 OFFCURVE",
"332 308 CURVE SMOOTH",
"519 507 LINE",
"438 507 LINE SMOOTH",
"421 507 OFFCURVE",
"413 499 OFFCURVE",
"403 489 CURVE SMOOTH",
"243 317 LINE SMOOTH",
"233 306 OFFCURVE",
"225 303 OFFCURVE",
"212 303 CURVE SMOOTH",
"189 303 LINE",
"189 461 LINE",
"100 461 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"440 429 LINE",
"521 507 LINE",
"405 507 LINE",
"405 459 LINE",
"426 426 LINE"
);
},
{
closed = 1;
nodes = (
"462 78 LINE",
"403 91 LINE",
"451 0 LINE"
);
}
);
width = 583;
},
{
anchors = (
{
name = bottom;
position = "{318, 0}";
},
{
name = top;
position = "{318, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 531, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 540, 0}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 230 LINE",
"288 230 LINE SMOOTH",
"308 230 OFFCURVE",
"316 226 OFFCURVE",
"325 210 CURVE SMOOTH",
"423 26 LINE SMOOTH",
"433 7 OFFCURVE",
"451 0 OFFCURVE",
"474 0 CURVE SMOOTH",
"614 0 LINE",
"468 248 LINE SMOOTH",
"457 267 OFFCURVE",
"444 282 OFFCURVE",
"429 293 CURVE",
"446 304 OFFCURVE",
"462 317 OFFCURVE",
"474 334 CURVE SMOOTH",
"608 519 LINE",
"466 519 LINE SMOOTH",
"442 519 OFFCURVE",
"428 512 OFFCURVE",
"416 494 CURVE SMOOTH",
"318 348 LINE SMOOTH",
"308 334 OFFCURVE",
"301 329 OFFCURVE",
"281 329 CURVE SMOOTH",
"258 329 LINE",
"258 494 LINE",
"103 494 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"530 402 LINE",
"553 519 LINE",
"382 519 LINE",
"382 478 LINE",
"491 394 LINE"
);
},
{
closed = 1;
nodes = (
"539 117 LINE",
"464 131 LINE",
"520 0 LINE"
);
}
);
width = 635;
}
);
leftMetricsKey = k;
rightMetricsKey = k;
unicode = 0199;
},
{
color = 4;
glyphname = l;
layers = (
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = center;
position = "{119, 360}";
},
{
name = top;
position = "{119, 720}";
},
{
name = topright;
position = "{210, 720}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 229;
},
{
anchors = (
{
name = bottom;
position = "{181, 0}";
},
{
name = center;
position = "{181, 403}";
},
{
name = top;
position = "{181, 749}";
},
{
name = topright;
position = "{303, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 355;
},
{
anchors = (
{
name = bottom;
position = "{145, 0}";
},
{
name = center;
position = "{145, 403}";
},
{
name = top;
position = "{145, 737}";
},
{
name = topright;
position = "{253, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
rightMetricsKey = "=n+5";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D4D2FBCB-1249-41BE-8F58-B432BCD639B0";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"151 40 LINE",
"151 728 LINE",
"31 728 LINE",
"31 708 LINE SMOOTH",
"31 697 OFFCURVE",
"38 691 OFFCURVE",
"51 690 CURVE",
"103 688 LINE",
"103 40 LINE",
"51 38 LINE",
"38 37 OFFCURVE",
"31 31 OFFCURVE",
"31 20 CURVE SMOOTH",
"31 0 LINE",
"223 0 LINE",
"223 20 LINE SMOOTH",
"223 31 OFFCURVE",
"216 37 OFFCURVE",
"203 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 222;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "065B83FF-B615-4AAA-9113-656EC18BA1C6";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"240 64 OFFCURVE",
"222 68 OFFCURVE",
"190 74 CURVE",
"190 737 LINE",
"28 737 LINE",
"28 694 LINE SMOOTH",
"28 684 OFFCURVE",
"34 678 OFFCURVE",
"44 676 CURVE",
"50 674 OFFCURVE",
"68 670 OFFCURVE",
"100 664 CURVE",
"100 73 LINE",
"44 62 LINE SMOOTH",
"34 60 OFFCURVE",
"28 53 OFFCURVE",
"28 43 CURVE SMOOTH",
"28 0 LINE",
"262 0 LINE",
"262 43 LINE SMOOTH",
"262 53 OFFCURVE",
"256 60 OFFCURVE",
"246 62 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "38CBEDEB-F478-406F-97DB-BFD52D931873";
name = "Jan 15 23, 17:51";
paths = (
{
closed = 1;
nodes = (
"273 90 OFFCURVE",
"271 90 OFFCURVE",
"268 91 CURVE SMOOTH",
"265 92 OFFCURVE",
"260 93 OFFCURVE",
"253 94 CURVE SMOOTH",
"246 95 OFFCURVE",
"235 97 OFFCURVE",
"223 99 CURVE",
"223 743 LINE",
"100 743 LINE",
"24 743 LINE",
"24 684 LINE SMOOTH",
"24 667 OFFCURVE",
"32 657 OFFCURVE",
"49 653 CURVE",
"50 653 OFFCURVE",
"52 652 OFFCURVE",
"55 652 CURVE SMOOTH",
"58 652 OFFCURVE",
"63 650 OFFCURVE",
"70 649 CURVE SMOOTH",
"77 648 OFFCURVE",
"88 646 OFFCURVE",
"100 644 CURVE",
"100 99 LINE",
"88 97 OFFCURVE",
"77 95 OFFCURVE",
"70 94 CURVE SMOOTH",
"63 93 OFFCURVE",
"58 92 OFFCURVE",
"55 91 CURVE SMOOTH",
"52 90 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"100 0 LINE",
"223 0 LINE",
"299 0 LINE",
"299 59 LINE SMOOTH",
"299 76 OFFCURVE",
"291 86 OFFCURVE",
"274 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 285;
},
{
anchors = (
{
name = bottom;
position = "{145, 0}";
},
{
name = center;
position = "{145, 403}";
},
{
name = top;
position = "{145, 737}";
},
{
name = topright;
position = "{253, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 737}";
}
);
layerId = "32A9E5DC-8DA6-4112-8AAD-EC7D9340CF93";
rightMetricsKey = "=n+5";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 737 LINE",
"100 737 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = center;
position = "{119, 360}";
},
{
name = top;
position = "{119, 720}";
},
{
name = topright;
position = "{210, 720}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 720}";
}
);
layerId = "5994E78F-7DA3-4890-AACD-AC7FF6D43CC6";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 720 LINE",
"113 720 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 3 2 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 229;
},
{
anchors = (
{
name = bottom;
position = "{181, 0}";
},
{
name = center;
position = "{181, 403}";
},
{
name = top;
position = "{181, 749}";
},
{
name = topright;
position = "{303, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 749}";
}
);
layerId = "78011E25-4766-41E8-93F8-93BF32114A9E";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 749 LINE",
"103 749 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
2 1 1 1 13 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 0 0 36 2 1 1 1 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
leftKerningGroup = h;
leftMetricsKey = n;
note = l;
rightKerningGroup = l;
unicode = 006C;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -7, 230}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 14, 230}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 279;
},
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 52, 230}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 013A;
},
{
glyphname = lcaron;
layers = (
{
components = (
{
name = l;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 107, 10}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
alignment = -1;
name = l;
},
{
alignment = -1;
name = quoteright;
transform = "{1, 0, 0, 1, 161, 7}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 340;
},
{
components = (
{
alignment = -1;
name = l;
},
{
alignment = -1;
name = quoteright;
transform = "{1, 0, 0, 1, 239, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 445;
}
);
unicode = 013E;
},
{
glyphname = lcircumflexbelow;
layers = (
{
components = (
{
name = l;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 8, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = l;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 279;
},
{
components = (
{
name = l;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, -10, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 1E3D;
},
{
glyphname = lcommaaccent;
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 279;
},
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 013C;
},
{
glyphname = ldot;
layers = (
{
components = (
{
name = l;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
alignment = -1;
name = l;
},
{
alignment = -1;
name = periodcentered;
transform = "{1, 0, 0, 1, 151, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 299;
},
{
components = (
{
alignment = -1;
name = l;
},
{
alignment = -1;
name = periodcentered;
transform = "{1, 0, 0, 1, 234, 2}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 455;
}
);
unicode = 0140;
},
{
glyphname = ldotbelow;
layers = (
{
components = (
{
name = l;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 81, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 229;
},
{
components = (
{
name = l;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 279;
},
{
components = (
{
name = l;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
}
);
unicode = 1E37;
},
{
glyphname = lslash;
layers = (
{
components = (
{
name = l;
transform = "{1, 0, 0, 1, 23, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"239 452 LINE SMOOTH",
"244 454 OFFCURVE",
"245 458 OFFCURVE",
"245 462 CURVE SMOOTH",
"245 465 LINE",
"29 360 LINE SMOOTH",
"24 357 OFFCURVE",
"23 355 OFFCURVE",
"23 350 CURVE SMOOTH",
"23 347 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
8 3 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 252;
},
{
components = (
{
name = l;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"285 387 LINE SMOOTH",
"298 392 OFFCURVE",
"305 403 OFFCURVE",
"305 418 CURVE SMOOTH",
"305 505 LINE",
"18 400 LINE SMOOTH",
"6 396 OFFCURVE",
"0 386 OFFCURVE",
"0 373 CURVE SMOOTH",
"0 283 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 15 0 15 8 7 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
14 10 9 6 2 1 6 0 1 1 30 2 1 1 1 13 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
14 10 9 6 2 1 6 0 1 1 30 0 0 0 1 0 0 36 2 1 1 1 13 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
14 10 9 6 2 1 6 0 1 1 30 2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
components = (
{
name = l;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"267 415 LINE SMOOTH",
"278 420 OFFCURVE",
"281 426 OFFCURVE",
"281 437 CURVE SMOOTH",
"281 488 LINE",
"27 383 LINE SMOOTH",
"19 379 OFFCURVE",
"14 373 OFFCURVE",
"14 363 CURVE SMOOTH",
"14 311 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 16 0 16 9 8 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
15 11 10 7 2 1 6 0 1 1 30 2 1 1 1 13 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
15 11 10 7 2 1 6 0 1 1 30 2 1 1 1 13 31 0 0 0 15 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
15 11 10 7 2 1 6 0 1 1 30 0 0 0 1 0 0 36 2 1 1 1 13 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
15 11 10 7 2 1 6 0 1 1 30 2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = lslash;
rightKerningGroup = l;
unicode = 0142;
},
{
color = 4;
glyphname = m;
layers = (
{
anchors = (
{
name = bottom;
position = "{414, 0}";
},
{
name = top;
position = "{414, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 422, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 724, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 374 LINE",
"165 446 OFFCURVE",
"219 488 OFFCURVE",
"282 488 CURVE SMOOTH",
"369 488 OFFCURVE",
"410 420 OFFCURVE",
"410 314 CURVE SMOOTH",
"410 0 LINE",
"422 0 LINE",
"422 314 LINE SMOOTH",
"422 423 OFFCURVE",
"488 488 OFFCURVE",
"573 488 CURVE SMOOTH",
"662 488 OFFCURVE",
"712 427 OFFCURVE",
"712 314 CURVE SMOOTH",
"712 0 LINE",
"724 0 LINE",
"724 314 LINE SMOOTH",
"724 429 OFFCURVE",
"670 498 OFFCURVE",
"573 498 CURVE SMOOTH",
"494 498 OFFCURVE",
"432 448 OFFCURVE",
"417 358 CURVE",
"406 447 OFFCURVE",
"362 498 OFFCURVE",
"283 498 CURVE SMOOTH",
"219 498 OFFCURVE",
"162 455 OFFCURVE",
"125 390 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
44 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 3 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 3 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 828;
},
{
anchors = (
{
name = bottom;
position = "{476, 0}";
},
{
name = top;
position = "{476, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 557, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 854, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 375 LINE",
"281 396 OFFCURVE",
"305 410 OFFCURVE",
"333 410 CURVE SMOOTH",
"378 410 OFFCURVE",
"402 389 OFFCURVE",
"402 330 CURVE SMOOTH",
"402 0 LINE",
"557 0 LINE",
"557 330 LINE SMOOTH",
"557 382 OFFCURVE",
"589 410 OFFCURVE",
"630 410 CURVE SMOOTH",
"676 410 OFFCURVE",
"699 383 OFFCURVE",
"699 330 CURVE SMOOTH",
"699 0 LINE",
"854 0 LINE",
"854 330 LINE SMOOTH",
"854 453 OFFCURVE",
"790 527 OFFCURVE",
"670 527 CURVE SMOOTH",
"604 527 OFFCURVE",
"537 500 OFFCURVE",
"504 438 CURVE",
"483 491 OFFCURVE",
"442 527 OFFCURVE",
"379 527 CURVE SMOOTH",
"322 527 OFFCURVE",
"281 500 OFFCURVE",
"246 465 CURVE",
"237 493 LINE SMOOTH",
"231 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 30 28 26 25 20 18 12 10 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
14 6 2 4 0 41 1 3 4 2 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
14 6 2 6 0 41 1 7 4 2 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 951;
},
{
anchors = (
{
name = bottom;
position = "{436, 0}";
},
{
name = top;
position = "{436, 507}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 487, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 787, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 378 LINE",
"221 418 OFFCURVE",
"258 444 OFFCURVE",
"302 444 CURVE SMOOTH",
"365 444 OFFCURVE",
"398 404 OFFCURVE",
"398 323 CURVE SMOOTH",
"398 0 LINE",
"487 0 LINE",
"487 323 LINE SMOOTH",
"487 397 OFFCURVE",
"535 444 OFFCURVE",
"596 444 CURVE SMOOTH",
"663 444 OFFCURVE",
"698 402 OFFCURVE",
"698 323 CURVE SMOOTH",
"698 0 LINE",
"787 0 LINE",
"787 323 LINE SMOOTH",
"787 441 OFFCURVE",
"726 515 OFFCURVE",
"618 515 CURVE SMOOTH",
"548 515 OFFCURVE",
"484 481 OFFCURVE",
"456 409 CURVE",
"437 474 OFFCURVE",
"396 515 OFFCURVE",
"327 515 CURVE SMOOTH",
"266 515 OFFCURVE",
"221 483 OFFCURVE",
"184 436 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 28 26 23 22 17 15 9 7 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
41 11 5 3 3 4 1 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 3 15 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
41 11 5 3 3 4 1 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
41 11 5 3 7 4 1 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 872;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "CF037779-4D5C-4506-A76F-C3D7F3BA5FE1";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"748 40 LINE",
"748 318 LINE SMOOTH",
"748 427 OFFCURVE",
"698 505 OFFCURVE",
"589 505 CURVE SMOOTH",
"511 505 OFFCURVE",
"451 460 OFFCURVE",
"430 385 CURVE",
"414 461 OFFCURVE",
"374 505 OFFCURVE",
"299 505 CURVE SMOOTH",
"237 505 OFFCURVE",
"192 473 OFFCURVE",
"148 413 CURVE",
"144 486 LINE",
"143 494 OFFCURVE",
"138 498 OFFCURVE",
"129 498 CURVE SMOOTH",
"31 498 LINE",
"31 479 LINE SMOOTH",
"31 468 OFFCURVE",
"37 462 OFFCURVE",
"50 461 CURVE",
"103 459 LINE",
"103 40 LINE",
"50 38 LINE",
"37 37 OFFCURVE",
"31 31 OFFCURVE",
"31 20 CURVE SMOOTH",
"31 0 LINE",
"222 0 LINE",
"222 20 LINE SMOOTH",
"222 31 OFFCURVE",
"216 37 OFFCURVE",
"203 38 CURVE",
"150 40 LINE",
"150 376 LINE",
"181 426 OFFCURVE",
"228 467 OFFCURVE",
"287 467 CURVE SMOOTH",
"368 467 OFFCURVE",
"400 406 OFFCURVE",
"400 318 CURVE SMOOTH",
"400 0 LINE",
"520 0 LINE",
"520 20 LINE SMOOTH",
"520 31 OFFCURVE",
"513 37 OFFCURVE",
"500 38 CURVE",
"448 40 LINE",
"448 318 LINE SMOOTH",
"448 405 OFFCURVE",
"495 467 OFFCURVE",
"579 467 CURVE SMOOTH",
"663 467 OFFCURVE",
"701 407 OFFCURVE",
"701 318 CURVE SMOOTH",
"701 0 LINE",
"820 0 LINE",
"820 20 LINE SMOOTH",
"820 31 OFFCURVE",
"814 37 OFFCURVE",
"801 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
44 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 3 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 3 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 774;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "EDB170EE-060C-4C84-8EB7-FB4386D6815C";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"183 436 LINE",
"176 488 LINE",
"172 500 OFFCURVE",
"164 506 OFFCURVE",
"152 506 CURVE SMOOTH",
"100 506 LINE",
"28 506 LINE",
"28 464 LINE SMOOTH",
"28 454 OFFCURVE",
"32 447 OFFCURVE",
"42 445 CURVE",
"48 443 OFFCURVE",
"68 439 OFFCURVE",
"100 433 CURVE",
"100 72 LINE",
"42 61 LINE SMOOTH",
"32 59 OFFCURVE",
"28 52 OFFCURVE",
"28 42 CURVE SMOOTH",
"28 0 LINE",
"261 0 LINE",
"261 42 LINE SMOOTH",
"261 52 OFFCURVE",
"256 59 OFFCURVE",
"246 61 CURVE",
"244 61 OFFCURVE",
"234 63 OFFCURVE",
"216 67 CURVE",
"189 72 LINE",
"189 376 LINE",
"223 420 OFFCURVE",
"260 442 OFFCURVE",
"302 442 CURVE SMOOTH",
"366 442 OFFCURVE",
"398 402 OFFCURVE",
"398 322 CURVE SMOOTH",
"398 -1 LINE",
"559 -1 LINE",
"559 42 LINE SMOOTH",
"559 52 OFFCURVE",
"554 58 OFFCURVE",
"544 60 CURVE SMOOTH",
"512 66 OFFCURVE",
"493 71 OFFCURVE",
"487 72 CURVE",
"487 322 LINE SMOOTH",
"487 360 OFFCURVE",
"498 390 OFFCURVE",
"520 412 CURVE SMOOTH",
"540 432 OFFCURVE",
"566 442 OFFCURVE",
"596 442 CURVE SMOOTH",
"629 442 OFFCURVE",
"654 431 OFFCURVE",
"672 411 CURVE SMOOTH",
"690 391 OFFCURVE",
"698 361 OFFCURVE",
"698 321 CURVE SMOOTH",
"698 -2 LINE",
"859 -2 LINE",
"859 42 LINE SMOOTH",
"859 52 OFFCURVE",
"854 58 OFFCURVE",
"844 60 CURVE",
"838 62 OFFCURVE",
"818 66 OFFCURVE",
"786 72 CURVE",
"786 322 LINE SMOOTH",
"786 383 OFFCURVE",
"772 430 OFFCURVE",
"742 464 CURVE SMOOTH",
"728 480 OFFCURVE",
"709 493 OFFCURVE",
"688 501 CURVE SMOOTH",
"667 509 OFFCURVE",
"641 514 OFFCURVE",
"610 514 CURVE SMOOTH",
"579 514 OFFCURVE",
"550 504 OFFCURVE",
"522 488 CURVE SMOOTH",
"491 470 OFFCURVE",
"470 443 OFFCURVE",
"456 408 CURVE",
"446 440 OFFCURVE",
"431 466 OFFCURVE",
"410 485 CURVE SMOOTH",
"389 504 OFFCURVE",
"360 514 OFFCURVE",
"326 514 CURVE SMOOTH",
"273 514 OFFCURVE",
"225 487 OFFCURVE",
"183 435 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 28 26 23 22 17 15 9 7 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
41 11 5 3 3 4 1 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 3 15 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
41 11 5 3 3 4 1 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
41 11 5 3 7 4 1 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "98E1F2A6-00A8-4129-9E86-37C1D40A1244";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"870 90 OFFCURVE",
"868 91 OFFCURVE",
"865 91 CURVE SMOOTH",
"862 91 OFFCURVE",
"857 93 OFFCURVE",
"850 94 CURVE SMOOTH",
"843 95 OFFCURVE",
"833 97 OFFCURVE",
"821 99 CURVE",
"821 326 LINE SMOOTH",
"821 357 OFFCURVE",
"817 385 OFFCURVE",
"809 409 CURVE SMOOTH",
"801 433 OFFCURVE",
"790 453 OFFCURVE",
"775 470 CURVE SMOOTH",
"760 487 OFFCURVE",
"741 499 OFFCURVE",
"719 508 CURVE SMOOTH",
"697 517 OFFCURVE",
"672 521 OFFCURVE",
"644 521 CURVE SMOOTH",
"628 521 OFFCURVE",
"611 519 OFFCURVE",
"595 515 CURVE SMOOTH",
"579 511 OFFCURVE",
"563 506 OFFCURVE",
"549 498 CURVE SMOOTH",
"535 490 OFFCURVE",
"522 481 OFFCURVE",
"510 469 CURVE SMOOTH",
"498 457 OFFCURVE",
"488 442 OFFCURVE",
"480 425 CURVE",
"470 454 OFFCURVE",
"454 477 OFFCURVE",
"433 495 CURVE SMOOTH",
"412 513 OFFCURVE",
"385 521 OFFCURVE",
"353 521 CURVE SMOOTH",
"338 521 OFFCURVE",
"324 520 OFFCURVE",
"311 516 CURVE SMOOTH",
"298 512 OFFCURVE",
"286 507 OFFCURVE",
"275 501 CURVE SMOOTH",
"264 495 OFFCURVE",
"253 488 OFFCURVE",
"243 480 CURVE SMOOTH",
"233 472 OFFCURVE",
"224 462 OFFCURVE",
"215 452 CURVE",
"207 490 LINE",
"202 505 OFFCURVE",
"192 513 OFFCURVE",
"176 513 CURVE SMOOTH",
"100 513 LINE",
"24 513 LINE",
"24 454 LINE SMOOTH",
"24 437 OFFCURVE",
"33 427 OFFCURVE",
"50 423 CURVE",
"51 423 OFFCURVE",
"53 422 OFFCURVE",
"56 422 CURVE SMOOTH",
"59 422 OFFCURVE",
"64 420 OFFCURVE",
"71 419 CURVE SMOOTH",
"78 418 OFFCURVE",
"88 416 OFFCURVE",
"100 414 CURVE",
"100 99 LINE",
"88 97 OFFCURVE",
"78 95 OFFCURVE",
"71 94 CURVE SMOOTH",
"64 93 OFFCURVE",
"59 91 OFFCURVE",
"56 91 CURVE SMOOTH",
"53 91 OFFCURVE",
"51 90 OFFCURVE",
"50 90 CURVE",
"33 86 OFFCURVE",
"25 76 OFFCURVE",
"25 59 CURVE SMOOTH",
"25 0 LINE",
"100 0 LINE",
"224 0 LINE",
"299 0 LINE",
"299 59 LINE SMOOTH",
"299 76 OFFCURVE",
"291 86 OFFCURVE",
"274 90 CURVE",
"273 90 OFFCURVE",
"271 90 OFFCURVE",
"268 91 CURVE SMOOTH",
"265 92 OFFCURVE",
"260 93 OFFCURVE",
"253 94 CURVE SMOOTH",
"246 95 OFFCURVE",
"236 97 OFFCURVE",
"224 99 CURVE",
"224 375 LINE",
"237 390 OFFCURVE",
"251 403 OFFCURVE",
"267 412 CURVE SMOOTH",
"283 421 OFFCURVE",
"299 425 OFFCURVE",
"317 425 CURVE SMOOTH",
"344 425 OFFCURVE",
"364 417 OFFCURVE",
"378 401 CURVE SMOOTH",
"392 385 OFFCURVE",
"399 360 OFFCURVE",
"399 326 CURVE SMOOTH",
"399 0 LINE",
"523 0 LINE",
"598 0 LINE",
"598 59 LINE SMOOTH",
"598 76 OFFCURVE",
"590 86 OFFCURVE",
"573 90 CURVE",
"572 90 OFFCURVE",
"570 90 OFFCURVE",
"567 91 CURVE SMOOTH",
"564 92 OFFCURVE",
"559 93 OFFCURVE",
"552 94 CURVE SMOOTH",
"545 95 OFFCURVE",
"536 97 OFFCURVE",
"523 99 CURVE",
"523 326 LINE SMOOTH",
"523 342 OFFCURVE",
"525 357 OFFCURVE",
"530 369 CURVE SMOOTH",
"535 381 OFFCURVE",
"541 392 OFFCURVE",
"549 400 CURVE SMOOTH",
"557 408 OFFCURVE",
"566 414 OFFCURVE",
"577 418 CURVE SMOOTH",
"588 422 OFFCURVE",
"600 425 OFFCURVE",
"613 425 CURVE SMOOTH",
"641 425 OFFCURVE",
"662 417 OFFCURVE",
"676 400 CURVE SMOOTH",
"690 384 OFFCURVE",
"697 359 OFFCURVE",
"697 326 CURVE SMOOTH",
"697 0 LINE",
"821 0 LINE",
"896 0 LINE",
"896 59 LINE SMOOTH",
"896 76 OFFCURVE",
"888 86 OFFCURVE",
"871 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 30 28 26 25 20 18 12 10 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
14 6 2 4 0 41 1 3 4 2 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
14 6 2 6 0 41 1 7 4 2 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 861;
},
{
anchors = (
{
name = bottom;
position = "{476, 0}";
},
{
name = top;
position = "{476, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 854, 0}";
}
);
layerId = "53E06B90-9306-4A35-819A-EC924B10FF80";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 375 LINE",
"281 396 OFFCURVE",
"305 410 OFFCURVE",
"333 410 CURVE SMOOTH",
"378 410 OFFCURVE",
"402 389 OFFCURVE",
"402 330 CURVE SMOOTH",
"402 0 LINE",
"557 0 LINE",
"557 330 LINE SMOOTH",
"557 382 OFFCURVE",
"589 410 OFFCURVE",
"630 410 CURVE SMOOTH",
"676 410 OFFCURVE",
"699 383 OFFCURVE",
"699 330 CURVE SMOOTH",
"699 0 LINE",
"854 0 LINE",
"854 330 LINE SMOOTH",
"854 453 OFFCURVE",
"790 527 OFFCURVE",
"670 527 CURVE SMOOTH",
"604 527 OFFCURVE",
"537 500 OFFCURVE",
"504 438 CURVE",
"483 491 OFFCURVE",
"442 527 OFFCURVE",
"379 527 CURVE SMOOTH",
"322 527 OFFCURVE",
"281 500 OFFCURVE",
"246 465 CURVE",
"237 493 LINE SMOOTH",
"231 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 30 28 26 25 20 18 12 10 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
14 6 2 4 0 41 1 3 4 2 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 6 2 4 0 41 1 3 4 2 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
14 6 2 6 0 41 1 7 4 2 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 951;
},
{
anchors = (
{
name = bottom;
position = "{436, 0}";
},
{
name = top;
position = "{436, 507}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 787, 0}";
}
);
layerId = "ADE2E1AD-9002-468E-B1C2-881C3A745FDB";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 378 LINE",
"221 418 OFFCURVE",
"258 444 OFFCURVE",
"302 444 CURVE SMOOTH",
"365 444 OFFCURVE",
"398 404 OFFCURVE",
"398 323 CURVE SMOOTH",
"398 0 LINE",
"487 0 LINE",
"487 323 LINE SMOOTH",
"487 397 OFFCURVE",
"535 444 OFFCURVE",
"596 444 CURVE SMOOTH",
"663 444 OFFCURVE",
"698 402 OFFCURVE",
"698 323 CURVE SMOOTH",
"698 0 LINE",
"787 0 LINE",
"787 323 LINE SMOOTH",
"787 441 OFFCURVE",
"726 515 OFFCURVE",
"618 515 CURVE SMOOTH",
"548 515 OFFCURVE",
"484 481 OFFCURVE",
"456 409 CURVE",
"437 474 OFFCURVE",
"396 515 OFFCURVE",
"327 515 CURVE SMOOTH",
"266 515 OFFCURVE",
"221 483 OFFCURVE",
"184 436 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 0 42 39 37 34 33 28 26 23 22 17 15 9 7 3 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
41 11 5 3 3 4 1 30 6 1 4 4 0 1 0 36 2 1 2 0 0 14 31 8 7 5 3 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 0 0 0 14 31 6 1 4 4 1 1 0 36 2 1 1 1 20 31 8 7 5 3 3 3 12 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
41 11 5 3 3 4 1 30 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 3 15 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
41 11 5 3 3 4 1 30 0 0 4 3 0 1 0 35 2 1 1 6 1 4 3 1 4 1 0 38 0 0 0 3 0 0 36 8 7 5 3 3 0 3 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
41 11 5 3 7 4 1 30 0 5 7 3 7 5 3 50 0 3 3 51 0 0 6 7 0 1 0 35 0 1 0 6 4 1 6 1 0 38 0 2 0 4 7 2 4 1 0 38 0 0 0 7 0 0 36 8 1 7 0 7 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 872;
},
{
anchors = (
{
name = bottom;
position = "{414, 0}";
},
{
name = top;
position = "{414, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 724, 0}";
}
);
layerId = "A239B7F3-9800-42A1-819E-EFCB9FE537AD";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 374 LINE",
"165 446 OFFCURVE",
"219 488 OFFCURVE",
"282 488 CURVE SMOOTH",
"369 488 OFFCURVE",
"410 420 OFFCURVE",
"410 314 CURVE SMOOTH",
"410 0 LINE",
"422 0 LINE",
"422 314 LINE SMOOTH",
"422 423 OFFCURVE",
"488 488 OFFCURVE",
"573 488 CURVE SMOOTH",
"662 488 OFFCURVE",
"712 427 OFFCURVE",
"712 314 CURVE SMOOTH",
"712 0 LINE",
"724 0 LINE",
"724 314 LINE SMOOTH",
"724 429 OFFCURVE",
"670 498 OFFCURVE",
"573 498 CURVE SMOOTH",
"494 498 OFFCURVE",
"432 448 OFFCURVE",
"417 358 CURVE",
"406 447 OFFCURVE",
"362 498 OFFCURVE",
"283 498 CURVE SMOOTH",
"219 498 OFFCURVE",
"162 455 OFFCURVE",
"125 390 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
44 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 3 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 3 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 828;
}
);
leftKerningGroup = k;
leftMetricsKey = n;
note = m;
rightMetricsKey = n;
unicode = 006D;
},
{
glyphname = macute;
layers = (
{
components = (
{
name = m;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 828;
},
{
components = (
{
name = m;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 305, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 872;
},
{
components = (
{
name = m;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 951;
}
);
unicode = 1E3F;
},
{
color = 4;
glyphname = n;
layers = (
{
anchors = (
{
name = bottom;
position = "{298, 0}";
},
{
name = top;
position = "{298, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"238 498 OFFCURVE",
"171 455 OFFCURVE",
"125 388 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{323, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"333 527 OFFCURVE",
"287 501 OFFCURVE",
"246 463 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
width = 670;
},
{
anchors = (
{
name = bottom;
position = "{307, 0}";
},
{
name = top;
position = "{307, 506}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"227.667 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437.021 OFFCURVE",
"463.22 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"281.333 515 OFFCURVE",
"228 482.333 OFFCURVE",
"184 433 CURVE",
"177 488 LINE",
"173.667 500.667 OFFCURVE",
"165.667 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 20 18 15 14 9 7 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
22 5 2 2 3 1 30 0 3 3 0 1 0 36 1 1 0 0 14 31 5 4 2 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
22 5 2 2 3 1 30 0 0 3 2 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
22 5 2 4 3 1 30 0 2 4 2 53 0 0 3 4 0 1 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "566C9446-AEC9-4B3F-87B0-123EAAE6023A";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"223 0 LINE",
"223 20 LINE SMOOTH",
"223 31 OFFCURVE",
"217 37 OFFCURVE",
"204 38 CURVE",
"151 40 LINE",
"151 373 LINE",
"194 430 OFFCURVE",
"250 467 OFFCURVE",
"317 467 CURVE SMOOTH",
"409 467 OFFCURVE",
"447 407 OFFCURVE",
"447 318 CURVE SMOOTH",
"447 0 LINE",
"567 0 LINE",
"567 20 LINE SMOOTH",
"567 31 OFFCURVE",
"560 37 OFFCURVE",
"547 38 CURVE",
"495 40 LINE",
"495 318 LINE SMOOTH",
"495 431 OFFCURVE",
"440 505 OFFCURVE",
"329 505 CURVE SMOOTH",
"254 505 OFFCURVE",
"194 467 OFFCURVE",
"149 410 CURVE",
"145 486 LINE",
"144 494 OFFCURVE",
"139 498 OFFCURVE",
"130 498 CURVE SMOOTH",
"104 498 LINE",
"104 459 LINE",
"104 40 LINE",
"51 38 LINE",
"38 37 OFFCURVE",
"32 31 OFFCURVE",
"32 20 CURVE SMOOTH",
"32 0 LINE"
);
},
{
closed = 1;
nodes = (
"120 459 LINE",
"120 498 LINE",
"105 498 LINE",
"32 498 LINE",
"32 479 LINE SMOOTH",
"32 466 OFFCURVE",
"39 462 OFFCURVE",
"51 461 CURVE",
"105 459 LINE"
);
}
);
width = 800;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "829694BB-4117-47AD-8E42-A1B70AB8B7C6";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"184 433 LINE",
"176 488 LINE",
"172 500 OFFCURVE",
"164 506 OFFCURVE",
"152 506 CURVE SMOOTH",
"100 506 LINE",
"28 506 LINE",
"28 464 LINE SMOOTH",
"28 454 OFFCURVE",
"32 447 OFFCURVE",
"42 445 CURVE",
"48 443 OFFCURVE",
"68 439 OFFCURVE",
"100 433 CURVE",
"100 72 LINE",
"42 61 LINE SMOOTH",
"32 59 OFFCURVE",
"28 52 OFFCURVE",
"28 42 CURVE SMOOTH",
"28 0 LINE",
"261 0 LINE",
"261 42 LINE SMOOTH",
"261 52 OFFCURVE",
"256 59 OFFCURVE",
"246 61 CURVE SMOOTH",
"210 69 OFFCURVE",
"190 73 OFFCURVE",
"188 73 CURVE",
"188 373 LINE",
"230 420 OFFCURVE",
"276 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"397 444 OFFCURVE",
"432 402 OFFCURVE",
"432 322 CURVE SMOOTH",
"432 0 LINE",
"594 0 LINE",
"594 43 LINE SMOOTH",
"594 53 OFFCURVE",
"588 60 OFFCURVE",
"578 62 CURVE",
"572 64 OFFCURVE",
"553 68 OFFCURVE",
"521 74 CURVE",
"521 323 LINE SMOOTH",
"521 381 OFFCURVE",
"506 428 OFFCURVE",
"478 462 CURVE SMOOTH",
"448 498 OFFCURVE",
"406 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"290 515 OFFCURVE",
"234 488 OFFCURVE",
"184 434 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 20 18 15 14 9 7 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
22 5 2 2 3 1 30 0 3 3 0 1 0 36 1 1 0 0 14 31 5 4 2 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
22 5 2 2 3 1 30 0 0 3 2 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
22 5 2 4 3 1 30 0 2 4 2 53 0 0 3 4 0 1 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "BFD45259-EAB4-4103-AC02-4D1CA0BB6EC9";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"596 90 OFFCURVE",
"594 91 OFFCURVE",
"591 91 CURVE SMOOTH",
"588 91 OFFCURVE",
"583 93 OFFCURVE",
"576 94 CURVE SMOOTH",
"569 95 OFFCURVE",
"558 97 OFFCURVE",
"546 99 CURVE",
"546 326 LINE SMOOTH",
"546 355 OFFCURVE",
"543 381 OFFCURVE",
"535 405 CURVE SMOOTH",
"527 429 OFFCURVE",
"516 450 OFFCURVE",
"502 467 CURVE SMOOTH",
"487 484 OFFCURVE",
"470 498 OFFCURVE",
"448 507 CURVE",
"426 517 OFFCURVE",
"401 521 OFFCURVE",
"373 521 CURVE SMOOTH",
"356 521 OFFCURVE",
"340 519 OFFCURVE",
"325 516 CURVE SMOOTH",
"310 513 OFFCURVE",
"297 507 OFFCURVE",
"284 501 CURVE SMOOTH",
"271 495 OFFCURVE",
"258 488 OFFCURVE",
"247 479 CURVE",
"235 470 OFFCURVE",
"225 461 OFFCURVE",
"215 450 CURVE",
"206 490 LINE",
"201 505 OFFCURVE",
"191 513 OFFCURVE",
"175 513 CURVE SMOOTH",
"99 513 LINE",
"24 513 LINE",
"24 454 LINE SMOOTH",
"24 437 OFFCURVE",
"32 427 OFFCURVE",
"49 423 CURVE",
"50 423 OFFCURVE",
"52 423 OFFCURVE",
"55 422 CURVE",
"58 422 OFFCURVE",
"63 420 OFFCURVE",
"70 419 CURVE SMOOTH",
"77 418 OFFCURVE",
"87 416 OFFCURVE",
"99 414 CURVE",
"99 99 LINE",
"87 97 OFFCURVE",
"77 95 OFFCURVE",
"70 94 CURVE SMOOTH",
"63 93 OFFCURVE",
"58 92 OFFCURVE",
"55 91 CURVE",
"52 91 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"99 0 LINE",
"223 0 LINE",
"298 0 LINE",
"298 59 LINE SMOOTH",
"298 76 OFFCURVE",
"290 86 OFFCURVE",
"273 90 CURVE",
"272 90 OFFCURVE",
"270 90 OFFCURVE",
"267 91 CURVE SMOOTH",
"264 92 OFFCURVE",
"259 93 OFFCURVE",
"252 94 CURVE SMOOTH",
"245 95 OFFCURVE",
"235 97 OFFCURVE",
"223 99 CURVE",
"223 371 LINE",
"240 388 OFFCURVE",
"257 400 OFFCURVE",
"276 410 CURVE SMOOTH",
"295 420 OFFCURVE",
"315 425 OFFCURVE",
"336 425 CURVE SMOOTH",
"365 425 OFFCURVE",
"387 416 OFFCURVE",
"401 399 CURVE SMOOTH",
"415 382 OFFCURVE",
"423 357 OFFCURVE",
"423 326 CURVE SMOOTH",
"423 0 LINE",
"546 0 LINE",
"622 0 LINE",
"622 59 LINE SMOOTH",
"622 76 OFFCURVE",
"614 86 OFFCURVE",
"597 90 CURVE"
);
}
);
width = 644;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{323, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "5111220F-B700-4721-A592-C824EA904A5B";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"333 527 OFFCURVE",
"287 501 OFFCURVE",
"246 463 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
width = 670;
},
{
anchors = (
{
name = bottom;
position = "{307, 0}";
},
{
name = top;
position = "{307, 506}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "1A28FD3E-69F0-4EFE-A1FB-861D058F1EE7";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"227.667 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437.021 OFFCURVE",
"463.22 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"281.333 515 OFFCURVE",
"228 482.333 OFFCURVE",
"184 433 CURVE",
"177 488 LINE",
"173.667 500.667 OFFCURVE",
"165.667 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 20 18 15 14 9 7 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
22 5 2 2 3 1 30 0 3 3 0 1 0 36 1 1 0 0 14 31 5 4 2 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 4 2 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
22 5 2 2 3 1 30 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
22 5 2 2 3 1 30 0 0 3 2 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 2 0 0 36 5 4 2 2 0 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
22 5 2 4 3 1 30 0 2 4 2 53 0 0 3 4 0 1 0 35 0 1 0 3 4 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
anchors = (
{
name = bottom;
position = "{298, 0}";
},
{
name = top;
position = "{298, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "91020998-4E40-455D-A5EA-3EC47E8D70E8";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"238 498 OFFCURVE",
"171 455 OFFCURVE",
"125 388 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
width = 582;
}
);
leftKerningGroup = k;
note = n;
rightKerningGroup = n;
unicode = 006E;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 176, -1}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 194, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 0144;
},
{
glyphname = napostrophe;
layers = (
{
components = (
{
name = apostrophemod;
transform = "{1, 0, 0, 1, -80, -15}";
},
{
name = n;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = apostrophemod;
transform = "{1, 0, 0, 1, -96, 0}";
},
{
name = n;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = apostrophemod;
transform = "{1, 0, 0, 1, -72, 0}";
},
{
name = n;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 790;
}
);
rightMetricsKey = n;
unicode = 0149;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 153, -1}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 0148;
},
{
glyphname = ncircumflexbelow;
layers = (
{
components = (
{
name = n;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 187, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 153, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 1E4B;
},
{
glyphname = ncommaaccent;
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 153, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 0146;
},
{
glyphname = ndotaccent;
layers = (
{
components = (
{
name = n;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 222, -1}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 219, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 1E45;
},
{
glyphname = ndotbelow;
layers = (
{
components = (
{
name = n;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 231, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 1E47;
},
{
glyphname = eng;
layers = (
{
anchors = (
{
name = bottom;
position = "{298, 0}";
},
{
name = top;
position = "{298, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"238 498 OFFCURVE",
"171 455 OFFCURVE",
"125 388 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
},
{
closed = 1;
nodes = (
"410 -188 OFFCURVE",
"478 -174 OFFCURVE",
"478 -83 CURVE SMOOTH",
"478 36 LINE",
"466 36 LINE",
"466 -82 LINE SMOOTH",
"466 -119 OFFCURVE",
"452 -178 OFFCURVE",
"383 -178 CURVE SMOOTH",
"349 -178 OFFCURVE",
"345 -165 OFFCURVE",
"341 -172 CURVE SMOOTH",
"338 -177 LINE",
"347 -182 OFFCURVE",
"362 -188 OFFCURVE",
"380 -188 CURVE SMOOTH"
);
}
);
width = 500;
},
{
anchors = (
{
name = bottom;
position = "{307, 0}";
},
{
name = top;
position = "{307, 506}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"228 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437 OFFCURVE",
"463 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"281 515 OFFCURVE",
"228 482 OFFCURVE",
"184 433 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"464 -182 OFFCURVE",
"522 -140 OFFCURVE",
"522 -31 CURVE",
"522 50 LINE",
"433 50 LINE",
"433 -28 LINE SMOOTH",
"433 -100 OFFCURVE",
"412 -115 OFFCURVE",
"370 -115 CURVE SMOOTH",
"334 -115 OFFCURVE",
"328 -107 OFFCURVE",
"326 -129 CURVE SMOOTH",
"322 -172 LINE",
"336 -177 OFFCURVE",
"351 -182 OFFCURVE",
"379 -182 CURVE SMOOTH"
);
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{323, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"333 527 OFFCURVE",
"287 501 OFFCURVE",
"246 463 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"449 -180 OFFCURVE",
"573 -164 OFFCURVE",
"573 10 CURVE",
"573 90 LINE",
"418 90 LINE",
"418 -1 LINE SMOOTH",
"418 -53 OFFCURVE",
"405 -68 OFFCURVE",
"363 -68 CURVE SMOOTH",
"333 -68 OFFCURVE",
"328 -74 OFFCURVE",
"327 -90 CURVE SMOOTH",
"322 -170 LINE",
"345 -175 OFFCURVE",
"378 -180 OFFCURVE",
"405 -180 CURVE SMOOTH"
);
}
);
width = 593;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 014B;
},
{
glyphname = nhookleft;
layers = (
{
anchors = (
{
name = bottom;
position = "{298, 0}";
},
{
name = top;
position = "{298, 490}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 478, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"57 -188 OFFCURVE",
"125 -174 OFFCURVE",
"125 -83 CURVE SMOOTH",
"125 36 LINE",
"113 36 LINE",
"113 -82 LINE SMOOTH",
"113 -119 OFFCURVE",
"99 -178 OFFCURVE",
"30 -178 CURVE SMOOTH",
"-4 -178 OFFCURVE",
"-8 -165 OFFCURVE",
"-12 -172 CURVE SMOOTH",
"-15 -177 LINE",
"-6 -182 OFFCURVE",
"9 -188 OFFCURVE",
"27 -188 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 0 LINE",
"125 373 LINE",
"174 445 OFFCURVE",
"240 488 OFFCURVE",
"316 488 CURVE SMOOTH",
"419 488 OFFCURVE",
"466 424 OFFCURVE",
"466 314 CURVE SMOOTH",
"466 0 LINE",
"478 0 LINE",
"478 314 LINE SMOOTH",
"478 430 OFFCURVE",
"425 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"238 498 OFFCURVE",
"171 455 OFFCURVE",
"125 388 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
position = "{307, 0}";
},
{
name = top;
position = "{307, 506}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 522, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"131 -182 OFFCURVE",
"189 -140 OFFCURVE",
"189 -31 CURVE",
"189 50 LINE",
"100 50 LINE",
"100 -28 LINE SMOOTH",
"100 -100 OFFCURVE",
"79 -115 OFFCURVE",
"37 -115 CURVE SMOOTH",
"1 -115 OFFCURVE",
"-5 -107 OFFCURVE",
"-7 -129 CURVE SMOOTH",
"-11 -172 LINE",
"3 -177 OFFCURVE",
"18 -182 OFFCURVE",
"46 -182 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 0 LINE",
"189 373 LINE",
"228 417 OFFCURVE",
"274 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"398 444 OFFCURVE",
"433 399 OFFCURVE",
"433 323 CURVE SMOOTH",
"433 0 LINE",
"522 0 LINE",
"522 323 LINE SMOOTH",
"522 437 OFFCURVE",
"463 515 OFFCURVE",
"352 515 CURVE SMOOTH",
"281 515 OFFCURVE",
"228 482 OFFCURVE",
"184 433 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
width = 607;
},
{
anchors = (
{
name = bottom;
position = "{323, 0}";
},
{
name = top;
position = "{323, 519}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 573, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"134 -180 OFFCURVE",
"258 -164 OFFCURVE",
"258 10 CURVE",
"258 90 LINE",
"103 90 LINE",
"103 -1 LINE SMOOTH",
"103 -53 OFFCURVE",
"90 -68 OFFCURVE",
"48 -68 CURVE SMOOTH",
"18 -68 OFFCURVE",
"13 -74 OFFCURVE",
"12 -90 CURVE SMOOTH",
"7 -170 LINE",
"30 -175 OFFCURVE",
"63 -180 OFFCURVE",
"90 -180 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 0 LINE",
"258 370 LINE",
"286 394 OFFCURVE",
"316 410 OFFCURVE",
"349 410 CURVE SMOOTH",
"394 410 OFFCURVE",
"418 381 OFFCURVE",
"418 330 CURVE SMOOTH",
"418 0 LINE",
"573 0 LINE",
"573 330 LINE SMOOTH",
"573 443 OFFCURVE",
"510 527 OFFCURVE",
"397 527 CURVE SMOOTH",
"333 527 OFFCURVE",
"287 501 OFFCURVE",
"246 463 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
width = 670;
}
);
rightMetricsKey = n;
unicode = 0272;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 582;
},
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 153, -1}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 607;
},
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 670;
}
);
unicode = 00F1;
},
{
glyphname = o;
layers = (
{
anchors = (
{
name = bottom;
position = "{255, 0}";
},
{
name = center;
position = "{255, 245}";
},
{
name = ogonek;
position = "{262, -1}";
},
{
name = top;
position = "{255, 490}";
},
{
name = topright;
position = "{490, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"255 498 LINE",
"115 498 OFFCURVE",
"41 395 OFFCURVE",
"41 245 CURVE SMOOTH",
"41 96 OFFCURVE",
"116 -6 OFFCURVE",
"255 -6 CURVE SMOOTH",
"395 -6 OFFCURVE",
"469 95 OFFCURVE",
"469 245 CURVE SMOOTH",
"469 396 OFFCURVE",
"395 498 OFFCURVE",
"255 498 CURVE"
);
},
{
closed = 1;
nodes = (
"122 4 OFFCURVE",
"53 102 OFFCURVE",
"53 245 CURVE SMOOTH",
"53 389 OFFCURVE",
"121 488 OFFCURVE",
"255 488 CURVE SMOOTH",
"390 488 OFFCURVE",
"457 389 OFFCURVE",
"457 245 CURVE SMOOTH",
"457 102 OFFCURVE",
"390 4 OFFCURVE",
"255 4 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
20 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 510;
},
{
anchors = (
{
name = bottom;
position = "{284, 0}";
},
{
name = center;
position = "{284, 260}";
},
{
name = ogonek;
position = "{294, 0}";
},
{
name = top;
position = "{284, 519}";
},
{
name = topright;
position = "{548, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"285 527 LINE",
"126 527 OFFCURVE",
"19 423 OFFCURVE",
"19 261 CURVE SMOOTH",
"19 98 OFFCURVE",
"126 -8 OFFCURVE",
"285 -8 CURVE SMOOTH",
"445 -8 OFFCURVE",
"549 98 OFFCURVE",
"549 261 CURVE SMOOTH",
"549 423 OFFCURVE",
"444 527 OFFCURVE",
"285 527 CURVE"
);
},
{
closed = 1;
nodes = (
"212 107 OFFCURVE",
"179 157 OFFCURVE",
"179 260 CURVE SMOOTH",
"179 363 OFFCURVE",
"212 412 OFFCURVE",
"285 412 CURVE SMOOTH",
"357 412 OFFCURVE",
"389 363 OFFCURVE",
"389 260 CURVE SMOOTH",
"389 157 OFFCURVE",
"357 107 OFFCURVE",
"285 107 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 27 25 20 31 21 31 11 9 0 19 1 19 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 1 0 36 4 1 0 0 20 31 5 1 2 2 1 1 0 36 0 1 1 18 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 1 0 0 3 2 0 3 1 0 38 5 1 2 1 1 2 1 0 35 5 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
anchors = (
{
name = bottom;
position = "{276, 0}";
},
{
name = center;
position = "{276, 254}";
},
{
name = ogonek;
position = "{282, 0}";
},
{
name = top;
position = "{276, 507}";
},
{
name = topright;
position = "{531, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"276 515 LINE",
"127 515 OFFCURVE",
"34 410 OFFCURVE",
"34 254 CURVE SMOOTH",
"34 97 OFFCURVE",
"127 -7 OFFCURVE",
"276 -7 CURVE SMOOTH",
"427 -7 OFFCURVE",
"517 97 OFFCURVE",
"517 254 CURVE SMOOTH",
"517 410 OFFCURVE",
"427 515 OFFCURVE",
"276 515 CURVE"
);
},
{
closed = 1;
nodes = (
"174 63 OFFCURVE",
"126 137 OFFCURVE",
"126 253 CURVE SMOOTH",
"126 371 OFFCURVE",
"173 445 OFFCURVE",
"276 445 CURVE SMOOTH",
"376 445 OFFCURVE",
"425 374 OFFCURVE",
"425 253 CURVE SMOOTH",
"425 133 OFFCURVE",
"376 63 OFFCURVE",
"276 63 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 27 25 20 35 21 35 11 9 0 19 1 19 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 1 0 36 4 1 0 0 20 31 5 1 2 2 1 1 0 36 0 1 1 18 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 1 0 36 4 1 0 0 20 31 5 1 2 2 1 1 0 36 0 1 1 21 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 0 3 2 0 3 1 0 38 5 1 2 2 1 1 0 36 0 1 1 21 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 1 0 0 3 2 0 3 1 0 38 5 1 2 1 1 2 1 0 35 5 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
leftKerningGroup = c;
note = o;
rightKerningGroup = b;
unicode = 006F;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 155, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 00F3;
},
{
glyphname = obreve;
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 119, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 014F;
},
{
glyphname = ocaron;
layers = (
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 01D2;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 115, -44}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 217, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 209, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 192, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ED7;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 00F6;
},
{
glyphname = odieresismacron;
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 115, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 115, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 129, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 89, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 119, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 022B;
},
{
glyphname = odotbelow;
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 217, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ECD;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 00F2;
},
{
glyphname = ohookabove;
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
layers = (
{
components = (
{
name = o;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 219, 52}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 238, 47}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 265, 68}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 155, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 217, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 119, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 0151;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 119, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 014D;
},
{
glyphname = omacronacute;
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 129, 155}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 129, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 167}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 155, 177}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1E53;
},
{
glyphname = omacrongrave;
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 115, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 94, 155}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 129, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 89, 167}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 63, 177}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1E51;
},
{
glyphname = oogonek;
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 122, -1}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 01EB;
},
{
glyphname = oopen;
layers = (
{
components = (
{
name = c;
transform = "{-1, 0, 0, -1, 435, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 435;
},
{
components = (
{
name = c;
transform = "{-1, 0, 0, -1, 473, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 473;
},
{
components = (
{
name = c;
transform = "{-1, 0, 0, -1, 485, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 485;
}
);
unicode = 0254;
},
{
glyphname = oslash;
layers = (
{
components = (
{
name = o;
transform = "{1, 0, 0, 1, 9, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"62 -37 LINE SMOOTH",
"67 -37 OFFCURVE",
"70 -35 OFFCURVE",
"73 -31 CURVE SMOOTH",
"482 516 LINE",
"474 516 LINE SMOOTH",
"471 516 OFFCURVE",
"467 514 OFFCURVE",
"465 511 CURVE SMOOTH",
"55 -37 LINE"
);
}
);
width = 527;
},
{
components = (
{
name = o;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"66 -38 LINE SMOOTH",
"85 -38 OFFCURVE",
"106 -31 OFFCURVE",
"121 -11 CURVE SMOOTH",
"535 549 LINE",
"490 549 LINE SMOOTH",
"469 549 OFFCURVE",
"461 541 OFFCURVE",
"448 524 CURVE SMOOTH",
"32 -38 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = o;
transform = "{1, 0, 0, 1, 6, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"68 -39 LINE SMOOTH",
"101.521 -39 OFFCURVE",
"139.665 -28.044 OFFCURVE",
"160 5 CURVE SMOOTH",
"578 573 LINE",
"502 573 LINE SMOOTH",
"468.162 573 OFFCURVE",
"453.671 562.423 OFFCURVE",
"433 534 CURVE",
"12 -39 LINE"
);
}
);
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = o;
}
);
layerId = "DAA38136-FBCD-4C71-9CB7-64F60B20DD97";
name = "Feb 27 23, 19:40";
paths = (
{
closed = 1;
nodes = (
"487 549 LINE SMOOTH",
"471 549 OFFCURVE",
"455 537 OFFCURVE",
"445 524 QCURVE SMOOTH",
"411 478 LINE",
"383 496 OFFCURVE",
"315 515 OFFCURVE",
"276 515 QCURVE SMOOTH",
"220 515 OFFCURVE",
"131 478 OFFCURVE",
"68 410 OFFCURVE",
"34 313 OFFCURVE",
"34 254 QCURVE SMOOTH",
"34 192 OFFCURVE",
"69 95 OFFCURVE",
"102 60 QCURVE",
"29 -38 LINE",
"63 -38 LINE SMOOTH",
"77 -38 OFFCURVE",
"107 -26 OFFCURVE",
"118 -11 QCURVE SMOOTH",
"145 26 LINE",
"172 10 OFFCURVE",
"238 -7 OFFCURVE",
"276 -7 QCURVE SMOOTH",
"331 -7 OFFCURVE",
"421 30 OFFCURVE",
"483 98 OFFCURVE",
"517 194 OFFCURVE",
"517 254 QCURVE SMOOTH",
"517 313 OFFCURVE",
"484 408 OFFCURVE",
"453 442 QCURVE",
"532 549 LINE"
);
},
{
closed = 1;
nodes = (
"140 371 OFFCURVE",
"180 421 OFFCURVE",
"238 448 OFFCURVE",
"276 448 QCURVE SMOOTH",
"331 448 OFFCURVE",
"368 420 QCURVE",
"150 125 LINE",
"120 173 OFFCURVE",
"120 253 QCURVE SMOOTH",
"120 298 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"188 84 QCURVE",
"404 377 LINE",
"430 329 OFFCURVE",
"430 253 QCURVE SMOOTH",
"430 208 OFFCURVE",
"410 137 OFFCURVE",
"371 87 OFFCURVE",
"313 60 OFFCURVE",
"276 60 QCURVE SMOOTH",
"223 60 OFFCURVE"
);
}
);
width = 551;
}
);
unicode = 00F8;
},
{
glyphname = oslashacute;
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 138, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 527;
},
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 556;
},
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 161, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 580;
}
);
unicode = 01FF;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 00F5;
},
{
glyphname = otildeacute;
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 115, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 129, 167}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 510;
},
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 185}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 551;
},
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 106, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 155, 210}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 568;
}
);
unicode = 1E4D;
},
{
glyphname = oe;
layers = (
{
anchors = (
{
name = bottom;
position = "{434, 0}";
},
{
name = top;
position = "{434, 490}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 388, -1}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"355 -6 OFFCURVE",
"422 73 OFFCURVE",
"435 196 CURVE",
"438.127 263.317 LINE",
"428 420.351 OFFCURVE",
"354 498 OFFCURVE",
"241 498 CURVE SMOOTH",
"109 498 OFFCURVE",
"41 394 OFFCURVE",
"41 245 CURVE SMOOTH",
"41 98 OFFCURVE",
"110 -6 OFFCURVE",
"241 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 4 OFFCURVE",
"53 104 OFFCURVE",
"53 245 CURVE SMOOTH",
"53 387 OFFCURVE",
"115 488 OFFCURVE",
"241 488 CURVE SMOOTH",
"368 488 OFFCURVE",
"428 387 OFFCURVE",
"428 245 CURVE SMOOTH",
"428 104 OFFCURVE",
"368 4 OFFCURVE",
"241 4 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
74 3 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
11 3 64 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 4 85 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
24 44 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
91 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
21 2 24 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
85 1 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
16 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 867;
},
{
anchors = (
{
name = bottom;
position = "{441, 0}";
},
{
name = top;
position = "{441, 519}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 354, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"344 -8 OFFCURVE",
"408 24 OFFCURVE",
"451 81 CURVE",
"455.952 432.169 LINE",
"409 496 OFFCURVE",
"346 527 OFFCURVE",
"267 527 CURVE SMOOTH",
"122 527 OFFCURVE",
"19 420 OFFCURVE",
"19 261 CURVE SMOOTH",
"19 101 OFFCURVE",
"119 -8 OFFCURVE",
"261 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"209 107 OFFCURVE",
"179 157 OFFCURVE",
"179 260 CURVE SMOOTH",
"179 363 OFFCURVE",
"209 412 OFFCURVE",
"276 412 CURVE SMOOTH",
"343 412 OFFCURVE",
"372 363 OFFCURVE",
"372 260 CURVE SMOOTH",
"372 157 OFFCURVE",
"343 107 OFFCURVE",
"276 107 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
65 64 53 52 1 0 68 67 64 72 65 72 59 57 52 63 53 63 47 45 37 35 29 27 20 18 15 13 11 9 0 51 1 51 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
49 1 8 0 33 23 2 4 2 2 30 0 3 1 2 1 3 2 50 0 10 0 1 3 10 1 1 0 38 13 9 2 8 8 0 1 0 36 6 11 2 0 0 20 31 12 7 2 2 2 4 1 0 36 5 1 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
49 1 9 0 33 23 2 4 2 2 30 0 3 1 2 1 3 2 50 0 10 0 1 3 10 1 1 0 38 13 1 9 9 0 1 0 36 6 11 2 0 0 20 31 0 8 8 0 1 0 36 6 11 2 0 0 20 31 12 7 2 2 2 4 1 0 36 5 1 4 4 18 4 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
201 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
49 1 9 0 33 23 2 4 2 2 30 0 3 1 2 1 3 2 50 13 1 9 8 0 9 1 0 35 6 11 2 0 0 8 10 0 8 1 0 38 0 10 0 1 3 10 1 1 0 38 12 7 2 2 4 4 2 1 0 35 12 7 2 2 2 4 1 0 36 5 1 4 2 4 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
49 1 9 0 33 23 2 4 7 2 30 0 3 1 2 1 3 2 50 13 1 9 8 0 9 1 0 35 6 11 2 0 0 8 10 0 8 1 0 38 0 10 0 1 3 10 1 1 0 38 0 2 7 4 2 1 0 35 12 1 7 4 4 7 1 0 35 12 1 7 7 4 1 0 36 5 1 4 7 4 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
49 1 9 6 33 23 2 5 7 2 30 0 3 1 2 1 3 2 50 11 1 0 13 1 9 8 0 9 1 0 38 0 6 0 8 10 6 8 1 0 38 0 10 0 1 3 10 1 1 0 38 0 2 7 4 2 1 0 35 12 1 7 0 5 4 7 5 1 0 38 0 2 2 4 1 0 36 0 4 2 4 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 881;
},
{
anchors = (
{
name = bottom;
position = "{443, 0}";
},
{
name = top;
position = "{443, 507}";
}
);
components = (
{
name = e;
transform = "{1, 0, 0, 1, 370, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"348 -7 OFFCURVE",
"413 35 OFFCURVE",
"449 110 CURVE",
"454.917 379.961 LINE",
"419.896 472 OFFCURVE",
"348 515 OFFCURVE",
"260 515 CURVE SMOOTH",
"120 515 OFFCURVE",
"34 408 OFFCURVE",
"34 254 CURVE SMOOTH",
"34 100 OFFCURVE",
"120 -7 OFFCURVE",
"257 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"172 63 OFFCURVE",
"126 133 OFFCURVE",
"126 253 CURVE SMOOTH",
"126 368 OFFCURVE",
"168 445 OFFCURVE",
"265 445 CURVE SMOOTH",
"362 445 OFFCURVE",
"403 369 OFFCURVE",
"403 253 CURVE SMOOTH",
"403 133 OFFCURVE",
"358 63 OFFCURVE",
"265 63 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
66 65 50 49 1 0 71 70 65 75 66 75 58 56 49 64 50 64 44 42 34 32 28 26 20 18 15 13 9 7 0 48 1 48 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 0 10 0 1 3 10 1 1 0 38 13 9 2 8 8 0 1 0 36 6 11 2 0 0 20 31 12 7 2 2 2 4 1 0 36 5 1 4 4 18 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 0 10 0 1 3 10 1 1 0 38 13 9 2 8 8 0 1 0 36 6 11 2 0 0 20 31 12 7 2 2 2 4 1 0 36 5 1 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 0 10 0 1 3 10 1 1 0 38 13 1 9 9 0 1 0 36 6 11 2 0 0 20 31 0 8 8 0 1 0 36 6 11 2 0 0 20 31 12 7 2 2 2 4 1 0 36 5 1 4 4 21 4 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 13 1 9 8 0 9 1 0 35 6 11 2 0 0 8 10 0 8 1 0 38 0 10 0 1 3 10 1 1 0 38 12 7 2 2 2 4 1 0 36 5 1 4 4 21 4 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 13 1 9 8 0 9 1 0 35 6 11 2 0 0 8 10 0 8 1 0 38 0 10 0 1 3 10 1 1 0 38 12 7 2 2 4 4 2 1 0 35 12 7 2 2 2 4 1 0 36 5 1 4 2 4 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 13 1 9 8 0 9 1 0 35 6 11 2 0 0 8 10 0 8 1 0 38 0 10 0 1 3 10 1 1 0 38 0 2 7 4 2 1 0 35 12 1 7 4 4 7 1 0 35 12 1 7 7 4 1 0 36 5 1 4 7 4 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
46 1 10 8 30 22 2 2 3 2 30 0 3 1 2 1 3 2 50 11 1 0 13 1 9 8 0 9 1 0 38 0 6 0 8 10 6 8 1 0 38 0 10 0 1 3 10 1 1 0 38 0 2 7 4 2 1 0 35 12 1 7 0 5 4 7 5 1 0 38 0 2 2 4 1 0 36 0 4 2 4 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 885;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = oe;
rightKerningGroup = e;
rightMetricsKey = e;
unicode = 0153;
},
{
glyphname = p;
layers = (
{
anchors = (
{
name = bottom;
position = "{286, 0}";
},
{
name = top;
position = "{286, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, -180}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, -180}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 -180 LINE",
"125 82 LINE",
"162 23 OFFCURVE",
"216 -6 OFFCURVE",
"288 -6 CURVE SMOOTH",
"429 -6 OFFCURVE",
"503 105 OFFCURVE",
"503 248 CURVE SMOOTH",
"503 419 OFFCURVE",
"434 498 OFFCURVE",
"307 498 CURVE SMOOTH",
"232 498 OFFCURVE",
"169 457 OFFCURVE",
"125 389 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 -180 LINE"
);
},
{
closed = 1;
nodes = (
"219 4 OFFCURVE",
"168 29 OFFCURVE",
"125 98 CURVE",
"125 373 LINE",
"170 445 OFFCURVE",
"235 488 OFFCURVE",
"307 488 CURVE SMOOTH",
"428 488 OFFCURVE",
"491 411 OFFCURVE",
"491 248 CURVE SMOOTH",
"491 110 OFFCURVE",
"424 4 OFFCURVE",
"288 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
32 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
position = "{332, 0}";
},
{
name = top;
position = "{332, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, -165}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, -165}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 -165 LINE",
"258 35 LINE",
"289 8 OFFCURVE",
"323 -8 OFFCURVE",
"376 -8 CURVE SMOOTH",
"511 -8 OFFCURVE",
"598 112 OFFCURVE",
"598 264 CURVE SMOOTH",
"598 419 OFFCURVE",
"527 529 OFFCURVE",
"410 529 CURVE SMOOTH",
"342 529 OFFCURVE",
"290 499 OFFCURVE",
"249 455 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 -165 LINE"
);
},
{
closed = 1;
nodes = (
"310 106 OFFCURVE",
"282 116 OFFCURVE",
"258 141 CURVE",
"258 361 LINE",
"286 394 OFFCURVE",
"310 410 OFFCURVE",
"356 410 CURVE SMOOTH",
"413 410 OFFCURVE",
"438 360 OFFCURVE",
"438 264 CURVE SMOOTH",
"438 161 OFFCURVE",
"404 106 OFFCURVE",
"339 106 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
27 26 0 0 36 34 26 44 27 44 0 25 0 25 22 20 12 10 3 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
6 1 4 0 32 31 2 5 4 24 1 2 5 3 30 7 1 4 0 5 0 4 5 50 1 1 0 0 14 31 0 5 5 2 1 2 36 0 2 2 18 31 6 1 3 3 16 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
6 1 4 0 32 31 2 5 4 24 1 2 5 3 30 7 1 4 0 5 0 4 5 50 0 1 1 20 31 0 0 0 14 31 0 5 5 2 1 2 36 0 2 2 18 31 6 1 3 3 16 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
6 1 4 0 32 31 2 5 4 24 1 2 5 3 30 7 1 4 0 5 0 4 5 50 0 1 1 20 31 0 5 5 2 1 2 36 0 2 2 18 31 6 1 3 3 0 1 0 36 0 0 0 14 3 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
6 1 4 0 32 31 2 5 4 24 1 2 5 3 30 0 1 0 1 52 7 1 4 0 5 0 4 5 50 0 0 4 3 0 1 0 35 0 5 0 2 3 5 2 1 2 38 0 0 0 3 0 0 36 6 1 3 0 3 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 617;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = top;
position = "{303, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, -172}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, -172}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 -172 LINE",
"189 53 LINE",
"224 14 OFFCURVE",
"265 -7 OFFCURVE",
"328 -7 CURVE SMOOTH",
"466 -7 OFFCURVE",
"547 110 OFFCURVE",
"547 257 CURVE SMOOTH",
"547 414 OFFCURVE",
"479 516 OFFCURVE",
"355 516 CURVE SMOOTH",
"283 516 OFFCURVE",
"228 481 OFFCURVE",
"185 428 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 -172 LINE"
);
},
{
closed = 1;
nodes = (
"260 62 OFFCURVE",
"222 78 OFFCURVE",
"189 122 CURVE",
"189 367 LINE",
"226 416 OFFCURVE",
"267 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"413 444 OFFCURVE",
"455 379 OFFCURVE",
"455 257 CURVE SMOOTH",
"455 132 OFFCURVE",
"403 62 OFFCURVE",
"308 62 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 31 29 23 37 24 37 0 22 0 22 19 17 9 7 3 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 7 1 4 4 0 1 0 36 1 1 0 0 14 31 0 5 5 2 1 0 36 0 2 2 18 31 6 1 3 3 16 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 7 1 4 4 0 1 0 36 1 1 0 0 14 31 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 16 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 0 0 0 14 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 16 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 0 1 0 36 0 0 0 14 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 0 1 7 1 4 5 1 4 1 0 38 0 0 6 1 3 0 3 0 0 37 0 5 5 2 1 0 36 0 2 2 21 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
27 26 5 3 5 4 21 1 2 5 2 30 0 0 4 3 0 1 0 35 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 3 5 2 1 0 38 0 0 0 3 0 0 36 6 1 3 0 3 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
leftMetricsKey = n;
note = p;
rightKerningGroup = b;
rightMetricsKey = o;
unicode = 0070;
},
{
glyphname = phook;
layers = (
{
anchors = (
{
name = bottom;
position = "{286, 0}";
},
{
name = top;
position = "{286, 490}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, -180}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, -180}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 -180 LINE",
"125 82 LINE",
"162 23 OFFCURVE",
"216 -6 OFFCURVE",
"288 -6 CURVE SMOOTH",
"429 -6 OFFCURVE",
"503 105 OFFCURVE",
"503 248 CURVE SMOOTH",
"503 419 OFFCURVE",
"434 498 OFFCURVE",
"307 498 CURVE SMOOTH",
"232 498 OFFCURVE",
"169 457 OFFCURVE",
"125 389 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 -180 LINE"
);
},
{
closed = 1;
nodes = (
"219 4 OFFCURVE",
"168 29 OFFCURVE",
"125 98 CURVE",
"125 373 LINE",
"170 445 OFFCURVE",
"235 488 OFFCURVE",
"307 488 CURVE SMOOTH",
"428 488 OFFCURVE",
"491 411 OFFCURVE",
"491 248 CURVE SMOOTH",
"491 110 OFFCURVE",
"424 4 OFFCURVE",
"288 4 CURVE SMOOTH"
);
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = top;
position = "{303, 507}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, -172}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, -172}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 -172 LINE",
"189 53 LINE",
"224 14 OFFCURVE",
"265 -7 OFFCURVE",
"328 -7 CURVE SMOOTH",
"466 -7 OFFCURVE",
"547 110 OFFCURVE",
"547 257 CURVE SMOOTH",
"547 414 OFFCURVE",
"479 516 OFFCURVE",
"355 516 CURVE SMOOTH",
"283 516 OFFCURVE",
"228 481 OFFCURVE",
"189 434 CURVE",
"177 488 LINE",
"174 501 OFFCURVE",
"166 507 OFFCURVE",
"153 507 CURVE SMOOTH",
"100 507 LINE",
"100 -172 LINE"
);
},
{
closed = 1;
nodes = (
"260 62 OFFCURVE",
"222 78 OFFCURVE",
"189 122 CURVE",
"189 367 LINE",
"226 416 OFFCURVE",
"267 444 OFFCURVE",
"326 444 CURVE SMOOTH",
"413 444 OFFCURVE",
"455 379 OFFCURVE",
"455 257 CURVE SMOOTH",
"455 132 OFFCURVE",
"403 62 OFFCURVE",
"308 62 CURVE SMOOTH"
);
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
position = "{332, 0}";
},
{
name = top;
position = "{332, 519}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, -165}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, -165}";
},
{
name = hookright_lowercase_part;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 -165 LINE",
"258 35 LINE",
"289 8 OFFCURVE",
"323 -8 OFFCURVE",
"376 -8 CURVE SMOOTH",
"511 -8 OFFCURVE",
"598 112 OFFCURVE",
"598 264 CURVE SMOOTH",
"598 419 OFFCURVE",
"527 529 OFFCURVE",
"410 529 CURVE SMOOTH",
"342 529 OFFCURVE",
"290 499 OFFCURVE",
"258 464 CURVE",
"237 493 LINE SMOOTH",
"232 510 OFFCURVE",
"219 519 OFFCURVE",
"199 519 CURVE SMOOTH",
"103 519 LINE",
"103 -165 LINE"
);
},
{
closed = 1;
nodes = (
"310 106 OFFCURVE",
"282 116 OFFCURVE",
"258 141 CURVE",
"258 361 LINE",
"286 394 OFFCURVE",
"310 410 OFFCURVE",
"356 410 CURVE SMOOTH",
"413 410 OFFCURVE",
"438 360 OFFCURVE",
"438 264 CURVE SMOOTH",
"438 161 OFFCURVE",
"404 106 OFFCURVE",
"339 106 CURVE SMOOTH"
);
}
);
width = 617;
}
);
leftMetricsKey = p;
rightMetricsKey = p;
unicode = 01A5;
},
{
glyphname = thorn;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"43 82 LINE",
"80 23 OFFCURVE",
"134 -6 OFFCURVE",
"206 -6 CURVE SMOOTH",
"347 -6 OFFCURVE",
"421 105 OFFCURVE",
"421 248 CURVE SMOOTH",
"421 419 OFFCURVE",
"352 498 OFFCURVE",
"225 498 CURVE SMOOTH",
"152 498 OFFCURVE",
"87 456 OFFCURVE",
"43 389 CURVE",
"43 720 LINE",
"31 720 LINE",
"31 -180 LINE",
"43 -180 LINE",
"43 -180 LINE"
);
},
{
closed = 1;
nodes = (
"225 488 LINE",
"346 488 OFFCURVE",
"409 411 OFFCURVE",
"409 248 CURVE SMOOTH",
"409 110 OFFCURVE",
"342 4 OFFCURVE",
"206 4 CURVE SMOOTH",
"137 4 OFFCURVE",
"86 29 OFFCURVE",
"43 98 CURVE",
"43 373 LINE",
"88 445 OFFCURVE",
"153 488 OFFCURVE",
"225 488 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
17 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 462;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"181 44 LINE",
"211 11 OFFCURVE",
"247 -8 OFFCURVE",
"299 -8 CURVE SMOOTH",
"434 -8 OFFCURVE",
"521 112 OFFCURVE",
"521 264 CURVE SMOOTH",
"521 419 OFFCURVE",
"450 527 OFFCURVE",
"333 527 CURVE SMOOTH",
"268 527 OFFCURVE",
"220 501 OFFCURVE",
"181 464 CURVE",
"181 749 LINE",
"26 749 LINE",
"26 -165 LINE",
"181 -165 LINE",
"181 -165 LINE"
);
},
{
closed = 1;
nodes = (
"279 410 LINE",
"336 410 OFFCURVE",
"361 360 OFFCURVE",
"361 264 CURVE SMOOTH",
"361 161 OFFCURVE",
"327 106 OFFCURVE",
"262 106 CURVE SMOOTH",
"233 106 OFFCURVE",
"205 116 OFFCURVE",
"181 141 CURVE",
"181 361 LINE",
"209 394 OFFCURVE",
"233 410 OFFCURVE",
"279 410 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 33 31 23 41 24 41 0 22 0 22 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
3 1 4 1 29 28 2 5 4 21 1 2 5 3 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 18 31 6 1 3 3 16 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
3 1 4 1 29 28 2 5 4 21 1 2 5 3 30 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 18 31 6 1 3 3 0 0 0 36 0 0 0 13 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
3 1 4 1 29 28 2 5 4 21 1 2 5 3 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 3 5 2 1 0 38 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
3 1 4 1 29 28 2 5 4 21 1 2 5 3 30 0 0 1 3 0 0 0 35 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 3 5 2 1 0 38 0 0 0 3 0 0 36 6 1 3 0 3 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 540;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"117 59 LINE",
"152 18 OFFCURVE",
"193 -7 OFFCURVE",
"256 -7 CURVE SMOOTH",
"394 -7 OFFCURVE",
"475 110 OFFCURVE",
"475 257 CURVE SMOOTH",
"475 416 OFFCURVE",
"407 515 OFFCURVE",
"283 515 CURVE SMOOTH",
"214 515 OFFCURVE",
"160 482 OFFCURVE",
"117 433 CURVE",
"117 737 LINE",
"28 737 LINE",
"28 -172 LINE",
"117 -172 LINE",
"117 -172 LINE"
);
},
{
closed = 1;
nodes = (
"254 444 LINE",
"341 444 OFFCURVE",
"383 379 OFFCURVE",
"383 257 CURVE SMOOTH",
"383 132 OFFCURVE",
"331 62 OFFCURVE",
"236 62 CURVE SMOOTH",
"188 62 OFFCURVE",
"150 78 OFFCURVE",
"117 122 CURVE",
"117 367 LINE",
"154 416 OFFCURVE",
"195 444 OFFCURVE",
"254 444 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
22 21 0 0 29 27 21 35 22 35 0 20 0 20 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 18 31 6 1 3 3 16 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 0 0 0 13 31 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 16 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 7 1 4 4 1 1 0 36 0 1 1 20 31 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 0 0 0 36 0 0 0 13 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 0 1 7 1 4 5 1 4 1 0 38 0 5 5 2 1 0 36 0 2 2 21 31 6 1 3 3 0 0 0 36 0 0 0 13 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 3 5 2 1 0 38 6 1 3 3 0 0 0 36 0 0 0 13 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
25 24 3 3 5 4 19 1 2 5 2 30 0 0 1 3 0 0 0 35 0 1 7 1 4 5 1 4 1 0 38 0 5 0 2 3 5 2 1 0 38 0 0 0 3 0 0 36 6 1 3 0 3 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
leftMetricsKey = n;
note = thorn;
rightKerningGroup = b;
rightMetricsKey = o;
unicode = 00FE;
},
{
glyphname = q;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 419, -180}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 431, -180}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"431 -180 LINE",
"431 463 LINE",
"388 492 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"115 498 OFFCURVE",
"41 387 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 73 OFFCURVE",
"110 -6 OFFCURVE",
"237 -6 CURVE SMOOTH",
"309 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"419 -180 LINE"
);
},
{
closed = 1;
nodes = (
"116 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 382 OFFCURVE",
"120 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"325 488 OFFCURVE",
"375 482 OFFCURVE",
"419 459 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"308 4 OFFCURVE",
"237 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
2 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 535;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 359, -165}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 514, -165}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"514 -165 LINE",
"514 502 LINE",
"448 526 OFFCURVE",
"355 530 OFFCURVE",
"295 530 CURVE SMOOTH",
"94 530 OFFCURVE",
"19 410 OFFCURVE",
"19 257 CURVE SMOOTH",
"19 103 OFFCURVE",
"90 -6 OFFCURVE",
"207 -6 CURVE SMOOTH",
"272 -6 OFFCURVE",
"320 20 OFFCURVE",
"359 57 CURVE",
"359 -165 LINE"
);
},
{
closed = 1;
nodes = (
"204 111 OFFCURVE",
"179 161 OFFCURVE",
"179 257 CURVE SMOOTH",
"179 360 OFFCURVE",
"213 416 OFFCURVE",
"278 416 CURVE SMOOTH",
"307 416 OFFCURVE",
"322 416 OFFCURVE",
"359 406 CURVE",
"359 160 LINE",
"331 127 OFFCURVE",
"307 111 OFFCURVE",
"261 111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
26 25 0 0 35 33 25 43 26 43 0 24 0 23 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
21 1 5 2 31 30 2 4 5 3 1 1 4 3 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 6 1 3 3 14 31 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 3 1 0 36 6 1 3 3 14 0 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 6 1 3 5 0 3 1 0 35 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 0 4 1 1 0 38 6 1 3 3 0 0 0 36 0 0 3 0 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 380, -172}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 469, -172}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"479 -172 LINE",
"480 490 LINE",
"410 508 OFFCURVE",
"346 517 OFFCURVE",
"282 517 CURVE SMOOTH",
"105 517 OFFCURVE",
"34 406 OFFCURVE",
"34 246 CURVE SMOOTH",
"34 98 OFFCURVE",
"102 -6 OFFCURVE",
"225 -6 CURVE SMOOTH",
"295 -6 OFFCURVE",
"350 27 OFFCURVE",
"391 75 CURVE",
"390 -172 LINE"
);
},
{
closed = 1;
nodes = (
"167 65 OFFCURVE",
"126 129 OFFCURVE",
"126 249 CURVE SMOOTH",
"126 384 OFFCURVE",
"177 448 OFFCURVE",
"283 448 CURVE SMOOTH",
"317 448 OFFCURVE",
"351 442 OFFCURVE",
"391 432 CURVE",
"391 142 LINE",
"355 93 OFFCURVE",
"312 65 OFFCURVE",
"255 65 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 31 29 23 37 24 37 0 22 0 21 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 6 1 3 3 14 31 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 16 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 3 1 0 36 6 1 3 3 14 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 0 2 0 5 4 2 5 1 0 38 6 1 3 0 0 3 0 0 0 37 7 1 4 4 1 1 0 36 0 1 1 21 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 6 1 3 5 0 3 1 0 35 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 0 4 1 1 0 38 6 1 3 3 0 0 0 36 0 0 3 0 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "0AE511FD-BDFC-4FD7-8A16-66DECC27C472";
name = "Jan 27 23, 14:22";
paths = (
{
closed = 1;
nodes = (
"404.667 519 OFFCURVE",
"392 510.333 OFFCURVE",
"386 493 CURVE SMOOTH",
"380 472 LINE",
"343.729 508.271 OFFCURVE",
"307.332 529 OFFCURVE",
"247 529 CURVE SMOOTH",
"112.391 529 OFFCURVE",
"25 409.177 OFFCURVE",
"25 258 CURVE SMOOTH",
"25 102.208 OFFCURVE",
"98.268 -8 OFFCURVE",
"213 -8 CURVE SMOOTH",
"279.667 -8 OFFCURVE",
"326.333 18.333 OFFCURVE",
"365 57 CURVE",
"365 -165 LINE",
"520 -165 LINE",
"520 519 LINE",
"424 519 LINE",
"424 519 LINE"
);
},
{
closed = 1;
nodes = (
"267 111 LINE",
"211.439 111 OFFCURVE",
"185 162.242 OFFCURVE",
"185 258 CURVE SMOOTH",
"185 359.025 OFFCURVE",
"219.754 415 OFFCURVE",
"284 415 CURVE SMOOTH",
"314.667 415 OFFCURVE",
"341 405.333 OFFCURVE",
"365 380 CURVE",
"365 160 LINE",
"339.349 129.218 OFFCURVE",
"310.972 111 OFFCURVE",
"267 111 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
26 25 0 0 35 33 25 43 26 43 0 24 0 23 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
21 1 5 2 31 30 2 4 5 3 1 1 4 3 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 6 1 3 3 14 31 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 3 1 0 36 6 1 3 3 14 0 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
21 1 5 3 31 30 2 4 5 3 1 1 4 3 30 6 1 3 5 0 3 1 0 35 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 0 4 1 1 0 38 6 1 3 3 0 0 0 36 0 0 3 0 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "DECD0081-66BB-48B3-9453-D21E5BFB7E51";
name = "Jan 27 23, 14:24";
paths = (
{
closed = 1;
nodes = (
"417.333 507 OFFCURVE",
"409.333 500.667 OFFCURVE",
"406 488 CURVE",
"400 449 LINE",
"364 491.667 OFFCURVE",
"320.333 516 OFFCURVE",
"255 516 CURVE SMOOTH",
"117.743 516 OFFCURVE",
"36 398.7 OFFCURVE",
"36 252 CURVE SMOOTH",
"36 94.579 OFFCURVE",
"103.552 -7 OFFCURVE",
"228 -7 CURVE SMOOTH",
"297.333 -7 OFFCURVE",
"351.333 25.667 OFFCURVE",
"394 75 CURVE",
"394 -172 LINE",
"483 -172 LINE",
"483 507 LINE",
"430 507 LINE",
"430 507 LINE"
);
},
{
closed = 1;
nodes = (
"257 65 LINE",
"167.971 65 OFFCURVE",
"128 129.58 OFFCURVE",
"128 252 CURVE SMOOTH",
"128 376 OFFCURVE",
"180.333 446 OFFCURVE",
"275 446 CURVE SMOOTH",
"323 446 OFFCURVE",
"362 429.667 OFFCURVE",
"394 387 CURVE",
"394 142 LINE",
"356.667 92.667 OFFCURVE",
"315.667 65 OFFCURVE",
"257 65 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 23 0 0 31 29 23 37 24 37 0 22 0 21 17 15 7 5 2 1 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 18 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
19 1 5 2 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 6 3 2 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 6 1 3 3 14 31 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 16 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 0 5 5 2 1 0 36 0 2 2 20 31 7 1 4 4 1 1 0 36 0 1 1 21 31 0 0 0 3 1 0 36 6 1 3 3 14 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 0 2 0 5 4 2 5 1 0 38 6 1 3 0 0 3 0 0 0 37 7 1 4 4 1 1 0 36 0 1 1 21 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
19 1 5 3 27 26 3 3 4 5 2 30 6 1 3 5 0 3 1 0 35 0 2 0 5 4 2 5 1 0 38 7 1 4 0 1 0 4 1 1 0 38 6 1 3 3 0 0 0 36 0 0 3 0 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "DD3BF4A5-9379-4F51-BA4A-E4F1710886CC";
name = "Jan 27 23, 14:25";
paths = (
{
closed = 1;
nodes = (
"432.333 490 OFFCURVE",
"430 487.333 OFFCURVE",
"430 482 CURVE SMOOTH",
"428 410 LINE",
"390.667 470 OFFCURVE",
"337 498 OFFCURVE",
"265 498 CURVE SMOOTH",
"124.089 498 OFFCURVE",
"50 388.048 OFFCURVE",
"50 244 CURVE SMOOTH",
"50 74.667 OFFCURVE",
"119.333 -6 OFFCURVE",
"246 -6 CURVE SMOOTH",
"320.667 -6 OFFCURVE",
"384 36.333 OFFCURVE",
"428 103 CURVE",
"428 -180 LINE",
"440 -180 LINE",
"440 490 LINE",
"437 490 LINE",
"437 490 LINE"
);
},
{
closed = 1;
nodes = (
"246 4 LINE",
"126 4 OFFCURVE",
"62 81.333 OFFCURVE",
"62 244 CURVE SMOOTH",
"62 383.486 OFFCURVE",
"129.901 488 OFFCURVE",
"265 488 CURVE SMOOTH",
"334.333 488 OFFCURVE",
"388 460.333 OFFCURVE",
"428 395 CURVE",
"428 119 LINE",
"382.667 47 OFFCURVE",
"319.333 4 OFFCURVE",
"246 4 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
2 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 535;
}
);
leftKerningGroup = c;
leftMetricsKey = o;
note = q;
rightKerningGroup = q;
rightMetricsKey = n;
unicode = 0071;
},
{
glyphname = qhooktail;
layers = (
{
components = (
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"431 -58 LINE",
"431 463 LINE",
"388 492 OFFCURVE",
"328 498 OFFCURVE",
"256 498 CURVE SMOOTH",
"115 498 OFFCURVE",
"41 387 OFFCURVE",
"41 244 CURVE SMOOTH",
"41 73 OFFCURVE",
"110 -6 OFFCURVE",
"237 -6 CURVE SMOOTH",
"309 -6 OFFCURVE",
"375 36 OFFCURVE",
"419 103 CURVE",
"419 -58 LINE"
);
},
{
closed = 1;
nodes = (
"116 4 OFFCURVE",
"53 81 OFFCURVE",
"53 244 CURVE SMOOTH",
"53 382 OFFCURVE",
"120 488 OFFCURVE",
"256 488 CURVE SMOOTH",
"325 488 OFFCURVE",
"375 482 OFFCURVE",
"419 459 CURVE",
"419 119 LINE",
"374 47 OFFCURVE",
"308 4 OFFCURVE",
"237 4 CURVE SMOOTH"
);
}
);
width = 535;
},
{
components = (
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 390, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"479 -34 LINE",
"480 490 LINE",
"410 508 OFFCURVE",
"346 517 OFFCURVE",
"282 517 CURVE SMOOTH",
"105 517 OFFCURVE",
"34 406 OFFCURVE",
"34 246 CURVE SMOOTH",
"34 98 OFFCURVE",
"102 -6 OFFCURVE",
"225 -6 CURVE SMOOTH",
"295 -6 OFFCURVE",
"350 27 OFFCURVE",
"391 75 CURVE",
"390 -27 LINE"
);
},
{
closed = 1;
nodes = (
"167 65 OFFCURVE",
"126 129 OFFCURVE",
"126 249 CURVE SMOOTH",
"126 384 OFFCURVE",
"177 448 OFFCURVE",
"283 448 CURVE SMOOTH",
"317 448 OFFCURVE",
"351 442 OFFCURVE",
"391 432 CURVE",
"391 142 LINE",
"355 93 OFFCURVE",
"312 65 OFFCURVE",
"255 65 CURVE SMOOTH"
);
}
);
width = 554;
},
{
components = (
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"514 -15 LINE",
"514 502 LINE",
"448 526 OFFCURVE",
"355 530 OFFCURVE",
"295 530 CURVE SMOOTH",
"94 530 OFFCURVE",
"19 410 OFFCURVE",
"19 257 CURVE SMOOTH",
"19 103 OFFCURVE",
"90 -6 OFFCURVE",
"207 -6 CURVE SMOOTH",
"272 -6 OFFCURVE",
"320 20 OFFCURVE",
"359 57 CURVE",
"359 -3 LINE"
);
},
{
closed = 1;
nodes = (
"204 111 OFFCURVE",
"179 161 OFFCURVE",
"179 257 CURVE SMOOTH",
"179 360 OFFCURVE",
"213 416 OFFCURVE",
"278 416 CURVE SMOOTH",
"307 416 OFFCURVE",
"322 416 OFFCURVE",
"359 406 CURVE",
"359 160 LINE",
"331 127 OFFCURVE",
"307 111 OFFCURVE",
"261 111 CURVE SMOOTH"
);
}
);
width = 611;
}
);
leftMetricsKey = q;
unicode = 024B;
},
{
color = 4;
glyphname = r;
layers = (
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = top;
position = "{221, 490}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 322 LINE",
"157 427 OFFCURVE",
"208 487 OFFCURVE",
"295 487 CURVE SMOOTH",
"327 487 OFFCURVE",
"357 475 OFFCURVE",
"369 471 CURVE SMOOTH",
"372 470 OFFCURVE",
"375 472 OFFCURVE",
"377 475 CURVE SMOOTH",
"379 479 LINE",
"354 491 OFFCURVE",
"327 498 OFFCURVE",
"295 498 CURVE SMOOTH",
"206 498 OFFCURVE",
"151 441 OFFCURVE",
"125 346 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 398;
},
{
anchors = (
{
name = bottom;
position = "{195, 0}";
},
{
name = top;
position = "{250, 519}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 318 LINE",
"281 361 OFFCURVE",
"313 383 OFFCURVE",
"354 383 CURVE SMOOTH",
"372 383 OFFCURVE",
"399 379 OFFCURVE",
"403 379 CURVE SMOOTH",
"416 379 OFFCURVE",
"424 383 OFFCURVE",
"427 398 CURVE SMOOTH",
"447 512 LINE",
"433 523 OFFCURVE",
"414 529 OFFCURVE",
"390 529 CURVE SMOOTH",
"334 529 OFFCURVE",
"286 493 OFFCURVE",
"249 434 CURVE",
"240 482 LINE SMOOTH",
"235 509 OFFCURVE",
"226 519 OFFCURVE",
"195 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 21 19 18 16 12 10 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
13 8 2 2 0 22 1 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
52 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
13 8 2 2 0 22 1 4 2 2 30 0 0 0 14 31 3 1 2 2 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 450;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "2618205A-D49A-4287-9E9A-E1DB8A7112AE";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"368 444 OFFCURVE",
"377 452 OFFCURVE",
"380 462 CURVE SMOOTH",
"389 487 LINE",
"367 499 OFFCURVE",
"338 506 OFFCURVE",
"312 506 CURVE SMOOTH",
"234 506 OFFCURVE",
"182 460 OFFCURVE",
"149 377 CURVE",
"145 483 LINE",
"145 489 OFFCURVE",
"143 493 OFFCURVE",
"141 495 CURVE SMOOTH",
"139 497 OFFCURVE",
"135 498 OFFCURVE",
"129 498 CURVE",
"104 498 LINE",
"104 459 LINE",
"104 40 LINE",
"104 0 LINE",
"151 0 LINE",
"151 40 LINE",
"151 323 LINE",
"179 406 OFFCURVE",
"225 459 OFFCURVE",
"303 459 CURVE SMOOTH",
"329 459 OFFCURVE",
"344 453 OFFCURVE",
"357 448 CURVE"
);
},
{
closed = 1;
nodes = (
"120 459 LINE",
"120 498 LINE",
"105 498 LINE",
"32 498 LINE",
"32 479 LINE SMOOTH",
"32 466 OFFCURVE",
"39 462 OFFCURVE",
"51 461 CURVE",
"105 459 LINE"
);
},
{
closed = 1;
nodes = (
"223 0 LINE",
"223 20 LINE SMOOTH",
"223 33 OFFCURVE",
"216 37 OFFCURVE",
"204 38 CURVE",
"141 40 LINE",
"114 40 LINE",
"51 38 LINE",
"39 37 OFFCURVE",
"32 33 OFFCURVE",
"32 20 CURVE SMOOTH",
"32 0 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 392;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "4644883A-15B5-4E0F-93F4-3D9E603A3E17";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"184 403 LINE",
"178 482 LINE",
"176 491 OFFCURVE",
"174 497 OFFCURVE",
"170 501 CURVE SMOOTH",
"166 505 OFFCURVE",
"161 506 OFFCURVE",
"151 506 CURVE SMOOTH",
"100 506 LINE",
"28 506 LINE",
"28 464 LINE SMOOTH",
"28 454 OFFCURVE",
"33 447 OFFCURVE",
"43 445 CURVE",
"49 443 OFFCURVE",
"68 439 OFFCURVE",
"100 433 CURVE",
"100 72 LINE",
"43 61 LINE SMOOTH",
"33 59 OFFCURVE",
"28 52 OFFCURVE",
"28 42 CURVE SMOOTH",
"28 0 LINE",
"261 0 LINE",
"261 42 LINE SMOOTH",
"261 52 OFFCURVE",
"256 59 OFFCURVE",
"246 61 CURVE SMOOTH",
"216 67 OFFCURVE",
"197 70 OFFCURVE",
"189 72 CURVE",
"189 322 LINE",
"217 392 OFFCURVE",
"261 428 OFFCURVE",
"319 428 CURVE SMOOTH",
"337 428 OFFCURVE",
"350 426 OFFCURVE",
"360 423 CURVE SMOOTH",
"370 420 OFFCURVE",
"378 418 OFFCURVE",
"384 418 CURVE SMOOTH",
"390 418 OFFCURVE",
"395 423 OFFCURVE",
"397 431 CURVE",
"408 498 LINE",
"388 510 OFFCURVE",
"365 516 OFFCURVE",
"339 516 CURVE SMOOTH",
"273 516 OFFCURVE",
"222 478 OFFCURVE",
"185 403 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 22 0 22 19 17 16 14 10 8 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 1 2 0 21 6 2 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 4 15 4 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 403;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "5738ACDD-924F-491A-9418-65FAE2471088";
name = "Jan 15 23, 17:52";
paths = (
{
closed = 1;
nodes = (
"332 522 OFFCURVE",
"305 513 OFFCURVE",
"280 495 CURVE SMOOTH",
"255 477 OFFCURVE",
"234 452 OFFCURVE",
"216 420 CURVE",
"208 482 LINE",
"206 493 OFFCURVE",
"203 501 OFFCURVE",
"198 506 CURVE SMOOTH",
"193 511 OFFCURVE",
"185 513 OFFCURVE",
"172 513 CURVE SMOOTH",
"99 513 LINE",
"99 513 LINE",
"24 513 LINE",
"24 454 LINE SMOOTH",
"24 437 OFFCURVE",
"32 427 OFFCURVE",
"49 423 CURVE",
"57 422 OFFCURVE",
"56 422 OFFCURVE",
"99 414 CURVE",
"99 99 LINE",
"56 91 OFFCURVE",
"57 91 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 76 OFFCURVE",
"24 59 CURVE SMOOTH",
"24 0 LINE",
"99 0 LINE",
"223 0 LINE",
"223 0 LINE",
"298 0 LINE",
"298 59 LINE SMOOTH",
"298 76 OFFCURVE",
"290 86 OFFCURVE",
"273 90 CURVE",
"265 91 OFFCURVE",
"266 91 OFFCURVE",
"223 99 CURVE",
"223 319 LINE",
"236 346 OFFCURVE",
"251 368 OFFCURVE",
"269 382 CURVE SMOOTH",
"287 396 OFFCURVE",
"309 403 OFFCURVE",
"335 403 CURVE SMOOTH",
"349 403 OFFCURVE",
"361 401 OFFCURVE",
"370 399 CURVE SMOOTH",
"379 397 OFFCURVE",
"385 396 OFFCURVE",
"390 396 CURVE SMOOTH",
"396 396 OFFCURVE",
"401 398 OFFCURVE",
"404 400 CURVE SMOOTH",
"407 402 OFFCURVE",
"409 406 OFFCURVE",
"410 412 CURVE SMOOTH",
"426 505 LINE",
"409 517 OFFCURVE",
"388 522 OFFCURVE",
"363 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 21 19 18 16 12 10 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
13 8 2 2 0 22 1 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
52 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
13 8 2 2 0 22 1 4 2 2 30 0 0 0 14 31 3 1 2 2 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 413;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "83947DAA-8573-4F2E-8174-7B5A961BAE2A";
name = "Jan 30 23, 15:52";
paths = (
{
closed = 1;
nodes = (
"100 0 LINE",
"100 322 LINE",
"132 427.333 OFFCURVE",
"183.333 487 OFFCURVE",
"270 487 CURVE SMOOTH",
"307 487 OFFCURVE",
"342 471 OFFCURVE",
"347 471 CURVE SMOOTH",
"349 471 OFFCURVE",
"351 472 OFFCURVE",
"354 479 CURVE",
"328.667 491 OFFCURVE",
"302 498 OFFCURVE",
"270 498 CURVE SMOOTH",
"181.112 498 OFFCURVE",
"125.804 441.475 OFFCURVE",
"100 346 CURVE",
"98 482 LINE SMOOTH",
"98 487 OFFCURVE",
"95.667 490 OFFCURVE",
"91 490 CURVE SMOOTH",
"88 490 LINE",
"88 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 392;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "F9DBB204-A634-44E6-8D5D-B853FA7FC8C4";
name = "Jan 30 23, 15:53";
paths = (
{
closed = 1;
nodes = (
"162 0 LINE",
"162 323 LINE",
"190 391 OFFCURVE",
"230.667 428 OFFCURVE",
"292 428 CURVE SMOOTH",
"330 428 OFFCURVE",
"345 419 OFFCURVE",
"354 419 CURVE SMOOTH",
"372 419 OFFCURVE",
"370 431 OFFCURVE",
"381 498 CURVE",
"362.333 508.667 OFFCURVE",
"340 516 OFFCURVE",
"312 516 CURVE SMOOTH",
"242.667 516 OFFCURVE",
"192.667 473.667 OFFCURVE",
"158 403 CURVE",
"152 482 LINE SMOOTH",
"151 501 OFFCURVE",
"144 507 OFFCURVE",
"124 507 CURVE SMOOTH",
"73 507 LINE",
"73 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 22 0 22 19 17 16 14 10 8 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 1 2 0 21 6 2 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 4 15 4 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 403;
},
{
anchors = (
{
name = bottom;
position = "{147, 0}";
},
{
name = top;
position = "{229, 507}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 323 LINE",
"217 391 OFFCURVE",
"258 428 OFFCURVE",
"319 428 CURVE SMOOTH",
"339 428 OFFCURVE",
"371 419 OFFCURVE",
"381 419 CURVE SMOOTH",
"389 419 OFFCURVE",
"396 423 OFFCURVE",
"397 431 CURVE SMOOTH",
"408 498 LINE",
"389 509 OFFCURVE",
"367 516 OFFCURVE",
"339 516 CURVE SMOOTH",
"270 516 OFFCURVE",
"220 474 OFFCURVE",
"185 403 CURVE",
"179 482 LINE SMOOTH",
"178 501 OFFCURVE",
"171 507 OFFCURVE",
"151 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 22 0 22 19 17 16 14 10 8 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 1 2 0 21 6 2 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 4 15 4 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 422;
},
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = top;
position = "{221, 490}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
}
);
layerId = "101D8A22-C301-4BBD-9F98-07F42776ED3A";
name = italic;
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 322 LINE",
"157 427 OFFCURVE",
"208 487 OFFCURVE",
"295 487 CURVE SMOOTH",
"327 487 OFFCURVE",
"357 475 OFFCURVE",
"369 471 CURVE SMOOTH",
"372 470 OFFCURVE",
"375 472 OFFCURVE",
"377 475 CURVE SMOOTH",
"379 479 LINE",
"354 491 OFFCURVE",
"327 498 OFFCURVE",
"295 498 CURVE SMOOTH",
"206 498 OFFCURVE",
"151 441 OFFCURVE",
"125 346 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 0 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 398;
},
{
anchors = (
{
name = bottom;
position = "{147, 0}";
},
{
name = top;
position = "{229, 507}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
}
);
layerId = "0AFBD1F8-5C2D-4827-9AD8-B7B9458B8710";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 323 LINE",
"217 391 OFFCURVE",
"258 428 OFFCURVE",
"319 428 CURVE SMOOTH",
"339 428 OFFCURVE",
"371 419 OFFCURVE",
"381 419 CURVE SMOOTH",
"389 419 OFFCURVE",
"396 423 OFFCURVE",
"397 431 CURVE SMOOTH",
"408 498 LINE",
"389 509 OFFCURVE",
"367 516 OFFCURVE",
"339 516 CURVE SMOOTH",
"270 516 OFFCURVE",
"220 474 OFFCURVE",
"185 403 CURVE",
"179 482 LINE SMOOTH",
"178 501 OFFCURVE",
"171 507 OFFCURVE",
"151 507 CURVE SMOOTH",
"100 507 LINE",
"100 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 22 0 22 19 17 16 14 10 8 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 1 2 0 21 6 2 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 4 15 4 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
12 1 3 0 21 6 2 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 422;
},
{
anchors = (
{
name = bottom;
position = "{191, 0}";
},
{
name = top;
position = "{250, 519}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
}
);
layerId = "E89559F4-6FCF-4C5F-A33B-E0489B705A4F";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 318 LINE",
"281 361 OFFCURVE",
"313 383 OFFCURVE",
"354 383 CURVE SMOOTH",
"372 383 OFFCURVE",
"399 379 OFFCURVE",
"403 379 CURVE SMOOTH",
"416 379 OFFCURVE",
"424 383 OFFCURVE",
"427 398 CURVE SMOOTH",
"447 512 LINE",
"433 523 OFFCURVE",
"414 529 OFFCURVE",
"390 529 CURVE SMOOTH",
"334 529 OFFCURVE",
"286 493 OFFCURVE",
"249 434 CURVE",
"240 482 LINE SMOOTH",
"235 509 OFFCURVE",
"226 519 OFFCURVE",
"195 519 CURVE SMOOTH",
"103 519 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 21 19 18 16 12 10 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
13 8 2 2 0 22 1 4 2 2 30 3 1 2 2 0 1 0 36 1 1 0 0 14 31 5 1 4 4 12 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
52 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
13 8 2 2 0 22 1 4 2 2 30 0 0 0 14 31 3 1 2 2 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 0 14 31 0 3 3 1 1 0 36 0 1 1 20 31 5 1 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 42 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
13 8 2 3 0 22 1 4 2 2 30 0 2 3 4 3 2 4 50 0 0 3 4 0 1 0 35 0 1 0 3 2 1 3 1 0 38 0 0 0 4 0 0 36 5 1 4 0 4 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
leftKerningGroup = k;
leftMetricsKey = n;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = racute;
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 398;
},
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 98, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 422;
},
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 450;
}
);
unicode = 0155;
},
{
glyphname = rcaron;
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 81, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 398;
},
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 75, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 422;
},
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 55, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 450;
}
);
unicode = 0159;
},
{
glyphname = rcommaaccent;
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 398;
},
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -7, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 422;
},
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 450;
}
);
unicode = 0157;
},
{
glyphname = rfishhook;
layers = (
{
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 0 LINE",
"125 353 LINE SMOOTH",
"125 444 OFFCURVE",
"166 488 OFFCURVE",
"235 488 CURVE SMOOTH",
"266 488 OFFCURVE",
"290 478 OFFCURVE",
"294 478 CURVE SMOOTH",
"295 478 OFFCURVE",
"298 478 OFFCURVE",
"299 482 CURVE SMOOTH",
"300 485 LINE",
"279 494 OFFCURVE",
"258 498 OFFCURVE",
"235 498 CURVE SMOOTH",
"156 498 OFFCURVE",
"113 446 OFFCURVE",
"113 353 CURVE SMOOTH",
"113 0 LINE"
);
}
);
width = 319;
},
{
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 0 LINE",
"189 342 LINE SMOOTH",
"189 414 OFFCURVE",
"219 448 OFFCURVE",
"275 448 CURVE SMOOTH",
"296 448 OFFCURVE",
"313 440 OFFCURVE",
"322 440 CURVE SMOOTH",
"330 440 OFFCURVE",
"338 443 OFFCURVE",
"342 458 CURVE SMOOTH",
"352 497 LINE",
"323 509 OFFCURVE",
"299 515 OFFCURVE",
"267 515 CURVE SMOOTH",
"154 515 OFFCURVE",
"100 442 OFFCURVE",
"100 332 CURVE SMOOTH",
"100 0 LINE"
);
}
);
width = 366;
},
{
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 334 LINE SMOOTH",
"258 391 OFFCURVE",
"279 417 OFFCURVE",
"323 417 CURVE SMOOTH",
"336 417 OFFCURVE",
"350 412 OFFCURVE",
"359 412 CURVE SMOOTH",
"374 412 OFFCURVE",
"387 417 OFFCURVE",
"393 440 CURVE SMOOTH",
"410 506 LINE",
"374 521 OFFCURVE",
"347 527 OFFCURVE",
"308 527 CURVE SMOOTH",
"167 527 OFFCURVE",
"103 442 OFFCURVE",
"103 317 CURVE SMOOTH",
"103 0 LINE"
);
}
);
width = 413;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 027E;
},
{
glyphname = rhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = top;
position = "{221, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 113, 490}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 -58 LINE",
"125 322 LINE",
"157 427 OFFCURVE",
"208 487 OFFCURVE",
"295 487 CURVE SMOOTH",
"327 487 OFFCURVE",
"357 475 OFFCURVE",
"369 471 CURVE SMOOTH",
"372 470 OFFCURVE",
"375 472 OFFCURVE",
"377 475 CURVE SMOOTH",
"379 479 LINE",
"354 491 OFFCURVE",
"327 498 OFFCURVE",
"295 498 CURVE SMOOTH",
"206 498 OFFCURVE",
"151 441 OFFCURVE",
"125 346 CURVE",
"123 482 LINE SMOOTH",
"123 487 OFFCURVE",
"121 490 OFFCURVE",
"116 490 CURVE SMOOTH",
"113 490 LINE",
"113 -58 LINE"
);
}
);
width = 398;
},
{
anchors = (
{
name = bottom;
position = "{147, 0}";
},
{
name = top;
position = "{229, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 100, 507}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"189 -34 LINE",
"189 323 LINE",
"217 391 OFFCURVE",
"258 428 OFFCURVE",
"319 428 CURVE SMOOTH",
"339 428 OFFCURVE",
"371 419 OFFCURVE",
"381 419 CURVE SMOOTH",
"389 419 OFFCURVE",
"396 423 OFFCURVE",
"397 431 CURVE SMOOTH",
"408 498 LINE",
"389 509 OFFCURVE",
"367 516 OFFCURVE",
"339 516 CURVE SMOOTH",
"270 516 OFFCURVE",
"220 474 OFFCURVE",
"185 403 CURVE",
"179 482 LINE SMOOTH",
"178 501 OFFCURVE",
"171 507 OFFCURVE",
"151 507 CURVE SMOOTH",
"100 507 LINE",
"100 -27 LINE"
);
}
);
width = 422;
},
{
anchors = (
{
name = bottom;
position = "{250, 0}";
},
{
name = top;
position = "{250, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 133, 519}";
},
{
name = hookbtmright_lowercase_part;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 -15 LINE",
"258 318 LINE",
"281 361 OFFCURVE",
"313 383 OFFCURVE",
"354 383 CURVE SMOOTH",
"372 383 OFFCURVE",
"399 379 OFFCURVE",
"403 379 CURVE SMOOTH",
"416 379 OFFCURVE",
"424 383 OFFCURVE",
"427 398 CURVE SMOOTH",
"447 512 LINE",
"433 523 OFFCURVE",
"414 529 OFFCURVE",
"390 529 CURVE SMOOTH",
"334 529 OFFCURVE",
"286 493 OFFCURVE",
"249 434 CURVE",
"240 482 LINE SMOOTH",
"235 509 OFFCURVE",
"226 519 OFFCURVE",
"195 519 CURVE SMOOTH",
"103 519 LINE",
"103 -3 LINE"
);
}
);
width = 450;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 027D;
},
{
glyphname = s;
layers = (
{
anchors = (
{
name = bottom;
position = "{193, 0}";
},
{
name = top;
position = "{199, 490}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 331, 461}";
},
{
name = SerifUpRightLower;
transform = "{1, 0, 0, 1, 46, 42}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"286 -8 OFFCURVE",
"351 53 OFFCURVE",
"351 137 CURVE SMOOTH",
"351 217 OFFCURVE",
"282 239 OFFCURVE",
"207 263 CURVE SMOOTH",
"133 286 OFFCURVE",
"62 304 OFFCURVE",
"62 374 CURVE SMOOTH",
"62 437 OFFCURVE",
"123 488 OFFCURVE",
"202 488 CURVE SMOOTH",
"235 488 OFFCURVE",
"289 477 OFFCURVE",
"320 461 CURVE",
"331 453 LINE",
"331 468 LINE",
"307 479 OFFCURVE",
"257 498 OFFCURVE",
"202 498 CURVE SMOOTH",
"118 498 OFFCURVE",
"51 444 OFFCURVE",
"51 374 CURVE SMOOTH",
"51 298 OFFCURVE",
"121 276 OFFCURVE",
"196 254 CURVE SMOOTH",
"270 232 OFFCURVE",
"340 210 OFFCURVE",
"340 136 CURVE SMOOTH",
"340 60 OFFCURVE",
"281 2 OFFCURVE",
"191 2 CURVE SMOOTH",
"123 2 OFFCURVE",
"76 30 OFFCURVE",
"57 46 CURVE",
"46 56 LINE",
"46 38 LINE",
"77 18 OFFCURVE",
"120 -8 OFFCURVE",
"191 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
62 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
50 1 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 397;
},
{
anchors = (
{
name = bottom;
position = "{208, 0}";
},
{
name = top;
position = "{239, 519}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 398, 418}";
},
{
name = SerifUpRightLower;
transform = "{1, 0, 0, 1, 32, 97}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"338 -8 OFFCURVE",
"421 59 OFFCURVE",
"421 169 CURVE SMOOTH",
"421 249 OFFCURVE",
"368 282 OFFCURVE",
"302 306 CURVE SMOOTH",
"249 325 OFFCURVE",
"181 337 OFFCURVE",
"181 375 CURVE SMOOTH",
"181 402 OFFCURVE",
"203 418 OFFCURVE",
"242 418 CURVE SMOOTH",
"280 418 OFFCURVE",
"305 404 OFFCURVE",
"327 396 CURVE",
"398 415 LINE",
"398 480 LINE",
"357 504 OFFCURVE",
"309 527 OFFCURVE",
"239 527 CURVE SMOOTH",
"113 527 OFFCURVE",
"34 458 OFFCURVE",
"34 363 CURVE SMOOTH",
"34 274 OFFCURVE",
"87 236 OFFCURVE",
"156 212 CURVE SMOOTH",
"208 193 OFFCURVE",
"276 183 OFFCURVE",
"276 142 CURVE SMOOTH",
"276 114 OFFCURVE",
"253 97 OFFCURVE",
"211 97 CURVE SMOOTH",
"169 97 OFFCURVE",
"117 107 OFFCURVE",
"104 122 CURVE",
"32 111 LINE",
"32 19 LINE",
"76 4 OFFCURVE",
"135 -8 OFFCURVE",
"203 -8 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 20 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 444;
},
{
anchors = (
{
name = bottom;
position = "{203, 0}";
},
{
name = top;
position = "{213, 507}";
}
);
components = (
{
name = SerifUpRightLower;
transform = "{-1, 0, 0, -1, 363, 435}";
},
{
name = SerifUpRightLower;
transform = "{1, 0, 0, 1, 42, 74}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"314 -8 OFFCURVE",
"389 60 OFFCURVE",
"389 151 CURVE SMOOTH",
"389 235 OFFCURVE",
"325 266 OFFCURVE",
"259 287 CURVE SMOOTH",
"203 305 OFFCURVE",
"126 321 OFFCURVE",
"126 377 CURVE SMOOTH",
"126 419 OFFCURVE",
"168 448 OFFCURVE",
"226 448 CURVE SMOOTH",
"252 448 OFFCURVE",
"282 442 OFFCURVE",
"310 434 CURVE",
"363 427 LINE",
"363 487 LINE",
"307 506 OFFCURVE",
"260 515 OFFCURVE",
"221 515 CURVE SMOOTH",
"118 515 OFFCURVE",
"42 453 OFFCURVE",
"42 364 CURVE SMOOTH",
"42 285 OFFCURVE",
"101 254 OFFCURVE",
"174 230 CURVE SMOOTH",
"244 207 OFFCURVE",
"305 197 OFFCURVE",
"305 137 CURVE SMOOTH",
"305 92 OFFCURVE",
"270 56 OFFCURVE",
"194 56 CURVE SMOOTH",
"143 56 OFFCURVE",
"103 72 OFFCURVE",
"86 84 CURVE",
"42 94 LINE",
"42 20 LINE",
"85 4 OFFCURVE",
"151 -8 OFFCURVE",
"199 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
58 56 39 37 34 32 27 25 8 6 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 20 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 426;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "BED05762-FEF9-4A6E-AC27-C34BF2D1E934";
name = "Jan 15 23, 17:53";
paths = (
{
closed = 1;
nodes = (
"381 217 OFFCURVE",
"321 251 OFFCURVE",
"242 274 CURVE SMOOTH",
"164 297 OFFCURVE",
"104 316 OFFCURVE",
"104 374 CURVE SMOOTH",
"104 433 OFFCURVE",
"162 469 OFFCURVE",
"224 469 CURVE SMOOTH",
"250 469 OFFCURVE",
"276 465 OFFCURVE",
"303 456 CURVE",
"309 384 LINE",
"310 368 OFFCURVE",
"317 360 OFFCURVE",
"331 360 CURVE SMOOTH",
"355 360 LINE",
"355 479 LINE",
"303 497 OFFCURVE",
"259 505 OFFCURVE",
"223 505 CURVE SMOOTH",
"135 505 OFFCURVE",
"59 453 OFFCURVE",
"59 371 CURVE SMOOTH",
"59 297 OFFCURVE",
"115 266 OFFCURVE",
"197 243 CURVE SMOOTH",
"275 220 OFFCURVE",
"336 199 OFFCURVE",
"336 138 CURVE SMOOTH",
"336 69 OFFCURVE",
"280 27 OFFCURVE",
"208 27 CURVE SMOOTH",
"170 27 OFFCURVE",
"138 32 OFFCURVE",
"111 43 CURVE",
"105 117 LINE",
"104 133 OFFCURVE",
"97 141 OFFCURVE",
"83 141 CURVE SMOOTH",
"59 141 LINE",
"59 20 LINE",
"107 2 OFFCURVE",
"156 -8 OFFCURVE",
"206 -8 CURVE SMOOTH",
"305 -8 OFFCURVE",
"381 50 OFFCURVE",
"381 146 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
62 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
50 1 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 427;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "C002D054-4EE7-4D89-AEAE-22FEBB8B349D";
name = "Jan 15 23, 17:53";
paths = (
{
closed = 1;
nodes = (
"235 514 LINE",
"173 514 OFFCURVE",
"127 500 OFFCURVE",
"93 470 CURVE SMOOTH",
"61 442 OFFCURVE",
"45 409 OFFCURVE",
"45 368 CURVE SMOOTH",
"45 328 OFFCURVE",
"59 297 OFFCURVE",
"87 274 CURVE SMOOTH",
"99 264 OFFCURVE",
"114 254 OFFCURVE",
"132 246 CURVE SMOOTH",
"150 238 OFFCURVE",
"181 228 OFFCURVE",
"225 214 CURVE",
"241 210 OFFCURVE",
"255 204 OFFCURVE",
"267 198 CURVE SMOOTH",
"279 192 OFFCURVE",
"289 183 OFFCURVE",
"297 174 CURVE SMOOTH",
"305 165 OFFCURVE",
"309 151 OFFCURVE",
"309 132 CURVE SMOOTH",
"309 113 OFFCURVE",
"300 96 OFFCURVE",
"283 81 CURVE SMOOTH",
"264 65 OFFCURVE",
"238 56 OFFCURVE",
"205 56 CURVE SMOOTH",
"165 56 OFFCURVE",
"130 62 OFFCURVE",
"102 76 CURVE",
"98 116 OFFCURVE",
"96 137 OFFCURVE",
"96 140 CURVE",
"94 148 OFFCURVE",
"89 152 OFFCURVE",
"81 152 CURVE SMOOTH",
"45 152 LINE",
"45 20 LINE",
"99 2 OFFCURVE",
"155 -7 OFFCURVE",
"209 -7 CURVE SMOOTH",
"263 -7 OFFCURVE",
"309 10 OFFCURVE",
"343 40 CURVE SMOOTH",
"376 69 OFFCURVE",
"392 108 OFFCURVE",
"392 156 CURVE SMOOTH",
"392 193 OFFCURVE",
"379 222 OFFCURVE",
"351 244 CURVE SMOOTH",
"339 254 OFFCURVE",
"325 264 OFFCURVE",
"309 270 CURVE SMOOTH",
"261 288 LINE SMOOTH",
"245 294 OFFCURVE",
"224 299 OFFCURVE",
"199 307 CURVE SMOOTH",
"174 315 OFFCURVE",
"155 326 OFFCURVE",
"141 342 CURVE",
"133 350 OFFCURVE",
"129 363 OFFCURVE",
"129 380 CURVE SMOOTH",
"129 397 OFFCURVE",
"138 412 OFFCURVE",
"156 426 CURVE SMOOTH",
"174 440 OFFCURVE",
"197 448 OFFCURVE",
"225 448 CURVE SMOOTH",
"226 448 LINE SMOOTH",
"248 448 OFFCURVE",
"274 444 OFFCURVE",
"304 437 CURVE",
"308 395 OFFCURVE",
"310 373 OFFCURVE",
"310 371 CURVE",
"312 361 OFFCURVE",
"317 357 OFFCURVE",
"327 357 CURVE SMOOTH",
"366 357 LINE",
"366 452 LINE",
"366 487 LINE",
"313 505 OFFCURVE",
"269 514 OFFCURVE",
"234 514 CURVE"
);
},
{
closed = 0;
nodes = (
"411 474 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
58 56 39 37 34 32 27 25 8 6 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 20 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
60 1 1 5 29 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 434;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "E2EBC4DC-E5A8-4BDB-B951-5E790820A969";
name = "Jan 15 23, 17:53";
paths = (
{
closed = 1;
nodes = (
"384 231 OFFCURVE",
"375 243 OFFCURVE",
"363 253 CURVE",
"351 264 OFFCURVE",
"338 272 OFFCURVE",
"323 279 CURVE SMOOTH",
"308 286 OFFCURVE",
"292 293 OFFCURVE",
"276 298 CURVE SMOOTH",
"260 303 OFFCURVE",
"245 308 OFFCURVE",
"230 312 CURVE SMOOTH",
"215 316 OFFCURVE",
"202 322 OFFCURVE",
"190 328 CURVE SMOOTH",
"178 334 OFFCURVE",
"169 339 OFFCURVE",
"162 347 CURVE SMOOTH",
"155 355 OFFCURVE",
"151 364 OFFCURVE",
"151 375 CURVE SMOOTH",
"151 392 OFFCURVE",
"158 406 OFFCURVE",
"172 416 CURVE SMOOTH",
"186 426 OFFCURVE",
"205 431 OFFCURVE",
"229 431 CURVE SMOOTH",
"252 431 OFFCURVE",
"276 428 OFFCURVE",
"289 424 CURVE",
"293 385 OFFCURVE",
"295 373 OFFCURVE",
"296 368 CURVE",
"299 356 OFFCURVE",
"306 349 OFFCURVE",
"319 349 CURVE SMOOTH",
"360 349 LINE",
"372 349 LINE",
"376 349 LINE",
"376 494 LINE",
"377 494 LINE",
"305 516 OFFCURVE",
"277 521 OFFCURVE",
"227 521 CURVE SMOOTH",
"195 521 OFFCURVE",
"168 516 OFFCURVE",
"144 508 CURVE SMOOTH",
"120 500 OFFCURVE",
"99 488 OFFCURVE",
"83 474 CURVE SMOOTH",
"67 460 OFFCURVE",
"54 443 OFFCURVE",
"46 424 CURVE SMOOTH",
"38 405 OFFCURVE",
"34 385 OFFCURVE",
"34 364 CURVE SMOOTH",
"34 341 OFFCURVE",
"38 322 OFFCURVE",
"45 306 CURVE SMOOTH",
"52 290 OFFCURVE",
"61 277 OFFCURVE",
"73 266 CURVE SMOOTH",
"85 255 OFFCURVE",
"99 246 OFFCURVE",
"114 239 CURVE SMOOTH",
"129 232 OFFCURVE",
"144 225 OFFCURVE",
"160 220 CURVE SMOOTH",
"176 215 OFFCURVE",
"192 210 OFFCURVE",
"207 205 CURVE",
"222 201 OFFCURVE",
"235 196 OFFCURVE",
"247 190 CURVE SMOOTH",
"259 184 OFFCURVE",
"269 178 OFFCURVE",
"276 170 CURVE SMOOTH",
"283 162 OFFCURVE",
"286 153 OFFCURVE",
"286 141 CURVE SMOOTH",
"286 133 OFFCURVE",
"285 125 OFFCURVE",
"282 117 CURVE SMOOTH",
"279 109 OFFCURVE",
"274 104 OFFCURVE",
"267 98 CURVE SMOOTH",
"260 92 OFFCURVE",
"252 88 OFFCURVE",
"241 84 CURVE",
"231 81 OFFCURVE",
"218 79 OFFCURVE",
"203 79 CURVE SMOOTH",
"181 79 OFFCURVE",
"149 79 OFFCURVE",
"122 87 CURVE",
"118 127 OFFCURVE",
"116 141 OFFCURVE",
"115 146 CURVE",
"112 158 OFFCURVE",
"105 165 OFFCURVE",
"92 165 CURVE SMOOTH",
"51 165 LINE",
"39 165 LINE",
"34 165 LINE",
"34 70 LINE",
"34 20 LINE",
"34 20 LINE",
"71 6 OFFCURVE",
"133 -8 OFFCURVE",
"197 -8 CURVE SMOOTH",
"230 -8 OFFCURVE",
"260 -4 OFFCURVE",
"285 5 CURVE",
"311 13 OFFCURVE",
"332 25 OFFCURVE",
"349 40 CURVE SMOOTH",
"366 55 OFFCURVE",
"379 73 OFFCURVE",
"388 94 CURVE SMOOTH",
"397 115 OFFCURVE",
"402 138 OFFCURVE",
"402 163 CURVE SMOOTH",
"402 184 OFFCURVE",
"398 201 OFFCURVE",
"391 216 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 20 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 440;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "EA5240F4-328D-4492-ABF2-4C33041EDD20";
name = quadratic;
paths = (
{
closed = 1;
nodes = (
"320 476 OFFCURVE",
"257 498 OFFCURVE",
"216 498 QCURVE SMOOTH",
"182 498 OFFCURVE",
"127 478 OFFCURVE",
"87 443 OFFCURVE",
"65 399 OFFCURVE",
"65 374 QCURVE SMOOTH",
"65 345 OFFCURVE",
"90 306 OFFCURVE",
"130 280 OFFCURVE",
"182 262 OFFCURVE",
"236 246 OFFCURVE",
"288 228 OFFCURVE",
"329 202 OFFCURVE",
"354 165 OFFCURVE",
"354 136 QCURVE SMOOTH",
"354 108 OFFCURVE",
"334 60 OFFCURVE",
"296 23 OFFCURVE",
"241 2 OFFCURVE",
"205 2 QCURVE SMOOTH",
"169 2 OFFCURVE",
"119 19 OFFCURVE",
"86 40 OFFCURVE",
"68 57 OFFCURVE",
"64 57 QCURVE SMOOTH",
"62 57 OFFCURVE",
"60 56 OFFCURVE",
"58 54 QCURVE SMOOTH",
"55 51 LINE",
"70 38 OFFCURVE",
"101 16 OFFCURVE",
"136 1 OFFCURVE",
"178 -8 OFFCURVE",
"205 -8 QCURVE SMOOTH",
"243 -8 OFFCURVE",
"302 15 OFFCURVE",
"343 54 OFFCURVE",
"365 107 OFFCURVE",
"365 137 QCURVE SMOOTH",
"365 167 OFFCURVE",
"340 208 OFFCURVE",
"299 236 OFFCURVE",
"247 254 OFFCURVE",
"193 271 OFFCURVE",
"141 288 OFFCURVE",
"101 312 OFFCURVE",
"76 348 OFFCURVE",
"76 374 QCURVE SMOOTH",
"76 397 OFFCURVE",
"96 438 OFFCURVE",
"133 469 OFFCURVE",
"185 488 OFFCURVE",
"216 488 QCURVE SMOOTH",
"249 488 OFFCURVE",
"294 474 OFFCURVE",
"323 458 OFFCURVE",
"339 444 OFFCURVE",
"343 444 QCURVE SMOOTH",
"346 444 OFFCURVE",
"348 447 QCURVE SMOOTH",
"350 450 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
62 2 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
50 1 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 427;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "34907189-8A9F-455E-BF0E-5646A5F957AB";
name = "Jan 30 23, 16:20";
paths = (
{
closed = 1;
nodes = (
"331.673 -8 OFFCURVE",
"415 58.902 OFFCURVE",
"415 169 CURVE SMOOTH",
"415 249.345 OFFCURVE",
"361.709 282.459 OFFCURVE",
"295.5 306 CURVE SMOOTH",
"243.341 324.546 OFFCURVE",
"175 337.127 OFFCURVE",
"175 375 CURVE SMOOTH",
"175 401.667 OFFCURVE",
"197.333 418 OFFCURVE",
"236 418 CURVE SMOOTH",
"284.025 418 OFFCURVE",
"317.931 388 OFFCURVE",
"347 388 CURVE SMOOTH",
"361.667 388 OFFCURVE",
"369 393 OFFCURVE",
"377 405 CURVE SMOOTH",
"412 460 LINE",
"412 460 LINE",
"371.546 500.454 OFFCURVE",
"305.116 527 OFFCURVE",
"233 527 CURVE SMOOTH",
"107.017 527 OFFCURVE",
"28 458.215 OFFCURVE",
"28 363 CURVE SMOOTH",
"28 273.727 OFFCURVE",
"81.249 236.267 OFFCURVE",
"149.5 212 CURVE SMOOTH",
"202.478 193.164 OFFCURVE",
"270 182.985 OFFCURVE",
"270 142 CURVE SMOOTH",
"270 114.016 OFFCURVE",
"247.068 97 OFFCURVE",
"205 97 CURVE SMOOTH",
"158.252 97 OFFCURVE",
"118.029 135 OFFCURVE",
"86 135 CURVE SMOOTH",
"67.333 135 OFFCURVE",
"56.333 126.333 OFFCURVE",
"47 113 CURVE SMOOTH",
"11 56 LINE",
"53.289 19.35 OFFCURVE",
"130.05 -8 OFFCURVE",
"197 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
59 57 40 38 35 33 26 24 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 1 1 5 1 0 36 0 5 5 20 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
63 1 1 5 30 1 2 4 2 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 440;
}
);
leftKerningGroup = s;
note = s;
rightKerningGroup = s;
unicode = 0073;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 73, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 015B;
},
{
glyphname = saltillo;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"78 433 OFFCURVE",
"79 434 OFFCURVE",
"79 437 CURVE SMOOTH",
"80 513 LINE",
"80 700 LINE",
"70 700 LINE",
"70 513 LINE",
"71 437 LINE SMOOTH",
"71 434 OFFCURVE",
"72 433 OFFCURVE",
"75 433 CURVE SMOOTH"
);
}
);
width = 150;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"128 399 OFFCURVE",
"136 411 OFFCURVE",
"139 432 CURVE SMOOTH",
"147 510 LINE",
"147 717 LINE",
"69 717 LINE",
"69 510 LINE",
"77 432 LINE",
"81 411 OFFCURVE",
"91 399 OFFCURVE",
"108 399 CURVE SMOOTH"
);
}
);
width = 216;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"157 371 OFFCURVE",
"170 391 OFFCURVE",
"175 427 CURVE SMOOTH",
"189 506 LINE",
"189 729 LINE",
"54 729 LINE",
"54 506 LINE",
"68 427 LINE SMOOTH",
"75 391 OFFCURVE",
"92 371 OFFCURVE",
"121 371 CURVE SMOOTH"
);
}
);
width = 243;
}
);
leftMetricsKey = quotesingle;
rightMetricsKey = quotesingle;
unicode = A78C;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 0161;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 53, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 43, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 015F;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 015D;
},
{
glyphname = scommaaccent;
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 53, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 43, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 0219;
},
{
glyphname = sdotbelow;
layers = (
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 155, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 397;
},
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 136, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 426;
},
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 116, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 444;
}
);
unicode = 1E63;
},
{
glyphname = germandbls;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"444 -8 OFFCURVE",
"506 53 OFFCURVE",
"506 137 CURVE SMOOTH",
"506 213 OFFCURVE",
"462 239 OFFCURVE",
"404 262 CURVE SMOOTH",
"351 282 OFFCURVE",
"300 294 OFFCURVE",
"300 348 CURVE SMOOTH",
"300 388 OFFCURVE",
"346 420 OFFCURVE",
"387 447 CURVE SMOOTH",
"431 477 OFFCURVE",
"472 520 OFFCURVE",
"472 580 CURVE SMOOTH",
"472 650 OFFCURVE",
"405 707 OFFCURVE",
"315 707 CURVE SMOOTH",
"199 707 OFFCURVE",
"113 633 OFFCURVE",
"113 505 CURVE SMOOTH",
"113 0 LINE",
"125 0 LINE",
"125 505 LINE SMOOTH",
"125 635 OFFCURVE",
"209 697 OFFCURVE",
"315 697 CURVE SMOOTH",
"411 697 OFFCURVE",
"462 635 OFFCURVE",
"462 581 CURVE SMOOTH",
"462 522 OFFCURVE",
"421 481 OFFCURVE",
"376 451 CURVE SMOOTH",
"335 424 OFFCURVE",
"289 390 OFFCURVE",
"289 348 CURVE SMOOTH",
"289 290 OFFCURVE",
"338 274 OFFCURVE",
"393 255 CURVE SMOOTH",
"451 234 OFFCURVE",
"495 210 OFFCURVE",
"495 136 CURVE SMOOTH",
"495 58 OFFCURVE",
"438 2 OFFCURVE",
"346 2 CURVE SMOOTH",
"283 2 OFFCURVE",
"238 29 OFFCURVE",
"209 55 CURVE SMOOTH",
"206 57 OFFCURVE",
"203 57 OFFCURVE",
"200 54 CURVE SMOOTH",
"197 51 LINE",
"239 15 OFFCURVE",
"280 -8 OFFCURVE",
"346 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
72 3 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
12 3 54 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 4 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
21 3 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
35 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
66 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 557;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"558 -8 OFFCURVE",
"653 56 OFFCURVE",
"653 173 CURVE SMOOTH",
"653 241 OFFCURVE",
"618 289 OFFCURVE",
"575 319 CURVE SMOOTH",
"541 342 OFFCURVE",
"496 368 OFFCURVE",
"496 393 CURVE SMOOTH",
"496 418 OFFCURVE",
"529 437 OFFCURVE",
"557 456 CURVE SMOOTH",
"589 478 OFFCURVE",
"617 512 OFFCURVE",
"617 563 CURVE SMOOTH",
"617 650 OFFCURVE",
"536 743 OFFCURVE",
"382 743 CURVE SMOOTH",
"213 743 OFFCURVE",
"103 638 OFFCURVE",
"103 489 CURVE SMOOTH",
"103 0 LINE",
"258 0 LINE",
"258 484 LINE SMOOTH",
"258 578 OFFCURVE",
"291 634 OFFCURVE",
"375 634 CURVE SMOOTH",
"439 634 OFFCURVE",
"466 607 OFFCURVE",
"466 562 CURVE SMOOTH",
"466 526 OFFCURVE",
"432 503 OFFCURVE",
"400 480 CURVE SMOOTH",
"364 453 OFFCURVE",
"333 419 OFFCURVE",
"333 363 CURVE SMOOTH",
"333 298 OFFCURVE",
"373 258 OFFCURVE",
"421 233 CURVE SMOOTH",
"462 211 OFFCURVE",
"508 188 OFFCURVE",
"508 149 CURVE SMOOTH",
"508 117 OFFCURVE",
"487 97 OFFCURVE",
"460 97 CURVE SMOOTH",
"413 97 OFFCURVE",
"393 135 OFFCURVE",
"356 135 CURVE SMOOTH",
"337 135 OFFCURVE",
"326 127 OFFCURVE",
"317 113 CURVE SMOOTH",
"281 56 LINE",
"322 20 OFFCURVE",
"388 -8 OFFCURVE",
"446 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 65 64 59 57 39 37 34 32 25 23 0 70 1 70 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
29 1 1 3 1 30 0 2 4 3 4 2 3 50 0 4 4 0 1 0 36 6 1 0 0 17 31 0 3 3 1 1 0 36 5 1 1 1 18 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
29 1 5 3 1 30 0 2 4 3 4 2 3 50 0 4 4 0 1 0 36 6 1 0 0 17 31 0 5 5 12 31 0 3 3 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
29 1 5 3 1 30 0 2 4 3 4 2 3 50 6 1 0 0 4 2 0 4 1 0 38 0 5 5 12 31 0 3 3 1 1 0 36 0 1 1 18 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
29 1 5 3 1 30 0 2 4 3 4 2 3 50 0 5 3 1 3 5 1 50 6 1 0 0 4 2 0 4 1 0 38 0 3 5 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 674;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"499 -8 OFFCURVE",
"578 55 OFFCURVE",
"578 157 CURVE SMOOTH",
"578 228 OFFCURVE",
"539 268 OFFCURVE",
"489 294 CURVE SMOOTH",
"445 316 OFFCURVE",
"399 335 OFFCURVE",
"399 374 CURVE SMOOTH",
"399 405 OFFCURVE",
"437 429 OFFCURVE",
"471 452 CURVE SMOOTH",
"510 477 OFFCURVE",
"543 515 OFFCURVE",
"543 570 CURVE SMOOTH",
"543 651 OFFCURVE",
"468 727 OFFCURVE",
"344 727 CURVE SMOOTH",
"199 727 OFFCURVE",
"100 636 OFFCURVE",
"100 496 CURVE SMOOTH",
"100 0 LINE",
"190 0 LINE",
"190 493 LINE SMOOTH",
"190 600 OFFCURVE",
"245 661 OFFCURVE",
"340 661 CURVE SMOOTH",
"416 661 OFFCURVE",
"457 621 OFFCURVE",
"457 570 CURVE SMOOTH",
"457 526 OFFCURVE",
"418 493 OFFCURVE",
"382 468 CURVE SMOOTH",
"342 440 OFFCURVE",
"306 406 OFFCURVE",
"306 356 CURVE SMOOTH",
"306 295 OFFCURVE",
"350 264 OFFCURVE",
"401 243 CURVE SMOOTH",
"449 222 OFFCURVE",
"495 196 OFFCURVE",
"495 143 CURVE SMOOTH",
"495 94 OFFCURVE",
"457 56 OFFCURVE",
"400 56 CURVE SMOOTH",
"358 56 OFFCURVE",
"300 101 OFFCURVE",
"280 101 CURVE SMOOTH",
"268 101 OFFCURVE",
"261 96 OFFCURVE",
"256 88 CURVE SMOOTH",
"235 54 LINE",
"275 18 OFFCURVE",
"328 -8 OFFCURVE",
"393 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 67 66 61 59 37 35 32 30 25 23 0 72 1 72 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
27 1 1 3 1 30 0 2 4 3 4 2 3 50 0 4 4 0 1 0 36 6 1 0 0 17 31 0 3 3 1 1 0 36 5 1 1 1 18 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
27 1 5 3 1 30 0 2 4 3 4 2 3 50 0 4 4 0 1 0 36 6 1 0 0 17 31 0 5 5 12 31 0 3 3 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
27 1 5 3 1 30 0 2 4 3 4 2 3 50 6 1 0 0 4 2 0 4 1 0 38 0 5 5 15 31 0 3 3 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
27 1 5 3 1 30 0 2 4 3 4 2 3 50 0 5 3 1 3 5 1 50 6 1 0 0 4 2 0 4 1 0 38 0 3 5 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 620;
}
);
leftMetricsKey = n;
note = germandbls;
rightKerningGroup = B;
unicode = 00DF;
},
{
glyphname = t;
layers = (
{
anchors = (
{
name = bottom;
position = "{200, 0}";
},
{
name = center;
position = "{151, 346}";
},
{
name = top;
position = "{115, 673}";
},
{
name = topright;
position = "{299, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"233 -8 OFFCURVE",
"276 12 OFFCURVE",
"295 39 CURVE",
"293 41 LINE SMOOTH",
"292 42 OFFCURVE",
"290 43 OFFCURVE",
"289 43 CURVE SMOOTH",
"281 43 OFFCURVE",
"233 2 OFFCURVE",
"198 2 CURVE SMOOTH",
"151 2 OFFCURVE",
"118 32 OFFCURVE",
"118 93 CURVE SMOOTH",
"118 459 LINE",
"285 459 LINE",
"285 469 LINE",
"118 469 LINE",
"118 673 LINE",
"115 673 LINE SMOOTH",
"112 673 OFFCURVE",
"110 670 OFFCURVE",
"110 666 CURVE SMOOTH",
"106 469 LINE",
"18 467 LINE",
"18 464 LINE SMOOTH",
"18 461 OFFCURVE",
"20 459 OFFCURVE",
"25 459 CURVE SMOOTH",
"106 459 LINE",
"106 93 LINE SMOOTH",
"106 21 OFFCURVE",
"141 -8 OFFCURVE",
"198 -8 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 3 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
29 2 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 319;
},
{
anchors = (
{
name = bottom;
position = "{237, 0}";
},
{
name = center;
position = "{192, 294}";
},
{
name = top;
position = "{185, 668}";
},
{
name = topright;
position = "{376, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"287 -8 OFFCURVE",
"339 8 OFFCURVE",
"379 37 CURVE",
"332 111 LINE SMOOTH",
"326 120 OFFCURVE",
"321 124 OFFCURVE",
"312 124 CURVE SMOOTH",
"298 124 OFFCURVE",
"293 113 OFFCURVE",
"271 113 CURVE SMOOTH",
"250 113 OFFCURVE",
"237 130 OFFCURVE",
"237 154 CURVE SMOOTH",
"237 412 LINE",
"363 412 LINE",
"363 518 LINE",
"237 518 LINE",
"237 669 LINE",
"156 669 LINE SMOOTH",
"137 669 OFFCURVE",
"126 661 OFFCURVE",
"122 645 CURVE SMOOTH",
"92 519 LINE",
"9 503 LINE",
"9 442 LINE SMOOTH",
"9 422 OFFCURVE",
"22 412 OFFCURVE",
"38 412 CURVE SMOOTH",
"82 412 LINE",
"82 144 LINE SMOOTH",
"82 51 OFFCURVE",
"137 -8 OFFCURVE",
"234 -8 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 30 28 25 23 20 19 18 17 16 14 8 6 0 35 1 35 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
11 1 1 3 33 1 0 5 2 30 0 2 3 2 52 4 1 1 1 3 0 0 36 0 3 3 14 31 6 1 5 5 0 1 2 36 7 1 0 0 18 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 1 3 33 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 4 1 1 1 3 0 0 36 0 3 3 14 31 0 5 5 0 1 2 36 7 1 0 0 18 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 1 3 33 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 0 3 4 1 1 6 3 1 1 0 38 0 5 0 0 5 1 0 35 0 5 5 0 1 2 36 7 1 0 5 0 1 2 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
11 1 4 3 33 1 0 5 2 30 0 2 3 2 52 0 1 4 6 4 1 6 50 0 6 5 4 6 5 48 0 3 0 4 1 3 4 0 0 38 0 5 0 0 5 1 0 35 0 5 5 0 1 2 36 7 1 0 5 0 1 2 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 396;
},
{
anchors = (
{
name = bottom;
position = "{218, 0}";
},
{
name = center;
position = "{182, 313}";
},
{
name = top;
position = "{155, 671}";
},
{
name = topright;
position = "{343, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"263 -8 OFFCURVE",
"309 10 OFFCURVE",
"340 38 CURVE",
"314 81 LINE SMOOTH",
"311 86 OFFCURVE",
"307 89 OFFCURVE",
"302 89 CURVE SMOOTH",
"292 89 OFFCURVE",
"260 65 OFFCURVE",
"238 65 CURVE SMOOTH",
"205 65 OFFCURVE",
"182 85 OFFCURVE",
"182 128 CURVE SMOOTH",
"182 432 LINE",
"327 432 LINE",
"327 497 LINE",
"182 497 LINE",
"182 671 LINE",
"137 671 LINE SMOOTH",
"126 671 OFFCURVE",
"118 665 OFFCURVE",
"117 654 CURVE SMOOTH",
"96 498 LINE",
"13 487 LINE",
"13 452 LINE SMOOTH",
"13 439 OFFCURVE",
"21 432 OFFCURVE",
"32 432 CURVE SMOOTH",
"93 432 LINE",
"93 122 LINE SMOOTH",
"93 38 OFFCURVE",
"138 -8 OFFCURVE",
"218 -8 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 29 27 24 22 19 18 17 16 15 13 6 4 0 33 1 33 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
9 1 1 3 31 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 4 1 1 1 3 0 0 36 0 3 3 14 31 0 5 5 0 1 2 36 7 1 0 0 18 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 1 3 31 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 0 3 4 1 1 6 3 1 1 0 38 0 5 5 0 1 2 36 7 1 0 0 18 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
9 1 1 3 31 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 0 3 4 1 1 6 3 1 1 0 38 0 5 5 0 1 2 36 7 1 0 0 21 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
9 1 1 3 31 1 0 5 2 30 0 2 3 2 52 0 6 1 5 1 6 5 50 0 3 4 1 1 6 3 1 1 0 38 0 5 0 0 5 1 0 35 0 5 5 0 1 2 36 7 1 0 5 0 1 2 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
9 1 4 3 31 1 0 5 2 30 0 2 3 2 52 0 1 4 6 4 1 6 50 0 6 5 4 6 5 48 0 3 0 4 1 3 4 0 0 38 0 5 0 0 5 1 0 35 0 5 5 0 1 2 36 7 1 0 5 0 1 2 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 363;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "BCADD86B-AAAE-4CD7-83A0-837AC3B46077";
name = "Jan 15 23, 17:53";
paths = (
{
closed = 1;
nodes = (
"259 -8 OFFCURVE",
"303 10 OFFCURVE",
"329 38 CURVE",
"318 56 LINE",
"315 61 OFFCURVE",
"308 66 OFFCURVE",
"298 59 CURVE SMOOTH",
"283 48 OFFCURVE",
"257 31 OFFCURVE",
"230 31 CURVE SMOOTH",
"188 31 OFFCURVE",
"161 59 OFFCURVE",
"161 109 CURVE SMOOTH",
"161 446 LINE",
"318 446 LINE",
"318 482 LINE",
"161 482 LINE",
"161 672 LINE",
"138 672 LINE SMOOTH",
"131 672 OFFCURVE",
"126 664 OFFCURVE",
"126 660 CURVE",
"114 482 LINE",
"29 476 LINE",
"29 458 LINE SMOOTH",
"29 450 OFFCURVE",
"35 446 OFFCURVE",
"42 446 CURVE SMOOTH",
"113 446 LINE",
"113 106 LINE SMOOTH",
"113 33 OFFCURVE",
"148 -8 OFFCURVE",
"220 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 3 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
29 2 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 342;
}
);
note = t;
unicode = 0074;
},
{
glyphname = tbar;
layers = (
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 11, -294}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 31, -332}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 27, -355}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -25, 183}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 1, 164}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -10, 149}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 0165;
},
{
glyphname = tcedilla;
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 0163;
},
{
glyphname = tcircumflexbelow;
layers = (
{
components = (
{
name = t;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 46, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 1E71;
},
{
glyphname = tcommaaccent;
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 021B;
},
{
glyphname = tdotbelow;
layers = (
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 162, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 151, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 1E6D;
},
{
glyphname = thook;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"249.205 -8 OFFCURVE",
"287.65 12.313 OFFCURVE",
"309 39 CURVE",
"307 41 LINE SMOOTH",
"305.667 42.333 OFFCURVE",
"304.333 43 OFFCURVE",
"303 43 CURVE SMOOTH",
"296 43 OFFCURVE",
"268 2 OFFCURVE",
"212 2 CURVE SMOOTH",
"163.128 2 OFFCURVE",
"132 31.855 OFFCURVE",
"132 93 CURVE SMOOTH",
"132 459 LINE",
"299 459 LINE",
"299 469 LINE",
"132 469 LINE",
"132 586 LINE SMOOTH",
"132 660.667 OFFCURVE",
"161 698 OFFCURVE",
"219 698 CURVE SMOOTH",
"245 698 OFFCURVE",
"264 687 OFFCURVE",
"270 687 CURVE SMOOTH",
"272 687 OFFCURVE",
"274 687 OFFCURVE",
"275 691 CURVE SMOOTH",
"276 695 LINE",
"254.667 703 OFFCURVE",
"240.333 708 OFFCURVE",
"219 708 CURVE SMOOTH",
"155 708 OFFCURVE",
"122 668 OFFCURVE",
"121 592 CURVE SMOOTH",
"120 469 LINE",
"32 467 LINE",
"32 464 LINE SMOOTH",
"32 460.667 OFFCURVE",
"34.333 459 OFFCURVE",
"39 459 CURVE SMOOTH",
"120 459 LINE",
"120 93 LINE SMOOTH",
"120 21 OFFCURVE",
"154.667 -8 OFFCURVE",
"212 -8 CURVE"
);
}
);
width = 329;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"272.667 -8 OFFCURVE",
"318.333 10 OFFCURVE",
"349 38 CURVE",
"323 81 LINE SMOOTH",
"319 86.333 OFFCURVE",
"314.667 89 OFFCURVE",
"310 89 CURVE SMOOTH",
"300.907 89 OFFCURVE",
"270.055 65 OFFCURVE",
"246 65 CURVE SMOOTH",
"214 65 OFFCURVE",
"191 85.333 OFFCURVE",
"191 128 CURVE SMOOTH",
"191 432 LINE",
"337 432 LINE",
"337 497 LINE",
"191 497 LINE",
"191 575 LINE SMOOTH",
"191 633.667 OFFCURVE",
"209.333 662 OFFCURVE",
"252 662 CURVE SMOOTH",
"274 662 OFFCURVE",
"290 655 OFFCURVE",
"296 655 CURVE SMOOTH",
"302.667 655 OFFCURVE",
"312 657 OFFCURVE",
"316 673 CURVE SMOOTH",
"323 709 LINE",
"297.667 719.667 OFFCURVE",
"276.667 724 OFFCURVE",
"246 724 CURVE SMOOTH",
"175.333 724 OFFCURVE",
"133 687.667 OFFCURVE",
"121 609 CURVE SMOOTH",
"105 498 LINE",
"22 487 LINE",
"22 452 LINE SMOOTH",
"22 438.667 OFFCURVE",
"30.333 432 OFFCURVE",
"41 432 CURVE SMOOTH",
"102 432 LINE",
"102 122 LINE SMOOTH",
"102 38 OFFCURVE",
"146 -8 OFFCURVE",
"226 -8 CURVE"
);
}
);
width = 359;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"291.333 -8 OFFCURVE",
"343 7.667 OFFCURVE",
"383 37 CURVE",
"336 111 LINE SMOOTH",
"330.667 120.333 OFFCURVE",
"325.333 124 OFFCURVE",
"316 124 CURVE SMOOTH",
"301.923 124 OFFCURVE",
"297.239 113 OFFCURVE",
"275 113 CURVE SMOOTH",
"253.667 113 OFFCURVE",
"241 130 OFFCURVE",
"241 154 CURVE SMOOTH",
"241 412 LINE",
"370 412 LINE",
"370 518 LINE",
"241 518 LINE",
"241 567 LINE SMOOTH",
"241 613.667 OFFCURVE",
"251.667 636 OFFCURVE",
"281 636 CURVE SMOOTH",
"294.83 636 OFFCURVE",
"307.831 631 OFFCURVE",
"318 631 CURVE SMOOTH",
"330 631 OFFCURVE",
"344.333 636.333 OFFCURVE",
"351 659 CURVE",
"363 719 LINE",
"333.667 732.333 OFFCURVE",
"307.667 737 OFFCURVE",
"269 737 CURVE SMOOTH",
"193 737 OFFCURVE",
"140.667 703 OFFCURVE",
"122 623 CURVE SMOOTH",
"96 519 LINE",
"13 503 LINE",
"13 442 LINE SMOOTH",
"13 422 OFFCURVE",
"26 412 OFFCURVE",
"42 412 CURVE SMOOTH",
"86 412 LINE",
"86 144 LINE SMOOTH",
"86 51.353 OFFCURVE",
"141.053 -8 OFFCURVE",
"238 -8 CURVE"
);
}
);
width = 384;
}
);
unicode = 01AD;
},
{
glyphname = tlinebelow;
layers = (
{
components = (
{
name = t;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 319;
},
{
components = (
{
name = t;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 363;
},
{
components = (
{
name = t;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 396;
}
);
unicode = 1E6F;
},
{
glyphname = tretroflexhook;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"237.333 -188 OFFCURVE",
"256.667 -184.333 OFFCURVE",
"278 -175 CURVE",
"277 -172 LINE SMOOTH",
"275.667 -168 OFFCURVE",
"273.333 -168 OFFCURVE",
"272 -168 CURVE SMOOTH",
"269 -168 OFFCURVE",
"262 -171 OFFCURVE",
"252 -174 CURVE SMOOTH",
"243 -177 OFFCURVE",
"231 -179 OFFCURVE",
"216 -179 CURVE SMOOTH",
"151.373 -179 OFFCURVE",
"132 -130.057 OFFCURVE",
"132 -58 CURVE SMOOTH",
"132 459 LINE",
"299 459 LINE",
"299 469 LINE",
"132 469 LINE",
"132 673 LINE",
"129 673 LINE SMOOTH",
"125 673 OFFCURVE",
"124 670 OFFCURVE",
"124 666 CURVE SMOOTH",
"120 469 LINE",
"32 467 LINE",
"32 464 LINE SMOOTH",
"32 460.667 OFFCURVE",
"34.333 459 OFFCURVE",
"39 459 CURVE SMOOTH",
"120 459 LINE",
"120 -58 LINE SMOOTH",
"120 -137.033 OFFCURVE",
"145.44 -188 OFFCURVE",
"216 -188 CURVE SMOOTH"
);
}
);
width = 327;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"274.333 -183 OFFCURVE",
"297.667 -178.333 OFFCURVE",
"327 -165 CURVE",
"320 -129 LINE SMOOTH",
"316 -114.333 OFFCURVE",
"306.667 -111 OFFCURVE",
"300 -111 CURVE SMOOTH",
"296 -111 OFFCURVE",
"290 -112.333 OFFCURVE",
"282 -115 CURVE SMOOTH",
"274 -117.667 OFFCURVE",
"264.333 -119 OFFCURVE",
"253 -119 CURVE SMOOTH",
"210.333 -119 OFFCURVE",
"194 -90 OFFCURVE",
"194 -34 CURVE SMOOTH",
"194 432 LINE",
"340 432 LINE",
"340 497 LINE",
"194 497 LINE",
"194 671 LINE",
"149 671 LINE SMOOTH",
"137 671 OFFCURVE",
"130.667 664.667 OFFCURVE",
"128 654 CURVE",
"108 498 LINE",
"25 487 LINE",
"25 452 LINE SMOOTH",
"25 438.667 OFFCURVE",
"33.333 432 OFFCURVE",
"44 432 CURVE SMOOTH",
"105 432 LINE",
"105 -27 LINE SMOOTH",
"105 -112.169 OFFCURVE",
"149.356 -183 OFFCURVE",
"241 -183 CURVE SMOOTH"
);
}
);
width = 354;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"309.386 -179 OFFCURVE",
"324.085 -174.041 OFFCURVE",
"369 -158 CURVE",
"357 -97 LINE",
"350.333 -73 OFFCURVE",
"335 -69 OFFCURVE",
"323 -69 CURVE SMOOTH",
"317.667 -69 OFFCURVE",
"311.833 -69.667 OFFCURVE",
"305.5 -71 CURVE SMOOTH",
"299.167 -72.333 OFFCURVE",
"292 -73 OFFCURVE",
"284 -73 CURVE SMOOTH",
"260 -73 OFFCURVE",
"247 -59 OFFCURVE",
"247 -15 CURVE SMOOTH",
"247 412 LINE",
"375 412 LINE",
"375 518 LINE",
"247 518 LINE",
"247 669 LINE",
"166 669 LINE SMOOTH",
"147.333 669 OFFCURVE",
"136 661 OFFCURVE",
"132 645 CURVE SMOOTH",
"101 519 LINE",
"19 503 LINE",
"19 442 LINE SMOOTH",
"19 422 OFFCURVE",
"32 412 OFFCURVE",
"48 412 CURVE SMOOTH",
"92 412 LINE",
"92 -3 LINE SMOOTH",
"92 -96.31 OFFCURVE",
"150.564 -179 OFFCURVE",
"263 -179 CURVE SMOOTH"
);
}
);
width = 378;
}
);
unicode = 0288;
},
{
glyphname = u;
layers = (
{
anchors = (
{
name = bottom;
position = "{257, 0}";
},
{
name = ogonek;
position = "{491, 2}";
},
{
name = top;
position = "{261, 490}";
},
{
name = topright;
position = "{456, 490}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 456, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 91, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 444, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"330 -8 OFFCURVE",
"400 37 OFFCURVE",
"444 102 CURVE",
"446 8 LINE SMOOTH",
"446 3 OFFCURVE",
"448 0 OFFCURVE",
"453 0 CURVE SMOOTH",
"456 0 LINE",
"456 490 LINE",
"444 490 LINE",
"444 117 LINE",
"395 45 OFFCURVE",
"330 2 OFFCURVE",
"253 2 CURVE SMOOTH",
"151 2 OFFCURVE",
"103 69 OFFCURVE",
"103 176 CURVE SMOOTH",
"103 490 LINE",
"91 490 LINE",
"91 176 LINE SMOOTH",
"91 60 OFFCURVE",
"144 -8 OFFCURVE",
"253 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
6 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 560;
},
{
anchors = (
{
name = bottom;
position = "{288, 0}";
},
{
name = ogonek;
position = "{533, 3}";
},
{
name = top;
position = "{306, 519}";
},
{
name = topright;
position = "{531, 519}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 550, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 110, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 425, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"320 -8 OFFCURVE",
"366 18 OFFCURVE",
"407 56 CURVE",
"416 26 LINE SMOOTH",
"421 8 OFFCURVE",
"435 0 OFFCURVE",
"454 0 CURVE SMOOTH",
"550 0 LINE",
"550 519 LINE",
"395 519 LINE",
"395 149 LINE",
"367 124 OFFCURVE",
"339 109 OFFCURVE",
"304 109 CURVE SMOOTH",
"259 109 OFFCURVE",
"235 138 OFFCURVE",
"235 190 CURVE SMOOTH",
"235 519 LINE",
"80 519 LINE",
"80 190 LINE SMOOTH",
"80 76 OFFCURVE",
"144 -8 OFFCURVE",
"256 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 25 0 25 20 18 12 10 9 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
7 1 0 1 14 1 2 0 2 30 5 4 2 1 1 14 31 0 0 0 2 1 2 36 3 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 0 1 14 1 2 0 2 30 5 4 2 1 1 14 31 0 2 2 12 31 0 0 0 3 1 2 36 0 3 3 18 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
7 1 0 1 14 1 2 0 2 30 0 0 2 3 0 1 0 35 5 4 2 1 0 2 3 1 2 1 0 38 0 0 0 3 1 2 36 0 3 0 3 1 2 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
7 1 0 4 14 1 2 0 2 30 5 1 4 1 0 1 4 0 50 0 0 2 3 0 1 0 35 0 1 0 2 3 1 2 1 0 38 0 0 0 3 1 2 36 0 3 0 3 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 647;
},
{
anchors = (
{
name = bottom;
position = "{262, 0}";
},
{
name = ogonek;
position = "{502, 4}";
},
{
name = top;
position = "{274, 507}";
},
{
name = topright;
position = "{489, 507}";
}
);
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 500, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 78, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 411, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"319 -8 OFFCURVE",
"372 25 OFFCURVE",
"416 73 CURVE",
"423 19 LINE",
"426 6 OFFCURVE",
"434 0 OFFCURVE",
"447 0 CURVE SMOOTH",
"500 0 LINE",
"500 507 LINE",
"411 507 LINE",
"411 133 LINE",
"372 89 OFFCURVE",
"326 63 OFFCURVE",
"274 63 CURVE SMOOTH",
"202 63 OFFCURVE",
"167 107 OFFCURVE",
"167 184 CURVE SMOOTH",
"167 507 LINE",
"78 507 LINE",
"78 184 LINE SMOOTH",
"78 70 OFFCURVE",
"137 -8 OFFCURVE",
"248 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 18 16 12 10 9 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 14 31 0 0 0 2 1 0 36 3 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 14 31 0 2 2 12 31 0 0 0 3 1 0 36 0 3 3 18 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 2 1 0 36 0 2 2 15 31 0 0 0 3 1 0 36 0 3 3 21 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
14 7 2 0 1 1 30 0 0 2 3 0 1 0 35 5 4 2 1 0 2 3 1 2 1 0 38 0 0 0 3 1 0 36 0 3 0 3 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
14 7 2 0 4 1 30 5 1 4 1 0 1 4 0 50 0 0 2 3 0 1 0 35 0 1 0 2 3 1 2 1 0 38 0 0 0 3 1 0 36 0 3 0 3 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "C5DE778D-960E-4B4E-86EC-D15592DA86C0";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"473 40 LINE",
"473 498 LINE",
"425 497 LINE",
"353 497 LINE",
"353 478 LINE SMOOTH",
"353 467 OFFCURVE",
"360 461 OFFCURVE",
"373 460 CURVE",
"425 458 LINE",
"425 124 LINE",
"383 68 OFFCURVE",
"324 30 OFFCURVE",
"259 30 CURVE SMOOTH",
"170 30 OFFCURVE",
"129 88 OFFCURVE",
"129 180 CURVE SMOOTH",
"129 498 LINE",
"81 497 LINE",
"9 497 LINE",
"9 478 LINE SMOOTH",
"9 467 OFFCURVE",
"16 461 OFFCURVE",
"29 460 CURVE",
"81 458 LINE",
"81 180 LINE SMOOTH",
"81 70 OFFCURVE",
"135 -8 OFFCURVE",
"247 -8 CURVE SMOOTH",
"319 -8 OFFCURVE",
"381 28 OFFCURVE",
"428 87 CURVE",
"432 13 LINE",
"432 4 OFFCURVE",
"438 0 OFFCURVE",
"447 0 CURVE SMOOTH",
"545 0 LINE",
"545 20 LINE SMOOTH",
"545 31 OFFCURVE",
"538 37 OFFCURVE",
"525 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
6 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 528;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B230C38B-E6B7-4D47-B49C-AE76807D732F";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"274 63 LINE",
"238 63 OFFCURVE",
"212 73 OFFCURVE",
"194 94 CURVE SMOOTH",
"176 115 OFFCURVE",
"168 146 OFFCURVE",
"168 184 CURVE SMOOTH",
"168 506 LINE",
"6 506 LINE",
"6 464 LINE SMOOTH",
"6 454 OFFCURVE",
"12 447 OFFCURVE",
"22 445 CURVE",
"28 443 OFFCURVE",
"46 439 OFFCURVE",
"78 433 CURVE",
"78 183 LINE SMOOTH",
"78 123 OFFCURVE",
"94 78 OFFCURVE",
"122 44 CURVE SMOOTH",
"152 9 OFFCURVE",
"194 -9 OFFCURVE",
"248 -9 CURVE SMOOTH",
"312 -9 OFFCURVE",
"368 18 OFFCURVE",
"416 72 CURVE",
"423 18 LINE",
"427 6 OFFCURVE",
"435 -1 OFFCURVE",
"447 -1 CURVE SMOOTH",
"572 -1 LINE",
"572 42 LINE SMOOTH",
"572 52 OFFCURVE",
"567 58 OFFCURVE",
"557 60 CURVE",
"551 62 OFFCURVE",
"532 66 OFFCURVE",
"500 72 CURVE",
"500 506 LINE",
"411 506 LINE",
"339 506 LINE",
"339 463 LINE SMOOTH",
"339 453 OFFCURVE",
"344 446 OFFCURVE",
"354 444 CURVE SMOOTH",
"386 438 OFFCURVE",
"405 434 OFFCURVE",
"411 432 CURVE",
"411 132 LINE",
"370 86 OFFCURVE",
"324 62 OFFCURVE",
"274 62 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 0 23 18 16 12 10 9 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 14 31 0 0 0 2 1 0 36 3 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 14 31 0 2 2 12 31 0 0 0 3 1 0 36 0 3 3 18 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
14 7 2 0 1 1 30 5 4 2 1 1 2 1 0 36 0 2 2 15 31 0 0 0 3 1 0 36 0 3 3 21 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
14 7 2 0 1 1 30 0 0 2 3 0 1 0 35 5 4 2 1 0 2 3 1 2 1 0 38 0 0 0 3 1 0 36 0 3 0 3 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
14 7 2 0 4 1 30 5 1 4 1 0 1 4 0 50 0 0 2 3 0 1 0 35 0 1 0 2 3 1 2 1 0 38 0 0 0 3 1 0 36 0 3 0 3 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "DA2986B1-9C41-4400-8E3C-251BD5D384C2";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"568 91 OFFCURVE",
"569 91 OFFCURVE",
"526 99 CURVE",
"526 513 LINE",
"402 513 LINE",
"402 513 LINE",
"327 513 LINE",
"327 454 LINE SMOOTH",
"327 437 OFFCURVE",
"335 427 OFFCURVE",
"352 423 CURVE",
"360 422 OFFCURVE",
"360 421 OFFCURVE",
"402 414 CURVE",
"402 142 LINE",
"385 125 OFFCURVE",
"368 112 OFFCURVE",
"349 103 CURVE SMOOTH",
"330 94 OFFCURVE",
"310 89 OFFCURVE",
"289 89 CURVE SMOOTH",
"260 89 OFFCURVE",
"238 97 OFFCURVE",
"224 114 CURVE SMOOTH",
"210 131 OFFCURVE",
"202 156 OFFCURVE",
"202 187 CURVE SMOOTH",
"202 513 LINE",
"79 513 LINE",
"79 513 LINE",
"3 513 LINE",
"3 454 LINE SMOOTH",
"3 437 OFFCURVE",
"11 427 OFFCURVE",
"28 423 CURVE",
"36 422 OFFCURVE",
"36 422 OFFCURVE",
"79 414 CURVE",
"79 187 LINE SMOOTH",
"79 158 OFFCURVE",
"83 132 OFFCURVE",
"90 108 CURVE",
"98 84 OFFCURVE",
"108 64 OFFCURVE",
"123 47 CURVE SMOOTH",
"138 30 OFFCURVE",
"156 15 OFFCURVE",
"177 6 CURVE SMOOTH",
"199 -3 OFFCURVE",
"224 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"269 -8 OFFCURVE",
"284 -6 OFFCURVE",
"299 -3 CURVE",
"314 1 OFFCURVE",
"328 6 OFFCURVE",
"341 12 CURVE SMOOTH",
"354 18 OFFCURVE",
"366 25 OFFCURVE",
"377 34 CURVE SMOOTH",
"388 43 OFFCURVE",
"399 53 OFFCURVE",
"410 64 CURVE",
"419 23 LINE",
"424 8 OFFCURVE",
"434 0 OFFCURVE",
"450 0 CURVE SMOOTH",
"526 0 LINE",
"601 0 LINE",
"601 59 LINE SMOOTH",
"601 76 OFFCURVE",
"593 86 OFFCURVE",
"576 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 25 0 25 20 18 12 10 9 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
7 1 0 1 14 1 2 0 2 30 5 4 2 1 1 14 31 0 0 0 2 1 2 36 3 1 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 0 1 14 1 2 0 2 30 5 4 2 1 1 14 31 0 2 2 12 31 0 0 0 3 1 2 36 0 3 3 18 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
7 1 0 1 14 1 2 0 2 30 0 0 2 3 0 1 0 35 5 4 2 1 0 2 3 1 2 1 0 38 0 0 0 3 1 2 36 0 3 0 3 1 2 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
7 1 0 4 14 1 2 0 2 30 5 1 4 1 0 1 4 0 50 0 0 2 3 0 1 0 35 0 1 0 2 3 1 2 1 0 38 0 0 0 3 1 2 36 0 3 0 3 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
leftKerningGroup = u;
note = u;
rightMetricsKey = n;
unicode = 0075;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 135, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 143, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 00FA;
},
{
glyphname = ubar;
layers = (
{
components = (
{
name = u;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"538 258 LINE",
"538 268 LINE",
"9 268 LINE",
"9 258 LINE"
);
}
);
width = 560;
},
{
components = (
{
name = u;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"562 234 LINE",
"562 296 LINE",
"16 296 LINE",
"16 234 LINE"
);
}
);
width = 585;
},
{
components = (
{
name = u;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"607 219 LINE",
"607 321 LINE",
"23 321 LINE",
"23 219 LINE"
);
}
);
width = 647;
}
);
unicode = 0289;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 016D;
},
{
glyphname = ucaron;
layers = (
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 01D4;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 00FC;
},
{
glyphname = udieresisacute;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 121, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 135, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 120, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 143, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 111, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 01D8;
},
{
glyphname = udieresiscaron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 121, 0}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 121, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 120, 0}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 120, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 111, 0}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 111, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 01DA;
},
{
glyphname = udieresisgrave;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 121, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 100, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 120, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 87, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 111, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 85, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 01DC;
},
{
glyphname = udieresismacron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 121, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 121, 147}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 120, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 127, 151}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 111, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 141, 192}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 01D6;
},
{
glyphname = udotbelow;
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 219, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 196, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 1EE5;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 00F9;
},
{
glyphname = uhookabove;
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
layers = (
{
components = (
{
alignment = -1;
name = u;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 312, 52}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
alignment = -1;
name = u;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 363, 47}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
alignment = -1;
name = u;
},
{
alignment = -1;
name = horncomb;
transform = "{1, 0, 0, 1, 409, 68}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
leftMetricsKey = u;
unicode = 01B0;
},
{
glyphname = uhornacute;
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 135, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 143, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 219, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 196, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 637;
},
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 700;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 0171;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 016B;
},
{
glyphname = uogonek;
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 351, 2}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 348, 4}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 368, 3}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 0173;
},
{
glyphname = "upsilon-latin";
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"418.47 -6 OFFCURVE",
"518 84.461 OFFCURVE",
"518 232 CURVE SMOOTH",
"518 354.718 OFFCURVE",
"446.708 458.01 OFFCURVE",
"349 481 CURVE",
"358.333 479.667 OFFCURVE",
"367 479 OFFCURVE",
"375 479 CURVE SMOOTH",
"516 479 LINE",
"516 479 LINE",
"516 485 LINE SMOOTH",
"516 488.333 OFFCURVE",
"514.333 490 OFFCURVE",
"511 490 CURVE SMOOTH",
"336 490 LINE",
"336 475 LINE",
"439.72 453.164 OFFCURVE",
"507 350.229 OFFCURVE",
"507 232 CURVE SMOOTH",
"507 90.28 OFFCURVE",
"410.506 5 OFFCURVE",
"291 5 CURVE SMOOTH",
"171.494 5 OFFCURVE",
"75 90.28 OFFCURVE",
"75 232 CURVE SMOOTH",
"75 349.289 OFFCURVE",
"142.528 453.427 OFFCURVE",
"245 475 CURVE",
"245 490 LINE",
"70 490 LINE SMOOTH",
"66.667 490 OFFCURVE",
"65 488.333 OFFCURVE",
"65 485 CURVE SMOOTH",
"65 479 LINE",
"207 479 LINE SMOOTH",
"214.333 479 OFFCURVE",
"222.333 479.667 OFFCURVE",
"231 481 CURVE",
"134.529 455.464 OFFCURVE",
"63 356.018 OFFCURVE",
"63 232 CURVE SMOOTH",
"63 83.976 OFFCURVE",
"163.3 -6 OFFCURVE",
"291 -6 CURVE SMOOTH"
);
}
);
width = 581;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"435.788 -6 OFFCURVE",
"545 92.903 OFFCURVE",
"545 228 CURVE SMOOTH",
"545 325.023 OFFCURVE",
"487.493 410.612 OFFCURVE",
"402 440 CURVE",
"423.333 437.333 OFFCURVE",
"444 435 OFFCURVE",
"464 435 CURVE SMOOTH",
"552 435 LINE",
"552 435 LINE",
"552 479 LINE SMOOTH",
"552 495 OFFCURVE",
"540.333 507 OFFCURVE",
"523 507 CURVE SMOOTH",
"337 507 LINE",
"337 408 LINE",
"409.32 394.092 OFFCURVE",
"460 317.844 OFFCURVE",
"460 229 CURVE SMOOTH",
"460 126.369 OFFCURVE",
"389.661 69 OFFCURVE",
"298 69 CURVE SMOOTH",
"206.459 69 OFFCURVE",
"136 126.834 OFFCURVE",
"136 229 CURVE SMOOTH",
"136 316.897 OFFCURVE",
"187.273 394.206 OFFCURVE",
"259 408 CURVE",
"259 507 LINE",
"74 507 LINE SMOOTH",
"56.667 507 OFFCURVE",
"45 495 OFFCURVE",
"45 479 CURVE SMOOTH",
"45 435 LINE",
"132 435 LINE SMOOTH",
"152 435 OFFCURVE",
"172.667 436 OFFCURVE",
"194 440 CURVE",
"108.507 410.612 OFFCURVE",
"51 325.023 OFFCURVE",
"51 228 CURVE SMOOTH",
"51 92.903 OFFCURVE",
"160.212 -6 OFFCURVE",
"298 -6 CURVE SMOOTH"
);
}
);
width = 597;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"452.646 -6 OFFCURVE",
"568 98.088 OFFCURVE",
"568 226 CURVE SMOOTH",
"568 307.239 OFFCURVE",
"519.514 376.637 OFFCURVE",
"444 409 CURVE",
"476 405 OFFCURVE",
"509 401 OFFCURVE",
"541 401 CURVE SMOOTH",
"582 401 LINE",
"582 401 LINE",
"582 475 LINE SMOOTH",
"582 500.333 OFFCURVE",
"562.333 519 OFFCURVE",
"533 519 CURVE SMOOTH",
"338 519 LINE",
"338 357 LINE",
"382.72 354.205 OFFCURVE",
"420 289.448 OFFCURVE",
"420 227 CURVE SMOOTH",
"420 152.536 OFFCURVE",
"374.19 118 OFFCURVE",
"305 118 CURVE SMOOTH",
"234.922 118 OFFCURVE",
"189 152.002 OFFCURVE",
"189 227 CURVE SMOOTH",
"189 289.448 OFFCURVE",
"226.28 354.205 OFFCURVE",
"271 357 CURVE",
"271 519 LINE",
"77 519 LINE SMOOTH",
"46.333 519 OFFCURVE",
"28 500.333 OFFCURVE",
"28 475 CURVE SMOOTH",
"28 401 LINE",
"68 401 LINE SMOOTH",
"100 401 OFFCURVE",
"134 405 OFFCURVE",
"166 409 CURVE",
"89.404 377.305 OFFCURVE",
"41 307.004 OFFCURVE",
"41 226 CURVE SMOOTH",
"41 98.317 OFFCURVE",
"156.598 -6 OFFCURVE",
"304 -6 CURVE SMOOTH"
);
}
);
width = 610;
}
);
unicode = 028A;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 016F;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 560;
},
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 120, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 585;
},
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 647;
}
);
unicode = 0169;
},
{
glyphname = v;
layers = (
{
anchors = (
{
name = bottom;
position = "{309, 0}";
},
{
name = top;
position = "{309, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 514, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 510, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"313 0 LINE",
"526 490 LINE",
"519 490 LINE SMOOTH",
"516 490 OFFCURVE",
"512 488 OFFCURVE",
"510 483 CURVE SMOOTH",
"315 34 LINE SMOOTH",
"312 28 OFFCURVE",
"310 23 OFFCURVE",
"309 16 CURVE",
"308 23 OFFCURVE",
"305 28 OFFCURVE",
"302 34 CURVE SMOOTH",
"107 483 LINE SMOOTH",
"105 487 OFFCURVE",
"103 490 OFFCURVE",
"98 490 CURVE SMOOTH",
"91 490 LINE",
"304 0 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
},
{
closed = 1;
nodes = (
"521 482 LINE",
"521 490 LINE",
"505 490 LINE",
"505 482 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 617;
},
{
anchors = (
{
name = bottom;
position = "{303, 0}";
},
{
name = top;
position = "{303, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 444, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 518, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"373 0 LINE",
"574 519 LINE",
"451 519 LINE SMOOTH",
"431 519 OFFCURVE",
"415 507 OFFCURVE",
"410 492 CURVE SMOOTH",
"335 259 LINE SMOOTH",
"323 222 OFFCURVE",
"312 186 OFFCURVE",
"305 150 CURVE",
"297 186 OFFCURVE",
"286 222 OFFCURVE",
"275 259 CURVE SMOOTH",
"203 492 LINE SMOOTH",
"198 507 OFFCURVE",
"183 519 OFFCURVE",
"160 519 CURVE SMOOTH",
"31 519 LINE",
"232 0 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
},
{
closed = 1;
nodes = (
"472 481 LINE",
"472 519 LINE",
"398 519 LINE",
"398 481 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 16 4 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
10 1 0 1 1 30 2 1 1 1 14 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
10 1 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 605;
},
{
anchors = (
{
name = bottom;
position = "{299, 0}";
},
{
name = top;
position = "{299, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 425, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 508, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"339 0 LINE",
"546 507 LINE",
"476 507 LINE SMOOTH",
"463 507 OFFCURVE",
"454 499 OFFCURVE",
"450 488 CURVE SMOOTH",
"320 162 LINE SMOOTH",
"310 138 OFFCURVE",
"305 114 OFFCURVE",
"300 91 CURVE",
"293 123 OFFCURVE",
"288 145 OFFCURVE",
"281 162 CURVE SMOOTH",
"153 488 LINE SMOOTH",
"149 499 OFFCURVE",
"140 507 OFFCURVE",
"125 507 CURVE SMOOTH",
"52 507 LINE",
"259 0 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
},
{
closed = 1;
nodes = (
"500 482 LINE",
"500 507 LINE",
"425 507 LINE",
"425 482 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 14 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "54CC313D-BC53-4331-9E3D-822BE844103B";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"364 498 LINE",
"364 479 LINE SMOOTH",
"364 468 OFFCURVE",
"371 462 OFFCURVE",
"384 461 CURVE",
"436 459 LINE",
"283 93 LINE SMOOTH",
"279 84 OFFCURVE",
"273 61 OFFCURVE",
"270 50 CURVE",
"268 61 OFFCURVE",
"262 84 OFFCURVE",
"258 93 CURVE",
"105 459 LINE",
"157 461 LINE",
"170 462 OFFCURVE",
"177 468 OFFCURVE",
"177 479 CURVE SMOOTH",
"177 498 LINE",
"3 498 LINE",
"3 479 LINE SMOOTH",
"3 468 OFFCURVE",
"9 462 OFFCURVE",
"22 461 CURVE",
"55 460 LINE",
"249 0 LINE",
"291 0 LINE",
"484 460 LINE",
"519 461 LINE",
"532 462 OFFCURVE",
"539 468 OFFCURVE",
"539 479 CURVE SMOOTH",
"539 498 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 465;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "F504C8B2-EE89-447E-998F-6DD43EFC73D4";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"503 506 LINE",
"313 506 LINE",
"313 464 LINE SMOOTH",
"313 454 OFFCURVE",
"318 447 OFFCURVE",
"328 445 CURVE SMOOTH",
"358 439 OFFCURVE",
"377 436 OFFCURVE",
"385 434 CURVE",
"277 162 LINE SMOOTH",
"271 146 OFFCURVE",
"265 122 OFFCURVE",
"257 90 CURVE",
"251 122 OFFCURVE",
"245 147 OFFCURVE",
"239 162 CURVE SMOOTH",
"132 434 LINE",
"163 440 OFFCURVE",
"181 442 OFFCURVE",
"187 444 CURVE",
"197 446 OFFCURVE",
"202 453 OFFCURVE",
"202 463 CURVE SMOOTH",
"202 506 LINE",
"-25 506 LINE",
"-25 463 LINE SMOOTH",
"-25 453 OFFCURVE",
"-20 446 OFFCURVE",
"-10 444 CURVE",
"-8 444 OFFCURVE",
"-1 442 OFFCURVE",
"12 440 CURVE SMOOTH",
"25 438 OFFCURVE",
"33 436 OFFCURVE",
"39 434 CURVE",
"216 -1 LINE",
"297 -1 LINE",
"474 434 LINE",
"503 440 OFFCURVE",
"519 444 OFFCURVE",
"523 444 CURVE",
"533 446 OFFCURVE",
"538 452 OFFCURVE",
"538 462 CURVE SMOOTH",
"538 506 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 0 14 31 0 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "242C6AD5-A510-42AE-B012-5D5EF4FA3221";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"537 513 LINE",
"537 513 LINE",
"439 513 LINE",
"439 513 LINE",
"320 513 LINE",
"320 454 LINE SMOOTH",
"320 437 OFFCURVE",
"328 427 OFFCURVE",
"345 423 CURVE",
"351 422 OFFCURVE",
"353 421 OFFCURVE",
"378 417 CURVE",
"304 216 LINE SMOOTH",
"298 200 OFFCURVE",
"293 184 OFFCURVE",
"289 169 CURVE SMOOTH",
"285 154 OFFCURVE",
"282 138 OFFCURVE",
"279 123 CURVE",
"276 138 OFFCURVE",
"272 154 OFFCURVE",
"268 169 CURVE SMOOTH",
"264 184 OFFCURVE",
"260 200 OFFCURVE",
"254 216 CURVE SMOOTH",
"181 418 LINE",
"201 422 OFFCURVE",
"203 422 OFFCURVE",
"209 423 CURVE",
"226 427 OFFCURVE",
"234 437 OFFCURVE",
"234 454 CURVE SMOOTH",
"234 513 LINE",
"120 513 LINE",
"120 513 LINE",
"17 513 LINE",
"17 513 LINE",
"-16 513 LINE",
"-16 454 LINE SMOOTH",
"-16 437 OFFCURVE",
"-8 427 OFFCURVE",
"9 423 CURVE",
"17 422 OFFCURVE",
"13 422 OFFCURVE",
"56 414 CURVE",
"221 0 LINE",
"333 0 LINE",
"498 414 LINE",
"540 421 OFFCURVE",
"537 422 OFFCURVE",
"545 423 CURVE",
"562 427 OFFCURVE",
"570 437 OFFCURVE",
"570 454 CURVE SMOOTH",
"570 513 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 16 4 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
10 1 0 1 1 30 2 1 1 1 14 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
10 1 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
leftKerningGroup = v;
note = v;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = vhook;
layers = (
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 91, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"303 -7 OFFCURVE",
"359 23 OFFCURVE",
"400 79 CURVE SMOOTH",
"441 135 OFFCURVE",
"467 217 OFFCURVE",
"467 320 CURVE SMOOTH",
"467 429 OFFCURVE",
"438 498 OFFCURVE",
"335 498 CURVE SMOOTH",
"311 498 OFFCURVE",
"291 493 OFFCURVE",
"270 485 CURVE",
"271 481 LINE SMOOTH",
"272 477 OFFCURVE",
"275 477 OFFCURVE",
"276 477 CURVE SMOOTH",
"278 477 OFFCURVE",
"284 479 OFFCURVE",
"294 483 CURVE SMOOTH",
"304 486 OFFCURVE",
"317 488 OFFCURVE",
"334 488 CURVE SMOOTH",
"426 488 OFFCURVE",
"455 423 OFFCURVE",
"455 320 CURVE SMOOTH",
"455 223 OFFCURVE",
"431 143 OFFCURVE",
"392 88 CURVE SMOOTH",
"353 33 OFFCURVE",
"302 3 OFFCURVE",
"246 3 CURVE SMOOTH",
"154 3 OFFCURVE",
"104 86 OFFCURVE",
"104 219 CURVE SMOOTH",
"104 264 OFFCURVE",
"111 340 OFFCURVE",
"111 384 CURVE SMOOTH",
"111 417 OFFCURVE",
"108 454 OFFCURVE",
"104 482 CURVE SMOOTH",
"103 487 OFFCURVE",
"101 490 OFFCURVE",
"98 490 CURVE SMOOTH",
"91 490 LINE",
"96 455 OFFCURVE",
"99 416 OFFCURVE",
"99 383 CURVE SMOOTH",
"99 340 OFFCURVE",
"92 263 OFFCURVE",
"92 219 CURVE SMOOTH",
"92 186 OFFCURVE",
"95 156 OFFCURVE",
"101 129 CURVE SMOOTH",
"119 43 OFFCURVE",
"168 -7 OFFCURVE",
"244 -7 CURVE SMOOTH"
);
}
);
width = 529;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 78, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"328 -7 OFFCURVE",
"392 24 OFFCURVE",
"438 80 CURVE SMOOTH",
"484 136 OFFCURVE",
"513 217 OFFCURVE",
"513 320 CURVE SMOOTH",
"513 432 OFFCURVE",
"478 514 OFFCURVE",
"357 514 CURVE SMOOTH",
"326 514 OFFCURVE",
"304 509 OFFCURVE",
"275 500 CURVE",
"282 457 LINE SMOOTH",
"284 443 OFFCURVE",
"294 440 OFFCURVE",
"303 440 CURVE SMOOTH",
"306 440 OFFCURVE",
"311 441 OFFCURVE",
"318 443 CURVE SMOOTH",
"325 444 OFFCURVE",
"335 445 OFFCURVE",
"347 445 CURVE SMOOTH",
"407 445 OFFCURVE",
"427 406 OFFCURVE",
"427 316 CURVE SMOOTH",
"427 168 OFFCURVE",
"364 64 OFFCURVE",
"274 64 CURVE SMOOTH",
"207 64 OFFCURVE",
"171 121 OFFCURVE",
"171 219 CURVE SMOOTH",
"171 241 OFFCURVE",
"172 266 OFFCURVE",
"175 295 CURVE SMOOTH",
"177 323 OFFCURVE",
"178 352 OFFCURVE",
"178 383 CURVE SMOOTH",
"178 414 OFFCURVE",
"176 449 OFFCURVE",
"172 481 CURVE SMOOTH",
"169 496 OFFCURVE",
"162 507 OFFCURVE",
"145 507 CURVE SMOOTH",
"78 507 LINE",
"85 466 OFFCURVE",
"88 427 OFFCURVE",
"89 391 CURVE SMOOTH",
"89 360 OFFCURVE",
"88 329 OFFCURVE",
"85 300 CURVE SMOOTH",
"82 270 OFFCURVE",
"81 242 OFFCURVE",
"81 217 CURVE SMOOTH",
"81 76 OFFCURVE",
"146 -7 OFFCURVE",
"259 -7 CURVE SMOOTH"
);
}
);
width = 556;
},
{
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 110, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"351 -7 OFFCURVE",
"421 24 OFFCURVE",
"472 81 CURVE SMOOTH",
"523 137 OFFCURVE",
"555 219 OFFCURVE",
"555 320 CURVE SMOOTH",
"555 445 OFFCURVE",
"505 526 OFFCURVE",
"379 526 CURVE SMOOTH",
"340 526 OFFCURVE",
"318 522 OFFCURVE",
"283 511 CURVE",
"295 439 LINE SMOOTH",
"299 416 OFFCURVE",
"313 411 OFFCURVE",
"328 411 CURVE SMOOTH",
"332 411 OFFCURVE",
"337 411 OFFCURVE",
"342 412 CURVE SMOOTH",
"347 413 OFFCURVE",
"353 413 OFFCURVE",
"360 413 CURVE SMOOTH",
"397 413 OFFCURVE",
"405 382 OFFCURVE",
"405 314 CURVE SMOOTH",
"405 189 OFFCURVE",
"364 110 OFFCURVE",
"299 110 CURVE SMOOTH",
"256 110 OFFCURVE",
"230 149 OFFCURVE",
"230 219 CURVE SMOOTH",
"230 239 OFFCURVE",
"231 263 OFFCURVE",
"234 291 CURVE SMOOTH",
"237 318 OFFCURVE",
"238 349 OFFCURVE",
"238 382 CURVE SMOOTH",
"238 411 OFFCURVE",
"236 445 OFFCURVE",
"232 480 CURVE SMOOTH",
"228 500 OFFCURVE",
"217 519 OFFCURVE",
"188 519 CURVE SMOOTH",
"70 519 LINE",
"78 474 OFFCURVE",
"81 435 OFFCURVE",
"82 398 CURVE SMOOTH",
"83 362 OFFCURVE",
"82 329 OFFCURVE",
"79 298 CURVE SMOOTH",
"76 267 OFFCURVE",
"75 240 OFFCURVE",
"75 215 CURVE SMOOTH",
"75 75 OFFCURVE",
"149 -7 OFFCURVE",
"274 -7 CURVE SMOOTH"
);
}
);
width = 581;
}
);
leftMetricsKey = u;
unicode = 028B;
},
{
glyphname = vturned;
layers = (
{
components = (
{
name = v;
transform = "{-1, 0, 0, -1, 617, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = v;
transform = "{-1, 0, 0, -1, 598, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 598;
},
{
components = (
{
name = v;
transform = "{-1, 0, 0, -1, 605, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 605;
}
);
unicode = 028C;
},
{
glyphname = w;
layers = (
{
anchors = (
{
name = bottom;
position = "{433, 0}";
},
{
name = top;
position = "{433, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 763, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 759, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"265 0 LINE SMOOTH",
"268 0 OFFCURVE",
"269 2 OFFCURVE",
"270 5 CURVE",
"429 461 LINE SMOOTH",
"431 466 OFFCURVE",
"433 471 OFFCURVE",
"434 475 CURVE",
"435 471 OFFCURVE",
"436 466 OFFCURVE",
"438 461 CURVE SMOOTH",
"595 5 LINE SMOOTH",
"596 2 OFFCURVE",
"598 0 OFFCURVE",
"601 0 CURVE SMOOTH",
"606 0 LINE",
"774 490 LINE",
"767 490 LINE SMOOTH",
"764 490 OFFCURVE",
"760 488 OFFCURVE",
"758 483 CURVE SMOOTH",
"608 34 LINE SMOOTH",
"606 27 OFFCURVE",
"604 20 OFFCURVE",
"602 14 CURVE",
"600 20 OFFCURVE",
"597 27 OFFCURVE",
"595 34 CURVE SMOOTH",
"440 488 LINE SMOOTH",
"439 491 OFFCURVE",
"438 493 OFFCURVE",
"435 493 CURVE SMOOTH",
"432 493 LINE SMOOTH",
"430 493 OFFCURVE",
"428 491 OFFCURVE",
"427 488 CURVE SMOOTH",
"271 34 LINE SMOOTH",
"269 27 OFFCURVE",
"266 21 OFFCURVE",
"265 13 CURVE",
"264 16 OFFCURVE",
"260 27 OFFCURVE",
"258 34 CURVE SMOOTH",
"108 483 LINE SMOOTH",
"107 486 OFFCURVE",
"105 490 OFFCURVE",
"103 490 CURVE SMOOTH",
"92 490 LINE",
"260 0 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
},
{
closed = 1;
nodes = (
"770 482 LINE",
"770 490 LINE",
"754 490 LINE",
"754 482 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 866;
},
{
anchors = (
{
name = bottom;
position = "{443, 0}";
},
{
name = top;
position = "{443, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 725, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 799, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"317 0 LINE SMOOTH",
"334 0 OFFCURVE",
"345 9 OFFCURVE",
"350 26 CURVE SMOOTH",
"425 284 LINE SMOOTH",
"433 310 OFFCURVE",
"437 326 OFFCURVE",
"443 353 CURVE",
"447 330 OFFCURVE",
"453 308 OFFCURVE",
"460 285 CURVE SMOOTH",
"534 26 LINE SMOOTH",
"539 7 OFFCURVE",
"549 0 OFFCURVE",
"562 0 CURVE SMOOTH",
"688 0 LINE",
"849 519 LINE",
"731 519 LINE SMOOTH",
"711 519 OFFCURVE",
"694 508 OFFCURVE",
"690 492 CURVE SMOOTH",
"635 259 LINE SMOOTH",
"631 241 OFFCURVE",
"616 174 OFFCURVE",
"613 157 CURVE",
"609 174 OFFCURVE",
"590 242 OFFCURVE",
"585 259 CURVE SMOOTH",
"523 492 LINE SMOOTH",
"519 508 OFFCURVE",
"503 519 OFFCURVE",
"480 519 CURVE SMOOTH",
"411 519 LINE SMOOTH",
"391 519 OFFCURVE",
"374 508 OFFCURVE",
"370 492 CURVE SMOOTH",
"305 259 LINE SMOOTH",
"300 241 OFFCURVE",
"279 171 OFFCURVE",
"275 158 CURVE",
"270 191 OFFCURVE",
"263 224 OFFCURVE",
"255 259 CURVE SMOOTH",
"203 492 LINE SMOOTH",
"199 508 OFFCURVE",
"183 519 OFFCURVE",
"160 519 CURVE SMOOTH",
"36 519 LINE",
"197 0 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
},
{
closed = 1;
nodes = (
"753 481 LINE",
"753 519 LINE",
"679 519 LINE",
"679 481 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
47 45 34 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
40 23 8 3 3 0 1 30 2 1 2 0 0 14 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
40 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
40 23 8 3 3 0 1 30 0 1 0 1 52 2 1 0 3 0 52 4 1 3 3 43 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
40 23 8 3 4 2 1 30 0 1 0 1 52 0 0 2 0 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 886;
},
{
anchors = (
{
name = bottom;
position = "{438, 0}";
},
{
name = top;
position = "{438, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 702, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 785, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"292 0 LINE SMOOTH",
"302 0 OFFCURVE",
"309 6 OFFCURVE",
"313 17 CURVE SMOOTH",
"426 360 LINE SMOOTH",
"432 379 OFFCURVE",
"435 395 OFFCURVE",
"438 407 CURVE",
"441 392 OFFCURVE",
"444 376 OFFCURVE",
"449 361 CURVE SMOOTH",
"561 17 LINE SMOOTH",
"565 6 OFFCURVE",
"570 0 OFFCURVE",
"579 0 CURVE SMOOTH",
"650 0 LINE",
"814 507 LINE",
"747 507 LINE SMOOTH",
"734 507 OFFCURVE",
"724 499 OFFCURVE",
"721 488 CURVE SMOOTH",
"622 162 LINE SMOOTH",
"616 142 OFFCURVE",
"610 117 OFFCURVE",
"607 94 CURVE",
"602 117 OFFCURVE",
"596 139 OFFCURVE",
"589 162 CURVE SMOOTH",
"484 490 LINE SMOOTH",
"481 500 OFFCURVE",
"472 508 OFFCURVE",
"459 508 CURVE SMOOTH",
"420 508 LINE SMOOTH",
"408 508 OFFCURVE",
"399 500 OFFCURVE",
"396 490 CURVE SMOOTH",
"289 162 LINE SMOOTH",
"281 138 OFFCURVE",
"274 117 OFFCURVE",
"269 94 CURVE",
"266 117 OFFCURVE",
"261 138 OFFCURVE",
"256 162 CURVE SMOOTH",
"159 488 LINE SMOOTH",
"156 499 OFFCURVE",
"146 507 OFFCURVE",
"131 507 CURVE SMOOTH",
"61 507 LINE",
"225 0 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
},
{
closed = 1;
nodes = (
"777 482 LINE",
"777 507 LINE",
"702 507 LINE",
"702 482 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
46 44 34 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 0 14 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 15 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
199 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
39 23 8 3 3 0 1 30 0 1 0 1 52 2 1 0 3 0 52 4 1 3 3 43 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
39 23 8 3 4 2 1 30 0 1 0 1 52 0 0 2 0 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 875;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "35CF74DB-1B79-4C02-9393-3A8D28BF4E34";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"582 497 LINE",
"582 478 LINE SMOOTH",
"582 467 OFFCURVE",
"589 461 OFFCURVE",
"602 460 CURVE",
"653 458 LINE",
"536 93 LINE",
"533 78 OFFCURVE",
"528 61 OFFCURVE",
"526 50 CURVE",
"523 61 OFFCURVE",
"519 78 OFFCURVE",
"514 93 CURVE SMOOTH",
"382 489 LINE",
"380 496 OFFCURVE",
"375 500 OFFCURVE",
"368 500 CURVE SMOOTH",
"348 500 LINE SMOOTH",
"341 500 OFFCURVE",
"336 496 OFFCURVE",
"334 489 CURVE",
"201 93 LINE SMOOTH",
"198 83 OFFCURVE",
"191 61 OFFCURVE",
"188 50 CURVE",
"186 61 OFFCURVE",
"181 83 OFFCURVE",
"179 93 CURVE",
"62 458 LINE",
"114 460 LINE",
"127 461 OFFCURVE",
"134 467 OFFCURVE",
"134 478 CURVE SMOOTH",
"134 497 LINE",
"-40 497 LINE",
"-40 478 LINE SMOOTH",
"-40 467 OFFCURVE",
"-34 461 OFFCURVE",
"-21 460 CURVE",
"12 459 LINE",
"166 0 LINE",
"199 0 LINE SMOOTH",
"205 0 OFFCURVE",
"209 4 OFFCURVE",
"211 11 CURVE",
"349 415 LINE",
"351 424 OFFCURVE",
"354 433 OFFCURVE",
"357 444 CURVE",
"359 433 OFFCURVE",
"362 424 OFFCURVE",
"365 415 CURVE",
"501 11 LINE",
"503 4 OFFCURVE",
"508 0 OFFCURVE",
"513 0 CURVE SMOOTH",
"548 0 LINE",
"701 459 LINE",
"736 460 LINE",
"749 461 OFFCURVE",
"756 467 OFFCURVE",
"756 478 CURVE SMOOTH",
"756 497 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 712;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "0F870D58-B9AA-417A-95AB-47F0EF59984C";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"575 506 LINE",
"575 464 LINE SMOOTH",
"575 454 OFFCURVE",
"581 447 OFFCURVE",
"591 445 CURVE SMOOTH",
"625 438 OFFCURVE",
"645 434 OFFCURVE",
"649 434 CURVE",
"567 162 LINE SMOOTH",
"561 140 OFFCURVE",
"556 117 OFFCURVE",
"552 94 CURVE",
"544 125 OFFCURVE",
"538 148 OFFCURVE",
"534 162 CURVE SMOOTH",
"429 490 LINE SMOOTH",
"425 502 OFFCURVE",
"417 508 OFFCURVE",
"404 508 CURVE SMOOTH",
"365 508 LINE SMOOTH",
"353 508 OFFCURVE",
"345 502 OFFCURVE",
"341 490 CURVE SMOOTH",
"235 162 LINE SMOOTH",
"225 130 OFFCURVE",
"218 107 OFFCURVE",
"215 93 CURVE",
"213 109 OFFCURVE",
"207 132 OFFCURVE",
"201 162 CURVE",
"121 434 LINE",
"151 440 OFFCURVE",
"170 443 OFFCURVE",
"176 445 CURVE",
"186 447 OFFCURVE",
"191 454 OFFCURVE",
"191 464 CURVE SMOOTH",
"191 506 LINE",
"-35 506 LINE",
"-35 464 LINE SMOOTH",
"-35 454 OFFCURVE",
"-29 447 OFFCURVE",
"-19 445 CURVE",
"-16 445 OFFCURVE",
"-6 442 OFFCURVE",
"14 438 CURVE",
"22 436 OFFCURVE",
"29 435 OFFCURVE",
"31 435 CURVE",
"171 0 LINE",
"239 0 LINE SMOOTH",
"249 0 OFFCURVE",
"255 5 OFFCURVE",
"259 17 CURVE SMOOTH",
"373 360 LINE",
"375 368 OFFCURVE",
"377 374 OFFCURVE",
"379 382 CURVE SMOOTH",
"381 390 OFFCURVE",
"381 398 OFFCURVE",
"383 406 CURVE",
"385 400 OFFCURVE",
"386 392 OFFCURVE",
"388 384 CURVE SMOOTH",
"390 376 OFFCURVE",
"392 368 OFFCURVE",
"395 360 CURVE",
"507 16 LINE",
"510 4 OFFCURVE",
"516 0 OFFCURVE",
"525 0 CURVE SMOOTH",
"595 0 LINE",
"736 434 LINE",
"739 434 OFFCURVE",
"747 437 OFFCURVE",
"761 439 CURVE SMOOTH",
"775 441 OFFCURVE",
"782 444 OFFCURVE",
"786 444 CURVE",
"796 446 OFFCURVE",
"801 452 OFFCURVE",
"801 462 CURVE SMOOTH",
"801 505 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
46 44 34 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 0 14 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 15 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
199 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
39 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
39 23 8 3 3 0 1 30 0 1 0 1 52 2 1 0 3 0 52 4 1 3 3 43 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
39 23 8 3 4 2 1 30 0 1 0 1 52 0 0 2 0 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 766;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "E1954988-C3A3-43D9-92B2-1FD1E2B45536";
name = "Jan 15 23, 17:54";
paths = (
{
closed = 1;
nodes = (
"799 513 LINE",
"799 513 LINE",
"706 513 LINE",
"705 513 LINE",
"590 513 LINE",
"590 454 LINE SMOOTH",
"590 437 OFFCURVE",
"598 427 OFFCURVE",
"615 423 CURVE",
"622 422 OFFCURVE",
"623 421 OFFCURVE",
"651 416 CURVE",
"596 216 LINE SMOOTH",
"592 201 OFFCURVE",
"588 185 OFFCURVE",
"585 171 CURVE SMOOTH",
"582 157 OFFCURVE",
"579 142 OFFCURVE",
"577 128 CURVE",
"574 142 OFFCURVE",
"570 155 OFFCURVE",
"567 169 CURVE",
"555 211 LINE",
"471 491 LINE SMOOTH",
"469 498 OFFCURVE",
"465 503 OFFCURVE",
"459 507 CURVE SMOOTH",
"453 511 OFFCURVE",
"446 514 OFFCURVE",
"437 514 CURVE SMOOTH",
"382 514 LINE SMOOTH",
"374 514 OFFCURVE",
"367 511 OFFCURVE",
"361 507 CURVE SMOOTH",
"355 503 OFFCURVE",
"351 498 OFFCURVE",
"349 491 CURVE SMOOTH",
"264 216 LINE SMOOTH",
"259 201 OFFCURVE",
"255 186 OFFCURVE",
"251 172 CURVE SMOOTH",
"247 158 OFFCURVE",
"243 143 OFFCURVE",
"239 129 CURVE",
"237 143 OFFCURVE",
"234 158 OFFCURVE",
"232 172 CURVE SMOOTH",
"230 186 OFFCURVE",
"226 201 OFFCURVE",
"222 216 CURVE SMOOTH",
"168 417 LINE",
"191 421 OFFCURVE",
"193 422 OFFCURVE",
"199 423 CURVE",
"216 427 OFFCURVE",
"224 437 OFFCURVE",
"224 454 CURVE SMOOTH",
"224 513 LINE",
"113 513 LINE",
"113 513 LINE",
"15 513 LINE",
"15 513 LINE",
"-26 513 LINE",
"-26 454 LINE SMOOTH",
"-26 437 OFFCURVE",
"-18 427 OFFCURVE",
"-1 423 CURVE",
"7 422 OFFCURVE",
"4 421 OFFCURVE",
"46 414 CURVE",
"178 0 LINE",
"272 0 LINE SMOOTH",
"285 0 OFFCURVE",
"294 7 OFFCURVE",
"299 22 CURVE SMOOTH",
"393 317 LINE SMOOTH",
"396 327 OFFCURVE",
"399 337 OFFCURVE",
"401 347 CURVE SMOOTH",
"407 377 LINE",
"409 367 OFFCURVE",
"410 358 OFFCURVE",
"413 348 CURVE",
"415 338 OFFCURVE",
"419 328 OFFCURVE",
"422 318 CURVE SMOOTH",
"514 22 LINE SMOOTH",
"519 7 OFFCURVE",
"526 0 OFFCURVE",
"537 0 CURVE SMOOTH",
"637 0 LINE",
"768 414 LINE",
"811 422 OFFCURVE",
"807 422 OFFCURVE",
"815 423 CURVE",
"832 427 OFFCURVE",
"840 437 OFFCURVE",
"840 454 CURVE SMOOTH",
"840 513 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
47 45 34 32 31 29 17 14 2 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
40 23 8 3 3 0 1 30 2 1 2 0 0 14 31 4 1 3 3 12 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
40 23 8 3 3 0 1 30 2 1 2 0 3 0 52 4 1 3 3 43 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
40 23 8 3 3 0 1 30 0 1 0 1 52 2 1 0 3 0 52 4 1 3 3 43 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
40 23 8 3 4 2 1 30 0 1 0 1 52 0 0 2 0 52 0 2 4 2 52 0 4 3 4 52 0 3 3 43 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 813;
}
);
leftKerningGroup = v;
leftMetricsKey = v;
note = w;
rightKerningGroup = v;
rightMetricsKey = v;
unicode = 0077;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 307, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 866;
},
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 307, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 875;
},
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 314, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 886;
}
);
unicode = 1E83;
},
{
glyphname = wcircumflex;
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 293, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 866;
},
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 875;
},
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 248, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 886;
}
);
unicode = 0175;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 293, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 866;
},
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 875;
},
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 248, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 886;
}
);
unicode = 1E85;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 272, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 866;
},
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 875;
},
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 222, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 886;
}
);
unicode = 1E81;
},
{
glyphname = whook;
layers = (
{
anchors = (
{
name = bottom;
position = "{433, 0}";
},
{
name = top;
position = "{433, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"265 0 LINE SMOOTH",
"268 0 OFFCURVE",
"269 2 OFFCURVE",
"270 5 CURVE",
"429 461 LINE SMOOTH",
"431 466 OFFCURVE",
"433 471 OFFCURVE",
"434 475 CURVE",
"435 469 OFFCURVE",
"438 463 OFFCURVE",
"438 461 CURVE SMOOTH",
"595 5 LINE SMOOTH",
"596 2 OFFCURVE",
"598 0 OFFCURVE",
"601 0 CURVE SMOOTH",
"606 0 LINE",
"608 34 LINE",
"606 27 OFFCURVE",
"604 20 OFFCURVE",
"602 14 CURVE",
"600 20 OFFCURVE",
"597 27 OFFCURVE",
"595 34 CURVE SMOOTH",
"440 488 LINE SMOOTH",
"439 491 OFFCURVE",
"438 493 OFFCURVE",
"435 493 CURVE SMOOTH",
"432 493 LINE SMOOTH",
"430 493 OFFCURVE",
"428 491 OFFCURVE",
"427 488 CURVE SMOOTH",
"271 34 LINE SMOOTH",
"269 28 OFFCURVE",
"266 21 OFFCURVE",
"265 13 CURVE",
"264 16 OFFCURVE",
"260 27 OFFCURVE",
"258 34 CURVE SMOOTH",
"108 483 LINE SMOOTH",
"107 486 OFFCURVE",
"105 490 OFFCURVE",
"103 490 CURVE SMOOTH",
"92 490 LINE",
"260 0 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
},
{
closed = 1;
nodes = (
"756 438 LINE SMOOTH",
"769 476 OFFCURVE",
"800 488 OFFCURVE",
"832 488 CURVE SMOOTH",
"847 488 OFFCURVE",
"866 485 OFFCURVE",
"878 480 CURVE SMOOTH",
"883 478 OFFCURVE",
"887 477 OFFCURVE",
"888 481 CURVE SMOOTH",
"889 485 LINE",
"868 494 OFFCURVE",
"853 498 OFFCURVE",
"830 498 CURVE SMOOTH",
"784 498 OFFCURVE",
"757 481 OFFCURVE",
"743 438 CURVE SMOOTH",
"608 34 LINE",
"606 0 LINE"
);
}
);
width = 890;
},
{
anchors = (
{
name = bottom;
position = "{438, 0}";
},
{
name = top;
position = "{438, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"292 0 LINE SMOOTH",
"301 0 OFFCURVE",
"309 5 OFFCURVE",
"313 17 CURVE SMOOTH",
"426 360 LINE SMOOTH",
"432 378 OFFCURVE",
"435 395 OFFCURVE",
"438 407 CURVE",
"441 392 OFFCURVE",
"444 376 OFFCURVE",
"449 361 CURVE SMOOTH",
"561 17 LINE SMOOTH",
"565 6 OFFCURVE",
"569 0 OFFCURVE",
"579 0 CURVE SMOOTH",
"650 0 LINE",
"622 162 LINE",
"616 142 OFFCURVE",
"610 117 OFFCURVE",
"607 94 CURVE",
"602 117 OFFCURVE",
"596 139 OFFCURVE",
"589 162 CURVE SMOOTH",
"484 490 LINE SMOOTH",
"481 499 OFFCURVE",
"473 508 OFFCURVE",
"459 508 CURVE SMOOTH",
"420 508 LINE SMOOTH",
"407 508 OFFCURVE",
"399 499 OFFCURVE",
"396 490 CURVE SMOOTH",
"289 162 LINE SMOOTH",
"279 131 OFFCURVE",
"274 117 OFFCURVE",
"269 94 CURVE",
"265 126 OFFCURVE",
"261 145 OFFCURVE",
"256 162 CURVE SMOOTH",
"159 488 LINE SMOOTH",
"156 498 OFFCURVE",
"147 507 OFFCURVE",
"131 507 CURVE SMOOTH",
"61 507 LINE",
"225 0 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
},
{
closed = 1;
nodes = (
"784 415 LINE SMOOTH",
"794 445 OFFCURVE",
"816 452 OFFCURVE",
"838 452 CURVE SMOOTH",
"859 452 OFFCURVE",
"869 445 OFFCURVE",
"882 445 CURVE SMOOTH",
"891 445 OFFCURVE",
"899 448 OFFCURVE",
"902 463 CURVE SMOOTH",
"909 499 LINE",
"884 510 OFFCURVE",
"862 515 OFFCURVE",
"835 515 CURVE SMOOTH",
"761 515 OFFCURVE",
"718 478 OFFCURVE",
"702 426 CURVE SMOOTH",
"622 162 LINE",
"650 0 LINE"
);
}
);
width = 910;
},
{
anchors = (
{
name = bottom;
position = "{443, 0}";
},
{
name = top;
position = "{443, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"317 0 LINE SMOOTH",
"334 0 OFFCURVE",
"345 9 OFFCURVE",
"350 26 CURVE SMOOTH",
"425 284 LINE SMOOTH",
"433 310 OFFCURVE",
"437 326 OFFCURVE",
"443 353 CURVE",
"447 330 OFFCURVE",
"453 308 OFFCURVE",
"460 285 CURVE SMOOTH",
"534 26 LINE SMOOTH",
"539 7 OFFCURVE",
"549 0 OFFCURVE",
"562 0 CURVE SMOOTH",
"688 0 LINE",
"635 259 LINE",
"631 241 OFFCURVE",
"616 174 OFFCURVE",
"613 157 CURVE",
"609 174 OFFCURVE",
"590 242 OFFCURVE",
"585 259 CURVE SMOOTH",
"523 492 LINE SMOOTH",
"519 508 OFFCURVE",
"503 519 OFFCURVE",
"480 519 CURVE SMOOTH",
"411 519 LINE SMOOTH",
"391 519 OFFCURVE",
"374 508 OFFCURVE",
"370 492 CURVE SMOOTH",
"305 259 LINE SMOOTH",
"300 241 OFFCURVE",
"279 171 OFFCURVE",
"275 158 CURVE",
"270 191 OFFCURVE",
"263 224 OFFCURVE",
"255 259 CURVE SMOOTH",
"203 492 LINE SMOOTH",
"199 508 OFFCURVE",
"183 519 OFFCURVE",
"160 519 CURVE SMOOTH",
"36 519 LINE",
"197 0 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
},
{
closed = 1;
nodes = (
"811 397 LINE SMOOTH",
"819 422 OFFCURVE",
"832 426 OFFCURVE",
"848 426 CURVE SMOOTH",
"861 426 OFFCURVE",
"875 421 OFFCURVE",
"884 421 CURVE SMOOTH",
"896 421 OFFCURVE",
"912 426 OFFCURVE",
"918 449 CURVE",
"929 509 LINE",
"900 522 OFFCURVE",
"874 527 OFFCURVE",
"836 527 CURVE SMOOTH",
"749 527 OFFCURVE",
"687 480 OFFCURVE",
"672 417 CURVE SMOOTH",
"635 259 LINE",
"688 0 LINE"
);
}
);
width = 930;
}
);
unicode = 2C73;
},
{
glyphname = x;
layers = (
{
anchors = (
{
name = bottom;
position = "{291, 0}";
},
{
name = top;
position = "{291, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 127, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 123, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 458, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 454, 490}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 461, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 116, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 120, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 465, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"99 0 LINE",
"110 0 LINE SMOOTH",
"113 0 OFFCURVE",
"115 1 OFFCURVE",
"119 7 CURVE SMOOTH",
"286 237 LINE SMOOTH",
"288 240 OFFCURVE",
"290 243 OFFCURVE",
"290 244 CURVE",
"462 7 LINE SMOOTH",
"465 2 OFFCURVE",
"464 0 OFFCURVE",
"471 0 CURVE SMOOTH",
"482 0 LINE",
"299 251 LINE",
"475 490 LINE",
"464 490 LINE SMOOTH",
"460 490 OFFCURVE",
"458 487 OFFCURVE",
"455 483 CURVE SMOOTH",
"295 263 LINE SMOOTH",
"294 262 OFFCURVE",
"290 254 OFFCURVE",
"291 256 CURVE",
"126 483 LINE SMOOTH",
"124 485 OFFCURVE",
"122 490 OFFCURVE",
"117 490 CURVE SMOOTH",
"106 490 LINE",
"282 249 LINE",
"99 0 LINE"
);
},
{
closed = 1;
nodes = (
"134 482 LINE",
"134 490 LINE",
"118 490 LINE",
"118 482 LINE"
);
},
{
closed = 1;
nodes = (
"465 482 LINE",
"465 490 LINE",
"449 490 LINE",
"449 482 LINE"
);
},
{
closed = 1;
nodes = (
"454 8 LINE",
"454 0 LINE",
"470 0 LINE",
"470 8 LINE"
);
},
{
closed = 1;
nodes = (
"109 8 LINE",
"109 0 LINE",
"125 0 LINE",
"125 8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 581;
},
{
anchors = (
{
name = bottom;
position = "{295, 0}";
},
{
name = top;
position = "{295, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 132, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 206, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 417, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 487, 519}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 464, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 169, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 95, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 390, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"156 0 LINE SMOOTH",
"176 0 OFFCURVE",
"189 14 OFFCURVE",
"197 27 CURVE SMOOTH",
"273 156 LINE SMOOTH",
"278 165 OFFCURVE",
"283 175 OFFCURVE",
"287 186 CURVE",
"379 27 LINE SMOOTH",
"388 12 OFFCURVE",
"401 0 OFFCURVE",
"422 0 CURVE SMOOTH",
"571 0 LINE",
"397 275 LINE",
"564 519 LINE",
"422 519 LINE SMOOTH",
"407 519 OFFCURVE",
"397 513 OFFCURVE",
"388 498 CURVE SMOOTH",
"322 382 LINE SMOOTH",
"315 370 OFFCURVE",
"309 359 OFFCURVE",
"305 347 CURVE",
"212 500 LINE SMOOTH",
"204 513 OFFCURVE",
"197 519 OFFCURVE",
"174 519 CURVE SMOOTH",
"25 519 LINE",
"192 268 LINE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"230 481 LINE",
"230 519 LINE",
"156 519 LINE",
"156 481 LINE"
);
},
{
closed = 1;
nodes = (
"441 481 LINE",
"441 519 LINE",
"367 519 LINE",
"367 481 LINE"
);
},
{
closed = 1;
nodes = (
"366 38 LINE",
"366 0 LINE",
"440 0 LINE",
"440 38 LINE"
);
},
{
closed = 1;
nodes = (
"141 38 LINE",
"141 0 LINE",
"215 0 LINE",
"215 38 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
29 27 18 16 14 12 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
21 15 6 0 4 2 0 1 30 1 1 0 0 14 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
21 15 6 0 4 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
21 15 6 0 4 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
position = "{277, 0}";
},
{
name = top;
position = "{277, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 106, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 162, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 389, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 445, 507}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 452, 0}";
},
{
name = SerifSpurLeft;
transform = "{-1, 0, 0, -1, 158, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 102, 0}";
},
{
name = SerifSpurRight;
transform = "{-1, 0, 0, -1, 397, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"38 0 LINE",
"118 0 LINE SMOOTH",
"131 0 OFFCURVE",
"138 10 OFFCURVE",
"144 19 CURVE SMOOTH",
"262 191 LINE SMOOTH",
"267 199 OFFCURVE",
"270 208 OFFCURVE",
"273 217 CURVE",
"400 19 LINE SMOOTH",
"406 10 OFFCURVE",
"413 0 OFFCURVE",
"428 0 CURVE SMOOTH",
"513 0 LINE",
"336 265 LINE",
"506 507 LINE",
"424 507 LINE SMOOTH",
"415 507 OFFCURVE",
"408 500 OFFCURVE",
"402 491 CURVE SMOOTH",
"293 331 LINE SMOOTH",
"287 322 OFFCURVE",
"283 312 OFFCURVE",
"280 303 CURVE",
"156 493 LINE SMOOTH",
"150 502 OFFCURVE",
"146 507 OFFCURVE",
"131 507 CURVE SMOOTH",
"45 507 LINE",
"216 260 LINE",
"38 0 LINE"
);
},
{
closed = 1;
nodes = (
"181 469 LINE",
"181 507 LINE",
"107 507 LINE",
"107 469 LINE"
);
},
{
closed = 1;
nodes = (
"454 469 LINE",
"454 507 LINE",
"380 507 LINE",
"380 469 LINE"
);
},
{
closed = 1;
nodes = (
"378 38 LINE",
"378 0 LINE",
"452 0 LINE",
"452 38 LINE"
);
},
{
closed = 1;
nodes = (
"94 38 LINE",
"94 0 LINE",
"168 0 LINE",
"168 38 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 0 14 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 0 2 1 0 36 3 1 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
20 14 6 0 4 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "79F7CA92-AB14-46BB-B59C-66C634DB8FAE";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"438 39 LINE",
"284 257 LINE",
"430 460 LINE",
"461 461 LINE",
"474 462 OFFCURVE",
"481 468 OFFCURVE",
"481 479 CURVE SMOOTH",
"481 498 LINE",
"333 498 LINE",
"333 479 LINE SMOOTH",
"333 468 OFFCURVE",
"340 462 OFFCURVE",
"353 461 CURVE",
"379 460 LINE",
"263 294 LINE SMOOTH",
"259 288 OFFCURVE",
"255 282 OFFCURVE",
"254 276 CURVE",
"128 460 LINE",
"152 461 LINE",
"165 462 OFFCURVE",
"172 468 OFFCURVE",
"172 479 CURVE SMOOTH",
"172 498 LINE",
"24 498 LINE",
"24 479 LINE SMOOTH",
"24 468 OFFCURVE",
"31 462 OFFCURVE",
"44 461 CURVE",
"75 460 LINE",
"220 255 LINE",
"67 39 LINE",
"40 38 LINE",
"27 37 OFFCURVE",
"20 31 OFFCURVE",
"20 20 CURVE SMOOTH",
"20 0 LINE",
"168 0 LINE",
"168 20 LINE SMOOTH",
"168 31 OFFCURVE",
"161 37 OFFCURVE",
"148 38 CURVE",
"118 39 LINE",
"244 216 LINE",
"247 221 OFFCURVE",
"249 225 OFFCURVE",
"251 232 CURVE",
"385 39 LINE",
"357 38 LINE",
"344 37 OFFCURVE",
"338 31 OFFCURVE",
"338 20 CURVE SMOOTH",
"338 0 LINE",
"485 0 LINE",
"485 20 LINE SMOOTH",
"485 31 OFFCURVE",
"479 37 OFFCURVE",
"466 38 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 423;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "AF92FC2B-67AE-4433-9119-49542B833550";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"506 91 OFFCURVE",
"503 92 OFFCURVE",
"471 97 CURVE",
"358 270 LINE",
"460 416 LINE",
"493 421 OFFCURVE",
"496 422 OFFCURVE",
"503 423 CURVE",
"520 427 OFFCURVE",
"528 437 OFFCURVE",
"528 454 CURVE SMOOTH",
"528 513 LINE",
"527 513 LINE",
"527 513 LINE",
"414 513 LINE",
"413 513 LINE",
"305 513 LINE",
"305 454 LINE SMOOTH",
"305 437 OFFCURVE",
"313 427 OFFCURVE",
"330 423 CURVE",
"333 422 OFFCURVE",
"335 422 OFFCURVE",
"338 421 CURVE",
"299 359 LINE SMOOTH",
"295 353 OFFCURVE",
"291 348 OFFCURVE",
"289 342 CURVE SMOOTH",
"287 336 OFFCURVE",
"285 331 OFFCURVE",
"283 325 CURVE",
"222 423 LINE",
"222 423 LINE",
"239 427 OFFCURVE",
"247 437 OFFCURVE",
"247 454 CURVE SMOOTH",
"247 513 LINE",
"144 513 LINE",
"144 513 LINE",
"25 513 LINE",
"25 513 LINE",
"25 513 LINE",
"25 454 LINE SMOOTH",
"25 437 OFFCURVE",
"33 427 OFFCURVE",
"50 423 CURVE",
"57 422 OFFCURVE",
"60 421 OFFCURVE",
"91 416 CURVE",
"194 264 LINE",
"82 97 LINE",
"49 92 OFFCURVE",
"47 91 OFFCURVE",
"40 90 CURVE",
"23 86 OFFCURVE",
"14 76 OFFCURVE",
"14 59 CURVE SMOOTH",
"14 0 LINE",
"18 0 LINE",
"63 0 LINE",
"90 0 LINE",
"129 0 LINE",
"237 0 LINE",
"237 59 LINE SMOOTH",
"237 76 OFFCURVE",
"229 86 OFFCURVE",
"212 90 CURVE",
"210 90 OFFCURVE",
"208 91 OFFCURVE",
"206 91 CURVE",
"258 171 LINE SMOOTH",
"263 179 OFFCURVE",
"268 189 OFFCURVE",
"271 201 CURVE",
"339 90 LINE",
"323 86 OFFCURVE",
"315 76 OFFCURVE",
"315 59 CURVE SMOOTH",
"315 0 LINE",
"415 0 LINE",
"462 0 LINE",
"490 0 LINE",
"534 0 LINE",
"538 0 LINE",
"538 59 LINE SMOOTH",
"538 76 OFFCURVE",
"530 86 OFFCURVE",
"513 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
29 27 18 16 14 12 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
21 15 6 0 4 2 0 1 30 1 1 0 0 14 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
21 15 6 0 4 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
21 15 6 0 4 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "F75D7555-B0D8-475B-9AFB-3EE7611AA96E";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"441 72 LINE",
"311 265 LINE",
"431 435 LINE",
"455 439 OFFCURVE",
"474 443 OFFCURVE",
"484 445 CURVE SMOOTH",
"494 447 OFFCURVE",
"499 454 OFFCURVE",
"499 464 CURVE SMOOTH",
"499 507 LINE",
"301 507 LINE",
"301 464 LINE SMOOTH",
"301 454 OFFCURVE",
"306 447 OFFCURVE",
"316 445 CURVE",
"316 445 OFFCURVE",
"321 444 OFFCURVE",
"327 443 CURVE SMOOTH",
"333 442 OFFCURVE",
"339 441 OFFCURVE",
"343 440 CURVE",
"269 331 LINE",
"263 321 OFFCURVE",
"259 313 OFFCURVE",
"256 303 CURVE",
"167 441 LINE",
"180 443 OFFCURVE",
"186 445 OFFCURVE",
"187 445 CURVE",
"197 447 OFFCURVE",
"203 453 OFFCURVE",
"203 463 CURVE SMOOTH",
"203 507 LINE",
"5 507 LINE",
"5 463 LINE SMOOTH",
"5 453 OFFCURVE",
"9 447 OFFCURVE",
"19 445 CURVE",
"25 443 OFFCURVE",
"44 441 OFFCURVE",
"72 435 CURVE",
"193 259 LINE",
"64 71 LINE",
"60 71 OFFCURVE",
"52 69 OFFCURVE",
"40 67 CURVE SMOOTH",
"28 65 OFFCURVE",
"20 62 OFFCURVE",
"16 61 CURVE",
"6 59 OFFCURVE",
"1 53 OFFCURVE",
"1 43 CURVE SMOOTH",
"1 0 LINE",
"200 0 LINE",
"200 43 LINE SMOOTH",
"200 53 OFFCURVE",
"195 59 OFFCURVE",
"185 61 CURVE",
"183 61 OFFCURVE",
"177 63 OFFCURVE",
"167 65 CURVE",
"163 66 OFFCURVE",
"159 67 OFFCURVE",
"155 67 CURVE",
"239 191 LINE",
"243 199 OFFCURVE",
"247 207 OFFCURVE",
"249 217 CURVE",
"347 66 LINE",
"333 64 OFFCURVE",
"323 61 OFFCURVE",
"321 61 CURVE",
"311 59 OFFCURVE",
"306 53 OFFCURVE",
"306 43 CURVE SMOOTH",
"306 0 LINE",
"505 0 LINE",
"505 43 LINE SMOOTH",
"505 53 OFFCURVE",
"499 61 OFFCURVE",
"487 63 CURVE SMOOTH",
"475 65 OFFCURVE",
"461 67 OFFCURVE",
"443 71 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 25 17 15 13 11 3 1 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 0 14 31 3 1 2 2 12 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 0 2 1 0 36 3 1 2 2 15 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
20 14 6 0 4 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 1 0 36 3 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
20 14 6 0 4 3 1 1 30 0 1 3 2 1 1 0 35 0 0 0 3 2 0 3 1 0 38 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
leftKerningGroup = x;
note = x;
rightKerningGroup = k;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
anchors = (
{
name = bottom;
position = "{323, -25}";
},
{
name = top;
position = "{308, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 514, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 510, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"225 -180 LINE SMOOTH",
"232 -180 OFFCURVE",
"236 -174 OFFCURVE",
"237 -169 CURVE",
"526 490 LINE",
"519 490 LINE SMOOTH",
"516 490 OFFCURVE",
"512 488 OFFCURVE",
"510 483 CURVE SMOOTH",
"315 38 LINE SMOOTH",
"313 33 OFFCURVE",
"310 27 OFFCURVE",
"309 20 CURVE",
"308 27 OFFCURVE",
"304 33 OFFCURVE",
"302 38 CURVE SMOOTH",
"107 483 LINE SMOOTH",
"105 487 OFFCURVE",
"102 490 OFFCURVE",
"97 490 CURVE SMOOTH",
"90 490 LINE",
"302 9 LINE",
"218 -180 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
},
{
closed = 1;
nodes = (
"521 482 LINE",
"521 490 LINE",
"505 490 LINE",
"505 482 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 617;
},
{
anchors = (
{
name = bottom;
position = "{396, -26}";
},
{
name = top;
position = "{297, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 428, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 502, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"243 -165 LINE SMOOTH",
"272 -165 OFFCURVE",
"283 -155 OFFCURVE",
"292 -135 CURVE SMOOTH",
"569 519 LINE",
"444 519 LINE SMOOTH",
"427 519 OFFCURVE",
"408 507 OFFCURVE",
"403 492 CURVE SMOOTH",
"326 269 LINE SMOOTH",
"323 259 OFFCURVE",
"307 215 OFFCURVE",
"304 206 CURVE",
"299 227 OFFCURVE",
"292 247 OFFCURVE",
"284 268 CURVE SMOOTH",
"199 492 LINE SMOOTH",
"193 507 OFFCURVE",
"181 519 OFFCURVE",
"157 519 CURVE SMOOTH",
"20 519 LINE",
"227 46 LINE",
"127 -165 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
},
{
closed = 1;
nodes = (
"466 481 LINE",
"466 519 LINE",
"392 519 LINE",
"392 481 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
21 19 8 6 4 2 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
13 5 2 0 1 1 30 2 1 1 1 14 31 0 0 0 16 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
13 5 2 0 1 1 30 0 0 0 1 1 0 36 2 1 1 1 14 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
13 5 2 0 1 1 30 2 1 1 0 0 1 1 0 35 2 1 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
13 5 2 0 2 1 30 0 2 1 0 1 2 0 50 0 1 2 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
position = "{344, -50}";
},
{
name = top;
position = "{299, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 424, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 507, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"233 -172 LINE SMOOTH",
"252 -172 OFFCURVE",
"259 -164 OFFCURVE",
"265 -150 CURVE SMOOTH",
"547 507 LINE",
"476 507 LINE SMOOTH",
"465 507 OFFCURVE",
"454 499 OFFCURVE",
"450 488 CURVE SMOOTH",
"319 170 LINE SMOOTH",
"312 154 OFFCURVE",
"308 140 OFFCURVE",
"304 125 CURVE",
"300 139 OFFCURVE",
"294 159 OFFCURVE",
"290 169 CURVE SMOOTH",
"155 488 LINE SMOOTH",
"151 497 OFFCURVE",
"143 507 OFFCURVE",
"127 507 CURVE SMOOTH",
"50 507 LINE",
"259 30 LINE",
"167 -172 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
},
{
closed = 1;
nodes = (
"499 482 LINE",
"499 507 LINE",
"424 507 LINE",
"424 482 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
22 20 8 6 4 2 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
14 5 2 0 1 1 30 2 1 1 1 14 31 0 0 0 16 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
14 5 2 0 1 1 30 0 0 1 0 53 2 1 1 1 14 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
14 5 2 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
14 5 2 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "2C107ADB-014C-4318-8C65-F88E67CCB91D";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"364 498 LINE",
"364 479 LINE SMOOTH",
"364 468 OFFCURVE",
"371 462 OFFCURVE",
"384 461 CURVE",
"435 459 LINE",
"282 98 LINE",
"278 89 OFFCURVE",
"272 72 OFFCURVE",
"271 68 CURVE",
"270 72 OFFCURVE",
"265 89 OFFCURVE",
"261 98 CURVE SMOOTH",
"106 459 LINE",
"157 461 LINE",
"170 462 OFFCURVE",
"177 468 OFFCURVE",
"177 479 CURVE SMOOTH",
"177 498 LINE",
"76 498 LINE",
"76 498 LINE",
"3 498 LINE",
"3 479 LINE SMOOTH",
"3 468 OFFCURVE",
"10 462 OFFCURVE",
"23 461 CURVE",
"53 460 LINE",
"247 18 LINE",
"159 -176 LINE",
"193 -176 LINE SMOOTH",
"203 -176 OFFCURVE",
"211 -169 OFFCURVE",
"215 -160 CURVE SMOOTH",
"484 460 LINE",
"518 461 LINE",
"531 462 OFFCURVE",
"538 468 OFFCURVE",
"538 479 CURVE SMOOTH",
"538 498 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 465;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B034A43C-6788-4818-A4BD-8AD518AECE87";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"504 506 LINE",
"316 506 LINE",
"316 464 LINE SMOOTH",
"316 454 OFFCURVE",
"320 447 OFFCURVE",
"330 445 CURVE SMOOTH",
"340 443 OFFCURVE",
"358 440 OFFCURVE",
"385 434 CURVE",
"276 170 LINE SMOOTH",
"272 160 OFFCURVE",
"266 144 OFFCURVE",
"260 124 CURVE",
"256 140 OFFCURVE",
"253 156 OFFCURVE",
"247 170 CURVE SMOOTH",
"134 434 LINE",
"166 440 OFFCURVE",
"184 444 OFFCURVE",
"190 446 CURVE",
"200 448 OFFCURVE",
"205 454 OFFCURVE",
"205 464 CURVE SMOOTH",
"205 507 LINE",
"-22 507 LINE",
"-22 464 LINE SMOOTH",
"-22 454 OFFCURVE",
"-17 448 OFFCURVE",
"-7 446 CURVE",
"-1 444 OFFCURVE",
"14 440 OFFCURVE",
"38 436 CURVE",
"216 30 LINE",
"124 -171 LINE",
"190 -171 LINE SMOOTH",
"204 -171 OFFCURVE",
"216 -163 OFFCURVE",
"222 -149 CURVE SMOOTH",
"473 435 LINE",
"475 435 OFFCURVE",
"484 437 OFFCURVE",
"498 440 CURVE SMOOTH",
"512 443 OFFCURVE",
"522 446 OFFCURVE",
"525 446 CURVE",
"535 448 OFFCURVE",
"540 454 OFFCURVE",
"540 464 CURVE SMOOTH",
"540 507 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
22 20 8 6 4 2 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
14 5 2 0 1 1 30 2 1 1 1 14 31 0 0 0 16 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
14 5 2 0 1 1 30 0 0 1 0 53 2 1 1 1 14 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
14 5 2 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
14 5 2 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "FA305B41-910E-4A52-9BEA-E292F06A3874";
name = "Jan 15 23, 17:55";
paths = (
{
closed = 1;
nodes = (
"555 513 LINE",
"555 513 LINE",
"456 513 LINE",
"456 513 LINE",
"335 513 LINE",
"335 454 LINE SMOOTH",
"335 437 OFFCURVE",
"343 427 OFFCURVE",
"360 423 CURVE",
"366 422 OFFCURVE",
"368 422 OFFCURVE",
"394 417 CURVE",
"319 224 LINE",
"315 215 OFFCURVE",
"312 206 OFFCURVE",
"309 197 CURVE SMOOTH",
"306 188 OFFCURVE",
"303 179 OFFCURVE",
"300 169 CURVE",
"298 178 OFFCURVE",
"296 188 OFFCURVE",
"293 197 CURVE SMOOTH",
"290 206 OFFCURVE",
"288 215 OFFCURVE",
"284 224 CURVE SMOOTH",
"203 419 LINE",
"219 422 OFFCURVE",
"222 422 OFFCURVE",
"227 423 CURVE SMOOTH",
"244 427 OFFCURVE",
"252 437 OFFCURVE",
"252 454 CURVE SMOOTH",
"252 513 LINE",
"139 513 LINE",
"139 513 LINE",
"31 513 LINE",
"31 513 LINE",
"2 513 LINE",
"2 454 LINE SMOOTH",
"2 437 OFFCURVE",
"10 427 OFFCURVE",
"27 423 CURVE",
"35 422 OFFCURVE",
"32 421 OFFCURVE",
"74 414 CURVE",
"239 38 LINE",
"143 -167 LINE",
"235 -167 LINE SMOOTH",
"247 -167 OFFCURVE",
"255 -166 OFFCURVE",
"261 -161 CURVE",
"267 -157 OFFCURVE",
"272 -150 OFFCURVE",
"276 -141 CURVE SMOOTH",
"513 414 LINE",
"555 421 OFFCURVE",
"552 422 OFFCURVE",
"560 423 CURVE",
"577 427 OFFCURVE",
"585 437 OFFCURVE",
"585 454 CURVE SMOOTH",
"585 513 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
21 19 8 6 4 2 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
13 5 2 0 1 1 30 2 1 1 1 14 31 0 0 0 16 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
13 5 2 0 1 1 30 0 0 0 1 1 0 36 2 1 1 1 14 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
13 5 2 0 1 1 30 2 1 1 0 0 1 1 0 35 2 1 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
13 5 2 0 2 1 30 0 2 1 0 1 2 0 50 0 1 2 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
leftKerningGroup = v;
leftMetricsKey = v;
note = y;
rightKerningGroup = v;
rightMetricsKey = v;
unicode = 0079;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 00FD;
},
{
glyphname = ycircumflex;
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 102, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 0177;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 102, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 00FF;
},
{
glyphname = ydotbelow;
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 285, -25}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 277, -50}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 304, -26}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 147, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 112, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 76, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 1EF3;
},
{
glyphname = yhook;
layers = (
{
anchors = (
{
name = bottom;
position = "{323, -25}";
},
{
name = top;
position = "{308, 490}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 107, 490}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 103, 490}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"225 -180 LINE SMOOTH",
"230.333 -180 OFFCURVE",
"235 -174 OFFCURVE",
"237 -169 CURVE SMOOTH",
"503 438 LINE SMOOTH",
"519 474 OFFCURVE",
"547.574 488 OFFCURVE",
"579 488 CURVE SMOOTH",
"594.333 488 OFFCURVE",
"613 485 OFFCURVE",
"625 480 CURVE SMOOTH",
"630 478 OFFCURVE",
"634 477 OFFCURVE",
"635 481 CURVE SMOOTH",
"636 485 LINE",
"615 494 OFFCURVE",
"600 498 OFFCURVE",
"579 498 CURVE SMOOTH",
"530 498 OFFCURVE",
"508 480 OFFCURVE",
"489 437 CURVE SMOOTH",
"315 38 LINE",
"312.333 32.667 OFFCURVE",
"309.333 25.333 OFFCURVE",
"308 20 CURVE",
"306.667 26.667 OFFCURVE",
"304 33 OFFCURVE",
"302 38 CURVE SMOOTH",
"107 483 LINE SMOOTH",
"105 487 OFFCURVE",
"102.333 490 OFFCURVE",
"97 490 CURVE SMOOTH",
"90 490 LINE",
"302 9 LINE",
"218 -180 LINE"
);
},
{
closed = 1;
nodes = (
"114 482 LINE",
"114 490 LINE",
"98 490 LINE",
"98 482 LINE"
);
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
position = "{344, -50}";
},
{
name = top;
position = "{299, 507}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 90, 507}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 173, 507}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"233 -172 LINE SMOOTH",
"251.667 -172 OFFCURVE",
"259 -164 OFFCURVE",
"265 -150 CURVE SMOOTH",
"508 415 LINE SMOOTH",
"521 444 OFFCURVE",
"540.333 452 OFFCURVE",
"563 452 CURVE SMOOTH",
"581 452 OFFCURVE",
"594 445 OFFCURVE",
"606 445 CURVE SMOOTH",
"614 445 OFFCURVE",
"623 447 OFFCURVE",
"626 463 CURVE SMOOTH",
"633 499 LINE",
"607.667 509.667 OFFCURVE",
"586.667 515 OFFCURVE",
"556 515 CURVE SMOOTH",
"487.184 515 OFFCURVE",
"448 478 OFFCURVE",
"426 426 CURVE SMOOTH",
"319 170 LINE SMOOTH",
"313 155 OFFCURVE",
"308 139.667 OFFCURVE",
"304 125 CURVE",
"300 140.333 OFFCURVE",
"296 155 OFFCURVE",
"290 169 CURVE SMOOTH",
"155 488 LINE SMOOTH",
"151 497 OFFCURVE",
"143 507 OFFCURVE",
"127 507 CURVE SMOOTH",
"50 507 LINE",
"259 30 LINE",
"167 -172 LINE"
);
},
{
closed = 1;
nodes = (
"189 482 LINE",
"189 507 LINE",
"114 507 LINE",
"114 482 LINE"
);
}
);
width = 597;
},
{
anchors = (
{
name = bottom;
position = "{366, -26}";
},
{
name = top;
position = "{297, 519}";
}
);
components = (
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 117, 519}";
},
{
name = SerifSpurRight;
transform = "{1, 0, 0, 1, 191, 519}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"243 -165 LINE SMOOTH",
"272.333 -165 OFFCURVE",
"282.667 -155 OFFCURVE",
"292 -135 CURVE SMOOTH",
"516 397 LINE SMOOTH",
"525.333 421 OFFCURVE",
"537 426 OFFCURVE",
"553 426 CURVE SMOOTH",
"566.139 426 OFFCURVE",
"580.111 421 OFFCURVE",
"589 421 CURVE SMOOTH",
"601 421 OFFCURVE",
"616.333 426.333 OFFCURVE",
"623 449 CURVE",
"634 509 LINE",
"604.667 522.333 OFFCURVE",
"578.333 527 OFFCURVE",
"541 527 CURVE SMOOTH",
"453.377 527 OFFCURVE",
"396.604 478.811 OFFCURVE",
"376 417 CURVE SMOOTH",
"326 269 LINE SMOOTH",
"318 247.667 OFFCURVE",
"310.667 226.333 OFFCURVE",
"304 205 CURVE",
"298.667 226.333 OFFCURVE",
"292 248 OFFCURVE",
"284 268 CURVE SMOOTH",
"199 492 LINE SMOOTH",
"193.667 506.667 OFFCURVE",
"181 519 OFFCURVE",
"157 519 CURVE SMOOTH",
"20 519 LINE",
"227 46 LINE",
"127 -165 LINE"
);
},
{
closed = 1;
nodes = (
"215 481 LINE",
"215 519 LINE",
"141 519 LINE",
"141 481 LINE"
);
}
);
width = 635;
}
);
unicode = 01B4;
},
{
glyphname = yhookabove;
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 1EF7;
},
{
glyphname = ymacron;
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 0233;
},
{
glyphname = ytilde;
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 617;
},
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 597;
},
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 119, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 589;
}
);
unicode = 1EF9;
},
{
glyphname = z;
layers = (
{
anchors = (
{
name = bottom;
position = "{231, 0}";
},
{
name = top;
position = "{231, 490}";
}
);
components = (
{
name = SerifUpLeftLower;
transform = "{-1, 0, 0, -1, 65, 480}";
},
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 406, 10}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"406 0 LINE",
"406 10 LINE",
"65 10 LINE",
"408 479 LINE SMOOTH",
"410 482 OFFCURVE",
"411 483 OFFCURVE",
"411 485 CURVE SMOOTH",
"411 490 LINE",
"65 490 LINE",
"65 480 LINE",
"395 480 LINE",
"51 10 LINE SMOOTH",
"49 7 OFFCURVE",
"48 6 OFFCURVE",
"48 3 CURVE SMOOTH",
"48 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 459;
},
{
anchors = (
{
name = bottom;
position = "{242, 0}";
},
{
name = top;
position = "{242, 507}";
}
);
components = (
{
name = SerifUpLeftLower;
transform = "{-1, 0, 0, -1, 55, 437}";
},
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 426, 70}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"426 0 LINE",
"426 70 LINE",
"145 70 LINE",
"419 435 LINE SMOOTH",
"426 445 OFFCURVE",
"432 456 OFFCURVE",
"432 469 CURVE SMOOTH",
"432 507 LINE",
"55 507 LINE",
"55 437 LINE",
"328 437 LINE",
"53 69 LINE SMOOTH",
"45 58 OFFCURVE",
"40 46 OFFCURVE",
"40 37 CURVE SMOOTH",
"40 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 14 13 12 7 6 5 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 3 0 0 36 0 3 3 14 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 0 2 0 3 2 0 0 38 0 0 0 1 0 0 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 472;
},
{
anchors = (
{
name = bottom;
position = "{245, 0}";
},
{
name = top;
position = "{245, 513}";
}
);
components = (
{
name = SerifUpLeftLower;
transform = "{-1, 0, 0, -1, 49, 404}";
},
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 455, 114}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"455 0 LINE",
"455 115 LINE",
"214 115 LINE",
"430 401 LINE SMOOTH",
"441 416 OFFCURVE",
"450 436 OFFCURVE",
"450 457 CURVE SMOOTH",
"450 519 LINE",
"49 519 LINE",
"49 404 LINE",
"274 404 LINE",
"55 114 LINE SMOOTH",
"42 97 OFFCURVE",
"35 76 OFFCURVE",
"35 63 CURVE SMOOTH",
"35 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 14 13 12 7 6 5 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 3 0 0 36 0 3 3 14 31 0 0 0 1 0 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 2 0 3 2 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
leftKerningGroup = z;
note = z;
rightKerningGroup = uni01F2;
unicode = 007A;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 459;
},
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 472;
},
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 116, -6}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 490;
}
);
unicode = 017A;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 459;
},
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 472;
},
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 50, -6}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 490;
}
);
unicode = 017E;
},
{
glyphname = zdotaccent;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 193, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 459;
},
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 157, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 472;
},
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 141, -6}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 490;
}
);
unicode = 017C;
},
{
glyphname = zdotbelow;
layers = (
{
components = (
{
name = z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 193, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 459;
},
{
components = (
{
name = z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 472;
},
{
components = (
{
name = z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 153, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 490;
}
);
unicode = 1E93;
},
{
color = 3;
glyphname = fi;
layers = (
{
anchors = (
{
name = _top_;
position = "{558, 708}";
},
{
name = bottom;
position = "{181, 0}";
},
{
name = ogonek;
position = "{551, 2}";
},
{
name = top;
position = "{201, 749}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 480, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 635, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 412 LINE",
"615 412 LINE",
"635 518 LINE",
"253 518 LINE",
"253 521 LINE SMOOTH",
"253 602 OFFCURVE",
"292 635 OFFCURVE",
"388 635 CURVE SMOOTH",
"435 635 OFFCURVE",
"459 633 OFFCURVE",
"474 629 CURVE",
"474 625 OFFCURVE",
"477 610 OFFCURVE",
"480 602 CURVE SMOOTH",
"487 584 OFFCURVE",
"511 550 OFFCURVE",
"557 550 CURVE SMOOTH",
"609 550 OFFCURVE",
"640 592 OFFCURVE",
"640 637 CURVE SMOOTH",
"640 689 OFFCURVE",
"588 743 OFFCURVE",
"377 743 CURVE SMOOTH",
"201 743 OFFCURVE",
"103 667 OFFCURVE",
"103 547 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"635 0 LINE",
"635 518 LINE",
"480 518 LINE",
"480 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 732;
},
{
anchors = (
{
name = _top_;
position = "{452, 688}";
},
{
name = bottom;
position = "{155, 0}";
},
{
name = ogonek;
position = "{468, 2}";
},
{
name = top;
position = "{184, 737}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 108, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 198, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 427, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 516, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"506 432 LINE",
"516 497 LINE",
"195 497 LINE",
"195 520 LINE SMOOTH",
"195 614 OFFCURVE",
"249 659 OFFCURVE",
"345 659 CURVE SMOOTH",
"359 659 OFFCURVE",
"388 658 OFFCURVE",
"409 651 CURVE",
"408 646 OFFCURVE",
"407 643 OFFCURVE",
"407 637 CURVE SMOOTH",
"407 603 OFFCURVE",
"436 574 OFFCURVE",
"470 574 CURVE SMOOTH",
"505 574 OFFCURVE",
"534 603 OFFCURVE",
"534 638 CURVE SMOOTH",
"534 701 OFFCURVE",
"436 727 OFFCURVE",
"347 727 CURVE SMOOTH",
"187 727 OFFCURVE",
"108 643 OFFCURVE",
"108 529 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
},
{
closed = 1;
nodes = (
"516 0 LINE",
"516 497 LINE",
"427 497 LINE",
"427 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 33 32 31 30 29 28 27 24 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 4 5 2 30 0 2 2 1 1 0 36 0 1 1 13 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
198 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 6 5 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "80668298-D6F6-42FE-8890-65B9BECB87A7";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"453 40 LINE",
"453 482 LINE",
"162 482 LINE",
"162 523 LINE SMOOTH",
"162 626 OFFCURVE",
"218 686 OFFCURVE",
"315 686 CURVE SMOOTH",
"344 686 OFFCURVE",
"372 680 OFFCURVE",
"396 666 CURVE",
"392 662 OFFCURVE",
"387 651 OFFCURVE",
"386 639 CURVE SMOOTH",
"386 611 OFFCURVE",
"407 594 OFFCURVE",
"430 594 CURVE SMOOTH",
"455 594 OFFCURVE",
"474 613 OFFCURVE",
"474 637 CURVE SMOOTH",
"474 647 OFFCURVE",
"472 657 OFFCURVE",
"460 670 CURVE",
"425 706 OFFCURVE",
"376 723 OFFCURVE",
"315 723 CURVE SMOOTH",
"188 723 OFFCURVE",
"115 647 OFFCURVE",
"115 525 CURVE SMOOTH",
"115 482 LINE",
"31 482 LINE",
"31 462 LINE SMOOTH",
"31 454 OFFCURVE",
"35 451 OFFCURVE",
"45 450 CURVE SMOOTH",
"115 445 LINE",
"115 40 LINE",
"53 38 LINE",
"40 37 OFFCURVE",
"33 31 OFFCURVE",
"33 20 CURVE SMOOTH",
"33 0 LINE",
"247 0 LINE",
"247 20 LINE SMOOTH",
"247 31 OFFCURVE",
"240 37 OFFCURVE",
"227 38 CURVE",
"163 40 LINE",
"163 446 LINE",
"406 446 LINE",
"406 40 LINE",
"342 38 LINE",
"329 37 OFFCURVE",
"322 31 OFFCURVE",
"322 20 CURVE SMOOTH",
"322 0 LINE",
"538 0 LINE",
"538 20 LINE SMOOTH",
"538 31 OFFCURVE",
"531 37 OFFCURVE",
"518 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 501;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "6EF67D69-3B44-4AC9-88A8-11414F2E0FFE";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"335 -7 LINE",
"407 -7 LINE",
"407 66 LINE",
"350 55 LINE SMOOTH",
"340 53 OFFCURVE",
"335 46 OFFCURVE",
"335 36 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"496 66 LINE",
"496 489 LINE",
"190 489 LINE",
"190 515 LINE SMOOTH",
"190 593 OFFCURVE",
"225 642 OFFCURVE",
"300 657 CURVE SMOOTH",
"330 663 OFFCURVE",
"360 660 OFFCURVE",
"391 649 CURVE",
"389 643 OFFCURVE",
"389 636 OFFCURVE",
"389 629 CURVE SMOOTH",
"389 594 OFFCURVE",
"413 567 OFFCURVE",
"457 567 CURVE SMOOTH",
"483 567 OFFCURVE",
"515 596 OFFCURVE",
"515 629 CURVE SMOOTH",
"515 690 OFFCURVE",
"418 728 OFFCURVE",
"333 728 CURVE SMOOTH",
"189 724 OFFCURVE",
"103 652 OFFCURVE",
"103 517 CURVE SMOOTH",
"103 489 LINE",
"23 489 LINE",
"23 453 LINE SMOOTH",
"23 441 OFFCURVE",
"31 434 OFFCURVE",
"47 430 CURVE SMOOTH",
"103 423 LINE",
"103 66 LINE",
"65 59 OFFCURVE",
"45 55 OFFCURVE",
"41 55 CURVE",
"31 53 OFFCURVE",
"25 46 OFFCURVE",
"25 36 CURVE SMOOTH",
"25 -7 LINE",
"103 -7 LINE",
"193 -7 LINE",
"274 -7 LINE",
"274 36 LINE SMOOTH",
"274 46 OFFCURVE",
"269 53 OFFCURVE",
"259 55 CURVE",
"255 56 OFFCURVE",
"233 60 OFFCURVE",
"193 66 CURVE",
"193 425 LINE",
"407 425 LINE",
"407 -7 LINE",
"568 -7 LINE",
"568 36 LINE SMOOTH",
"568 46 OFFCURVE",
"563 53 OFFCURVE",
"553 55 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 33 32 31 30 29 28 27 24 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 4 5 2 30 0 2 2 1 1 0 36 0 1 1 13 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
198 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 6 5 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "CA570AD4-0ACB-4D88-B112-C71168BBC797";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"602 90 OFFCURVE",
"599 91 OFFCURVE",
"595 91 CURVE SMOOTH",
"591 91 OFFCURVE",
"585 93 OFFCURVE",
"577 94 CURVE SMOOTH",
"569 95 OFFCURVE",
"558 97 OFFCURVE",
"546 99 CURVE",
"546 508 LINE",
"228 508 LINE",
"228 521 LINE SMOOTH",
"228 543 OFFCURVE",
"231 563 OFFCURVE",
"237 580 CURVE SMOOTH",
"243 597 OFFCURVE",
"252 611 OFFCURVE",
"266 622 CURVE",
"279 633 OFFCURVE",
"296 640 OFFCURVE",
"316 646 CURVE",
"347 654 OFFCURVE",
"378 654 OFFCURVE",
"408 646 CURVE",
"407 642 OFFCURVE",
"407 638 OFFCURVE",
"407 634 CURVE SMOOTH",
"407 623 OFFCURVE",
"409 613 OFFCURVE",
"413 604 CURVE SMOOTH",
"417 595 OFFCURVE",
"423 587 OFFCURVE",
"430 580 CURVE SMOOTH",
"437 573 OFFCURVE",
"445 567 OFFCURVE",
"454 563 CURVE SMOOTH",
"463 559 OFFCURVE",
"474 557 OFFCURVE",
"485 557 CURVE SMOOTH",
"496 557 OFFCURVE",
"506 559 OFFCURVE",
"516 563 CURVE SMOOTH",
"526 567 OFFCURVE",
"534 573 OFFCURVE",
"541 580 CURVE SMOOTH",
"548 587 OFFCURVE",
"554 595 OFFCURVE",
"558 604 CURVE SMOOTH",
"562 613 OFFCURVE",
"565 623 OFFCURVE",
"565 634 CURVE SMOOTH",
"565 645 OFFCURVE",
"562 655 OFFCURVE",
"558 665 CURVE",
"554 674 OFFCURVE",
"549 681 OFFCURVE",
"543 688 CURVE",
"540 691 OFFCURVE",
"537 694 OFFCURVE",
"533 697 CURVE",
"507 715 OFFCURVE",
"476 729 OFFCURVE",
"440 737 CURVE",
"430 740 OFFCURVE",
"419 742 OFFCURVE",
"407 743 CURVE",
"405 743 OFFCURVE",
"400 743 OFFCURVE",
"391 744 CURVE",
"388 744 LINE SMOOTH",
"387 744 OFFCURVE",
"386 745 OFFCURVE",
"383 745 CURVE SMOOTH",
"364 745 LINE SMOOTH",
"320 745 OFFCURVE",
"283 739 OFFCURVE",
"251 728 CURVE SMOOTH",
"219 717 OFFCURVE",
"192 702 OFFCURVE",
"171 682 CURVE SMOOTH",
"150 662 OFFCURVE",
"134 639 OFFCURVE",
"124 612 CURVE SMOOTH",
"114 585 OFFCURVE",
"109 556 OFFCURVE",
"109 525 CURVE SMOOTH",
"109 508 LINE",
"32 508 LINE",
"32 458 LINE SMOOTH",
"32 449 OFFCURVE",
"35 442 OFFCURVE",
"41 437 CURVE SMOOTH",
"47 432 OFFCURVE",
"54 429 OFFCURVE",
"64 427 CURVE",
"109 420 LINE",
"109 99 LINE",
"97 97 OFFCURVE",
"86 95 OFFCURVE",
"79 94 CURVE SMOOTH",
"72 93 OFFCURVE",
"68 92 OFFCURVE",
"65 91 CURVE SMOOTH",
"62 90 OFFCURVE",
"59 90 OFFCURVE",
"58 90 CURVE",
"41 86 OFFCURVE",
"33 76 OFFCURVE",
"33 59 CURVE SMOOTH",
"33 0 LINE",
"109 0 LINE",
"232 0 LINE",
"314 0 LINE",
"314 59 LINE SMOOTH",
"314 76 OFFCURVE",
"306 86 OFFCURVE",
"289 90 CURVE",
"288 90 OFFCURVE",
"285 91 OFFCURVE",
"281 91 CURVE SMOOTH",
"277 91 OFFCURVE",
"271 93 OFFCURVE",
"263 94 CURVE SMOOTH",
"255 95 OFFCURVE",
"244 97 OFFCURVE",
"232 99 CURVE",
"232 421 LINE",
"423 421 LINE",
"423 99 LINE",
"411 97 OFFCURVE",
"400 95 OFFCURVE",
"393 94 CURVE SMOOTH",
"386 93 OFFCURVE",
"382 92 OFFCURVE",
"379 91 CURVE",
"376 91 OFFCURVE",
"373 90 OFFCURVE",
"372 90 CURVE",
"355 86 OFFCURVE",
"347 76 OFFCURVE",
"347 59 CURVE SMOOTH",
"347 0 LINE",
"423 0 LINE",
"546 0 LINE",
"628 0 LINE",
"628 59 LINE SMOOTH",
"628 76 OFFCURVE",
"620 86 OFFCURVE",
"603 90 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 629;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = f;
},
{
name = i;
transform = "{1, 0, 0, 1, 371, 0}";
}
);
layerId = "4D589575-D816-47A5-BDF9-6D4D5E38C227";
name = "Feb 26 23, 18:27";
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 33 32 31 30 29 28 27 24 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 4 5 2 30 0 2 2 1 1 0 36 0 1 1 13 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
198 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 6 5 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 645;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "F5B8BD42-6F55-4F7F-B8EB-9477C9DE0DC2";
name = "Feb 26 23, 19:18";
paths = (
{
closed = 1;
nodes = (
"254 412 LINE",
"423 412 LINE",
"423 0 LINE",
"578 0 LINE",
"578 518 LINE",
"249 518 LINE",
"249 520 LINE SMOOTH",
"249 612 OFFCURVE",
"298 645 OFFCURVE",
"424 645 CURVE SMOOTH",
"441 645 OFFCURVE",
"460 649 OFFCURVE",
"461 666 CURVE SMOOTH",
"466 744 LINE",
"443 751 OFFCURVE",
"409 753 OFFCURVE",
"378 753 CURVE SMOOTH",
"281 753 OFFCURVE",
"211 727 OFFCURVE",
"166 687 CURVE SMOOTH",
"121 646 OFFCURVE",
"99 588 OFFCURVE",
"99 525 CURVE SMOOTH",
"99 518 LINE",
"26 518 LINE",
"26 457 LINE SMOOTH",
"26 434 OFFCURVE",
"42 424 OFFCURVE",
"65 419 CURVE SMOOTH",
"99 412 LINE",
"99 0 LINE",
"254 0 LINE",
"254 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "20C59C4E-E5F5-4812-AA59-878E57162B8C";
name = "Feb 27 23, 17:46";
paths = (
{
closed = 1;
nodes = (
"183 432 LINE",
"397 432 LINE",
"397 0 LINE",
"486 0 LINE",
"486 497 LINE",
"180 497 LINE",
"180 522 LINE SMOOTH",
"180 620.667 OFFCURVE",
"230.333 670 OFFCURVE",
"349 670 CURVE SMOOTH",
"353.667 670 OFFCURVE",
"358 669.833 OFFCURVE",
"362 669.5 CURVE SMOOTH",
"366 669.167 OFFCURVE",
"370 669 OFFCURVE",
"374 669 CURVE SMOOTH",
"386 669 OFFCURVE",
"392.667 671 OFFCURVE",
"394 679 CURVE SMOOTH",
"397 726 LINE",
"378.333 732.667 OFFCURVE",
"349.333 736 OFFCURVE",
"324 736 CURVE SMOOTH",
"176.622 736 OFFCURVE",
"93 654.148 OFFCURVE",
"93 525 CURVE SMOOTH",
"93 497 LINE",
"13 497 LINE",
"13 460 LINE SMOOTH",
"13 446.667 OFFCURVE",
"23.667 441 OFFCURVE",
"37 437 CURVE",
"93 431 LINE",
"93 0 LINE",
"183 0 LINE",
"183 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 33 32 31 30 29 28 27 24 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 4 5 2 30 0 2 2 1 1 0 36 0 1 1 13 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
198 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 6 5 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = f;
},
{
name = i;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "8E352FCD-DC9F-4480-9A89-2232F2E36D15";
name = "Feb 27 23, 18:23";
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 752;
},
{
anchors = (
{
name = _top_;
position = "{558, 708}";
},
{
name = bottom;
position = "{181, 0}";
},
{
name = ogonek;
position = "{551, 2}";
},
{
name = top;
position = "{201, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 480, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 635, 0}";
}
);
layerId = "3028DDE8-36CD-45EE-B94B-728B59468E46";
name = "Feb 27 23, 18:37";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 412 LINE",
"615 412 LINE",
"635 518 LINE",
"253 518 LINE",
"253 521 LINE SMOOTH",
"253 602 OFFCURVE",
"292 635 OFFCURVE",
"388 635 CURVE SMOOTH",
"435 635 OFFCURVE",
"461 628 OFFCURVE",
"477 612 CURVE",
"478 608 LINE SMOOTH",
"483 587 OFFCURVE",
"509 550 OFFCURVE",
"557 550 CURVE SMOOTH",
"609 550 OFFCURVE",
"640 592 OFFCURVE",
"640 637 CURVE SMOOTH",
"640 689 OFFCURVE",
"588 743 OFFCURVE",
"377 743 CURVE SMOOTH",
"201 743 OFFCURVE",
"103 667 OFFCURVE",
"103 547 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"635 0 LINE",
"635 518 LINE",
"480 518 LINE",
"480 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 732;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "21251FC5-DD9E-4895-AE9F-F342BCDAE5E5";
name = "Feb 27 23, 18:41";
paths = (
{
closed = 1;
nodes = (
"131 459 LINE",
"398 459 LINE",
"398 0 LINE",
"410 0 LINE",
"410 469 LINE",
"131 469 LINE",
"131 524 LINE SMOOTH",
"131 641 OFFCURVE",
"194 702 OFFCURVE",
"293 702 CURVE SMOOTH",
"309 702 OFFCURVE",
"321 701 OFFCURVE",
"329 699 CURVE SMOOTH",
"336 696 OFFCURVE",
"342 695 OFFCURVE",
"345 695 CURVE SMOOTH",
"347 695 OFFCURVE",
"348 696 OFFCURVE",
"348 697 CURVE SMOOTH",
"349 701 LINE",
"336 709 OFFCURVE",
"313 712 OFFCURVE",
"293 712 CURVE SMOOTH",
"188 712 OFFCURVE",
"119 643 OFFCURVE",
"119 524 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE",
"131 0 LINE",
"131 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 432;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "4F6734F9-9DEA-41AE-A326-15C0395A40A2";
name = "Feb 27 23, 18:59";
paths = (
{
closed = 1;
nodes = (
"464 679 OFFCURVE",
"390 708 OFFCURVE",
"306 708 CURVE SMOOTH",
"229 708 OFFCURVE",
"118 652 OFFCURVE",
"118 546 CURVE SMOOTH",
"118 499 OFFCURVE",
"118 477 OFFCURVE",
"119 473 CURVE",
"119 464 LINE",
"131 464 LINE",
"131 475 LINE",
"130 477 OFFCURVE",
"130 495 OFFCURVE",
"130 546 CURVE SMOOTH",
"130 646 OFFCURVE",
"233 698 OFFCURVE",
"306 698 CURVE SMOOTH",
"385 698 OFFCURVE",
"455 671 OFFCURVE",
"475 633 CURVE",
"485 637 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
anchors = (
{
name = _top_;
position = "{462, 700}";
},
{
name = bottom;
position = "{126, 0}";
},
{
name = ogonek;
position = "{456, 2}";
},
{
name = top;
position = "{169, 700}";
}
);
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 131, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 454, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 466, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"461 459 LINE",
"466 469 LINE",
"131 469 LINE",
"130 545 LINE SMOOTH",
"129 645 OFFCURVE",
"229 697 OFFCURVE",
"315 697 CURVE SMOOTH",
"371 697 OFFCURVE",
"435 676 OFFCURVE",
"460 651 CURVE",
"442 651 OFFCURVE",
"432 636 OFFCURVE",
"432 623 CURVE SMOOTH",
"432 610 OFFCURVE",
"445 596 OFFCURVE",
"460 596 CURVE SMOOTH",
"475 596 OFFCURVE",
"488 610 OFFCURVE",
"488 623 CURVE",
"488 665 OFFCURVE",
"399 707 OFFCURVE",
"315 707 CURVE SMOOTH",
"209 707 OFFCURVE",
"119 641 OFFCURVE",
"119 545 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"34 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
},
{
closed = 1;
nodes = (
"466 0 LINE",
"466 469 LINE",
"454 469 LINE",
"454 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 570;
},
{
anchors = (
{
name = _top_;
position = "{462, 700}";
},
{
name = bottom;
position = "{126, 0}";
},
{
name = ogonek;
position = "{456, 2}";
},
{
name = top;
position = "{169, 700}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 131, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 454, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 466, 0}";
},
{
name = SerifSpurLeft;
transform = "{1, 0, 0, 1, 454, 490}";
}
);
layerId = "27D90684-F10E-4B6C-A722-33D17E9513B8";
name = "Feb 27 23, 19:02";
paths = (
{
closed = 1;
nodes = (
"466 0 LINE",
"466 490 LINE",
"454 490 LINE",
"454 0 LINE"
);
},
{
closed = 1;
nodes = (
"130 545 LINE SMOOTH",
"129 645 OFFCURVE",
"233 697 OFFCURVE",
"306 697 CURVE SMOOTH",
"385 697 OFFCURVE",
"455 670 OFFCURVE",
"475 632 CURVE",
"485 636 LINE",
"464 678 OFFCURVE",
"390 707 OFFCURVE",
"306 707 CURVE SMOOTH",
"229 707 OFFCURVE",
"119 651 OFFCURVE",
"119 545 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE",
"131 0 LINE",
"131 459 LINE",
"306 459 LINE",
"306 469 LINE",
"131 469 LINE"
);
},
{
closed = 1;
nodes = (
"432 610 OFFCURVE",
"445 596 OFFCURVE",
"460 596 CURVE SMOOTH",
"475 596 OFFCURVE",
"488 610 OFFCURVE",
"488 623 CURVE SMOOTH",
"488 639 OFFCURVE",
"475 651 OFFCURVE",
"460 651 CURVE SMOOTH",
"445 651 OFFCURVE",
"432 639 OFFCURVE",
"432 623 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
anchors = (
{
name = _top_;
position = "{462, 700}";
},
{
name = bottom;
position = "{126, 0}";
},
{
name = ogonek;
position = "{456, 2}";
},
{
name = top;
position = "{169, 700}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 466, 0}";
},
{
name = fitalictail;
}
);
layerId = "8989DCD9-A822-4D0D-98A5-C81D24B677D0";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"461 459 LINE",
"466 469 LINE",
"131 469 LINE",
"130 545 LINE SMOOTH",
"129 645 OFFCURVE",
"229 697 OFFCURVE",
"315 697 CURVE SMOOTH",
"371 697 OFFCURVE",
"435 676 OFFCURVE",
"460 651 CURVE",
"442 651 OFFCURVE",
"432 636 OFFCURVE",
"432 623 CURVE SMOOTH",
"432 610 OFFCURVE",
"445 596 OFFCURVE",
"460 596 CURVE SMOOTH",
"475 596 OFFCURVE",
"488 610 OFFCURVE",
"488 623 CURVE",
"488 665 OFFCURVE",
"399 707 OFFCURVE",
"315 707 CURVE SMOOTH",
"209 707 OFFCURVE",
"119 641 OFFCURVE",
"119 545 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"34 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
},
{
closed = 1;
nodes = (
"466 0 LINE",
"466 469 LINE",
"454 469 LINE",
"454 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 570;
},
{
anchors = (
{
name = _top_;
position = "{452, 688}";
},
{
name = bottom;
position = "{155, 0}";
},
{
name = ogonek;
position = "{468, 2}";
},
{
name = top;
position = "{184, 737}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 516, 0}";
},
{
name = fitalictail;
}
);
layerId = "C4ECA1C5-EA92-4E04-ABAA-0F48B9F07C69";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"506 432 LINE",
"516 497 LINE",
"195 497 LINE",
"195 520 LINE SMOOTH",
"195 614 OFFCURVE",
"249 659 OFFCURVE",
"345 659 CURVE SMOOTH",
"359 659 OFFCURVE",
"388 658 OFFCURVE",
"409 651 CURVE",
"408 646 OFFCURVE",
"407 643 OFFCURVE",
"407 637 CURVE SMOOTH",
"407 603 OFFCURVE",
"436 574 OFFCURVE",
"470 574 CURVE SMOOTH",
"505 574 OFFCURVE",
"534 603 OFFCURVE",
"534 638 CURVE SMOOTH",
"534 701 OFFCURVE",
"436 727 OFFCURVE",
"347 727 CURVE SMOOTH",
"187 727 OFFCURVE",
"108 643 OFFCURVE",
"108 529 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
},
{
closed = 1;
nodes = (
"516 0 LINE",
"516 497 LINE",
"427 497 LINE",
"427 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 33 32 31 30 29 28 27 24 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 4 5 2 30 0 2 2 1 1 0 36 0 1 1 13 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 31 7 6 2 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
198 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 13 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 4 5 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 6 5 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
anchors = (
{
name = _top_;
position = "{558, 708}";
},
{
name = bottom;
position = "{181, 0}";
},
{
name = ogonek;
position = "{551, 2}";
},
{
name = top;
position = "{201, 749}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 635, 0}";
},
{
name = fitalictail;
}
);
layerId = "39542724-42C3-4865-B19C-118265F179DE";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 103 LINE",
"258 412 LINE",
"615 412 LINE",
"635 518 LINE",
"253 518 LINE",
"253 521 LINE SMOOTH",
"253 602 OFFCURVE",
"292 635 OFFCURVE",
"388 635 CURVE SMOOTH",
"435 635 OFFCURVE",
"459 633 OFFCURVE",
"474 629 CURVE",
"474 625 OFFCURVE",
"477 610 OFFCURVE",
"480 602 CURVE SMOOTH",
"487 584 OFFCURVE",
"511 550 OFFCURVE",
"557 550 CURVE SMOOTH",
"609 550 OFFCURVE",
"640 592 OFFCURVE",
"640 637 CURVE SMOOTH",
"640 689 OFFCURVE",
"588 743 OFFCURVE",
"377 743 CURVE SMOOTH",
"201 743 OFFCURVE",
"103 667 OFFCURVE",
"103 547 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"635 0 LINE",
"635 518 LINE",
"480 518 LINE",
"480 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 32 0 32 31 30 29 28 27 26 21 19 14 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 16 2 2 1 1 1 5 0 2 30 0 2 2 1 1 0 36 0 1 1 19 31 0 5 5 0 0 0 36 3 1 0 0 14 31 7 6 2 4 4 12 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 3 1 0 0 5 4 0 5 0 0 38 0 2 2 1 1 0 36 0 1 1 19 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
17 16 2 2 1 1 1 5 0 2 30 7 6 2 4 5 4 53 0 1 0 2 0 1 2 1 0 38 3 1 0 5 5 0 0 0 35 3 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 16 2 2 1 1 1 5 3 2 30 0 0 2 3 2 0 3 50 7 1 6 5 4 5 6 4 50 0 4 4 51 0 1 0 2 0 1 2 1 0 38 0 3 5 5 3 0 0 35 0 3 3 5 0 0 36 0 5 3 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 732;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = fi;
rightKerningGroup = i;
rightMetricsKey = n;
unicode = FB01;
},
{
color = 3;
glyphname = fl;
layers = (
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 119, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 131, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 428, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 440, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"286 459 LINE",
"286 469 LINE",
"131 469 LINE",
"131 507 LINE SMOOTH",
"131 625 OFFCURVE",
"196 701 OFFCURVE",
"310 701 CURVE SMOOTH",
"329 701 OFFCURVE",
"350 700 OFFCURVE",
"371 699 CURVE SMOOTH",
"392 698 OFFCURVE",
"411 697 OFFCURVE",
"428 696 CURVE",
"428 0 LINE",
"440 0 LINE",
"440 704 LINE",
"434 704 LINE SMOOTH",
"417 704 OFFCURVE",
"397 705 OFFCURVE",
"376 708 CURVE SMOOTH",
"354 710 OFFCURVE",
"332 711 OFFCURVE",
"310 711 CURVE SMOOTH",
"190 711 OFFCURVE",
"119 630 OFFCURVE",
"119 507 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
18 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
32 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 544;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 258, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 438, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 592, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"258 0 LINE",
"258 412 LINE",
"365 412 LINE",
"365 518 LINE",
"253 518 LINE",
"253 536 LINE SMOOTH",
"253 603 OFFCURVE",
"287 638 OFFCURVE",
"350 638 CURVE SMOOTH",
"360 638 OFFCURVE",
"373 638 OFFCURVE",
"389 637 CURVE SMOOTH",
"405 636 OFFCURVE",
"421 636 OFFCURVE",
"438 635 CURVE",
"438 0 LINE",
"592 0 LINE",
"592 739 LINE",
"505 739 LINE SMOOTH",
"476 739 OFFCURVE",
"447 740 OFFCURVE",
"418 742 CURVE SMOOTH",
"389 744 OFFCURVE",
"358 745 OFFCURVE",
"325 745 CURVE SMOOTH",
"180 745 OFFCURVE",
"103 651 OFFCURVE",
"103 536 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
1 1 5 0 1 30 0 3 3 1 1 0 36 0 1 1 17 31 0 5 5 0 0 0 36 4 1 0 0 14 31 7 6 2 2 2 12 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
1 1 5 0 1 30 7 6 2 2 5 2 53 0 1 0 3 0 1 3 1 0 38 4 1 0 5 5 0 0 0 35 4 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
1 1 5 4 1 30 0 0 3 4 3 0 4 50 7 1 6 5 2 5 6 2 50 0 2 2 51 0 1 0 3 0 1 3 1 0 38 0 4 5 5 4 0 0 35 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
components = (
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 199, 0}";
},
{
name = SerifBottomLeft;
transform = "{1, 0, 0, 1, 431, 0}";
},
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 520, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"327 432 LINE",
"327 497 LINE",
"195 497 LINE",
"195 524 LINE SMOOTH",
"195 613 OFFCURVE",
"243 665 OFFCURVE",
"330 665 CURVE SMOOTH",
"343 665 OFFCURVE",
"359 665 OFFCURVE",
"377 664 CURVE SMOOTH",
"395 663 OFFCURVE",
"413 662 OFFCURVE",
"431 661 CURVE",
"431 0 LINE",
"520 0 LINE",
"520 724 LINE",
"470 724 LINE SMOOTH",
"446 724 OFFCURVE",
"421 725 OFFCURVE",
"396 727 CURVE SMOOTH",
"371 729 OFFCURVE",
"344 730 OFFCURVE",
"316 730 CURVE SMOOTH",
"183 730 OFFCURVE",
"108 641 OFFCURVE",
"108 524 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 15 14 12 7 6 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
1 1 3 6 1 30 0 4 4 1 1 0 36 2 1 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 4 4 1 1 0 36 0 1 1 13 31 0 2 2 3 0 0 36 8 7 2 3 3 15 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
164 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 8 7 2 3 2 3 0 0 37 0 4 4 1 1 0 36 0 1 1 13 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
1 1 3 6 1 30 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 5 1 0 0 6 3 0 6 0 0 38 0 2 2 3 0 0 36 8 7 2 3 2 3 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
1 1 7 6 1 30 0 0 4 5 4 0 5 50 8 1 7 6 3 6 7 3 50 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 0 5 0 6 7 5 6 0 0 38 0 2 2 3 0 0 36 0 3 2 3 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "F1299165-BD73-40C5-83CD-0BCDAFA24BEE";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"595 26 LINE",
"595 30 OFFCURVE",
"592 32 OFFCURVE",
"588 32 CURVE SMOOTH",
"586 32 OFFCURVE",
"566 28 OFFCURVE",
"557 28 CURVE SMOOTH",
"503 28 OFFCURVE",
"477 59 OFFCURVE",
"477 112 CURVE SMOOTH",
"477 712 LINE",
"416 713 LINE",
"391 716 OFFCURVE",
"331 720 OFFCURVE",
"313 720 CURVE SMOOTH",
"191 720 OFFCURVE",
"115 637 OFFCURVE",
"115 514 CURVE SMOOTH",
"115 481 LINE",
"31 481 LINE",
"31 462 LINE SMOOTH",
"31 454 OFFCURVE",
"35 450 OFFCURVE",
"45 449 CURVE",
"115 445 LINE",
"115 39 LINE",
"52 37 LINE",
"39 36 OFFCURVE",
"32 30 OFFCURVE",
"32 19 CURVE SMOOTH",
"32 0 LINE",
"246 0 LINE",
"246 19 LINE SMOOTH",
"246 30 OFFCURVE",
"239 36 OFFCURVE",
"226 37 CURVE",
"162 39 LINE",
"162 445 LINE",
"305 445 LINE",
"305 481 LINE",
"162 481 LINE",
"162 514 LINE SMOOTH",
"162 559 OFFCURVE",
"171 601 OFFCURVE",
"203 638 CURVE",
"232 670 OFFCURVE",
"275 684 OFFCURVE",
"320 684 CURVE SMOOTH",
"335 684 OFFCURVE",
"353 683 OFFCURVE",
"430 678 CURVE",
"430 111 LINE SMOOTH",
"430 39 OFFCURVE",
"478 -9 OFFCURVE",
"549 -9 CURVE SMOOTH",
"561 -9 OFFCURVE",
"583 -6 OFFCURVE",
"597 2 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
18 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
32 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 542;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "34C76314-F3ED-465A-8C4D-1DBB3BB2AC40";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"316 730 LINE",
"250 730 OFFCURVE",
"198 709 OFFCURVE",
"160 669 CURVE SMOOTH",
"126 631 OFFCURVE",
"108 584 OFFCURVE",
"108 524 CURVE SMOOTH",
"108 496 LINE",
"28 496 LINE",
"28 456 LINE SMOOTH",
"28 443 OFFCURVE",
"36 436 OFFCURVE",
"52 432 CURVE",
"108 424 LINE",
"108 74 LINE",
"68 66 OFFCURVE",
"48 62 OFFCURVE",
"46 62 CURVE",
"36 60 OFFCURVE",
"31 53 OFFCURVE",
"31 43 CURVE SMOOTH",
"31 0 LINE",
"108 0 LINE",
"198 0 LINE",
"280 0 LINE",
"280 43 LINE SMOOTH",
"280 53 OFFCURVE",
"274 60 OFFCURVE",
"264 62 CURVE",
"260 63 OFFCURVE",
"238 67 OFFCURVE",
"198 73 CURVE",
"198 432 LINE",
"328 432 LINE",
"328 496 LINE",
"196 496 LINE",
"196 522 LINE SMOOTH",
"196 566 OFFCURVE",
"206 602 OFFCURVE",
"230 626 CURVE SMOOTH",
"254 650 OFFCURVE",
"287 663 OFFCURVE",
"331 663 CURVE SMOOTH",
"432 663 LINE",
"432 136 LINE SMOOTH",
"432 92 OFFCURVE",
"444 59 OFFCURVE",
"466 34 CURVE SMOOTH",
"490 6 OFFCURVE",
"526 -8 OFFCURVE",
"572 -8 CURVE SMOOTH",
"594 -8 OFFCURVE",
"616 -4 OFFCURVE",
"634 2 CURVE",
"630 50 LINE",
"630 54 OFFCURVE",
"627 56 OFFCURVE",
"625 58 CURVE",
"623 59 OFFCURVE",
"618 60 OFFCURVE",
"614 60 CURVE SMOOTH",
"594 60 LINE SMOOTH",
"568 60 OFFCURVE",
"550 66 OFFCURVE",
"539 78 CURVE SMOOTH",
"528 90 OFFCURVE",
"522 109 OFFCURVE",
"522 135 CURVE SMOOTH",
"522 723 LINE",
"472 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 15 14 12 7 6 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
1 1 3 6 1 30 0 4 4 1 1 0 36 2 1 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 4 4 1 1 0 36 0 1 1 13 31 0 2 2 3 0 0 36 8 7 2 3 3 15 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
164 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 8 7 2 3 2 3 0 0 37 0 4 4 1 1 0 36 0 1 1 13 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
1 1 3 6 1 30 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 5 1 0 0 6 3 0 6 0 0 38 0 2 2 3 0 0 36 8 7 2 3 2 3 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
1 1 7 6 1 30 0 0 4 5 4 0 5 50 8 1 7 6 3 6 7 3 50 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 0 5 0 6 7 5 6 0 0 38 0 2 2 3 0 0 36 0 3 2 3 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 594;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "9E93DD56-A939-4981-AD68-7A1F444FBE19";
name = "Jan 15 23, 17:56";
paths = (
{
closed = 1;
nodes = (
"652 68 LINE",
"651 75 OFFCURVE",
"648 79 OFFCURVE",
"644 81 CURVE SMOOTH",
"640 83 OFFCURVE",
"631 84 OFFCURVE",
"619 84 CURVE SMOOTH",
"607 84 OFFCURVE",
"596 86 OFFCURVE",
"588 88 CURVE",
"579 91 OFFCURVE",
"572 95 OFFCURVE",
"567 100 CURVE",
"562 106 OFFCURVE",
"558 113 OFFCURVE",
"556 122 CURVE SMOOTH",
"554 132 OFFCURVE",
"552 143 OFFCURVE",
"552 155 CURVE SMOOTH",
"552 732 LINE",
"483 732 LINE SMOOTH",
"456 732 OFFCURVE",
"428 733 OFFCURVE",
"401 735 CURVE SMOOTH",
"374 737 OFFCURVE",
"346 738 OFFCURVE",
"316 738 CURVE SMOOTH",
"279 738 OFFCURVE",
"246 732 OFFCURVE",
"219 720 CURVE SMOOTH",
"192 709 OFFCURVE",
"170 694 OFFCURVE",
"152 675 CURVE SMOOTH",
"134 656 OFFCURVE",
"121 634 OFFCURVE",
"113 609 CURVE",
"104 584 OFFCURVE",
"100 557 OFFCURVE",
"100 530 CURVE SMOOTH",
"100 509 LINE",
"24 509 LINE",
"24 458 LINE SMOOTH",
"24 449 OFFCURVE",
"27 442 OFFCURVE",
"33 437 CURVE SMOOTH",
"39 432 OFFCURVE",
"46 429 OFFCURVE",
"56 427 CURVE",
"100 420 LINE",
"100 99 LINE",
"88 97 OFFCURVE",
"77 94 OFFCURVE",
"70 93 CURVE SMOOTH",
"63 92 OFFCURVE",
"59 91 OFFCURVE",
"56 91 CURVE SMOOTH",
"53 91 OFFCURVE",
"50 90 OFFCURVE",
"49 90 CURVE",
"32 86 OFFCURVE",
"24 75 OFFCURVE",
"24 58 CURVE SMOOTH",
"24 0 LINE",
"100 0 LINE",
"223 0 LINE",
"305 0 LINE",
"305 58 LINE SMOOTH",
"305 75 OFFCURVE",
"297 86 OFFCURVE",
"280 90 CURVE",
"279 90 OFFCURVE",
"276 91 OFFCURVE",
"272 91 CURVE SMOOTH",
"268 91 OFFCURVE",
"262 92 OFFCURVE",
"254 93 CURVE SMOOTH",
"246 94 OFFCURVE",
"235 97 OFFCURVE",
"223 99 CURVE",
"223 421 LINE",
"341 421 LINE",
"341 509 LINE",
"219 509 LINE",
"219 530 LINE SMOOTH",
"219 568 OFFCURVE",
"229 596 OFFCURVE",
"249 617 CURVE SMOOTH",
"269 637 OFFCURVE",
"297 648 OFFCURVE",
"335 648 CURVE SMOOTH",
"429 648 LINE",
"429 155 LINE SMOOTH",
"429 133 OFFCURVE",
"432 112 OFFCURVE",
"438 92 CURVE SMOOTH",
"444 72 OFFCURVE",
"453 55 OFFCURVE",
"466 40 CURVE SMOOTH",
"479 25 OFFCURVE",
"495 14 OFFCURVE",
"516 5 CURVE",
"537 -3 OFFCURVE",
"563 -8 OFFCURVE",
"593 -8 CURVE SMOOTH",
"605 -8 OFFCURVE",
"615 -7 OFFCURVE",
"625 -6 CURVE",
"635 -4 OFFCURVE",
"646 -1 OFFCURVE",
"656 2 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
1 1 5 0 1 30 0 3 3 1 1 0 36 0 1 1 17 31 0 5 5 0 0 0 36 4 1 0 0 14 31 7 6 2 2 2 12 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
1 1 5 0 1 30 7 6 2 2 5 2 53 0 1 0 3 0 1 3 1 0 38 4 1 0 5 5 0 0 0 35 4 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
1 1 5 4 1 30 0 0 3 4 3 0 4 50 7 1 6 5 2 5 6 2 50 0 2 2 51 0 1 0 3 0 1 3 1 0 38 0 4 5 5 4 0 0 35 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 638;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "A59B6624-8957-4285-A798-C1E449490006";
name = "Feb 27 23, 19:16";
paths = (
{
closed = 1;
nodes = (
"198 432 LINE",
"327 432 LINE",
"327 497 LINE",
"195 497 LINE",
"195 524 LINE SMOOTH",
"195 613 OFFCURVE",
"243 665 OFFCURVE",
"330 665 CURVE SMOOTH",
"343 665 OFFCURVE",
"359 665 OFFCURVE",
"377 664 CURVE SMOOTH",
"395 663 OFFCURVE",
"413 662 OFFCURVE",
"431 661 CURVE",
"431 0 LINE",
"520 0 LINE",
"520 724 LINE",
"470 724 LINE SMOOTH",
"446 724 OFFCURVE",
"421 725 OFFCURVE",
"396 727 CURVE SMOOTH",
"371 729 OFFCURVE",
"344 730 OFFCURVE",
"316 730 CURVE SMOOTH",
"183 730 OFFCURVE",
"108 641 OFFCURVE",
"108 524 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE",
"198 0 LINE",
"198 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 15 14 12 7 6 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
1 1 3 6 1 30 0 4 4 1 1 0 36 2 1 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 4 4 1 1 0 36 0 1 1 13 31 0 2 2 3 0 0 36 8 7 2 3 3 15 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
164 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 8 7 2 3 2 3 0 0 37 0 4 4 1 1 0 36 0 1 1 13 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
1 1 3 6 1 30 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 5 1 0 0 6 3 0 6 0 0 38 0 2 2 3 0 0 36 8 7 2 3 2 3 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
1 1 7 6 1 30 0 0 4 5 4 0 5 50 8 1 7 6 3 6 7 3 50 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 0 5 0 6 7 5 6 0 0 38 0 2 2 3 0 0 36 0 3 2 3 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 538;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 440, 0}";
},
{
name = fitalictail;
}
);
layerId = "47810EF0-AE26-4464-80A7-5F1218555D13";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"131 0 LINE",
"131 459 LINE",
"286 459 LINE",
"286 469 LINE",
"131 469 LINE",
"131 507 LINE SMOOTH",
"131 625 OFFCURVE",
"196 701 OFFCURVE",
"310 701 CURVE SMOOTH",
"329 701 OFFCURVE",
"350 700 OFFCURVE",
"371 699 CURVE SMOOTH",
"392 698 OFFCURVE",
"411 697 OFFCURVE",
"428 696 CURVE",
"428 0 LINE",
"440 0 LINE",
"440 704 LINE",
"434 704 LINE SMOOTH",
"417 704 OFFCURVE",
"397 705 OFFCURVE",
"376 708 CURVE SMOOTH",
"354 710 OFFCURVE",
"332 711 OFFCURVE",
"310 711 CURVE SMOOTH",
"190 711 OFFCURVE",
"119 630 OFFCURVE",
"119 507 CURVE SMOOTH",
"119 469 LINE",
"31 469 LINE",
"31 465 LINE SMOOTH",
"31 462 OFFCURVE",
"33 461 OFFCURVE",
"37 461 CURVE SMOOTH",
"119 459 LINE",
"119 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
18 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
32 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 1 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 544;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 520, 0}";
},
{
name = fitalictail;
}
);
layerId = "32CD3C69-6192-4F32-8488-6B7D443F7B96";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"198 0 LINE",
"198 432 LINE",
"327 432 LINE",
"327 497 LINE",
"195 497 LINE",
"195 524 LINE SMOOTH",
"195 613 OFFCURVE",
"243 665 OFFCURVE",
"330 665 CURVE SMOOTH",
"343 665 OFFCURVE",
"359 665 OFFCURVE",
"377 664 CURVE SMOOTH",
"395 663 OFFCURVE",
"413 662 OFFCURVE",
"431 661 CURVE",
"431 0 LINE",
"520 0 LINE",
"520 724 LINE",
"470 724 LINE SMOOTH",
"446 724 OFFCURVE",
"421 725 OFFCURVE",
"396 727 CURVE SMOOTH",
"371 729 OFFCURVE",
"344 730 OFFCURVE",
"316 730 CURVE SMOOTH",
"183 730 OFFCURVE",
"108 641 OFFCURVE",
"108 524 CURVE SMOOTH",
"108 497 LINE",
"28 497 LINE",
"28 460 LINE SMOOTH",
"28 447 OFFCURVE",
"39 441 OFFCURVE",
"52 437 CURVE",
"108 431 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 15 14 12 7 6 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
1 1 3 6 1 30 0 4 4 1 1 0 36 2 1 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 0 6 6 0 0 0 36 5 1 0 0 14 31 8 7 2 3 3 12 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 2 17 31 0 4 4 1 1 0 36 0 1 1 13 31 8 7 2 3 3 12 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 4 4 1 1 0 36 0 1 1 13 31 0 2 2 3 0 0 36 8 7 2 3 3 15 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
164 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
1 1 3 6 1 30 5 1 0 0 6 3 0 6 0 0 38 0 2 8 7 2 3 2 3 0 0 37 0 4 4 1 1 0 36 0 1 1 13 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
1 1 3 6 1 30 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 5 1 0 0 6 3 0 6 0 0 38 0 2 2 3 0 0 36 8 7 2 3 2 3 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
1 1 7 6 1 30 0 0 4 5 4 0 5 50 8 1 7 6 3 6 7 3 50 0 2 4 3 2 1 0 35 0 1 0 4 0 1 4 1 0 38 0 5 0 6 7 5 6 0 0 38 0 2 2 3 0 0 36 0 3 2 3 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifBottomRight;
transform = "{1, 0, 0, 1, 592, 0}";
},
{
name = fitalictail;
}
);
layerId = "7966BC4F-BA4D-4D4C-A6F4-B464B0BC2DC7";
name = Italic;
paths = (
{
closed = 1;
nodes = (
"258 114 LINE",
"258 412 LINE",
"365 412 LINE",
"365 518 LINE",
"253 518 LINE",
"253 536 LINE SMOOTH",
"253 603 OFFCURVE",
"287 638 OFFCURVE",
"350 638 CURVE SMOOTH",
"360 638 OFFCURVE",
"373 638 OFFCURVE",
"389 637 CURVE SMOOTH",
"405 636 OFFCURVE",
"421 636 OFFCURVE",
"438 635 CURVE",
"438 0 LINE",
"592 0 LINE",
"592 739 LINE",
"505 739 LINE SMOOTH",
"476 739 OFFCURVE",
"447 740 OFFCURVE",
"418 742 CURVE SMOOTH",
"389 744 OFFCURVE",
"358 745 OFFCURVE",
"325 745 CURVE SMOOTH",
"180 745 OFFCURVE",
"103 651 OFFCURVE",
"103 536 CURVE SMOOTH",
"103 518 LINE",
"30 518 LINE",
"30 457 LINE SMOOTH",
"30 434 OFFCURVE",
"46 424 OFFCURVE",
"69 419 CURVE SMOOTH",
"103 412 LINE",
"103 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 31 0 31 30 29 28 27 24 20 19 18 17 12 7 6 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
1 1 5 0 1 30 0 3 3 1 1 0 36 0 1 1 17 31 0 5 5 0 0 0 36 4 1 0 0 14 31 7 6 2 2 2 12 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
1 1 5 0 1 30 7 6 2 2 5 2 53 0 1 0 3 0 1 3 1 0 38 4 1 0 5 5 0 0 0 35 4 1 0 0 5 0 0 36 0 5 0 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
1 1 5 4 1 30 0 0 3 4 3 0 4 50 7 1 6 5 2 5 6 2 50 0 2 2 51 0 1 0 3 0 1 3 1 0 38 0 4 5 5 4 0 0 35 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 689;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = fl;
rightKerningGroup = l;
rightMetricsKey = l;
unicode = FB02;
},
{
glyphname = ordfeminine;
layers = (
{
anchors = (
{
name = bottom;
position = "{133, 0}";
},
{
name = ogonek;
position = "{245, 1}";
},
{
name = top;
position = "{139, 285}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"149 411 OFFCURVE",
"181 429 OFFCURVE",
"217 466 CURVE",
"219 421 LINE SMOOTH",
"219 419 OFFCURVE",
"220 416 OFFCURVE",
"224 416 CURVE SMOOTH",
"227 416 LINE",
"227 604 LINE SMOOTH",
"227 666 OFFCURVE",
"200 706 OFFCURVE",
"141 706 CURVE SMOOTH",
"101 706 OFFCURVE",
"73 690 OFFCURVE",
"45 660 CURVE",
"47 657 LINE SMOOTH",
"48 655 OFFCURVE",
"51 656 OFFCURVE",
"53 658 CURVE SMOOTH",
"78 680 OFFCURVE",
"105 697 OFFCURVE",
"141 697 CURVE SMOOTH",
"192 697 OFFCURVE",
"216 661 OFFCURVE",
"216 604 CURVE SMOOTH",
"216 569 LINE",
"152 567 OFFCURVE",
"104 558 OFFCURVE",
"75 544 CURVE SMOOTH",
"44 529 OFFCURVE",
"30 508 OFFCURVE",
"30 483 CURVE SMOOTH",
"30 436 OFFCURVE",
"65 411 OFFCURVE",
"103 411 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"71 420 OFFCURVE",
"40 442 OFFCURVE",
"40 483 CURVE SMOOTH",
"40 532 OFFCURVE",
"100 557 OFFCURVE",
"216 560 CURVE",
"216 475 LINE",
"185 444 OFFCURVE",
"156 420 OFFCURVE",
"105 420 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 416 LINE",
"274 421 LINE SMOOTH",
"274 423 OFFCURVE",
"271 424 OFFCURVE",
"269 424 CURVE SMOOTH",
"225 426 LINE",
"224 416 LINE"
);
}
);
userData = {
RMXScaler = {
height = 58;
weight = -1;
width = 58;
};
assembly = "PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
20 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
45 2 42 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
16 1 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 289;
},
{
anchors = (
{
name = bottom;
position = "{165, 0}";
},
{
name = ogonek;
position = "{290, 1}";
},
{
name = top;
position = "{171, 316}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"154 412 OFFCURVE",
"181 427 OFFCURVE",
"207 449 CURVE",
"213 439 LINE SMOOTH",
"222 422 OFFCURVE",
"229 417 OFFCURVE",
"253 417 CURVE SMOOTH",
"306 417 LINE",
"306 611 LINE SMOOTH",
"306 685 OFFCURVE",
"254 739 OFFCURVE",
"175 739 CURVE SMOOTH",
"122 739 OFFCURVE",
"69 723 OFFCURVE",
"29 689 CURVE",
"50 653 LINE SMOOTH",
"56 642 OFFCURVE",
"66 634 OFFCURVE",
"84 631 CURVE SMOOTH",
"116 626 OFFCURVE",
"121 651 OFFCURVE",
"160 651 CURVE SMOOTH",
"181 651 OFFCURVE",
"194 642 OFFCURVE",
"194 611 CURVE SMOOTH",
"194 605 LINE",
"123 603 OFFCURVE",
"77 588 OFFCURVE",
"50 568 CURVE SMOOTH",
"24 548 OFFCURVE",
"15 522 OFFCURVE",
"15 501 CURVE SMOOTH",
"15 445 OFFCURVE",
"52 412 OFFCURVE",
"114 412 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"133 489 OFFCURVE",
"125 491 OFFCURVE",
"125 507 CURVE SMOOTH",
"125 523 OFFCURVE",
"141 535 OFFCURVE",
"194 537 CURVE",
"194 507 LINE",
"179 492 OFFCURVE",
"167 489 OFFCURVE",
"151 489 CURVE"
);
},
{
closed = 1;
nodes = (
"352 417 LINE",
"352 470 LINE SMOOTH",
"352 485 OFFCURVE",
"344 493 OFFCURVE",
"323 499 CURVE SMOOTH",
"302 505 LINE",
"292 417 LINE"
);
}
);
userData = {
RMXScaler = {
height = 60;
weight = -43;
width = 60;
};
assembly = "NPUSHB[ ]	/* 22 values pushed */
41 40 45 44 40 51 41 51 35 33 28 26 23 21 18 17 11 9 2 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
31 1 3 5 43 1 6 7 5 1 0 6 3 30 8 1 6 7 0 7 6 0 50 1 1 0 0 51 0 2 0 7 6 2 7 1 0 38 4 1 3 3 5 1 0 36 0 5 5 17 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
31 1 3 5 43 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 8 1 6 7 0 7 6 0 50 1 1 0 0 51 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 17 3 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
31 1 3 5 43 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 8 1 6 7 0 7 6 0 50 0 0 1 7 0 1 48 0 1 1 51 0 2 0 7 6 2 7 1 0 38 0 3 3 5 1 0 36 0 5 5 17 3 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
31 1 3 5 43 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 8 1 6 7 0 7 6 0 50 0 0 1 7 0 1 48 0 1 1 51 0 5 0 3 4 5 3 1 0 38 0 2 7 7 2 1 0 35 0 2 2 7 1 0 36 0 7 2 7 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
anchors = (
{
name = bottom;
position = "{119, 0}";
},
{
name = ogonek;
position = "{236, 1}";
},
{
name = top;
position = "{125, 302}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"153 413 OFFCURVE",
"182 428 OFFCURVE",
"213 456 CURVE",
"219 433 LINE SMOOTH",
"222 421 OFFCURVE",
"229 418 OFFCURVE",
"243 418 CURVE SMOOTH",
"273 418 LINE",
"273 609 LINE SMOOTH",
"273 678 OFFCURVE",
"232 725 OFFCURVE",
"163 725 CURVE SMOOTH",
"116 725 OFFCURVE",
"74 710 OFFCURVE",
"40 677 CURVE",
"52 656 LINE SMOOTH",
"55 651 OFFCURVE",
"61 644 OFFCURVE",
"71 644 CURVE SMOOTH",
"92 644 OFFCURVE",
"121 672 OFFCURVE",
"154 672 CURVE SMOOTH",
"188 672 OFFCURVE",
"207 652 OFFCURVE",
"207 609 CURVE SMOOTH",
"207 590 LINE",
"137 588 OFFCURVE",
"93 576 OFFCURVE",
"64 558 CURVE SMOOTH",
"37 541 OFFCURVE",
"25 518 OFFCURVE",
"25 495 CURVE SMOOTH",
"25 442 OFFCURVE",
"62 413 OFFCURVE",
"112 413 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 459 OFFCURVE",
"90 471 OFFCURVE",
"90 498 CURVE SMOOTH",
"90 531 OFFCURVE",
"131 546 OFFCURVE",
"207 549 CURVE",
"207 494 LINE",
"185 471 OFFCURVE",
"163 459 OFFCURVE",
"132 459 CURVE"
);
},
{
closed = 1;
nodes = (
"316 418 LINE",
"316 449 LINE SMOOTH",
"316 459 OFFCURVE",
"311 463 OFFCURVE",
"302 465 CURVE SMOOTH",
"264 473 LINE",
"257 418 LINE"
);
}
);
userData = {
RMXScaler = {
height = 59;
weight = -24;
width = 59;
};
assembly = "NPUSHB[ ]	/* 22 values pushed */
43 42 47 46 42 53 43 53 37 35 30 28 25 23 20 19 11 9 2 0 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
33 1 3 5 45 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 0 2 0 7 6 2 7 1 0 38 8 1 6 1 1 0 6 0 1 0 37 0 3 3 5 1 0 36 0 5 5 17 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
33 1 3 5 45 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 0 0 6 1 6 0 1 50 0 2 0 7 6 2 7 1 0 38 8 1 6 0 1 6 1 1 0 37 0 3 3 5 1 0 36 0 5 5 17 3 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
33 1 3 5 45 1 6 7 5 1 0 6 3 30 0 4 3 2 3 4 2 50 0 0 6 1 6 0 1 50 0 5 0 3 4 5 3 1 0 38 0 2 0 7 6 2 7 1 0 38 8 1 6 0 1 6 1 0 35 8 1 6 6 1 1 0 36 0 1 6 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = "=ae*0.7";
note = ordfeminine;
rightKerningGroup = ordfeminine;
rightMetricsKey = "=a*0.7";
unicode = 00AA;
userData = {
RMXScaler = {
source = a;
};
};
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"163 706 LINE",
"77 706 OFFCURVE",
"29 648 OFFCURVE",
"29 559 CURVE SMOOTH",
"29 471 OFFCURVE",
"77 413 OFFCURVE",
"163 413 CURVE SMOOTH",
"249 413 OFFCURVE",
"296 471 OFFCURVE",
"296 559 CURVE SMOOTH",
"296 648 OFFCURVE",
"249 706 OFFCURVE",
"163 706 CURVE"
);
},
{
closed = 1;
nodes = (
"163 421 LINE",
"81 421 OFFCURVE",
"39 476 OFFCURVE",
"39 559 CURVE SMOOTH",
"39 642 OFFCURVE",
"81 698 OFFCURVE",
"163 698 CURVE SMOOTH",
"245 698 OFFCURVE",
"286 642 OFFCURVE",
"286 559 CURVE SMOOTH",
"286 476 OFFCURVE",
"245 421 OFFCURVE",
"163 421 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 4 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
20 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 325;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"186 739 LINE",
"86 739 OFFCURVE",
"13 678 OFFCURVE",
"13 578 CURVE SMOOTH",
"13 478 OFFCURVE",
"86 415 OFFCURVE",
"186 415 CURVE SMOOTH",
"288 415 OFFCURVE",
"357 478 OFFCURVE",
"357 578 CURVE SMOOTH",
"357 678 OFFCURVE",
"287 739 OFFCURVE",
"186 739 CURVE"
);
},
{
closed = 1;
nodes = (
"186 502 LINE",
"149 502 OFFCURVE",
"134 524 OFFCURVE",
"134 577 CURVE SMOOTH",
"134 632 OFFCURVE",
"149 652 OFFCURVE",
"186 652 CURVE SMOOTH",
"221 652 OFFCURVE",
"236 632 OFFCURVE",
"236 577 CURVE SMOOTH",
"236 524 OFFCURVE",
"221 502 OFFCURVE",
"186 502 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 27 25 20 31 21 31 11 9 0 19 1 19 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 0 1 0 36 4 1 0 0 17 31 0 1 1 2 1 0 36 5 1 2 2 14 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 4 1 0 0 17 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 1 0 0 3 2 0 3 1 0 38 5 1 2 1 1 2 1 0 35 5 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"179 725 LINE",
"85 725 OFFCURVE",
"24 664 OFFCURVE",
"24 570 CURVE SMOOTH",
"24 475 OFFCURVE",
"85 414 OFFCURVE",
"179 414 CURVE SMOOTH",
"273 414 OFFCURVE",
"333 475 OFFCURVE",
"333 570 CURVE SMOOTH",
"333 664 OFFCURVE",
"272 725 OFFCURVE",
"179 725 CURVE"
);
},
{
closed = 1;
nodes = (
"179 467 LINE",
"121 467 OFFCURVE",
"94 503 OFFCURVE",
"94 570 CURVE SMOOTH",
"94 637 OFFCURVE",
"121 672 OFFCURVE",
"179 672 CURVE SMOOTH",
"235 672 OFFCURVE",
"263 637 OFFCURVE",
"263 570 CURVE SMOOTH",
"263 503 OFFCURVE",
"235 467 OFFCURVE",
"179 467 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
21 20 1 0 27 25 20 31 21 31 11 9 0 19 1 19 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 4 1 0 0 17 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 1 0 0 3 2 0 3 1 0 38 5 1 2 1 1 2 1 0 35 5 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 357;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = "=o*0.7";
note = ordmasculine;
rightKerningGroup = ordfeminine;
rightMetricsKey = "=o*0.7";
unicode = 00BA;
},
{
glyphname = pi;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"125 -4 OFFCURVE",
"157 31 OFFCURVE",
"157 96 CURVE SMOOTH",
"157 479 LINE",
"421 479 LINE",
"421 0 LINE",
"433 0 LINE",
"433 479 LINE",
"534 479 LINE SMOOTH",
"541 479 OFFCURVE",
"543 483 OFFCURVE",
"543 487 CURVE SMOOTH",
"543 490 LINE",
"47 490 LINE SMOOTH",
"42 490 OFFCURVE",
"39 487 OFFCURVE",
"39 483 CURVE SMOOTH",
"39 479 LINE",
"145 479 LINE",
"145 96 LINE SMOOTH",
"145 36 OFFCURVE",
"116 6 OFFCURVE",
"63 6 CURVE SMOOTH",
"32 6 OFFCURVE",
"28 17 OFFCURVE",
"24 9 CURVE SMOOTH",
"22 5 LINE",
"33 -2 OFFCURVE",
"48 -4 OFFCURVE",
"60 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
7 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
10 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
4 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 560;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"219.141 -8 OFFCURVE",
"264 48.482 OFFCURVE",
"264 142 CURVE SMOOTH",
"264 412 LINE",
"407 412 LINE",
"407 0 LINE",
"562 0 LINE",
"562 412 LINE",
"602 412 LINE SMOOTH",
"632.667 412 OFFCURVE",
"649 433.667 OFFCURVE",
"649 459 CURVE SMOOTH",
"649 519 LINE",
"81 519 LINE SMOOTH",
"48.916 519 OFFCURVE",
"24 491.131 OFFCURVE",
"24 466 CURVE SMOOTH",
"24 412 LINE",
"109 412 LINE",
"109 144 LINE SMOOTH",
"109 109.917 OFFCURVE",
"100.646 100 OFFCURVE",
"63 100 CURVE SMOOTH",
"37.667 100 OFFCURVE",
"32.333 87.333 OFFCURVE",
"31 74 CURVE SMOOTH",
"27 11 LINE",
"55 -2.333 OFFCURVE",
"85.667 -8 OFFCURVE",
"111 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 35 0 34 29 28 23 21 16 14 9 8 7 6 5 3 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
18 1 1 4 1 30 0 4 0 1 0 4 1 50 5 2 2 0 0 6 1 0 36 7 1 6 6 14 31 3 1 1 1 12 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
18 1 1 4 1 30 0 4 0 1 0 4 1 50 5 2 2 0 0 6 1 0 36 7 1 6 6 14 31 0 1 1 12 31 0 3 3 18 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
18 1 1 4 1 30 0 4 0 1 0 4 1 50 0 1 3 0 1 3 48 0 3 3 51 7 1 6 0 0 6 1 0 35 7 1 6 6 0 0 0 36 5 2 2 0 6 0 0 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
18 1 1 4 1 30 0 5 6 2 2 5 42 0 0 2 4 2 0 42 0 4 1 2 4 1 48 0 1 3 2 1 3 48 0 3 3 51 7 1 6 5 2 6 1 2 35 7 1 6 6 2 0 0 36 0 2 6 2 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"175.333 -6 OFFCURVE",
"215 43.333 OFFCURVE",
"215 122 CURVE SMOOTH",
"215 441 LINE",
"413 441 LINE",
"413 0 LINE",
"502 0 LINE",
"502 441 LINE",
"570 441 LINE SMOOTH",
"590 441 OFFCURVE",
"600 455 OFFCURVE",
"600 471 CURVE SMOOTH",
"600 507 LINE",
"65 507 LINE SMOOTH",
"43.845 507 OFFCURVE",
"31 489.002 OFFCURVE",
"31 473 CURVE SMOOTH",
"31 441 LINE",
"125 441 LINE",
"125 123 LINE SMOOTH",
"125 79 OFFCURVE",
"108 59 OFFCURVE",
"64 59 CURVE SMOOTH",
"43.377 59 OFFCURVE",
"31.006 61.028 OFFCURVE",
"28 46 CURVE SMOOTH",
"24 9 LINE",
"45.333 -3 OFFCURVE",
"67.333 -6 OFFCURVE",
"90 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 33 0 32 27 26 23 20 14 12 9 8 7 6 5 3 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
16 1 1 4 1 30 5 2 2 0 0 6 1 0 36 7 1 6 6 14 31 0 4 4 1 1 0 36 3 1 1 1 12 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
16 1 1 4 1 30 5 2 2 0 0 6 1 0 36 7 1 6 6 14 31 0 1 1 12 31 0 4 4 3 1 0 36 0 3 3 21 3 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
16 1 1 4 1 30 7 1 6 5 2 2 0 4 6 0 0 0 38 0 1 1 15 31 0 4 4 3 1 0 36 0 3 3 21 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
16 1 1 4 1 30 0 1 4 3 4 1 3 50 7 1 6 5 2 2 0 4 6 0 0 0 38 0 4 1 3 4 1 0 35 0 4 4 3 1 0 36 0 3 4 3 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
16 1 1 4 1 30 0 5 6 2 2 5 42 0 0 2 4 2 0 42 0 1 4 3 4 1 3 50 7 1 6 0 2 0 6 2 0 0 38 0 4 1 3 4 1 0 35 0 4 4 3 1 0 36 0 3 4 3 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"537 350 LINE",
"537 473 OFFCURVE",
"509 562 OFFCURVE",
"464 621 CURVE SMOOTH",
"419 680 OFFCURVE",
"357 708 OFFCURVE",
"289 708 CURVE SMOOTH",
"222 708 OFFCURVE",
"159 680 OFFCURVE",
"115 621 CURVE SMOOTH",
"70 562 OFFCURVE",
"41 473 OFFCURVE",
"41 350 CURVE SMOOTH",
"41 227 OFFCURVE",
"70 139 OFFCURVE",
"115 80 CURVE SMOOTH",
"159 21 OFFCURVE",
"222 -7 OFFCURVE",
"289 -7 CURVE SMOOTH",
"357 -7 OFFCURVE",
"419 21 OFFCURVE",
"464 80 CURVE SMOOTH",
"509 139 OFFCURVE",
"537 227 OFFCURVE",
"537 350 CURVE"
);
},
{
closed = 1;
nodes = (
"524 350 LINE",
"524 230 OFFCURVE",
"498 143 OFFCURVE",
"455 87 CURVE SMOOTH",
"412 30 OFFCURVE",
"353 3 OFFCURVE",
"289 3 CURVE SMOOTH",
"225 3 OFFCURVE",
"166 30 OFFCURVE",
"123 87 CURVE SMOOTH",
"80 143 OFFCURVE",
"53 230 OFFCURVE",
"53 350 CURVE SMOOTH",
"53 470 OFFCURVE",
"80 557 OFFCURVE",
"123 614 CURVE SMOOTH",
"166 671 OFFCURVE",
"225 698 OFFCURVE",
"289 698 CURVE SMOOTH",
"353 698 OFFCURVE",
"412 671 OFFCURVE",
"455 614 CURVE SMOOTH",
"498 557 OFFCURVE",
"524 470 OFFCURVE",
"524 350 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 578;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"555 365 LINE",
"555 492 OFFCURVE",
"526 585 OFFCURVE",
"478 646 CURVE SMOOTH",
"430 707 OFFCURVE",
"361 737 OFFCURVE",
"284 737 CURVE SMOOTH",
"207 737 OFFCURVE",
"140 707 OFFCURVE",
"92 646 CURVE SMOOTH",
"44 585 OFFCURVE",
"15 492 OFFCURVE",
"15 365 CURVE SMOOTH",
"15 237 OFFCURVE",
"44 144 OFFCURVE",
"92 83 CURVE SMOOTH",
"140 22 OFFCURVE",
"207 -8 OFFCURVE",
"284 -8 CURVE SMOOTH",
"361 -8 OFFCURVE",
"430 22 OFFCURVE",
"478 83 CURVE SMOOTH",
"526 144 OFFCURVE",
"555 237 OFFCURVE",
"555 365 CURVE"
);
},
{
closed = 1;
nodes = (
"395 365 LINE",
"395 264 OFFCURVE",
"381 202 OFFCURVE",
"361 165 CURVE SMOOTH",
"340 128 OFFCURVE",
"312 117 OFFCURVE",
"284 117 CURVE SMOOTH",
"257 117 OFFCURVE",
"229 128 OFFCURVE",
"209 165 CURVE SMOOTH",
"189 202 OFFCURVE",
"175 264 OFFCURVE",
"175 365 CURVE SMOOTH",
"175 465 OFFCURVE",
"189 528 OFFCURVE",
"209 565 CURVE SMOOTH",
"229 601 OFFCURVE",
"257 612 OFFCURVE",
"284 612 CURVE SMOOTH",
"312 612 OFFCURVE",
"340 601 OFFCURVE",
"361 565 CURVE SMOOTH",
"381 528 OFFCURVE",
"395 465 OFFCURVE",
"395 365 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 17 31 0 3 3 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"547 358 LINE",
"547 483 OFFCURVE",
"519 575 OFFCURVE",
"472 636 CURVE SMOOTH",
"425 696 OFFCURVE",
"359 725 OFFCURVE",
"287 725 CURVE SMOOTH",
"214 725 OFFCURVE",
"149 696 OFFCURVE",
"102 636 CURVE SMOOTH",
"55 575 OFFCURVE",
"27 483 OFFCURVE",
"27 358 CURVE SMOOTH",
"27 233 OFFCURVE",
"55 142 OFFCURVE",
"102 82 CURVE SMOOTH",
"149 22 OFFCURVE",
"214 -8 OFFCURVE",
"287 -8 CURVE SMOOTH",
"359 -8 OFFCURVE",
"425 22 OFFCURVE",
"472 82 CURVE SMOOTH",
"519 142 OFFCURVE",
"547 233 OFFCURVE",
"547 358 CURVE"
);
},
{
closed = 1;
nodes = (
"455 358 LINE",
"455 249 OFFCURVE",
"435 176 OFFCURVE",
"404 131 CURVE SMOOTH",
"373 86 OFFCURVE",
"331 68 OFFCURVE",
"287 68 CURVE SMOOTH",
"243 68 OFFCURVE",
"201 86 OFFCURVE",
"170 131 CURVE SMOOTH",
"139 176 OFFCURVE",
"119 249 OFFCURVE",
"119 358 CURVE SMOOTH",
"119 467 OFFCURVE",
"139 541 OFFCURVE",
"170 586 CURVE SMOOTH",
"201 631 OFFCURVE",
"243 649 OFFCURVE",
"287 649 CURVE SMOOTH",
"331 649 OFFCURVE",
"373 631 OFFCURVE",
"404 586 CURVE SMOOTH",
"435 541 OFFCURVE",
"455 467 OFFCURVE",
"455 358 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 1 1 0 36 0 1 1 17 31 0 3 3 0 1 0 36 0 0 0 18 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 3 0 1 0 36 0 0 0 21 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 2 3 1 2 1 0 38 0 3 0 0 3 1 0 35 0 3 3 0 1 0 36 0 0 3 0 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"525 0 LINE",
"525 63 LINE SMOOTH",
"525 84 OFFCURVE",
"514 98 OFFCURVE",
"493 101 CURVE SMOOTH",
"405 114 LINE",
"405 729 LINE",
"277 729 LINE",
"50 539 LINE",
"99 474 LINE SMOOTH",
"106 465 OFFCURVE",
"121 456 OFFCURVE",
"138 456 CURVE SMOOTH",
"147 456 OFFCURVE",
"158 459 OFFCURVE",
"169 468 CURVE SMOOTH",
"252 536 LINE",
"251 517 OFFCURVE",
"250 498 OFFCURVE",
"250 480 CURVE SMOOTH",
"250 114 LINE",
"143 100 LINE SMOOTH",
"122 97 OFFCURVE",
"110 84 OFFCURVE",
"110 63 CURVE SMOOTH",
"110 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 17 16 15 14 13 9 7 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
12 4 2 1 2 1 30 0 1 2 0 2 1 0 50 0 2 2 11 31 3 1 0 0 4 0 2 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"513 0 LINE",
"513 41 LINE SMOOTH",
"513 52 OFFCURVE",
"507 58 OFFCURVE",
"496 59 CURVE SMOOTH",
"372 68 LINE",
"372 718 LINE",
"299 718 LINE",
"86 534 LINE",
"114 495 LINE SMOOTH",
"118 490 OFFCURVE",
"126 484 OFFCURVE",
"137 484 CURVE SMOOTH",
"142 484 OFFCURVE",
"149 486 OFFCURVE",
"156 492 CURVE SMOOTH",
"284 601 LINE",
"283 586 OFFCURVE",
"283 572 OFFCURVE",
"283 557 CURVE SMOOTH",
"283 68 LINE",
"146 59 LINE SMOOTH",
"135 58 OFFCURVE",
"129 52 OFFCURVE",
"129 41 CURVE SMOOTH",
"129 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 17 16 15 14 13 9 7 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
12 4 2 1 2 1 30 0 1 2 0 2 1 0 50 0 2 2 11 31 3 1 0 0 4 0 2 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 0 4 0 2 36 0 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "3A55E12F-1AD9-4ED7-ACB6-1B3AA60D562C";
name = "Jan 15 23, 17:18";
paths = (
{
closed = 1;
nodes = (
"386 68 LINE",
"386 718 LINE",
"314 718 LINE",
"101 534 LINE",
"129 495 LINE",
"136 484 OFFCURVE",
"154 478 OFFCURVE",
"171 492 CURVE SMOOTH",
"299 601 LINE",
"298 586 OFFCURVE",
"298 570 OFFCURVE",
"298 556 CURVE SMOOTH",
"298 68 LINE",
"158 58 LINE",
"148 56 OFFCURVE",
"144 50 OFFCURVE",
"144 40 CURVE SMOOTH",
"144 0 LINE",
"528 0 LINE",
"528 40 LINE SMOOTH",
"528 50 OFFCURVE",
"524 56 OFFCURVE",
"514 58 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 17 16 15 14 13 9 7 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
12 4 2 1 2 1 30 0 1 2 0 2 1 0 50 0 2 2 11 31 3 1 0 0 4 0 2 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 0 4 0 2 36 0 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "096A67C1-0A6C-43D0-ABD7-9FE6572751E7";
name = "Jan 15 23, 17:18";
paths = (
{
closed = 1;
nodes = (
"476 84 OFFCURVE",
"439 88 OFFCURVE",
"372 93 CURVE",
"372 724 LINE",
"270 724 LINE",
"50 536 LINE",
"89 483 LINE SMOOTH",
"92 479 OFFCURVE",
"95 476 OFFCURVE",
"101 473 CURVE",
"106 470 OFFCURVE",
"112 469 OFFCURVE",
"119 469 CURVE SMOOTH",
"123 469 OFFCURVE",
"129 470 OFFCURVE",
"133 471 CURVE SMOOTH",
"137 472 OFFCURVE",
"142 475 OFFCURVE",
"146 479 CURVE",
"250 566 LINE",
"249 548 OFFCURVE",
"248 530 OFFCURVE",
"248 514 CURVE SMOOTH",
"248 94 LINE",
"171 88 OFFCURVE",
"129 84 OFFCURVE",
"122 83 CURVE",
"109 80 OFFCURVE",
"102 72 OFFCURVE",
"102 58 CURVE SMOOTH",
"102 0 LINE",
"298 0 LINE",
"306 0 LINE",
"502 0 LINE",
"502 58 LINE SMOOTH",
"502 72 OFFCURVE",
"495 80 OFFCURVE",
"482 83 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 17 16 15 14 13 9 7 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
12 4 2 1 2 1 30 0 1 2 0 2 1 0 50 0 2 2 11 31 3 1 0 0 4 0 2 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "B4AD8F02-DF91-4AF7-A3C5-A0FA9D726F47";
name = "Jan 24 23, 21:09";
paths = (
{
closed = 1;
nodes = (
"499 0 LINE",
"499 16 LINE SMOOTH",
"499 25 OFFCURVE",
"493 30 OFFCURVE",
"482 31 CURVE",
"344 38 LINE",
"344 710 LINE",
"307 710 LINE",
"103 530 LINE",
"117 510 LINE SMOOTH",
"123 502 OFFCURVE",
"136 502 OFFCURVE",
"142 508 CURVE",
"298 647 LINE",
"296 38 LINE",
"150 31 LINE",
"139 30 OFFCURVE",
"134 25 OFFCURVE",
"134 16 CURVE SMOOTH",
"134 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 3 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
11 2 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"473 4 LINE SMOOTH",
"473 7 OFFCURVE",
"470 10 OFFCURVE",
"467 10 CURVE SMOOTH",
"307 13 LINE",
"307 704 LINE",
"300 704 LINE",
"103 527 LINE",
"106 523 LINE SMOOTH",
"107 521 OFFCURVE",
"109 521 OFFCURVE",
"111 521 CURVE SMOOTH",
"113 521 OFFCURVE",
"115 522 OFFCURVE",
"116 523 CURVE SMOOTH",
"297 687 LINE",
"296 678 OFFCURVE",
"295 667 OFFCURVE",
"295 658 CURVE SMOOTH",
"295 13 LINE",
"131 10 LINE SMOOTH",
"128 10 OFFCURVE",
"125 7 OFFCURVE",
"125 4 CURVE SMOOTH",
"125 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 3 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
11 2 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 577;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "7CF749A3-EE56-43A4-9ACA-70F97C7B18FE";
name = "Jan 24 23, 22:22";
paths = (
{
closed = 1;
nodes = (
"528 0 LINE",
"528 68 LINE",
"387 68 LINE",
"387 718 LINE",
"314 718 LINE",
"101 534 LINE",
"129 495 LINE SMOOTH",
"133 489.667 OFFCURVE",
"141.333 484 OFFCURVE",
"152 484 CURVE SMOOTH",
"157.333 484 OFFCURVE",
"164.333 486.667 OFFCURVE",
"171 492 CURVE SMOOTH",
"299 601 LINE",
"298.333 586.333 OFFCURVE",
"298 571.667 OFFCURVE",
"298 557 CURVE SMOOTH",
"298 68 LINE",
"144 68 LINE",
"144 0 LINE",
"144 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 17 16 15 14 13 9 7 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
12 4 2 1 2 1 30 0 1 2 0 2 1 0 50 0 2 2 11 31 3 1 0 0 4 0 2 36 0 4 4 12 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 0 4 0 2 36 0 4 4 15 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 4 2 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
components = (
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 508, 11}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"508 0 LINE",
"508 11 LINE",
"141 11 LINE SMOOTH",
"118 11 OFFCURVE",
"101 10 OFFCURVE",
"86 9 CURVE",
"333 261 LINE SMOOTH",
"416 345 OFFCURVE",
"489 417 OFFCURVE",
"489 525 CURVE SMOOTH",
"489 648 OFFCURVE",
"401 708 OFFCURVE",
"296 708 CURVE SMOOTH",
"186 708 OFFCURVE",
"107 640 OFFCURVE",
"90 526 CURVE",
"92 526 OFFCURVE",
"95 526 OFFCURVE",
"95 526 CURVE SMOOTH",
"99 526 OFFCURVE",
"102 528 OFFCURVE",
"103 534 CURVE SMOOTH",
"119 632 OFFCURVE",
"195 698 OFFCURVE",
"296 698 CURVE SMOOTH",
"394 698 OFFCURVE",
"477 640 OFFCURVE",
"477 525 CURVE SMOOTH",
"477 425 OFFCURVE",
"406 349 OFFCURVE",
"326 268 CURVE SMOOTH",
"74 12 LINE SMOOTH",
"73 11 OFFCURVE",
"70 8 OFFCURVE",
"70 4 CURVE SMOOTH",
"70 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 29 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
14 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 582;
},
{
components = (
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 554, 140}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"554 0 LINE",
"554 140 LINE",
"364 140 LINE SMOOTH",
"333 140 OFFCURVE",
"296 134 OFFCURVE",
"260 123 CURVE",
"402 269 LINE SMOOTH",
"479 348 OFFCURVE",
"544 420 OFFCURVE",
"544 525 CURVE SMOOTH",
"544 652 OFFCURVE",
"451 737 OFFCURVE",
"310 737 CURVE SMOOTH",
"175 737 OFFCURVE",
"73 662 OFFCURVE",
"52 521 CURVE",
"121 508 OFFCURVE",
"143 504 OFFCURVE",
"157 504 CURVE SMOOTH",
"185 504 OFFCURVE",
"199 516 OFFCURVE",
"210 547 CURVE SMOOTH",
"224 583 OFFCURVE",
"258 610 OFFCURVE",
"301 610 CURVE SMOOTH",
"358 610 OFFCURVE",
"385 579 OFFCURVE",
"385 520 CURVE SMOOTH",
"385 448 OFFCURVE",
"345 390 OFFCURVE",
"279 323 CURVE SMOOTH",
"69 111 LINE",
"49 94 OFFCURVE",
"42 70 OFFCURVE",
"42 50 CURVE SMOOTH",
"42 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 42 40 34 32 20 19 16 13 0 49 1 49 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
45 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 0 3 3 0 1 0 36 5 1 0 0 17 31 0 1 1 2 0 0 36 0 2 2 12 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
45 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
components = (
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 535, 82}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"535 0 LINE",
"535 85 LINE",
"264 85 LINE SMOOTH",
"239 85 OFFCURVE",
"211 80 OFFCURVE",
"184 73 CURVE",
"372 266 LINE SMOOTH",
"450 346 OFFCURVE",
"521 420 OFFCURVE",
"521 525 CURVE SMOOTH",
"521 649 OFFCURVE",
"428 725 OFFCURVE",
"306 725 CURVE SMOOTH",
"181 725 OFFCURVE",
"90 651 OFFCURVE",
"72 523 CURVE",
"105 517 OFFCURVE",
"120 514 OFFCURVE",
"130 514 CURVE SMOOTH",
"147 514 OFFCURVE",
"158 522 OFFCURVE",
"163 541 CURVE SMOOTH",
"176 605 OFFCURVE",
"231 648 OFFCURVE",
"301 648 CURVE SMOOTH",
"376 648 OFFCURVE",
"430 605 OFFCURVE",
"430 523 CURVE SMOOTH",
"430 438 OFFCURVE",
"376 372 OFFCURVE",
"303 299 CURVE SMOOTH",
"73 69 LINE SMOOTH",
"62 58 OFFCURVE",
"57 43 OFFCURVE",
"57 31 CURVE SMOOTH",
"57 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 44 42 36 34 20 19 16 13 0 51 1 51 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 0 3 3 0 1 0 36 5 1 0 0 17 31 0 1 1 2 0 0 36 0 2 2 12 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 1 2 0 0 36 0 2 2 15 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "6D6FB3D5-FC2C-41C1-82B6-E108B7B7EB6C";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"502 134 LINE SMOOTH",
"488 134 OFFCURVE",
"482 126 OFFCURVE",
"481 110 CURVE",
"475 45 LINE",
"204 45 LINE SMOOTH",
"187 45 OFFCURVE",
"155 42 OFFCURVE",
"136 37 CURVE",
"357 263 LINE SMOOTH",
"446 356 OFFCURVE",
"510 422 OFFCURVE",
"510 525 CURVE SMOOTH",
"510 640 OFFCURVE",
"431 715 OFFCURVE",
"307 715 CURVE SMOOTH",
"189 715 OFFCURVE",
"104 647 OFFCURVE",
"88 524 CURVE",
"113 521 LINE SMOOTH",
"127 519 OFFCURVE",
"134 525 OFFCURVE",
"137 537 CURVE",
"155 625 OFFCURVE",
"218 675 OFFCURVE",
"304 675 CURVE SMOOTH",
"398 675 OFFCURVE",
"461 616 OFFCURVE",
"461 523 CURVE SMOOTH",
"461 440 OFFCURVE",
"406 367 OFFCURVE",
"321 282 CURVE SMOOTH",
"79 38 LINE SMOOTH",
"74 32 OFFCURVE",
"70 24 OFFCURVE",
"70 16 CURVE SMOOTH",
"70 0 LINE",
"526 0 LINE",
"526 134 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 29 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
14 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B25A1B7F-FEA3-4370-B0EE-044789AF0BE2";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"535 62 LINE",
"535 78 LINE",
"535 160 LINE",
"486 160 LINE SMOOTH",
"476 160 OFFCURVE",
"467 152 OFFCURVE",
"465 142 CURVE",
"465 138 OFFCURVE",
"461 113 OFFCURVE",
"459 85 CURVE",
"263 85 LINE SMOOTH",
"251 85 OFFCURVE",
"238 84 OFFCURVE",
"224 82 CURVE SMOOTH",
"210 80 OFFCURVE",
"197 78 OFFCURVE",
"183 74 CURVE",
"372 266 LINE SMOOTH",
"392 286 OFFCURVE",
"411 306 OFFCURVE",
"429 326 CURVE SMOOTH",
"447 346 OFFCURVE",
"463 366 OFFCURVE",
"477 387 CURVE SMOOTH",
"491 408 OFFCURVE",
"501 430 OFFCURVE",
"509 452 CURVE SMOOTH",
"517 474 OFFCURVE",
"521 500 OFFCURVE",
"521 526 CURVE SMOOTH",
"521 558 OFFCURVE",
"516 586 OFFCURVE",
"505 610 CURVE SMOOTH",
"494 634 OFFCURVE",
"478 655 OFFCURVE",
"459 672 CURVE SMOOTH",
"440 689 OFFCURVE",
"417 703 OFFCURVE",
"391 712 CURVE SMOOTH",
"365 721 OFFCURVE",
"335 725 OFFCURVE",
"305 725 CURVE SMOOTH",
"275 725 OFFCURVE",
"246 721 OFFCURVE",
"220 712 CURVE SMOOTH",
"194 703 OFFCURVE",
"169 689 OFFCURVE",
"149 672 CURVE SMOOTH",
"129 655 OFFCURVE",
"113 635 OFFCURVE",
"99 610 CURVE SMOOTH",
"85 585 OFFCURVE",
"75 555 OFFCURVE",
"71 523 CURVE",
"118 515 LINE",
"120 515 OFFCURVE",
"123 514 OFFCURVE",
"125 514 CURVE SMOOTH",
"129 514 LINE SMOOTH",
"137 514 OFFCURVE",
"145 516 OFFCURVE",
"151 520 CURVE SMOOTH",
"157 524 OFFCURVE",
"161 532 OFFCURVE",
"163 542 CURVE",
"167 558 OFFCURVE",
"172 571 OFFCURVE",
"180 584 CURVE SMOOTH",
"188 597 OFFCURVE",
"198 608 OFFCURVE",
"210 618 CURVE SMOOTH",
"222 628 OFFCURVE",
"235 634 OFFCURVE",
"251 640 CURVE SMOOTH",
"267 646 OFFCURVE",
"283 648 OFFCURVE",
"301 648 CURVE SMOOTH",
"319 648 OFFCURVE",
"335 646 OFFCURVE",
"351 641 CURVE SMOOTH",
"367 636 OFFCURVE",
"380 628 OFFCURVE",
"392 618 CURVE SMOOTH",
"404 608 OFFCURVE",
"413 594 OFFCURVE",
"419 578 CURVE SMOOTH",
"425 562 OFFCURVE",
"429 544 OFFCURVE",
"429 523 CURVE SMOOTH",
"429 502 OFFCURVE",
"426 482 OFFCURVE",
"420 464 CURVE SMOOTH",
"414 446 OFFCURVE",
"406 426 OFFCURVE",
"395 408 CURVE SMOOTH",
"384 390 OFFCURVE",
"371 372 OFFCURVE",
"355 354 CURVE SMOOTH",
"339 336 OFFCURVE",
"322 318 OFFCURVE",
"303 298 CURVE SMOOTH",
"73 68 LINE SMOOTH",
"67 62 OFFCURVE",
"63 56 OFFCURVE",
"61 50 CURVE SMOOTH",
"59 44 OFFCURVE",
"57 36 OFFCURVE",
"57 30 CURVE SMOOTH",
"57 0 LINE",
"534 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 44 42 36 34 20 19 16 13 0 51 1 51 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 0 3 3 0 1 0 36 5 1 0 0 17 31 0 1 1 2 0 0 36 0 2 2 12 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 1 2 0 0 36 0 2 2 15 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
47 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "CE80C188-F3D2-4C92-847E-E862E20CA26D";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"549 108 LINE",
"549 178 LINE",
"496 178 LINE SMOOTH",
"483 178 OFFCURVE",
"476 172 OFFCURVE",
"473 160 CURVE SMOOTH",
"472 156 OFFCURVE",
"471 141 OFFCURVE",
"469 115 CURVE",
"309 115 LINE SMOOTH",
"295 115 OFFCURVE",
"280 113 OFFCURVE",
"265 111 CURVE",
"250 108 OFFCURVE",
"234 105 OFFCURVE",
"218 100 CURVE",
"381 267 LINE SMOOTH",
"400 287 OFFCURVE",
"419 307 OFFCURVE",
"437 326 CURVE SMOOTH",
"455 345 OFFCURVE",
"470 365 OFFCURVE",
"483 386 CURVE SMOOTH",
"496 407 OFFCURVE",
"506 428 OFFCURVE",
"514 451 CURVE SMOOTH",
"522 474 OFFCURVE",
"526 498 OFFCURVE",
"526 525 CURVE SMOOTH",
"526 556 OFFCURVE",
"520 584 OFFCURVE",
"509 609 CURVE SMOOTH",
"498 634 OFFCURVE",
"483 656 OFFCURVE",
"463 674 CURVE SMOOTH",
"443 692 OFFCURVE",
"421 706 OFFCURVE",
"393 716 CURVE SMOOTH",
"365 726 OFFCURVE",
"334 731 OFFCURVE",
"301 731 CURVE SMOOTH",
"269 731 OFFCURVE",
"239 727 OFFCURVE",
"211 718 CURVE SMOOTH",
"183 709 OFFCURVE",
"158 696 OFFCURVE",
"137 678 CURVE SMOOTH",
"115 660 OFFCURVE",
"98 639 OFFCURVE",
"84 613 CURVE SMOOTH",
"70 587 OFFCURVE",
"60 556 OFFCURVE",
"55 521 CURVE",
"120 510 LINE SMOOTH",
"126 509 OFFCURVE",
"131 508 OFFCURVE",
"136 508 CURVE SMOOTH",
"147 508 OFFCURVE",
"157 511 OFFCURVE",
"164 517 CURVE",
"171 522 OFFCURVE",
"177 531 OFFCURVE",
"181 544 CURVE SMOOTH",
"189 569 OFFCURVE",
"202 589 OFFCURVE",
"221 604 CURVE SMOOTH",
"240 619 OFFCURVE",
"264 627 OFFCURVE",
"294 627 CURVE SMOOTH",
"310 627 OFFCURVE",
"324 624 OFFCURVE",
"337 620 CURVE SMOOTH",
"350 616 OFFCURVE",
"361 609 OFFCURVE",
"370 600 CURVE SMOOTH",
"379 591 OFFCURVE",
"387 580 OFFCURVE",
"392 567 CURVE SMOOTH",
"397 554 OFFCURVE",
"399 538 OFFCURVE",
"399 521 CURVE SMOOTH",
"399 502 OFFCURVE",
"397 484 OFFCURVE",
"392 467 CURVE SMOOTH",
"387 450 OFFCURVE",
"379 433 OFFCURVE",
"369 416 CURVE SMOOTH",
"359 399 OFFCURVE",
"347 382 OFFCURVE",
"333 365 CURVE SMOOTH",
"319 348 OFFCURVE",
"301 331 OFFCURVE",
"283 312 CURVE SMOOTH",
"64 92 LINE SMOOTH",
"56 84 OFFCURVE",
"51 76 OFFCURVE",
"47 67 CURVE",
"44 58 OFFCURVE",
"42 49 OFFCURVE",
"42 41 CURVE SMOOTH",
"42 0 LINE",
"509 0 LINE",
"538 0 LINE",
"549 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 42 40 34 32 20 19 16 13 0 49 1 49 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
45 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 0 3 3 0 1 0 36 5 1 0 0 17 31 0 1 1 2 0 0 36 0 2 2 12 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
45 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
components = (
{
name = SerifUpLeftLower;
transform = "{1, 0, 0, 1, 513, 11}";
}
);
layerId = "425A23E0-30D3-4F53-B662-63EF9D0DC243";
name = "Jan 24 23, 22:38";
paths = (
{
closed = 1;
nodes = (
"513 0 LINE",
"513 11 LINE",
"146 11 LINE SMOOTH",
"123 11 OFFCURVE",
"106 10 OFFCURVE",
"91 9 CURVE",
"338 261 LINE SMOOTH",
"421 345 OFFCURVE",
"494 417 OFFCURVE",
"494 525 CURVE SMOOTH",
"494 648 OFFCURVE",
"406 708 OFFCURVE",
"301 708 CURVE SMOOTH",
"189 708 OFFCURVE",
"111 638 OFFCURVE",
"95 526 CURVE",
"100 526 LINE SMOOTH",
"104 526 OFFCURVE",
"107 528 OFFCURVE",
"108 534 CURVE SMOOTH",
"124 632 OFFCURVE",
"200 698 OFFCURVE",
"301 698 CURVE SMOOTH",
"399 698 OFFCURVE",
"482 640 OFFCURVE",
"482 525 CURVE SMOOTH",
"482 425 OFFCURVE",
"411 349 OFFCURVE",
"331 268 CURVE SMOOTH",
"79 12 LINE SMOOTH",
"78 11 OFFCURVE",
"75 8 OFFCURVE",
"75 4 CURVE SMOOTH",
"75 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 29 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
14 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
34 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 580;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"424 -8 OFFCURVE",
"519 80 OFFCURVE",
"519 185 CURVE SMOOTH",
"519 284 OFFCURVE",
"453 353 OFFCURVE",
"339 361 CURVE",
"424 375 OFFCURVE",
"499 440 OFFCURVE",
"499 533 CURVE SMOOTH",
"499 651 OFFCURVE",
"413 708 OFFCURVE",
"310 708 CURVE SMOOTH",
"199 708 OFFCURVE",
"120 638 OFFCURVE",
"104 526 CURVE",
"107 526 OFFCURVE",
"109 526 OFFCURVE",
"109 526 CURVE SMOOTH",
"113 526 OFFCURVE",
"115 529 OFFCURVE",
"116 534 CURVE SMOOTH",
"132 632 OFFCURVE",
"208 698 OFFCURVE",
"310 698 CURVE SMOOTH",
"408 698 OFFCURVE",
"487 644 OFFCURVE",
"487 533 CURVE SMOOTH",
"487 430 OFFCURVE",
"404 369 OFFCURVE",
"285 364 CURVE",
"285 356 LINE",
"430 356 OFFCURVE",
"507 290 OFFCURVE",
"507 185 CURVE SMOOTH",
"507 94 OFFCURVE",
"428 2 OFFCURVE",
"301 2 CURVE SMOOTH",
"189 2 OFFCURVE",
"125 54 OFFCURVE",
"95 158 CURVE SMOOTH",
"94 166 OFFCURVE",
"91 170 OFFCURVE",
"86 170 CURVE SMOOTH",
"84 170 OFFCURVE",
"82 169 OFFCURVE",
"80 168 CURVE",
"107 53 OFFCURVE",
"175 -8 OFFCURVE",
"301 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
51 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
61 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 609;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"425 -8 OFFCURVE",
"540 73 OFFCURVE",
"540 222 CURVE SMOOTH",
"540 303 OFFCURVE",
"500 358 OFFCURVE",
"419 386 CURVE",
"492 411 OFFCURVE",
"527 459 OFFCURVE",
"527 548 CURVE SMOOTH",
"527 655 OFFCURVE",
"436 737 OFFCURVE",
"301 737 CURVE SMOOTH",
"166 737 OFFCURVE",
"64 662 OFFCURVE",
"43 521 CURVE",
"114 508 OFFCURVE",
"134 504 OFFCURVE",
"148 504 CURVE SMOOTH",
"176 504 OFFCURVE",
"190 516 OFFCURVE",
"201 547 CURVE SMOOTH",
"215 583 OFFCURVE",
"249 610 OFFCURVE",
"292 610 CURVE SMOOTH",
"349 610 OFFCURVE",
"376 578 OFFCURVE",
"376 521 CURVE SMOOTH",
"376 454 OFFCURVE",
"342 426 OFFCURVE",
"234 426 CURVE",
"234 319 LINE",
"362 319 OFFCURVE",
"385 294 OFFCURVE",
"385 217 CURVE SMOOTH",
"385 164 OFFCURVE",
"347 119 OFFCURVE",
"282 119 CURVE SMOOTH",
"237 119 OFFCURVE",
"206 142 OFFCURVE",
"175 198 CURVE SMOOTH",
"167 214 OFFCURVE",
"148 222 OFFCURVE",
"127 222 CURVE SMOOTH",
"105 222 OFFCURVE",
"94 216 OFFCURVE",
"23 187 CURVE",
"70 53 OFFCURVE",
"145 -8 OFFCURVE",
"284 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 60 58 52 50 44 43 42 41 33 31 27 25 18 16 0 67 1 67 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
63 1 7 6 10 1 4 5 22 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 0 5 0 4 2 5 4 1 0 38 0 6 6 0 1 0 36 8 1 0 0 17 31 0 3 3 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
63 1 7 6 10 1 4 5 22 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"430.044 -8 OFFCURVE",
"535 75.05 OFFCURVE",
"535 206 CURVE SMOOTH",
"535 292.667 OFFCURVE",
"488.333 351.667 OFFCURVE",
"395 377 CURVE",
"473.178 399.336 OFFCURVE",
"519 453.54 OFFCURVE",
"519 541 CURVE SMOOTH",
"519 654.445 OFFCURVE",
"430.818 725 OFFCURVE",
"310 725 CURVE SMOOTH",
"185.419 725 OFFCURVE",
"94.144 650.009 OFFCURVE",
"76 523 CURVE",
"104 518 OFFCURVE",
"125 514 OFFCURVE",
"134 514 CURVE SMOOTH",
"151.333 514 OFFCURVE",
"161.667 522.333 OFFCURVE",
"167 541 CURVE SMOOTH",
"183.611 604.674 OFFCURVE",
"233 648 OFFCURVE",
"305 648 CURVE SMOOTH",
"380 648 OFFCURVE",
"432 606 OFFCURVE",
"432 526 CURVE SMOOTH",
"432 445 OFFCURVE",
"376 400 OFFCURVE",
"263 400 CURVE",
"263 335 LINE",
"397 335 OFFCURVE",
"446 291.507 OFFCURVE",
"446 203 CURVE SMOOTH",
"446 133.742 OFFCURVE",
"387.794 68 OFFCURVE",
"296 68 CURVE SMOOTH",
"215 68 OFFCURVE",
"184 101 OFFCURVE",
"143 182 CURVE SMOOTH",
"137.667 194 OFFCURVE",
"126.333 200 OFFCURVE",
"113 200 CURVE SMOOTH",
"103 200 OFFCURVE",
"96 197 OFFCURVE",
"54 179 CURVE",
"91.197 64.547 OFFCURVE",
"152.182 -8 OFFCURVE",
"297 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 67 65 59 57 49 48 47 46 38 36 27 25 19 17 0 74 1 74 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
70 1 7 6 10 1 4 5 23 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 0 5 0 4 2 5 4 1 0 38 0 6 6 0 1 0 36 8 1 0 0 17 31 0 3 3 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
70 1 7 6 10 1 4 5 23 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 3 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
70 1 7 6 10 1 4 5 23 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 604;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "6970B1C2-F0A5-4814-A243-D44167E6A8BF";
name = "Jan 24 23, 22:41";
paths = (
{
closed = 1;
nodes = (
"418.135 -8 OFFCURVE",
"513 79.787 OFFCURVE",
"513 185 CURVE SMOOTH",
"513 284.06 OFFCURVE",
"446.643 353.252 OFFCURVE",
"333 361 CURVE",
"418.306 374.759 OFFCURVE",
"493 440.131 OFFCURVE",
"493 533 CURVE SMOOTH",
"493 651.327 OFFCURVE",
"407.324 708 OFFCURVE",
"304 708 CURVE SMOOTH",
"191.561 708 OFFCURVE",
"114.039 638.272 OFFCURVE",
"98 526 CURVE",
"103 526 LINE SMOOTH",
"107 526 OFFCURVE",
"109.333 528.667 OFFCURVE",
"110 534 CURVE SMOOTH",
"125.902 632.063 OFFCURVE",
"201.735 698 OFFCURVE",
"304 698 CURVE SMOOTH",
"401.859 698 OFFCURVE",
"481 644.123 OFFCURVE",
"481 533 CURVE SMOOTH",
"481 430 OFFCURVE",
"398 369 OFFCURVE",
"279 364 CURVE",
"279 356 LINE",
"423.852 356 OFFCURVE",
"501 289.875 OFFCURVE",
"501 185 CURVE SMOOTH",
"501 94.262 OFFCURVE",
"421.639 2 OFFCURVE",
"295 2 CURVE SMOOTH",
"183 2 OFFCURVE",
"119 54 OFFCURVE",
"89 158 CURVE SMOOTH",
"87.667 166 OFFCURVE",
"85.333 170 OFFCURVE",
"80 170 CURVE SMOOTH",
"78.667 170 OFFCURVE",
"77.333 169.667 OFFCURVE",
"76 169 CURVE SMOOTH",
"74 168 LINE",
"82.312 132.672 OFFCURVE",
"98.877 88.239 OFFCURVE",
"127.5 55 CURVE SMOOTH",
"160.931 16.176 OFFCURVE",
"221.234 -8 OFFCURVE",
"295 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
51 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
61 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 580;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"402 0 LINE",
"402 216 LINE",
"542 216 LINE SMOOTH",
"547 216 OFFCURVE",
"550 218 OFFCURVE",
"550 222 CURVE SMOOTH",
"550 226 LINE",
"402 226 LINE",
"402 701 LINE",
"402 701 LINE",
"395 701 LINE",
"33 225 LINE",
"34 221 LINE SMOOTH",
"35 218 OFFCURVE",
"36 216 OFFCURVE",
"43 216 CURVE SMOOTH",
"390 216 LINE",
"390 0 LINE"
);
},
{
closed = 1;
nodes = (
"391 679 LINE",
"390 676 OFFCURVE",
"390 673 OFFCURVE",
"390 670 CURVE",
"390 226 LINE",
"47 226 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
6 3 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
19 7 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 593;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"493 0 LINE",
"493 168 LINE",
"538 168 LINE SMOOTH",
"558 168 OFFCURVE",
"568 181 OFFCURVE",
"568 196 CURVE SMOOTH",
"568 283 LINE",
"493 283 LINE",
"493 729 LINE",
"493 729 LINE",
"345 729 LINE",
"8 276 LINE",
"24 199 LINE SMOOTH",
"28 182 OFFCURVE",
"46 168 OFFCURVE",
"65 168 CURVE SMOOTH",
"358 168 LINE",
"358 0 LINE"
);
},
{
closed = 1;
nodes = (
"363 553 LINE",
"360 524 OFFCURVE",
"358 497 OFFCURVE",
"358 473 CURVE SMOOTH",
"358 283 LINE",
"171 283 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
22 21 16 15 11 9 8 7 6 4 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
20 1 0 4 1 30 5 1 0 3 1 1 2 0 1 1 2 38 0 4 4 11 31 0 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
20 1 0 4 1 30 0 4 0 4 52 0 2 1 2 53 5 1 0 1 1 0 0 0 35 5 1 0 0 1 1 2 36 3 1 1 0 1 1 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
20 1 0 4 1 30 0 4 0 4 52 0 2 1 2 53 0 0 5 1 0 0 0 35 0 5 0 3 1 5 3 1 2 38 0 0 0 1 1 0 36 0 1 0 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"456 0 LINE",
"456 189 LINE",
"545 189 LINE SMOOTH",
"558 189 OFFCURVE",
"564 197 OFFCURVE",
"564 208 CURVE SMOOTH",
"564 259 LINE",
"456 259 LINE",
"456 717 LINE",
"456 717 LINE",
"373 717 LINE",
"24 254 LINE",
"33 209 LINE SMOOTH",
"36 197 OFFCURVE",
"47 189 OFFCURVE",
"60 189 CURVE SMOOTH",
"377 189 LINE",
"377 0 LINE"
);
},
{
closed = 1;
nodes = (
"381 613 LINE",
"378 592 OFFCURVE",
"377 571 OFFCURVE",
"377 554 CURVE SMOOTH",
"377 259 LINE",
"121 259 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
22 21 16 15 11 9 8 7 6 4 1 0 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
20 1 0 4 1 30 5 1 0 3 1 1 2 0 1 1 0 38 0 4 4 11 31 0 2 2 12 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
20 1 0 4 1 30 5 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 0 0 36 0 2 2 15 2 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
20 1 0 4 1 30 0 4 0 2 4 0 0 35 5 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 0 0 36 0 2 4 2 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
20 1 0 4 1 30 0 4 0 2 4 0 0 35 0 5 0 3 1 5 3 1 0 38 0 0 0 1 2 0 1 1 0 38 0 4 4 2 0 0 36 0 2 4 2 0 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"167 700 LINE",
"114 405 LINE",
"123 401 LINE",
"176 414 OFFCURVE",
"223 421 OFFCURVE",
"263 421 CURVE SMOOTH",
"401 421 OFFCURVE",
"470 343 OFFCURVE",
"470 224 CURVE SMOOTH",
"470 87 OFFCURVE",
"376 4 OFFCURVE",
"250 4 CURVE SMOOTH",
"195 4 OFFCURVE",
"101 51 OFFCURVE",
"89 51 CURVE SMOOTH",
"86 51 OFFCURVE",
"84 50 OFFCURVE",
"83 48 CURVE SMOOTH",
"80 44 LINE",
"118 17 OFFCURVE",
"185 -8 OFFCURVE",
"250 -8 CURVE SMOOTH",
"379 -8 OFFCURVE",
"483 81 OFFCURVE",
"483 223 CURVE SMOOTH",
"483 350 OFFCURVE",
"404 431 OFFCURVE",
"263 431 CURVE SMOOTH",
"223 431 OFFCURVE",
"178 425 OFFCURVE",
"127 412 CURVE",
"177 689 LINE",
"460 689 LINE SMOOTH",
"464 689 OFFCURVE",
"467 692 OFFCURVE",
"467 695 CURVE SMOOTH",
"467 700 LINE",
"467 700 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
13 3 36 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
26 1 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
8 1 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
31 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 574;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"140 729 LINE",
"78 364 LINE",
"174 338 LINE",
"205 351 OFFCURVE",
"237 357 OFFCURVE",
"270 357 CURVE SMOOTH",
"343 357 OFFCURVE",
"385 319 OFFCURVE",
"385 248 CURVE SMOOTH",
"385 173 OFFCURVE",
"351 118 OFFCURVE",
"270 118 CURVE SMOOTH",
"215 118 OFFCURVE",
"160 170 OFFCURVE",
"124 170 CURVE SMOOTH",
"109 170 OFFCURVE",
"96 162 OFFCURVE",
"85 149 CURVE SMOOTH",
"37 85 LINE",
"92 33 OFFCURVE",
"171 -8 OFFCURVE",
"261 -8 CURVE SMOOTH",
"423 -8 OFFCURVE",
"540 100 OFFCURVE",
"540 256 CURVE SMOOTH",
"540 385 OFFCURVE",
"453 479 OFFCURVE",
"304 479 CURVE SMOOTH",
"280 479 OFFCURVE",
"255 477 OFFCURVE",
"228 472 CURVE",
"248 593 LINE",
"422 593 LINE SMOOTH",
"482 593 OFFCURVE",
"513 617 OFFCURVE",
"513 665 CURVE SMOOTH",
"513 729 LINE",
"513 729 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
47 46 43 41 35 33 30 28 21 19 11 9 6 4 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
45 7 2 5 1 44 1 3 5 25 1 2 4 3 30 0 3 5 4 5 3 4 50 0 1 0 5 3 1 5 1 0 38 0 0 0 6 0 0 36 0 6 6 11 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
45 7 2 5 1 44 1 3 5 25 1 2 4 3 30 0 3 5 4 5 3 4 50 0 6 0 0 1 6 0 1 0 38 0 1 0 5 3 1 5 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"159 717 LINE",
"101 382 LINE",
"157 365 LINE",
"198 378 OFFCURVE",
"237 384 OFFCURVE",
"273 384 CURVE SMOOTH",
"376 384 OFFCURVE",
"430 329 OFFCURVE",
"430 238 CURVE SMOOTH",
"430 136 OFFCURVE",
"367 69 OFFCURVE",
"267 69 CURVE SMOOTH",
"218 69 OFFCURVE",
"137 119 OFFCURVE",
"114 119 CURVE SMOOTH",
"104 119 OFFCURVE",
"96 115 OFFCURVE",
"90 106 CURVE SMOOTH",
"63 68 LINE",
"109 27 OFFCURVE",
"185 -8 OFFCURVE",
"262 -8 CURVE SMOOTH",
"409 -8 OFFCURVE",
"520 91 OFFCURVE",
"520 242 CURVE SMOOTH",
"520 370 OFFCURVE",
"436 458 OFFCURVE",
"291 458 CURVE SMOOTH",
"260 458 OFFCURVE",
"225 454 OFFCURVE",
"188 446 CURVE",
"221 634 LINE",
"446 634 LINE SMOOTH",
"483 634 OFFCURVE",
"498 653 OFFCURVE",
"498 678 CURVE SMOOTH",
"498 717 LINE",
"498 717 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
46 45 41 39 31 29 26 24 18 16 8 6 4 2 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
5 1 5 1 44 43 2 3 5 22 1 2 4 3 30 0 3 5 4 5 3 4 50 0 1 0 5 3 1 5 1 0 38 0 0 0 6 0 0 36 0 6 6 11 31 0 4 4 2 1 0 36 0 2 2 18 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
5 1 5 1 44 43 2 3 5 22 1 2 4 3 30 0 3 5 4 5 3 4 50 0 6 0 0 1 6 0 1 0 38 0 1 0 5 3 1 5 1 0 38 0 4 4 2 1 0 36 0 2 2 21 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
5 1 5 1 44 43 2 3 5 22 1 2 4 3 30 0 3 5 4 5 3 4 50 0 6 0 0 1 6 0 1 0 38 0 1 0 5 3 1 5 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"412 -8 OFFCURVE",
"505 77 OFFCURVE",
"505 202 CURVE SMOOTH",
"505 324 OFFCURVE",
"423 409 OFFCURVE",
"297 409 CURVE SMOOTH",
"215 409 OFFCURVE",
"135 366 OFFCURVE",
"101 295 CURVE",
"116 331 OFFCURVE",
"139 370 OFFCURVE",
"175 418 CURVE SMOOTH",
"384 700 LINE",
"372 700 LINE SMOOTH",
"371 700 OFFCURVE",
"369 699 OFFCURVE",
"368 697 CURVE SMOOTH",
"165 423 LINE SMOOTH",
"98 334 OFFCURVE",
"73 264 OFFCURVE",
"73 215 CURVE SMOOTH",
"73 78 OFFCURVE",
"157 -8 OFFCURVE",
"282 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 2 OFFCURVE",
"85 89 OFFCURVE",
"85 207 CURVE SMOOTH",
"85 304 OFFCURVE",
"172 399 OFFCURVE",
"298 399 CURVE SMOOTH",
"416 399 OFFCURVE",
"493 323 OFFCURVE",
"493 202 CURVE SMOOTH",
"493 84 OFFCURVE",
"410 2 OFFCURVE",
"282 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
5 15 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
23 15 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
27 15 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 571;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"434 -8 OFFCURVE",
"544 102 OFFCURVE",
"544 243 CURVE SMOOTH",
"544 384 OFFCURVE",
"445 462 OFFCURVE",
"329 462 CURVE SMOOTH",
"300 462 OFFCURVE",
"275 457 OFFCURVE",
"251 448 CURVE",
"254 451 OFFCURVE",
"268 469 OFFCURVE",
"270 471 CURVE SMOOTH",
"486 729 LINE",
"348 729 LINE SMOOTH",
"311 729 OFFCURVE",
"280 713 OFFCURVE",
"265 693 CURVE SMOOTH",
"101 472 LINE SMOOTH",
"46 397 OFFCURVE",
"18 326 OFFCURVE",
"18 253 CURVE SMOOTH",
"18 99 OFFCURVE",
"119 -8 OFFCURVE",
"279 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"203 115 OFFCURVE",
"167 159 OFFCURVE",
"167 232 CURVE SMOOTH",
"167 301 OFFCURVE",
"211 350 OFFCURVE",
"274 350 CURVE SMOOTH",
"345 350 OFFCURVE",
"389 305 OFFCURVE",
"389 232 CURVE SMOOTH",
"389 166 OFFCURVE",
"341 115 OFFCURVE",
"276 115 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 46 44 36 34 23 21 11 9 0 29 1 29 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
27 1 4 0 1 30 5 1 0 2 4 2 0 4 50 0 4 3 2 4 3 48 0 2 2 11 31 0 3 3 1 1 2 36 0 1 1 18 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
27 1 4 0 1 30 0 2 0 2 52 5 1 0 4 0 52 0 4 3 4 52 0 3 1 1 3 1 0 35 0 3 3 1 1 2 36 0 1 3 1 1 2 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"424 -8 OFFCURVE",
"527 91 OFFCURVE",
"527 226 CURVE SMOOTH",
"527 358 OFFCURVE",
"434 439 OFFCURVE",
"315 439 CURVE SMOOTH",
"267 439 OFFCURVE",
"225 426 OFFCURVE",
"192 402 CURVE",
"210 425 OFFCURVE",
"229 449 OFFCURVE",
"247 472 CURVE SMOOTH",
"440 717 LINE",
"361 717 LINE SMOOTH",
"340 717 OFFCURVE",
"322 707 OFFCURVE",
"313 695 CURVE SMOOTH",
"132 451 LINE SMOOTH",
"71 370 OFFCURVE",
"44 300 OFFCURVE",
"44 237 CURVE SMOOTH",
"44 90 OFFCURVE",
"137 -8 OFFCURVE",
"281 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186 66 OFFCURVE",
"130 130 OFFCURVE",
"130 221 CURVE SMOOTH",
"130 305 OFFCURVE",
"194 371 OFFCURVE",
"286 371 CURVE SMOOTH",
"377 371 OFFCURVE",
"438 312 OFFCURVE",
"438 219 CURVE SMOOTH",
"438 129 OFFCURVE",
"373 66 OFFCURVE",
"280 66 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 43 41 33 31 23 21 11 9 0 26 1 26 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
24 1 4 0 1 30 5 1 0 0 4 3 0 4 1 0 38 0 2 2 11 31 0 3 3 1 1 0 36 0 1 1 18 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
24 1 4 0 1 30 0 2 0 2 52 5 1 0 0 4 3 0 4 1 0 38 0 3 3 1 1 0 36 0 1 1 21 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
24 1 4 0 1 30 0 2 0 2 52 5 1 0 0 4 3 0 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 84, 689}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"180 0 LINE SMOOTH",
"185 0 OFFCURVE",
"189 2 OFFCURVE",
"191 6 CURVE SMOOTH",
"539 687 LINE SMOOTH",
"540 690 OFFCURVE",
"541 692 OFFCURVE",
"541 694 CURVE SMOOTH",
"541 700 LINE",
"84 700 LINE",
"84 695 LINE SMOOTH",
"84 691 OFFCURVE",
"86 689 OFFCURVE",
"90 689 CURVE SMOOTH",
"527 689 LINE",
"526 687 OFFCURVE",
"524 685 OFFCURVE",
"523 682 CURVE SMOOTH",
"174 0 LINE"
);
},
{
closed = 1;
nodes = (
"93 685 LINE",
"93 697 LINE",
"84 697 LINE",
"84 685 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 13 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 585;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 32, 593}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"191 0 LINE SMOOTH",
"234 0 OFFCURVE",
"259 23 OFFCURVE",
"272 51 CURVE SMOOTH",
"527 590 LINE SMOOTH",
"534 606 OFFCURVE",
"544 627 OFFCURVE",
"544 664 CURVE SMOOTH",
"544 729 LINE",
"32 729 LINE",
"32 627 LINE SMOOTH",
"32 608 OFFCURVE",
"50 593 OFFCURVE",
"67 593 CURVE SMOOTH",
"388 593 LINE",
"368 572 OFFCURVE",
"352 550 OFFCURVE",
"338 522 CURVE SMOOTH",
"78 0 LINE"
);
},
{
closed = 1;
nodes = (
"85 565 LINE",
"85 635 LINE",
"32 635 LINE",
"32 565 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
0 0 0 20 0 20 15 13 9 7 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 1 2 0 0 36 3 1 2 2 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 53 3 1 2 1 1 2 0 0 35 3 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{-1, 0, 0, -1, 64, 634}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"194 0 LINE SMOOTH",
"221 0 OFFCURVE",
"235 15 OFFCURVE",
"243 32 CURVE SMOOTH",
"540 630 LINE SMOOTH",
"545 641 OFFCURVE",
"551 654 OFFCURVE",
"551 677 CURVE SMOOTH",
"551 717 LINE",
"64 717 LINE",
"64 656 LINE SMOOTH",
"64 645 OFFCURVE",
"75 634 OFFCURVE",
"86 634 CURVE SMOOTH",
"460 634 LINE",
"449 622 OFFCURVE",
"441 608 OFFCURVE",
"432 591 CURVE SMOOTH",
"131 0 LINE"
);
},
{
closed = 1;
nodes = (
"101 609 LINE",
"101 673 LINE",
"64 673 LINE",
"64 609 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
0 0 0 18 0 18 15 13 9 7 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 1 2 0 0 36 3 1 2 2 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 2 0 1 0 2 1 1 0 38 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 53 3 1 2 1 1 2 0 0 35 3 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 602;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "6BDA50A8-2808-4BFD-8CAF-E3814F6A8F28";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"32 723 LINE",
"32 639 LINE",
"32 638 LINE",
"32 637 LINE",
"32 530 LINE",
"85 530 LINE SMOOTH",
"98 530 OFFCURVE",
"106 536 OFFCURVE",
"109 548 CURVE",
"111 558 OFFCURVE",
"112 579 OFFCURVE",
"115 611 CURVE",
"406 611 LINE",
"392 595 OFFCURVE",
"379 575 OFFCURVE",
"367 552 CURVE SMOOTH",
"87 0 LINE",
"177 0 LINE SMOOTH",
"195 0 OFFCURVE",
"209 4 OFFCURVE",
"219 12 CURVE SMOOTH",
"229 20 OFFCURVE",
"237 30 OFFCURVE",
"243 42 CURVE SMOOTH",
"516 606 LINE",
"519 613 OFFCURVE",
"524 621 OFFCURVE",
"527 631 CURVE SMOOTH",
"530 641 OFFCURVE",
"532 654 OFFCURVE",
"532 670 CURVE SMOOTH",
"532 723 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
0 0 0 20 0 20 15 13 9 7 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 1 2 0 0 36 3 1 2 2 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 53 3 1 2 1 1 2 0 0 35 3 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "2B382450-D446-490C-9D2F-6462F39E6B33";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"55 716 LINE",
"55 542 LINE",
"104 542 LINE SMOOTH",
"116 542 OFFCURVE",
"122 547 OFFCURVE",
"124 559 CURVE",
"125 563 OFFCURVE",
"128 588 OFFCURVE",
"132 634 CURVE",
"452 634 LINE",
"442 623 OFFCURVE",
"433 609 OFFCURVE",
"423 591 CURVE",
"122 0 LINE",
"186 0 LINE SMOOTH",
"208 0 OFFCURVE",
"224 11 OFFCURVE",
"234 32 CURVE SMOOTH",
"531 630 LINE",
"539 644 OFFCURVE",
"542 660 OFFCURVE",
"542 676 CURVE SMOOTH",
"542 716 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
0 0 0 18 0 18 15 13 9 7 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 1 2 0 0 36 3 1 2 2 11 31 0 0 0 12 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 2 0 1 0 2 1 1 0 38 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 53 3 1 2 1 1 2 0 0 35 3 1 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "0A6D3F0A-5264-40A8-818D-2EDACE1169D8";
name = "Jan 15 23, 17:19";
paths = (
{
closed = 1;
nodes = (
"84 707 LINE",
"84 573 LINE",
"108 573 LINE SMOOTH",
"122 573 OFFCURVE",
"128 581 OFFCURVE",
"129 597 CURVE",
"133 664 LINE",
"504 664 LINE",
"163 0 LINE",
"195 0 LINE SMOOTH",
"209 0 OFFCURVE",
"217 6 OFFCURVE",
"224 18 CURVE",
"548 661 LINE",
"551 666 OFFCURVE",
"554 679 OFFCURVE",
"554 686 CURVE SMOOTH",
"554 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 13 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"416 -8 OFFCURVE",
"508 63 OFFCURVE",
"508 179 CURVE SMOOTH",
"508 293 OFFCURVE",
"434 349 OFFCURVE",
"335 366 CURVE",
"425 382 OFFCURVE",
"482 449 OFFCURVE",
"482 534 CURVE SMOOTH",
"482 635 OFFCURVE",
"406 708 OFFCURVE",
"288 708 CURVE SMOOTH",
"171 708 OFFCURVE",
"94 635 OFFCURVE",
"94 534 CURVE SMOOTH",
"94 449 OFFCURVE",
"151 382 OFFCURVE",
"241 366 CURVE",
"145 349 OFFCURVE",
"68 292 OFFCURVE",
"68 179 CURVE SMOOTH",
"68 62 OFFCURVE",
"162 -8 OFFCURVE",
"288 -8 CURVE"
);
},
{
closed = 1;
nodes = (
"169 2 OFFCURVE",
"80 70 OFFCURVE",
"80 179 CURVE SMOOTH",
"80 296 OFFCURVE",
"168 360 OFFCURVE",
"288 360 CURVE SMOOTH",
"405 360 OFFCURVE",
"496 300 OFFCURVE",
"496 179 CURVE SMOOTH",
"496 70 OFFCURVE",
"408 2 OFFCURVE",
"288 2 CURVE"
);
},
{
closed = 1;
nodes = (
"174 370 OFFCURVE",
"106 443 OFFCURVE",
"106 534 CURVE SMOOTH",
"106 631 OFFCURVE",
"178 698 OFFCURVE",
"288 698 CURVE SMOOTH",
"399 698 OFFCURVE",
"470 631 OFFCURVE",
"470 534 CURVE SMOOTH",
"470 443 OFFCURVE",
"404 370 OFFCURVE",
"288 370 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
35 5 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
10 5 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
30 5 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 576;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"429 -8 OFFCURVE",
"537 75 OFFCURVE",
"537 209 CURVE SMOOTH",
"537 291 OFFCURVE",
"499 349 OFFCURVE",
"415 380 CURVE",
"480 409 OFFCURVE",
"513 463 OFFCURVE",
"513 538 CURVE SMOOTH",
"513 653 OFFCURVE",
"410 737 OFFCURVE",
"277 737 CURVE SMOOTH",
"144 737 OFFCURVE",
"41 653 OFFCURVE",
"41 538 CURVE SMOOTH",
"41 463 OFFCURVE",
"73 409 OFFCURVE",
"140 380 CURVE",
"55 349 OFFCURVE",
"17 291 OFFCURVE",
"17 209 CURVE SMOOTH",
"17 75 OFFCURVE",
"127 -8 OFFCURVE",
"277 -8 CURVE"
);
},
{
closed = 1;
nodes = (
"211 109 OFFCURVE",
"177 151 OFFCURVE",
"177 212 CURVE SMOOTH",
"177 278 OFFCURVE",
"205 317 OFFCURVE",
"277 317 CURVE SMOOTH",
"350 317 OFFCURVE",
"377 278 OFFCURVE",
"377 212 CURVE SMOOTH",
"377 152 OFFCURVE",
"345 109 OFFCURVE",
"277 109 CURVE"
);
},
{
closed = 1;
nodes = (
"212 435 OFFCURVE",
"192 480 OFFCURVE",
"192 535 CURVE SMOOTH",
"192 584 OFFCURVE",
"219 624 OFFCURVE",
"277 624 CURVE SMOOTH",
"336 624 OFFCURVE",
"362 585 OFFCURVE",
"362 535 CURVE SMOOTH",
"362 480 OFFCURVE",
"342 435 OFFCURVE",
"277 435 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
57 56 37 36 1 0 67 65 56 75 57 75 47 45 36 55 37 55 19 17 0 35 1 35 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
26 10 2 3 4 1 30 8 1 4 0 3 2 4 3 1 0 38 0 5 5 1 1 0 36 0 1 1 17 31 7 1 2 2 0 1 0 36 6 1 0 0 18 0 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
26 10 2 3 4 1 30 0 1 0 5 4 1 5 1 0 38 8 1 4 0 3 2 4 3 1 0 38 7 1 2 0 0 2 1 0 35 7 1 2 2 0 1 0 36 6 1 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"432 -8 OFFCURVE",
"533 70 OFFCURVE",
"533 196 CURVE SMOOTH",
"533 288 OFFCURVE",
"483 349 OFFCURVE",
"394 374 CURVE",
"469 402 OFFCURVE",
"508 459 OFFCURVE",
"508 536 CURVE SMOOTH",
"508 646 OFFCURVE",
"417 725 OFFCURVE",
"292 725 CURVE SMOOTH",
"166 725 OFFCURVE",
"75 646 OFFCURVE",
"75 536 CURVE SMOOTH",
"75 459 OFFCURVE",
"114 402 OFFCURVE",
"189 374 CURVE",
"100 349 OFFCURVE",
"50 288 OFFCURVE",
"50 196 CURVE SMOOTH",
"50 70 OFFCURVE",
"151 -8 OFFCURVE",
"292 -8 CURVE"
);
},
{
closed = 1;
nodes = (
"201 63 OFFCURVE",
"142 116 OFFCURVE",
"142 198 CURVE SMOOTH",
"142 291 OFFCURVE",
"209 336 OFFCURVE",
"292 336 CURVE SMOOTH",
"376 336 OFFCURVE",
"441 291 OFFCURVE",
"441 198 CURVE SMOOTH",
"441 117 OFFCURVE",
"384 63 OFFCURVE",
"292 63 CURVE"
);
},
{
closed = 1;
nodes = (
"203 407 OFFCURVE",
"162 463 OFFCURVE",
"162 535 CURVE SMOOTH",
"162 606 OFFCURVE",
"211 656 OFFCURVE",
"292 656 CURVE SMOOTH",
"374 656 OFFCURVE",
"421 605 OFFCURVE",
"421 535 CURVE SMOOTH",
"421 464 OFFCURVE",
"380 407 OFFCURVE",
"292 407 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
53 52 33 32 1 0 63 61 52 71 53 71 43 41 32 51 33 51 17 15 0 31 1 31 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
24 8 2 3 4 1 30 8 1 4 0 3 2 4 3 1 0 38 0 5 5 1 1 0 36 0 1 1 17 31 7 1 2 2 0 1 0 36 6 1 0 0 18 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
24 8 2 3 4 1 30 0 1 0 5 4 1 5 1 0 38 8 1 4 0 3 2 4 3 1 0 38 7 1 2 2 0 1 0 36 6 1 0 0 21 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
24 8 2 3 4 1 30 0 1 0 5 4 1 5 1 0 38 8 1 4 0 3 2 4 3 1 0 38 7 1 2 0 0 2 1 0 35 7 1 2 2 0 1 0 36 6 1 0 2 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"191 0 LINE SMOOTH",
"194 0 OFFCURVE",
"195 0 OFFCURVE",
"197 3 CURVE SMOOTH",
"392 293 LINE SMOOTH",
"442 368 OFFCURVE",
"481 429 OFFCURVE",
"481 494 CURVE SMOOTH",
"481 622 OFFCURVE",
"398 708 OFFCURVE",
"280 708 CURVE SMOOTH",
"159 708 OFFCURVE",
"65 624 OFFCURVE",
"65 506 CURVE SMOOTH",
"65 390 OFFCURVE",
"145 307 OFFCURVE",
"266 307 CURVE SMOOTH",
"348 307 OFFCURVE",
"423 351 OFFCURVE",
"458 422 CURVE",
"442 383 OFFCURVE",
"416 347 OFFCURVE",
"383 298 CURVE SMOOTH",
"181 0 LINE"
);
},
{
closed = 1;
nodes = (
"154 317 OFFCURVE",
"77 392 OFFCURVE",
"77 506 CURVE SMOOTH",
"77 621 OFFCURVE",
"162 698 OFFCURVE",
"280 698 CURVE SMOOTH",
"390 698 OFFCURVE",
"469 615 OFFCURVE",
"469 501 CURVE SMOOTH",
"469 409 OFFCURVE",
"387 317 OFFCURVE",
"265 317 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
15 5 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
25 5 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
29 5 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 555;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"206 0 LINE SMOOTH",
"242 0 OFFCURVE",
"273 15 OFFCURVE",
"286 35 CURVE SMOOTH",
"443 258 LINE SMOOTH",
"492 326 OFFCURVE",
"522 401 OFFCURVE",
"522 492 CURVE SMOOTH",
"522 638 OFFCURVE",
"426 737 OFFCURVE",
"271 737 CURVE SMOOTH",
"122 737 OFFCURVE",
"15 629 OFFCURVE",
"15 495 CURVE SMOOTH",
"15 362 OFFCURVE",
"112 284 OFFCURVE",
"215 284 CURVE SMOOTH",
"254 284 OFFCURVE",
"289 292 OFFCURVE",
"320 308 CURVE",
"316 303 OFFCURVE",
"312 298 OFFCURVE",
"308 293 CURVE SMOOTH",
"63 0 LINE"
);
},
{
closed = 1;
nodes = (
"204 397 OFFCURVE",
"170 433 OFFCURVE",
"170 506 CURVE SMOOTH",
"170 569 OFFCURVE",
"208 614 OFFCURVE",
"269 614 CURVE SMOOTH",
"333 614 OFFCURVE",
"374 575 OFFCURVE",
"374 506 CURVE SMOOTH",
"374 441 OFFCURVE",
"338 397 OFFCURVE",
"271 397 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 45 43 38 36 25 23 11 9 0 31 1 31 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
29 1 0 4 1 30 0 4 5 1 0 2 4 0 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
29 1 0 4 1 30 0 2 0 2 53 0 1 0 3 4 1 3 1 0 38 0 4 0 0 4 1 0 35 0 4 4 0 1 0 36 5 1 0 4 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"201 0 LINE SMOOTH",
"222 0 OFFCURVE",
"239 9 OFFCURVE",
"247 21 CURVE SMOOTH",
"422 273 LINE SMOOTH",
"472 347 OFFCURVE",
"505 410 OFFCURVE",
"505 493 CURVE SMOOTH",
"505 631 OFFCURVE",
"416 725 OFFCURVE",
"277 725 CURVE SMOOTH",
"141 725 OFFCURVE",
"40 627 OFFCURVE",
"40 500 CURVE SMOOTH",
"40 373 OFFCURVE",
"130 294 OFFCURVE",
"241 294 CURVE SMOOTH",
"292 294 OFFCURVE",
"339 310 OFFCURVE",
"376 339 CURVE",
"364 322 OFFCURVE",
"352 305 OFFCURVE",
"337 286 CURVE SMOOTH",
"119 0 LINE"
);
},
{
closed = 1;
nodes = (
"184 363 OFFCURVE",
"129 415 OFFCURVE",
"129 506 CURVE SMOOTH",
"129 591 OFFCURVE",
"188 650 OFFCURVE",
"276 650 CURVE SMOOTH",
"360 650 OFFCURVE",
"420 593 OFFCURVE",
"420 504 CURVE SMOOTH",
"420 425 OFFCURVE",
"361 363 OFFCURVE",
"270 363 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 48 46 38 36 25 23 11 9 0 31 1 31 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
29 1 0 4 1 30 0 4 5 1 0 2 4 0 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 2 2 12 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
29 1 0 4 1 30 0 1 0 3 4 1 3 1 0 38 0 4 5 1 0 2 4 0 1 0 38 0 2 2 15 2 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
29 1 0 4 1 30 0 2 0 2 53 0 1 0 3 4 1 3 1 0 38 0 4 0 0 4 1 0 35 0 4 4 0 1 0 36 5 1 0 4 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 549;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"264 450 LINE",
"264 454 LINE SMOOTH",
"264 456 OFFCURVE",
"262 458 OFFCURVE",
"260 458 CURVE SMOOTH",
"181 460 LINE",
"181 810 LINE",
"173 810 LINE",
"72 719 LINE",
"74 716 LINE SMOOTH",
"76 713 OFFCURVE",
"80 713 OFFCURVE",
"83 716 CURVE SMOOTH",
"171 795 LINE",
"171 790 OFFCURVE",
"170 785 OFFCURVE",
"170 780 CURVE SMOOTH",
"170 460 LINE",
"88 458 LINE SMOOTH",
"86 458 OFFCURVE",
"84 456 OFFCURVE",
"84 454 CURVE SMOOTH",
"84 450 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -1;
width = 51;
};
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
13 1 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 337;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"303 450 LINE",
"303 496 LINE SMOOTH",
"303 511 OFFCURVE",
"295 521 OFFCURVE",
"280 524 CURVE SMOOTH",
"253 533 LINE",
"253 828 LINE",
"158 828 LINE",
"35 728 LINE",
"71 680 LINE SMOOTH",
"80 667 OFFCURVE",
"102 662 OFFCURVE",
"122 675 CURVE SMOOTH",
"140 687 LINE",
"139 674 OFFCURVE",
"139 663 OFFCURVE",
"139 652 CURVE SMOOTH",
"139 533 LINE",
"98 523 LINE SMOOTH",
"83 520 OFFCURVE",
"75 511 OFFCURVE",
"75 496 CURVE SMOOTH",
"75 450 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -45;
width = 51;
};
assembly = "NPUSHB[ ]	/* 12 values pushed */
16 15 14 13 12 11 7 5 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 3 2 1 2 2 1 0 1 2 30 0 2 1 2 52 0 1 0 1 52 0 4 4 0 0 0 36 3 1 0 0 14 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
10 3 2 1 2 2 1 0 1 2 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 3 2 1 2 2 1 0 1 2 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 335;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"294 450 LINE",
"294 478 LINE SMOOTH",
"294 487 OFFCURVE",
"289 493 OFFCURVE",
"280 494 CURVE SMOOTH",
"229 500 LINE",
"229 820 LINE",
"173 820 LINE",
"60 724 LINE",
"81 695 LINE SMOOTH",
"86 688 OFFCURVE",
"99 683 OFFCURVE",
"112 693 CURVE SMOOTH",
"162 735 LINE",
"162 726 OFFCURVE",
"161 717 OFFCURVE",
"161 708 CURVE SMOOTH",
"161 500 LINE",
"102 494 LINE SMOOTH",
"91 493 OFFCURVE",
"88 485 OFFCURVE",
"88 478 CURVE SMOOTH",
"88 450 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -24;
width = 51;
};
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 14 13 12 11 10 7 5 1 0 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 3 2 3 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 4 4 0 0 0 36 3 1 0 0 14 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
9 3 2 3 1 2 1 30 0 2 1 2 52 0 1 0 1 52 3 1 0 4 4 0 0 0 35 3 1 0 0 4 0 2 36 0 4 0 4 0 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
9 3 2 3 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 3 0 4 0 3 42 0 0 3 4 0 0 0 35 0 0 0 4 0 2 36 0 4 0 4 0 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
leftMetricsKey = "=one*0.7";
note = onesuperior;
rightMetricsKey = "=one*0.7";
unicode = 00B9;
userData = {
RMXScaler = {
source = one;
};
};
},
{
glyphname = twosuperior;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"275 450 LINE",
"275 460 LINE",
"93 460 LINE SMOOTH",
"82 460 OFFCURVE",
"71 459 OFFCURVE",
"63 458 CURVE",
"186 583 LINE SMOOTH",
"228 626 OFFCURVE",
"265 662 OFFCURVE",
"265 718 CURVE SMOOTH",
"265 780 OFFCURVE",
"220 812 OFFCURVE",
"166 812 CURVE SMOOTH",
"108 812 OFFCURVE",
"68 777 OFFCURVE",
"59 718 CURVE",
"62 718 OFFCURVE",
"64 718 OFFCURVE",
"64 718 CURVE SMOOTH",
"68 718 OFFCURVE",
"69 719 OFFCURVE",
"70 723 CURVE SMOOTH",
"78 771 OFFCURVE",
"116 803 OFFCURVE",
"165 803 CURVE SMOOTH",
"214 803 OFFCURVE",
"255 774 OFFCURVE",
"255 718 CURVE SMOOTH",
"255 672 OFFCURVE",
"226 635 OFFCURVE",
"179 588 CURVE SMOOTH",
"52 459 LINE SMOOTH",
"51 458 OFFCURVE",
"49 456 OFFCURVE",
"49 454 CURVE SMOOTH",
"49 450 LINE"
);
},
{
closed = 1;
nodes = (
"275 460 LINE",
"275 507 LINE",
"270 507 LINE SMOOTH",
"268 507 OFFCURVE",
"267 505 OFFCURVE",
"267 503 CURVE SMOOTH",
"265 456 LINE",
"265 456 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -1;
width = 51;
};
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
14 1 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 1 32 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 327;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"308 450 LINE",
"308 553 LINE",
"254 553 LINE SMOOTH",
"235 553 OFFCURVE",
"213 548 OFFCURVE",
"189 540 CURVE",
"236 589 LINE SMOOTH",
"274 628 OFFCURVE",
"305 666 OFFCURVE",
"305 718 CURVE SMOOTH",
"305 783 OFFCURVE",
"257 833 OFFCURVE",
"176 833 CURVE SMOOTH",
"102 833 OFFCURVE",
"43 793 OFFCURVE",
"32 714 CURVE",
"87 704 OFFCURVE",
"100 702 OFFCURVE",
"109 702 CURVE SMOOTH",
"128 702 OFFCURVE",
"136 709 OFFCURVE",
"149 731 CURVE SMOOTH",
"152 737 OFFCURVE",
"163 740 OFFCURVE",
"169 740 CURVE SMOOTH",
"188 740 OFFCURVE",
"188 730 OFFCURVE",
"188 714 CURVE SMOOTH",
"188 685 OFFCURVE",
"176 659 OFFCURVE",
"145 628 CURVE SMOOTH",
"48 531 LINE",
"35 519 OFFCURVE",
"29 503 OFFCURVE",
"29 487 CURVE SMOOTH",
"29 450 LINE"
);
},
{
closed = 1;
nodes = (
"308 553 LINE",
"308 589 LINE",
"267 589 LINE SMOOTH",
"251 589 OFFCURVE",
"244 578 OFFCURVE",
"240 561 CURVE SMOOTH",
"230 532 LINE",
"230 532 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -45;
width = 51;
};
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 40 38 34 32 20 19 16 13 0 46 1 46 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
42 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 2 2 1 1 0 36 0 1 1 20 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
42 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 341;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"295 450 LINE",
"295 512 LINE",
"184 512 LINE SMOOTH",
"172 512 OFFCURVE",
"152 509 OFFCURVE",
"135 504 CURVE",
"216 587 LINE SMOOTH",
"255 627 OFFCURVE",
"289 664 OFFCURVE",
"289 718 CURVE SMOOTH",
"289 782 OFFCURVE",
"242 824 OFFCURVE",
"173 824 CURVE SMOOTH",
"107 824 OFFCURVE",
"56 786 OFFCURVE",
"46 716 CURVE",
"73 711 OFFCURVE",
"85 709 OFFCURVE",
"91 709 CURVE SMOOTH",
"103 709 OFFCURVE",
"110 713 OFFCURVE",
"115 729 CURVE SMOOTH",
"121 749 OFFCURVE",
"141 768 OFFCURVE",
"169 768 CURVE SMOOTH",
"201 768 OFFCURVE",
"220 750 OFFCURVE",
"220 716 CURVE SMOOTH",
"220 678 OFFCURVE",
"197 646 OFFCURVE",
"162 611 CURVE SMOOTH",
"52 499 LINE SMOOTH",
"43 490 OFFCURVE",
"40 481 OFFCURVE",
"40 472 CURVE SMOOTH",
"40 450 LINE"
);
},
{
closed = 1;
nodes = (
"295 511 LINE",
"295 551 LINE",
"271 551 LINE SMOOTH",
"260 551 OFFCURVE",
"256 545 OFFCURVE",
"254 535 CURVE SMOOTH",
"248 499 LINE",
"248 499 LINE"
);
}
);
userData = {
RMXScaler = {
height = 51;
weight = -24;
width = 51;
};
assembly = "NPUSHB[ ]	/* 16 values pushed */
1 0 40 38 34 32 20 19 16 13 0 45 1 45 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
43 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 2 2 1 1 0 36 0 1 1 14 2 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
43 1 4 3 11 1 2 1 2 30 0 4 3 1 3 4 1 50 5 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
leftMetricsKey = "=two*0.7";
note = twosuperior;
rightMetricsKey = "=two*0.7";
unicode = 00B2;
userData = {
RMXScaler = {
source = two;
};
};
},
{
glyphname = threesuperior;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"232 446 OFFCURVE",
"279 490 OFFCURVE",
"279 544 CURVE SMOOTH",
"279 591 OFFCURVE",
"249 625 OFFCURVE",
"194 632 CURVE",
"235 640 OFFCURVE",
"269 672 OFFCURVE",
"269 717 CURVE SMOOTH",
"269 776 OFFCURVE",
"225 805 OFFCURVE",
"173 805 CURVE SMOOTH",
"117 805 OFFCURVE",
"76 771 OFFCURVE",
"68 713 CURVE",
"74 712 LINE SMOOTH",
"77 712 OFFCURVE",
"79 714 OFFCURVE",
"80 717 CURVE SMOOTH",
"90 766 OFFCURVE",
"124 795 OFFCURVE",
"173 795 CURVE SMOOTH",
"220 795 OFFCURVE",
"258 769 OFFCURVE",
"258 716 CURVE SMOOTH",
"258 668 OFFCURVE",
"222 637 OFFCURVE",
"159 634 CURVE",
"159 626 LINE",
"230 626 OFFCURVE",
"267 597 OFFCURVE",
"267 543 CURVE SMOOTH",
"267 500 OFFCURVE",
"230 455 OFFCURVE",
"168 455 CURVE SMOOTH",
"102 455 OFFCURVE",
"81 494 OFFCURVE",
"69 534 CURVE SMOOTH",
"68 537 OFFCURVE",
"65 539 OFFCURVE",
"62 537 CURVE SMOOTH",
"56 534 LINE",
"70 488 OFFCURVE",
"94 446 OFFCURVE",
"168 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
34 1 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 1 53 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
45 1 44 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 342;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"233 446 OFFCURVE",
"298 487 OFFCURVE",
"298 570 CURVE SMOOTH",
"298 609 OFFCURVE",
"280 631 OFFCURVE",
"241 643 CURVE",
"278 660 OFFCURVE",
"292 690 OFFCURVE",
"292 731 CURVE SMOOTH",
"292 784 OFFCURVE",
"242 829 OFFCURVE",
"166 829 CURVE SMOOTH",
"92 829 OFFCURVE",
"38 791 OFFCURVE",
"25 712 CURVE",
"95 702 LINE SMOOTH",
"112 699 OFFCURVE",
"121 706 OFFCURVE",
"130 722 CURVE SMOOTH",
"139 738 OFFCURVE",
"147 742 OFFCURVE",
"160 742 CURVE SMOOTH",
"181 742 OFFCURVE",
"186 728 OFFCURVE",
"186 711 CURVE SMOOTH",
"186 683 OFFCURVE",
"172 674 OFFCURVE",
"124 674 CURVE",
"124 604 LINE",
"172 604 OFFCURVE",
"187 602 OFFCURVE",
"187 566 CURVE SMOOTH",
"187 547 OFFCURVE",
"175 534 OFFCURVE",
"155 534 CURVE SMOOTH",
"140 534 OFFCURVE",
"131 541 OFFCURVE",
"122 555 CURVE SMOOTH",
"109 574 OFFCURVE",
"95 580 OFFCURVE",
"75 572 CURVE SMOOTH",
"16 550 LINE",
"44 470 OFFCURVE",
"89 446 OFFCURVE",
"161 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 53 51 47 45 39 38 37 36 30 28 25 23 17 15 0 59 1 59 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
66 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
55 1 7 6 8 1 4 5 21 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 1 1 3 1 0 36 0 3 3 20 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
55 1 7 6 8 1 4 5 21 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 323;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"235 446 OFFCURVE",
"293 488 OFFCURVE",
"293 559 CURVE SMOOTH",
"293 600 OFFCURVE",
"270 626 OFFCURVE",
"226 638 CURVE",
"265 653 OFFCURVE",
"285 682 OFFCURVE",
"285 725 CURVE SMOOTH",
"285 779 OFFCURVE",
"238 819 OFFCURVE",
"173 819 CURVE SMOOTH",
"108 819 OFFCURVE",
"57 780 OFFCURVE",
"49 713 CURVE",
"85 706 LINE SMOOTH",
"98 703 OFFCURVE",
"106 709 OFFCURVE",
"111 721 CURVE SMOOTH",
"120 747 OFFCURVE",
"136 765 OFFCURVE",
"170 765 CURVE SMOOTH",
"202 765 OFFCURVE",
"223 747 OFFCURVE",
"223 714 CURVE SMOOTH",
"223 679 OFFCURVE",
"201 658 OFFCURVE",
"144 657 CURVE",
"144 614 LINE",
"201 614 OFFCURVE",
"228 599 OFFCURVE",
"228 556 CURVE SMOOTH",
"228 527 OFFCURVE",
"203 500 OFFCURVE",
"165 500 CURVE SMOOTH",
"132 500 OFFCURVE",
"116 516 OFFCURVE",
"99 547 CURVE SMOOTH",
"93 559 OFFCURVE",
"83 562 OFFCURVE",
"71 557 CURVE SMOOTH",
"38 543 LINE",
"59 479 OFFCURVE",
"94 446 OFFCURVE",
"168 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 54 52 48 46 42 41 40 39 31 29 24 22 16 14 0 61 1 61 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
75 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
57 1 7 6 7 1 4 5 20 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 1 1 3 1 0 36 0 3 3 14 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
57 1 7 6 7 1 4 5 20 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 341;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "CB7AC050-71FD-44D8-BA0A-10BFEA6AA2AA";
name = "Feb 19 23, 14:14";
paths = (
{
closed = 1;
nodes = (
"238.843 446 OFFCURVE",
"297 487.643 OFFCURVE",
"297 559 CURVE SMOOTH",
"297 600.333 OFFCURVE",
"274 626 OFFCURVE",
"230 638 CURVE",
"269.333 653.333 OFFCURVE",
"289 682.333 OFFCURVE",
"289 725 CURVE SMOOTH",
"289 779.44 OFFCURVE",
"242.193 819 OFFCURVE",
"177 819 CURVE SMOOTH",
"112.582 819 OFFCURVE",
"60.727 779.963 OFFCURVE",
"53 713 CURVE",
"86 707 LINE SMOOTH",
"88 706.333 OFFCURVE",
"89.667 706 OFFCURVE",
"91 706 CURVE SMOOTH",
"92.333 706 OFFCURVE",
"93.667 706 OFFCURVE",
"95 706 CURVE SMOOTH",
"105.667 706 OFFCURVE",
"109.667 710.333 OFFCURVE",
"115 721 CURVE",
"123 747.667 OFFCURVE",
"142 765 OFFCURVE",
"174 765 CURVE SMOOTH",
"206 765 OFFCURVE",
"227 747.333 OFFCURVE",
"227 714 CURVE SMOOTH",
"227 679.333 OFFCURVE",
"205.333 658.333 OFFCURVE",
"148 657 CURVE",
"148 614 LINE",
"204.718 614 OFFCURVE",
"232 599.228 OFFCURVE",
"232 556 CURVE SMOOTH",
"232 526.539 OFFCURVE",
"207.277 500 OFFCURVE",
"169 500 CURVE SMOOTH",
"130.374 500 OFFCURVE",
"114.515 524.97 OFFCURVE",
"104 546 CURVE SMOOTH",
"100.667 554 OFFCURVE",
"94 558 OFFCURVE",
"84 558 CURVE SMOOTH",
"79.333 558 OFFCURVE",
"74.667 557 OFFCURVE",
"70 555 CURVE SMOOTH",
"42 543 LINE",
"63.342 478.974 OFFCURVE",
"98.254 446 OFFCURVE",
"172 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 54 52 48 46 42 41 40 39 31 29 24 22 16 14 0 61 1 61 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
75 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
57 1 7 6 7 1 4 5 20 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 1 1 3 1 0 36 0 3 3 14 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
57 1 7 6 7 1 4 5 20 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 332;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "7EC53634-523B-4667-80DC-31287D12C11C";
name = "Feb 19 23, 14:16";
paths = (
{
closed = 1;
nodes = (
"248.983 446 OFFCURVE",
"314 486.632 OFFCURVE",
"314 570 CURVE SMOOTH",
"314 608.667 OFFCURVE",
"295.667 631 OFFCURVE",
"257 643 CURVE",
"294.333 660.333 OFFCURVE",
"308 689.667 OFFCURVE",
"308 731 CURVE SMOOTH",
"308 784.079 OFFCURVE",
"258.009 829 OFFCURVE",
"182 829 CURVE SMOOTH",
"107.867 829 OFFCURVE",
"53.674 790.582 OFFCURVE",
"41 712 CURVE",
"98 703 LINE SMOOTH",
"105 702 OFFCURVE",
"110 701 OFFCURVE",
"115 701 CURVE SMOOTH",
"131 701 OFFCURVE",
"139 708 OFFCURVE",
"147 724 CURVE SMOOTH",
"154 736 OFFCURVE",
"160 742 OFFCURVE",
"176 742 CURVE SMOOTH",
"197.333 742 OFFCURVE",
"202 728.333 OFFCURVE",
"202 711 CURVE SMOOTH",
"202 682.657 OFFCURVE",
"187.526 674 OFFCURVE",
"140 674 CURVE",
"140 604 LINE",
"188.048 604 OFFCURVE",
"203 602.246 OFFCURVE",
"203 566 CURVE SMOOTH",
"203 547.333 OFFCURVE",
"191 534 OFFCURVE",
"171 534 CURVE SMOOTH",
"159 534 OFFCURVE",
"145.333 539.667 OFFCURVE",
"136 557 CURVE SMOOTH",
"130.667 567.667 OFFCURVE",
"120 573 OFFCURVE",
"104 573 CURVE SMOOTH",
"96.667 573 OFFCURVE",
"88.667 571.667 OFFCURVE",
"80 569 CURVE SMOOTH",
"32 550 LINE",
"59.496 470.012 OFFCURVE",
"105.14 446 OFFCURVE",
"177 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
1 0 53 51 47 45 39 38 37 36 30 28 25 23 17 15 0 59 1 59 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
66 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
55 1 7 6 8 1 4 5 21 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 1 1 3 1 0 36 0 3 3 20 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
55 1 7 6 8 1 4 5 21 1 3 2 3 30 0 7 6 5 6 7 5 50 0 2 4 3 4 2 3 50 8 1 0 0 6 7 0 6 1 0 38 0 5 0 4 2 5 4 1 0 38 0 3 1 1 3 1 0 35 0 3 3 1 1 0 36 0 1 3 1 1 0 33 8 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "77CA3429-93C6-49FE-A9E9-704D7C81EDA7";
name = "Feb 19 23, 14:16";
paths = (
{
closed = 1;
nodes = (
"230.671 446 OFFCURVE",
"278 489.549 OFFCURVE",
"278 544 CURVE SMOOTH",
"278 590.667 OFFCURVE",
"247.667 625.333 OFFCURVE",
"193 632 CURVE",
"234.079 640.216 OFFCURVE",
"268 672.173 OFFCURVE",
"268 717 CURVE SMOOTH",
"268 776.284 OFFCURVE",
"224.379 805 OFFCURVE",
"172 805 CURVE SMOOTH",
"116 805 OFFCURVE",
"75 771 OFFCURVE",
"67 713 CURVE",
"67.667 713 OFFCURVE",
"69 713 OFFCURVE",
"71 713 CURVE SMOOTH",
"72.333 713 OFFCURVE",
"73.333 712.667 OFFCURVE",
"74 712 CURVE",
"76.667 712 OFFCURVE",
"78.333 713.667 OFFCURVE",
"79 717 CURVE SMOOTH",
"87.435 761.989 OFFCURVE",
"120.964 795 OFFCURVE",
"172 795 CURVE SMOOTH",
"219.232 795 OFFCURVE",
"257 768.987 OFFCURVE",
"257 716 CURVE SMOOTH",
"257 668 OFFCURVE",
"220.667 636.667 OFFCURVE",
"158 634 CURVE",
"158 626 LINE",
"229.002 626 OFFCURVE",
"266 597.278 OFFCURVE",
"266 543 CURVE SMOOTH",
"266 500.131 OFFCURVE",
"228.648 455 OFFCURVE",
"167 455 CURVE SMOOTH",
"98.032 455 OFFCURVE",
"78.888 499.335 OFFCURVE",
"69 529 CURVE SMOOTH",
"67.667 533 OFFCURVE",
"67 537 OFFCURVE",
"63 537 CURVE SMOOTH",
"61.667 537 OFFCURVE",
"60.333 536.667 OFFCURVE",
"59 536 CURVE SMOOTH",
"55 534 LINE",
"69.01 488.468 OFFCURVE",
"92.62 446 OFFCURVE",
"167 446 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
34 1 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 1 53 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
45 1 44 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
leftMetricsKey = "=three*0.7";
note = threesuperior;
rightMetricsKey = "=three*0.7";
unicode = 00B3;
},
{
glyphname = fraction;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"-155 0 LINE SMOOTH",
"-151 0 OFFCURVE",
"-148 1 OFFCURVE",
"-144 6 CURVE",
"248 700 LINE",
"242 700 LINE SMOOTH",
"237 700 OFFCURVE",
"234 698 OFFCURVE",
"232 694 CURVE SMOOTH",
"-160 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
8 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 89;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"-123 0 LINE SMOOTH",
"-90 0 OFFCURVE",
"-67 11 OFFCURVE",
"-47 43 CURVE SMOOTH",
"381 729 LINE",
"315 729 LINE SMOOTH",
"279 729 OFFCURVE",
"255 711 OFFCURVE",
"235 680 CURVE SMOOTH",
"-189 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
11 9 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 0 1 52 0 0 0 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 193;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"-148 0 LINE SMOOTH",
"-129 0 OFFCURVE",
"-115 6 OFFCURVE",
"-102 27 CURVE SMOOTH",
"310 717 LINE",
"271 717 LINE SMOOTH",
"250 717 OFFCURVE",
"235 706 OFFCURVE",
"223 686 CURVE SMOOTH",
"-186 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
9 7 4 2 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 11 31 0 0 0 12 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 0 1 52 0 0 0 15 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 0 1 52 0 0 0 43 2 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 124;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"674 0 LINE",
"674 6 LINE SMOOTH",
"674 9 OFFCURVE",
"673 10 OFFCURVE",
"670 10 CURVE SMOOTH",
"498 10 LINE SMOOTH",
"485 10 OFFCURVE",
"475 9 OFFCURVE",
"467 8 CURVE",
"588 131 LINE SMOOTH",
"629 173 OFFCURVE",
"665 208 OFFCURVE",
"665 262 CURVE SMOOTH",
"665 324 OFFCURVE",
"622 355 OFFCURVE",
"567 355 CURVE SMOOTH",
"511 355 OFFCURVE",
"470 321 OFFCURVE",
"462 263 CURVE",
"467 262 LINE SMOOTH",
"471 261 OFFCURVE",
"473 264 OFFCURVE",
"474 267 CURVE SMOOTH",
"485 314 OFFCURVE",
"518 345 OFFCURVE",
"567 345 CURVE SMOOTH",
"614 345 OFFCURVE",
"654 318 OFFCURVE",
"654 262 CURVE SMOOTH",
"654 212 OFFCURVE",
"620 177 OFFCURVE",
"580 136 CURVE SMOOTH",
"456 10 LINE SMOOTH",
"454 8 OFFCURVE",
"453 6 OFFCURVE",
"453 4 CURVE SMOOTH",
"453 0 LINE"
);
},
{
closed = 1;
nodes = (
"274 349 LINE",
"274 352 LINE SMOOTH",
"274 354 OFFCURVE",
"273 355 OFFCURVE",
"271 355 CURVE SMOOTH",
"193 358 LINE",
"193 702 LINE",
"185 702 LINE",
"85 613 LINE",
"88 609 LINE SMOOTH",
"90 607 OFFCURVE",
"93 606 OFFCURVE",
"95 608 CURVE SMOOTH",
"183 688 LINE",
"182 682 OFFCURVE",
"181 676 OFFCURVE",
"181 670 CURVE SMOOTH",
"181 358 LINE",
"100 355 LINE SMOOTH",
"98 355 OFFCURVE",
"97 354 OFFCURVE",
"97 352 CURVE SMOOTH",
"97 349 LINE"
);
},
{
closed = 1;
nodes = (
"674 4 LINE",
"674 57 LINE",
"669 57 LINE SMOOTH",
"667 57 OFFCURVE",
"666 55 OFFCURVE",
"666 53 CURVE SMOOTH",
"664 6 LINE",
"664 6 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 44 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
67 44 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 1 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
56 1 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 759;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 305, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"725 0 LINE",
"725 63 LINE SMOOTH",
"725 84 OFFCURVE",
"712 97 OFFCURVE",
"688 97 CURVE SMOOTH",
"654 97 LINE SMOOTH",
"637 97 OFFCURVE",
"614 93 OFFCURVE",
"593 86 CURVE",
"643 138 LINE SMOOTH",
"682 178 OFFCURVE",
"717 214 OFFCURVE",
"717 267 CURVE SMOOTH",
"717 332 OFFCURVE",
"669 379 OFFCURVE",
"588 379 CURVE SMOOTH",
"508 379 OFFCURVE",
"453 342 OFFCURVE",
"440 262 CURVE",
"517 251 LINE SMOOTH",
"533 249 OFFCURVE",
"548 262 OFFCURVE",
"553 273 CURVE SMOOTH",
"559 287 OFFCURVE",
"569 294 OFFCURVE",
"582 294 CURVE SMOOTH",
"599 294 OFFCURVE",
"605 279 OFFCURVE",
"605 263 CURVE SMOOTH",
"605 237 OFFCURVE",
"582 199 OFFCURVE",
"557 174 CURVE SMOOTH",
"458 77 LINE SMOOTH",
"445 64 OFFCURVE",
"440 48 OFFCURVE",
"440 35 CURVE SMOOTH",
"440 0 LINE"
);
},
{
closed = 1;
nodes = (
"315 354 LINE",
"315 388 LINE SMOOTH",
"315 403 OFFCURVE",
"308 411 OFFCURVE",
"293 415 CURVE SMOOTH",
"264 422 LINE",
"264 729 LINE",
"171 729 LINE",
"50 630 LINE",
"84 585 LINE SMOOTH",
"93 573 OFFCURVE",
"114 567 OFFCURVE",
"132 580 CURVE SMOOTH",
"157 598 LINE",
"156 589 OFFCURVE",
"154 580 OFFCURVE",
"154 571 CURVE SMOOTH",
"154 422 LINE",
"112 414 LINE SMOOTH",
"97 411 OFFCURVE",
"89 402 OFFCURVE",
"89 387 CURVE SMOOTH",
"89 354 LINE"
);
},
{
closed = 1;
nodes = (
"725 52 LINE",
"725 132 LINE",
"684 132 LINE SMOOTH",
"668 132 OFFCURVE",
"663 121 OFFCURVE",
"657 104 CURVE SMOOTH",
"647 75 LINE",
"647 75 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 0 75 73 70 68 63 62 61 60 59 58 54 52 48 47 40 38 34 32 20 19 16 13 0 46 1 46 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
57 50 2 6 7 49 1 5 6 42 1 4 3 11 1 2 1 4 30 0 6 7 5 7 6 5 50 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 0 38 11 1 7 7 11 31 0 1 1 2 1 0 36 10 1 2 2 12 2 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
57 50 2 6 7 49 1 5 6 42 1 4 3 11 1 2 1 4 30 11 1 7 6 7 52 0 6 5 6 52 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 1 0 36 10 1 2 1 2 1 0 33 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
57 50 2 6 11 49 1 5 6 42 1 4 3 11 1 2 1 4 30 0 7 11 7 52 0 11 6 11 52 0 6 5 6 52 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 2 38 0 1 2 2 1 1 0 35 0 1 1 2 1 0 36 10 1 2 1 2 1 0 33 10 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 101 values pushed */
57 50 2 6 11 49 1 5 6 42 1 4 3 11 1 10 1 4 30 0 7 11 7 52 0 11 6 11 52 0 6 5 6 52 0 8 5 0 5 8 42 0 4 3 1 3 4 1 50 0 10 1 2 1 10 2 50 0 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 2 38 0 1 10 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 775;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 341, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"711 0 LINE",
"711 39 LINE SMOOTH",
"711 52 OFFCURVE",
"702 60 OFFCURVE",
"689 60 CURVE SMOOTH",
"591 60 LINE SMOOTH",
"578 60 OFFCURVE",
"561 57 OFFCURVE",
"546 53 CURVE",
"627 135 LINE SMOOTH",
"666 175 OFFCURVE",
"702 211 OFFCURVE",
"702 265 CURVE SMOOTH",
"702 328 OFFCURVE",
"656 369 OFFCURVE",
"587 369 CURVE SMOOTH",
"519 369 OFFCURVE",
"470 334 OFFCURVE",
"459 263 CURVE",
"504 256 LINE SMOOTH",
"514 254 OFFCURVE",
"523 262 OFFCURVE",
"526 271 CURVE SMOOTH",
"535 299 OFFCURVE",
"553 316 OFFCURVE",
"584 316 CURVE SMOOTH",
"615 316 OFFCURVE",
"637 296 OFFCURVE",
"637 263 CURVE SMOOTH",
"637 228 OFFCURVE",
"607 188 OFFCURVE",
"577 158 CURVE SMOOTH",
"466 48 LINE SMOOTH",
"458 40 OFFCURVE",
"455 30 OFFCURVE",
"455 22 CURVE SMOOTH",
"455 0 LINE"
);
},
{
closed = 1;
nodes = (
"305 352 LINE",
"305 375 LINE SMOOTH",
"305 383 OFFCURVE",
"301 387 OFFCURVE",
"293 388 CURVE SMOOTH",
"240 394 LINE",
"240 717 LINE",
"186 717 LINE",
"75 622 LINE",
"95 594 LINE SMOOTH",
"99 588 OFFCURVE",
"113 583 OFFCURVE",
"124 592 CURVE SMOOTH",
"177 636 LINE",
"176 629 OFFCURVE",
"175 621 OFFCURVE",
"175 614 CURVE SMOOTH",
"175 394 LINE",
"114 388 LINE SMOOTH",
"106 387 OFFCURVE",
"102 383 OFFCURVE",
"102 375 CURVE SMOOTH",
"102 352 LINE"
);
},
{
closed = 1;
nodes = (
"711 25 LINE",
"711 99 LINE",
"687 99 LINE SMOOTH",
"676 99 OFFCURVE",
"672 93 OFFCURVE",
"670 83 CURVE SMOOTH",
"664 47 LINE",
"664 47 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 0 71 69 66 64 61 60 59 58 57 56 53 51 47 46 40 38 34 32 20 19 16 13 0 45 1 45 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
55 49 48 3 6 7 43 1 4 3 11 1 2 1 3 30 0 6 7 5 7 6 5 50 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 0 38 11 1 7 7 11 31 0 1 1 2 1 0 36 10 1 2 2 12 2 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
55 49 48 3 6 7 43 1 4 3 11 1 2 1 3 30 11 1 7 6 7 52 0 6 5 6 52 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 0 38 0 1 1 2 1 0 36 10 1 2 2 15 2 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
55 49 48 3 6 7 43 1 4 3 11 1 2 1 3 30 11 1 7 6 7 52 0 6 5 6 52 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 0 38 0 1 2 2 1 1 0 35 0 1 1 2 1 0 36 10 1 2 1 2 1 0 33 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
55 49 48 3 6 11 43 1 4 3 11 1 2 1 3 30 0 7 11 7 52 0 11 6 11 52 0 6 5 6 52 0 4 3 1 3 4 1 50 8 1 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 2 38 0 1 2 2 1 1 0 35 0 1 1 2 1 0 36 10 1 2 1 2 1 0 33 10 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
55 49 48 3 6 11 43 1 4 3 11 1 10 1 3 30 0 7 11 7 52 0 11 6 11 52 0 6 5 6 52 0 8 5 0 5 8 42 0 4 3 1 3 4 1 50 0 10 1 2 1 10 2 50 0 5 0 9 3 5 9 0 2 38 12 1 0 0 3 4 0 3 1 2 38 0 1 10 2 1 1 0 35 0 1 1 2 0 0 36 0 2 1 2 0 0 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 386, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"625 0 LINE",
"625 106 LINE",
"691 106 LINE SMOOTH",
"694 106 OFFCURVE",
"696 107 OFFCURVE",
"696 110 CURVE SMOOTH",
"696 115 LINE",
"625 115 LINE",
"625 351 LINE",
"616 351 LINE",
"436 114 LINE",
"437 109 LINE SMOOTH",
"437 107 OFFCURVE",
"440 106 OFFCURVE",
"443 106 CURVE SMOOTH",
"614 106 LINE",
"614 0 LINE"
);
},
{
closed = 1;
nodes = (
"274 349 LINE",
"274 352 LINE SMOOTH",
"274 354 OFFCURVE",
"273 355 OFFCURVE",
"271 355 CURVE SMOOTH",
"193 358 LINE",
"193 702 LINE",
"185 702 LINE",
"85 613 LINE",
"88 609 LINE SMOOTH",
"90 607 OFFCURVE",
"93 606 OFFCURVE",
"95 608 CURVE SMOOTH",
"183 688 LINE",
"182 682 OFFCURVE",
"181 676 OFFCURVE",
"181 670 CURVE SMOOTH",
"181 358 LINE",
"100 355 LINE SMOOTH",
"98 355 OFFCURVE",
"97 354 OFFCURVE",
"97 352 CURVE SMOOTH",
"97 349 LINE"
);
},
{
closed = 1;
nodes = (
"615 335 LINE",
"614 333 OFFCURVE",
"614 331 OFFCURVE",
"614 329 CURVE SMOOTH",
"614 115 LINE",
"449 115 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
19 22 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
34 1 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 781;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 333, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"695 0 LINE",
"695 75 LINE",
"715 75 LINE SMOOTH",
"727 75 OFFCURVE",
"735 85 OFFCURVE",
"735 94 CURVE SMOOTH",
"735 148 LINE",
"695 148 LINE",
"695 375 LINE",
"588 375 LINE",
"424 143 LINE",
"433 97 LINE SMOOTH",
"436 84 OFFCURVE",
"447 75 OFFCURVE",
"466 75 CURVE SMOOTH",
"603 75 LINE",
"603 0 LINE"
);
},
{
closed = 1;
nodes = (
"315 354 LINE",
"315 388 LINE SMOOTH",
"315 403 OFFCURVE",
"308 411 OFFCURVE",
"293 415 CURVE SMOOTH",
"264 422 LINE",
"264 729 LINE",
"171 729 LINE",
"50 630 LINE",
"84 585 LINE SMOOTH",
"93 573 OFFCURVE",
"114 567 OFFCURVE",
"132 580 CURVE SMOOTH",
"157 598 LINE",
"156 589 OFFCURVE",
"154 580 OFFCURVE",
"154 571 CURVE SMOOTH",
"154 422 LINE",
"112 414 LINE SMOOTH",
"97 411 OFFCURVE",
"89 402 OFFCURVE",
"89 387 CURVE SMOOTH",
"89 354 LINE"
);
},
{
closed = 1;
nodes = (
"607 263 LINE",
"604 240 OFFCURVE",
"603 219 OFFCURVE",
"603 202 CURVE SMOOTH",
"603 148 LINE",
"524 148 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
51 49 46 44 39 38 33 32 31 30 29 28 24 22 18 17 16 15 11 9 8 7 6 4 1 0 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
27 20 2 6 7 19 1 5 6 37 1 0 9 3 30 0 6 7 5 7 6 5 50 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 12 1 7 7 11 31 0 4 4 2 1 0 36 11 1 2 2 12 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
27 20 2 6 7 19 1 5 6 37 1 0 9 3 30 12 1 7 6 7 52 0 6 5 6 52 0 4 9 2 4 0 0 35 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 1 0 36 11 1 2 4 2 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
27 20 2 6 12 19 1 5 6 37 1 0 9 3 30 0 7 12 7 52 0 12 6 12 52 0 6 5 6 52 0 4 9 2 4 0 0 35 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 1 2 36 11 1 2 4 2 1 2 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 98 values pushed */
27 20 2 6 12 19 1 5 6 37 1 0 9 3 30 0 7 12 7 52 0 12 6 12 52 0 6 5 6 52 0 8 5 4 5 8 42 0 11 1 2 1 11 2 50 0 4 9 2 4 0 0 35 0 5 0 9 0 5 9 0 2 38 0 10 0 3 1 10 3 1 0 38 0 0 0 1 11 0 1 1 0 38 0 4 4 2 0 2 36 0 2 4 2 0 2 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 375, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"672 0 LINE",
"672 88 LINE",
"713 88 LINE SMOOTH",
"721 88 OFFCURVE",
"726 94 OFFCURVE",
"726 101 CURVE SMOOTH",
"726 134 LINE",
"672 134 LINE",
"672 365 LINE",
"610 365 LINE",
"439 131 LINE",
"444 102 LINE SMOOTH",
"445 94 OFFCURVE",
"452 88 OFFCURVE",
"464 88 CURVE SMOOTH",
"617 88 LINE",
"617 0 LINE"
);
},
{
closed = 1;
nodes = (
"305 352 LINE",
"305 375 LINE SMOOTH",
"305 383 OFFCURVE",
"301 387 OFFCURVE",
"293 388 CURVE SMOOTH",
"240 394 LINE",
"240 717 LINE",
"186 717 LINE",
"75 622 LINE",
"95 594 LINE SMOOTH",
"99 588 OFFCURVE",
"113 583 OFFCURVE",
"124 592 CURVE SMOOTH",
"177 636 LINE",
"176 629 OFFCURVE",
"175 621 OFFCURVE",
"175 614 CURVE SMOOTH",
"175 394 LINE",
"114 388 LINE SMOOTH",
"106 387 OFFCURVE",
"102 383 OFFCURVE",
"102 375 CURVE SMOOTH",
"102 352 LINE"
);
},
{
closed = 1;
nodes = (
"620 297 LINE",
"617 282 OFFCURVE",
"617 267 OFFCURVE",
"617 254 CURVE SMOOTH",
"617 134 LINE",
"499 134 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
48 46 43 41 38 37 32 31 30 29 28 27 24 22 18 17 16 15 11 9 8 7 6 4 1 0 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
26 20 19 3 6 7 36 1 0 9 2 30 0 6 7 5 7 6 5 50 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 12 1 7 7 11 31 0 4 4 2 1 0 36 11 1 2 2 12 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
26 20 19 3 6 7 36 1 0 9 2 30 12 1 7 6 7 52 0 6 5 6 52 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 1 0 36 11 1 2 2 15 2 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
26 20 19 3 6 7 36 1 0 9 2 30 12 1 7 6 7 52 0 6 5 6 52 0 4 9 2 4 0 0 35 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 1 0 36 11 1 2 4 2 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
26 20 19 3 6 12 36 1 0 9 2 30 0 7 12 7 52 0 12 6 12 52 0 6 5 6 52 0 4 9 2 4 0 0 35 8 1 5 0 9 0 5 9 0 2 38 10 1 0 3 1 1 2 0 1 1 2 38 0 4 4 2 1 0 36 11 1 2 4 2 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 95 values pushed */
26 20 19 3 6 12 36 1 0 9 2 30 0 7 12 7 52 0 12 6 12 52 0 6 5 6 52 0 8 5 4 5 8 42 0 11 1 2 1 11 2 50 0 4 9 2 4 0 0 35 0 5 0 9 0 5 9 0 2 38 0 10 0 3 1 10 3 1 2 38 0 0 0 1 11 0 1 1 0 38 0 4 4 2 0 0 36 0 2 4 2 0 0 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 801;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 381, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"261 345 OFFCURVE",
"308 389 OFFCURVE",
"308 443 CURVE SMOOTH",
"308 490 OFFCURVE",
"278 524 OFFCURVE",
"223 531 CURVE",
"264 539 OFFCURVE",
"298 571 OFFCURVE",
"298 616 CURVE SMOOTH",
"298 675 OFFCURVE",
"254 704 OFFCURVE",
"202 704 CURVE SMOOTH",
"146 704 OFFCURVE",
"105 670 OFFCURVE",
"97 612 CURVE",
"103 611 LINE SMOOTH",
"106 610 OFFCURVE",
"108 613 OFFCURVE",
"109 616 CURVE SMOOTH",
"120 663 OFFCURVE",
"153 694 OFFCURVE",
"202 694 CURVE SMOOTH",
"249 694 OFFCURVE",
"287 668 OFFCURVE",
"287 615 CURVE SMOOTH",
"287 567 OFFCURVE",
"251 536 OFFCURVE",
"188 533 CURVE",
"188 525 LINE",
"259 525 OFFCURVE",
"296 496 OFFCURVE",
"296 442 CURVE SMOOTH",
"296 399 OFFCURVE",
"259 354 OFFCURVE",
"197 354 CURVE SMOOTH",
"128 354 OFFCURVE",
"109 398 OFFCURVE",
"99 428 CURVE SMOOTH",
"98 432 OFFCURVE",
"97 436 OFFCURVE",
"93 436 CURVE SMOOTH",
"91 436 OFFCURVE",
"89 435 OFFCURVE",
"87 434 CURVE SMOOTH",
"85 433 LINE",
"99 387 OFFCURVE",
"123 345 OFFCURVE",
"197 345 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 0 LINE",
"658 106 LINE",
"724 106 LINE SMOOTH",
"727 106 OFFCURVE",
"729 107 OFFCURVE",
"729 110 CURVE SMOOTH",
"729 115 LINE",
"658 115 LINE",
"658 351 LINE",
"649 351 LINE",
"469 114 LINE",
"470 109 LINE SMOOTH",
"470 107 OFFCURVE",
"473 106 OFFCURVE",
"476 106 CURVE SMOOTH",
"647 106 LINE",
"647 0 LINE"
);
},
{
closed = 1;
nodes = (
"648 335 LINE",
"647 333 OFFCURVE",
"647 331 OFFCURVE",
"647 329 CURVE SMOOTH",
"647 115 LINE",
"482 115 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
34 3 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 3 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
18 7 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
19 69 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
93 69 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
88 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
66 1 65 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
55 1 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
74 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 333, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"267 350 OFFCURVE",
"332 391 OFFCURVE",
"332 474 CURVE SMOOTH",
"332 513 OFFCURVE",
"314 535 OFFCURVE",
"275 547 CURVE",
"312 564 OFFCURVE",
"326 594 OFFCURVE",
"326 635 CURVE SMOOTH",
"326 688 OFFCURVE",
"276 733 OFFCURVE",
"200 733 CURVE SMOOTH",
"126 733 OFFCURVE",
"72 695 OFFCURVE",
"59 616 CURVE",
"133 605 LINE SMOOTH",
"149 603 OFFCURVE",
"157 612 OFFCURVE",
"165 628 CURVE SMOOTH",
"172 640 OFFCURVE",
"178 646 OFFCURVE",
"194 646 CURVE SMOOTH",
"215 646 OFFCURVE",
"220 632 OFFCURVE",
"220 615 CURVE SMOOTH",
"220 587 OFFCURVE",
"206 578 OFFCURVE",
"158 578 CURVE",
"158 508 LINE",
"206 508 OFFCURVE",
"221 506 OFFCURVE",
"221 470 CURVE SMOOTH",
"221 451 OFFCURVE",
"209 438 OFFCURVE",
"189 438 CURVE SMOOTH",
"177 438 OFFCURVE",
"163 444 OFFCURVE",
"154 461 CURVE SMOOTH",
"149 472 OFFCURVE",
"138 477 OFFCURVE",
"122 477 CURVE SMOOTH",
"115 477 OFFCURVE",
"106 476 OFFCURVE",
"98 473 CURVE SMOOTH",
"50 454 LINE",
"77 374 OFFCURVE",
"123 350 OFFCURVE",
"195 350 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"699 0 LINE",
"699 75 LINE",
"719 75 LINE SMOOTH",
"731 75 OFFCURVE",
"739 85 OFFCURVE",
"739 94 CURVE SMOOTH",
"739 148 LINE",
"699 148 LINE",
"699 375 LINE",
"592 375 LINE",
"428 143 LINE",
"437 97 LINE SMOOTH",
"440 84 OFFCURVE",
"451 75 OFFCURVE",
"470 75 CURVE SMOOTH",
"607 75 LINE",
"607 0 LINE"
);
},
{
closed = 1;
nodes = (
"611 263 LINE",
"608 240 OFFCURVE",
"607 219 OFFCURVE",
"607 202 CURVE SMOOTH",
"607 148 LINE",
"528 148 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
18 17 94 92 89 87 82 81 70 68 64 62 56 55 54 53 47 45 42 40 34 32 17 76 18 76 16 15 11 9 8 7 6 4 1 0 17 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 8 7 42 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 11 11 5 1 0 36 15 16 2 5 5 11 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 8 7 42 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 11 11 5 1 0 36 15 16 2 5 5 17 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 8 7 42 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 11 11 5 1 0 36 15 16 2 5 5 11 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 8 7 42 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 11 11 5 1 0 36 15 16 2 5 5 17 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
52 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 11 11 5 1 0 36 15 16 2 5 5 17 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 99 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 15 15 11 31 0 11 11 5 1 0 36 16 1 5 5 17 31 0 4 4 2 1 2 36 14 1 2 2 12 2 32 11 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 109 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 15 5 11 5 15 11 50 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 16 1 5 0 11 12 5 11 1 0 38 0 10 0 9 7 10 9 1 0 38 0 4 6 2 4 0 0 35 0 8 0 6 0 8 6 1 2 38 13 1 0 3 1 1 2 0 1 1 0 38 0 4 4 2 1 2 36 14 1 2 4 2 1 2 33 11 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 124 values pushed */
72 1 12 11 25 1 9 10 38 1 8 7 80 1 0 6 4 30 0 15 5 11 5 15 11 50 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 14 1 2 1 14 2 50 16 1 5 0 11 12 5 11 1 0 38 0 10 0 9 7 10 9 1 0 38 0 4 6 2 4 0 0 35 0 8 0 6 0 8 6 1 2 38 0 13 0 3 1 13 3 1 0 38 0 0 0 1 14 0 1 1 0 38 0 4 4 2 0 2 36 0 2 4 2 0 2 33 13 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 371, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"272 348 OFFCURVE",
"330 388 OFFCURVE",
"330 460 CURVE SMOOTH",
"330 501 OFFCURVE",
"307 527 OFFCURVE",
"263 540 CURVE",
"302 555 OFFCURVE",
"322 583 OFFCURVE",
"322 626 CURVE SMOOTH",
"322 682 OFFCURVE",
"275 720 OFFCURVE",
"210 720 CURVE SMOOTH",
"146 720 OFFCURVE",
"94 683 OFFCURVE",
"86 614 CURVE",
"128 607 LINE SMOOTH",
"137 606 OFFCURVE",
"145 613 OFFCURVE",
"148 623 CURVE SMOOTH",
"156 649 OFFCURVE",
"175 666 OFFCURVE",
"207 666 CURVE SMOOTH",
"239 666 OFFCURVE",
"260 648 OFFCURVE",
"260 615 CURVE SMOOTH",
"260 580 OFFCURVE",
"238 559 OFFCURVE",
"181 559 CURVE",
"181 515 LINE",
"238 515 OFFCURVE",
"265 501 OFFCURVE",
"265 458 CURVE SMOOTH",
"265 428 OFFCURVE",
"241 402 OFFCURVE",
"202 402 CURVE SMOOTH",
"163 402 OFFCURVE",
"147 425 OFFCURVE",
"137 448 CURVE SMOOTH",
"134 455 OFFCURVE",
"127 459 OFFCURVE",
"117 459 CURVE SMOOTH",
"112 459 OFFCURVE",
"108 458 OFFCURVE",
"103 456 CURVE SMOOTH",
"75 444 LINE",
"97 379 OFFCURVE",
"131 348 OFFCURVE",
"205 348 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"689 0 LINE",
"689 88 LINE",
"730 88 LINE SMOOTH",
"738 88 OFFCURVE",
"743 94 OFFCURVE",
"743 101 CURVE SMOOTH",
"743 134 LINE",
"689 134 LINE",
"689 365 LINE",
"627 365 LINE",
"456 131 LINE",
"461 102 LINE SMOOTH",
"462 94 OFFCURVE",
"469 88 OFFCURVE",
"481 88 CURVE SMOOTH",
"634 88 LINE",
"634 0 LINE"
);
},
{
closed = 1;
nodes = (
"637 297 LINE",
"634 282 OFFCURVE",
"634 267 OFFCURVE",
"634 254 CURVE SMOOTH",
"634 134 LINE",
"516 134 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
18 17 94 92 89 87 84 83 71 69 65 63 59 58 57 56 48 46 41 39 33 31 17 78 18 78 16 15 11 9 8 7 6 4 1 0 17 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
67 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
74 1 12 11 24 1 9 10 37 1 8 7 82 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 0 38 13 1 0 3 1 1 2 0 1 1 2 38 0 11 11 5 1 0 36 15 16 2 5 5 11 31 0 4 4 2 1 0 36 14 1 2 2 12 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 99 values pushed */
74 1 12 11 24 1 9 10 37 1 8 7 82 1 0 6 4 30 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 0 38 13 1 0 3 1 1 2 0 1 1 2 38 0 15 15 11 31 0 11 11 5 1 0 36 16 1 5 5 11 31 0 4 4 2 1 0 36 14 1 2 2 12 2 32 11 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 100 values pushed */
74 1 12 11 24 1 9 10 37 1 8 7 82 1 0 6 4 30 0 15 5 11 5 15 11 50 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 16 1 5 0 11 12 5 11 1 0 38 0 10 0 9 7 10 9 1 0 38 0 8 0 6 0 8 6 1 0 38 13 1 0 3 1 1 2 0 1 1 2 38 0 4 4 2 1 0 36 14 1 2 2 15 2 32 10 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 109 values pushed */
74 1 12 11 24 1 9 10 37 1 8 7 82 1 0 6 4 30 0 15 5 11 5 15 11 50 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 16 1 5 0 11 12 5 11 1 0 38 0 10 0 9 7 10 9 1 0 38 0 4 6 2 4 0 0 35 0 8 0 6 0 8 6 1 0 38 13 1 0 3 1 1 2 0 1 1 2 38 0 4 4 2 1 0 36 14 1 2 4 2 1 0 33 11 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 124 values pushed */
74 1 12 11 24 1 9 10 37 1 8 7 82 1 0 6 4 30 0 15 5 11 5 15 11 50 0 12 11 10 11 12 10 50 0 7 9 8 9 7 8 50 0 14 1 2 1 14 2 50 16 1 5 0 11 12 5 11 1 0 38 0 10 0 9 7 10 9 1 0 38 0 4 6 2 4 0 0 35 0 8 0 6 0 8 6 1 0 38 0 13 0 3 1 13 3 1 2 38 0 0 0 1 14 0 1 1 0 38 0 4 4 2 0 0 36 0 2 4 2 0 0 33 13 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 818;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = period;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"106 -8 OFFCURVE",
"120 7 OFFCURVE",
"120 24 CURVE SMOOTH",
"120 43 OFFCURVE",
"106 57 OFFCURVE",
"87 57 CURVE SMOOTH",
"70 57 OFFCURVE",
"55 43 OFFCURVE",
"55 24 CURVE SMOOTH",
"55 7 OFFCURVE",
"70 -8 OFFCURVE",
"87 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
6 0 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 175;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"164 -7 OFFCURVE",
"201 30 OFFCURVE",
"201 79 CURVE SMOOTH",
"201 127 OFFCURVE",
"163 164 OFFCURVE",
"113 164 CURVE SMOOTH",
"64 164 OFFCURVE",
"25 127 OFFCURVE",
"25 79 CURVE SMOOTH",
"25 30 OFFCURVE",
"64 -7 OFFCURVE",
"113 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 1 0 36 0 1 1 18 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 226;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"142 -8 OFFCURVE",
"170 20 OFFCURVE",
"170 55 CURVE SMOOTH",
"170 90 OFFCURVE",
"142 118 OFFCURVE",
"107 118 CURVE SMOOTH",
"73 118 OFFCURVE",
"45 90 OFFCURVE",
"45 55 CURVE SMOOTH",
"45 20 OFFCURVE",
"73 -8 OFFCURVE",
"107 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 1 0 36 0 1 1 18 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 1 0 36 0 1 1 21 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
leftKerningGroup = comma;
note = period;
rightKerningGroup = comma;
unicode = 002E;
},
{
glyphname = comma;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"93 -83 OFFCURVE",
"117 -34 OFFCURVE",
"117 18 CURVE SMOOTH",
"117 43 OFFCURVE",
"105 57 OFFCURVE",
"86 57 CURVE SMOOTH",
"69 57 OFFCURVE",
"56 42 OFFCURVE",
"56 26 CURVE SMOOTH",
"56 9 OFFCURVE",
"68 -4 OFFCURVE",
"84 -4 CURVE SMOOTH",
"94 -4 OFFCURVE",
"102 -1 OFFCURVE",
"107 6 CURVE",
"107 -46 OFFCURVE",
"83 -75 OFFCURVE",
"58 -110 CURVE",
"56 -112 OFFCURVE",
"55 -114 OFFCURVE",
"55 -115 CURVE SMOOTH",
"55 -116 OFFCURVE",
"56 -117 OFFCURVE",
"57 -118 CURVE SMOOTH",
"58 -119 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
6 4 19 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 172;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"149 -91 OFFCURVE",
"197 -3 OFFCURVE",
"197 69 CURVE SMOOTH",
"197 122 OFFCURVE",
"168 164 OFFCURVE",
"109 164 CURVE SMOOTH",
"60 164 OFFCURVE",
"25 131 OFFCURVE",
"25 88 CURVE SMOOTH",
"25 43 OFFCURVE",
"56 7 OFFCURVE",
"100 3 CURVE SMOOTH",
"100 3 OFFCURVE",
"101 3 OFFCURVE",
"101 3 CURVE",
"94 -31 OFFCURVE",
"62 -65 OFFCURVE",
"46 -81 CURVE SMOOTH",
"39 -86 OFFCURVE",
"34 -95 OFFCURVE",
"34 -102 CURVE SMOOTH",
"34 -111 OFFCURVE",
"38 -116 OFFCURVE",
"45 -124 CURVE",
"72 -148 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
6 4 1 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 10 values pushed */
27 15 2 0 27 0 0 0 43 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"128 -89 OFFCURVE",
"166 -14 OFFCURVE",
"166 47 CURVE SMOOTH",
"166 88 OFFCURVE",
"144 118 OFFCURVE",
"104 118 CURVE SMOOTH",
"71 118 OFFCURVE",
"45 93 OFFCURVE",
"45 62 CURVE SMOOTH",
"45 26 OFFCURVE",
"70 0 OFFCURVE",
"103 0 CURVE SMOOTH",
"105 0 OFFCURVE",
"108 0 OFFCURVE",
"110 0 CURVE",
"103 -39 OFFCURVE",
"72 -76 OFFCURVE",
"57 -94 CURVE SMOOTH",
"52 -99 OFFCURVE",
"50 -103 OFFCURVE",
"50 -107 CURVE SMOOTH",
"50 -112 OFFCURVE",
"52 -117 OFFCURVE",
"56 -121 CURVE SMOOTH",
"71 -136 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
27 25 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
15 1 1 27 0 0 0 1 1 0 36 0 1 1 12 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
15 1 1 27 0 0 0 1 1 0 36 0 1 1 15 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
15 1 1 27 0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
leftKerningGroup = comma;
note = comma;
rightKerningGroup = comma;
unicode = 002C;
},
{
glyphname = colon;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"55 24 LINE",
"55 7 OFFCURVE",
"70 -8 OFFCURVE",
"87 -8 CURVE SMOOTH",
"106 -8 OFFCURVE",
"120 7 OFFCURVE",
"120 24 CURVE SMOOTH",
"120 43 OFFCURVE",
"106 57 OFFCURVE",
"87 57 CURVE SMOOTH",
"70 57 OFFCURVE",
"55 43 OFFCURVE",
"55 24 CURVE"
);
},
{
closed = 1;
nodes = (
"55 443 LINE",
"55 426 OFFCURVE",
"70 411 OFFCURVE",
"87 411 CURVE SMOOTH",
"106 411 OFFCURVE",
"120 426 OFFCURVE",
"120 443 CURVE SMOOTH",
"120 462 OFFCURVE",
"106 476 OFFCURVE",
"87 476 CURVE SMOOTH",
"70 476 OFFCURVE",
"55 462 OFFCURVE",
"55 443 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
6 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 21 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 175;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"25 79 LINE",
"25 30 OFFCURVE",
"64 -7 OFFCURVE",
"113 -7 CURVE SMOOTH",
"164 -7 OFFCURVE",
"201 30 OFFCURVE",
"201 79 CURVE SMOOTH",
"201 127 OFFCURVE",
"163 164 OFFCURVE",
"113 164 CURVE SMOOTH",
"64 164 OFFCURVE",
"25 127 OFFCURVE",
"25 79 CURVE"
);
},
{
closed = 1;
nodes = (
"25 420 LINE",
"25 372 OFFCURVE",
"64 335 OFFCURVE",
"113 335 CURVE SMOOTH",
"163 335 OFFCURVE",
"201 372 OFFCURVE",
"201 420 CURVE SMOOTH",
"201 467 OFFCURVE",
"163 506 OFFCURVE",
"113 506 CURVE SMOOTH",
"64 506 OFFCURVE",
"25 467 OFFCURVE",
"25 420 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 3 2 1 0 36 0 2 2 14 31 0 0 0 1 1 0 36 0 1 1 18 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 0 1 1 0 36 0 1 1 18 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 226;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"45 55 LINE",
"45 20 OFFCURVE",
"73 -8 OFFCURVE",
"107 -8 CURVE SMOOTH",
"142 -8 OFFCURVE",
"170 20 OFFCURVE",
"170 55 CURVE SMOOTH",
"170 90 OFFCURVE",
"142 118 OFFCURVE",
"107 118 CURVE SMOOTH",
"73 118 OFFCURVE",
"45 90 OFFCURVE",
"45 55 CURVE"
);
},
{
closed = 1;
nodes = (
"45 430 LINE",
"45 394 OFFCURVE",
"73 368 OFFCURVE",
"107 368 CURVE SMOOTH",
"142 368 OFFCURVE",
"170 394 OFFCURVE",
"170 430 CURVE SMOOTH",
"170 465 OFFCURVE",
"142 493 OFFCURVE",
"107 493 CURVE SMOOTH",
"73 493 OFFCURVE",
"45 465 OFFCURVE",
"45 430 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 3 3 2 1 0 36 0 2 2 14 31 0 0 0 1 1 0 36 0 1 1 18 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 0 1 1 0 36 0 1 1 18 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 0 1 1 0 36 0 1 1 21 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
leftKerningGroup = semicolon;
leftMetricsKey = period;
note = colon;
rightKerningGroup = semicolon;
rightMetricsKey = period;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
components = (
{
name = comma;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"111 411 OFFCURVE",
"125 426 OFFCURVE",
"125 443 CURVE SMOOTH",
"125 462 OFFCURVE",
"111 476 OFFCURVE",
"92 476 CURVE SMOOTH",
"75 476 OFFCURVE",
"60 462 OFFCURVE",
"60 443 CURVE SMOOTH",
"60 426 OFFCURVE",
"75 411 OFFCURVE",
"92 411 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
6 4 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
27 33 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 180;
},
{
components = (
{
name = comma;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"168 335 OFFCURVE",
"206 372 OFFCURVE",
"206 420 CURVE SMOOTH",
"206 467 OFFCURVE",
"168 506 OFFCURVE",
"118 506 CURVE SMOOTH",
"69 506 OFFCURVE",
"30 467 OFFCURVE",
"30 420 CURVE SMOOTH",
"30 372 OFFCURVE",
"69 335 OFFCURVE",
"118 335 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
48 46 38 36 6 4 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
27 15 2 0 27 0 0 2 0 53 0 2 2 1 1 0 36 0 1 1 14 2 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
27 15 2 0 27 0 0 2 0 53 0 1 2 2 1 1 0 35 0 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 231;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"142 368 OFFCURVE",
"170 394 OFFCURVE",
"170 430 CURVE SMOOTH",
"170 465 OFFCURVE",
"142 493 OFFCURVE",
"107 493 CURVE SMOOTH",
"73 493 OFFCURVE",
"45 465 OFFCURVE",
"45 430 CURVE SMOOTH",
"45 394 OFFCURVE",
"73 368 OFFCURVE",
"107 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
47 45 37 35 27 25 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
15 1 1 27 0 3 3 2 1 0 36 0 2 2 14 31 0 0 0 1 1 0 36 0 1 1 12 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
15 1 1 27 0 2 0 3 0 2 3 1 0 38 0 0 0 1 1 0 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
15 1 1 27 0 2 0 3 0 2 3 1 0 38 0 0 0 1 1 0 36 0 1 1 15 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
15 1 1 27 0 2 0 3 0 2 3 1 0 38 0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
leftKerningGroup = semicolon;
leftMetricsKey = comma;
note = semicolon;
rightMetricsKey = comma;
unicode = 003B;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"55 24 LINE",
"55 7 OFFCURVE",
"70 -8 OFFCURVE",
"87 -8 CURVE SMOOTH",
"106 -8 OFFCURVE",
"120 7 OFFCURVE",
"120 24 CURVE SMOOTH",
"120 43 OFFCURVE",
"106 57 OFFCURVE",
"87 57 CURVE SMOOTH",
"70 57 OFFCURVE",
"55 43 OFFCURVE",
"55 24 CURVE"
);
},
{
closed = 1;
nodes = (
"525 24 LINE",
"525 7 OFFCURVE",
"540 -8 OFFCURVE",
"557 -8 CURVE SMOOTH",
"576 -8 OFFCURVE",
"590 7 OFFCURVE",
"590 24 CURVE SMOOTH",
"590 43 OFFCURVE",
"576 57 OFFCURVE",
"557 57 CURVE SMOOTH",
"540 57 OFFCURVE",
"525 43 OFFCURVE",
"525 24 CURVE"
);
},
{
closed = 1;
nodes = (
"290 24 LINE",
"290 7 OFFCURVE",
"305 -8 OFFCURVE",
"322 -8 CURVE SMOOTH",
"341 -8 OFFCURVE",
"355 7 OFFCURVE",
"355 24 CURVE SMOOTH",
"355 43 OFFCURVE",
"341 57 OFFCURVE",
"322 57 CURVE SMOOTH",
"305 57 OFFCURVE",
"290 43 OFFCURVE",
"290 24 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
239 24 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
175 24 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 24 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
96 24 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
239 12 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
175 12 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 12 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
96 12 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 645;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"25 79 LINE",
"25 30 OFFCURVE",
"64 -7 OFFCURVE",
"113 -7 CURVE SMOOTH",
"164 -7 OFFCURVE",
"201 30 OFFCURVE",
"201 79 CURVE SMOOTH",
"201 127 OFFCURVE",
"163 164 OFFCURVE",
"113 164 CURVE SMOOTH",
"64 164 OFFCURVE",
"25 127 OFFCURVE",
"25 79 CURVE"
);
},
{
closed = 1;
nodes = (
"577 79 LINE",
"577 30 OFFCURVE",
"616 -7 OFFCURVE",
"665 -7 CURVE SMOOTH",
"716 -7 OFFCURVE",
"753 30 OFFCURVE",
"753 79 CURVE SMOOTH",
"753 127 OFFCURVE",
"715 164 OFFCURVE",
"665 164 CURVE SMOOTH",
"616 164 OFFCURVE",
"577 127 OFFCURVE",
"577 79 CURVE"
);
},
{
closed = 1;
nodes = (
"301 79 LINE",
"301 30 OFFCURVE",
"340 -7 OFFCURVE",
"389 -7 CURVE SMOOTH",
"440 -7 OFFCURVE",
"477 30 OFFCURVE",
"477 79 CURVE SMOOTH",
"477 127 OFFCURVE",
"439 164 OFFCURVE",
"389 164 CURVE SMOOTH",
"340 164 OFFCURVE",
"301 127 OFFCURVE",
"301 79 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 54 46 44 36 34 26 24 16 14 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 2 2 0 0 1 1 0 36 5 3 2 1 1 18 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
4 2 2 0 1 1 0 1 0 35 4 2 2 0 0 1 1 0 36 5 3 2 1 0 1 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 2 1 0 1 0 35 0 4 0 5 3 4 5 1 0 38 0 2 0 3 1 2 3 1 0 38 0 0 0 1 1 0 36 0 1 0 1 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"45 55 LINE",
"45 20 OFFCURVE",
"73 -8 OFFCURVE",
"107 -8 CURVE SMOOTH",
"142 -8 OFFCURVE",
"170 20 OFFCURVE",
"170 55 CURVE SMOOTH",
"170 90 OFFCURVE",
"142 118 OFFCURVE",
"107 118 CURVE SMOOTH",
"73 118 OFFCURVE",
"45 90 OFFCURVE",
"45 55 CURVE"
);
},
{
closed = 1;
nodes = (
"560 55 LINE",
"560 20 OFFCURVE",
"586 -8 OFFCURVE",
"622 -8 CURVE SMOOTH",
"658 -8 OFFCURVE",
"684 20 OFFCURVE",
"684 55 CURVE SMOOTH",
"684 90 OFFCURVE",
"658 118 OFFCURVE",
"622 118 CURVE SMOOTH",
"586 118 OFFCURVE",
"560 90 OFFCURVE",
"560 55 CURVE"
);
},
{
closed = 1;
nodes = (
"302 55 LINE",
"302 20 OFFCURVE",
"330 -8 OFFCURVE",
"364 -8 CURVE SMOOTH",
"399 -8 OFFCURVE",
"427 20 OFFCURVE",
"427 55 CURVE SMOOTH",
"427 90 OFFCURVE",
"399 118 OFFCURVE",
"364 118 CURVE SMOOTH",
"330 118 OFFCURVE",
"302 90 OFFCURVE",
"302 55 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 54 46 44 36 34 26 24 16 14 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 2 2 0 0 1 1 0 36 5 3 2 1 1 18 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 2 2 0 0 1 1 0 36 5 3 2 1 1 21 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
4 2 2 0 1 1 0 1 0 35 4 2 2 0 0 1 1 0 36 5 3 2 1 0 1 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 2 1 0 1 0 35 0 4 0 5 3 4 5 1 0 38 0 2 0 3 1 2 3 1 0 38 0 0 0 1 1 0 36 0 1 0 1 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 729;
}
);
leftKerningGroup = comma;
leftMetricsKey = period;
note = ellipsis;
rightKerningGroup = comma;
rightMetricsKey = period;
unicode = 2026;
},
{
glyphname = exclam;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"116 414 LINE SMOOTH",
"116 380 OFFCURVE",
"118 277 OFFCURVE",
"119 238 CURVE",
"127 238 LINE",
"128 270 OFFCURVE",
"130 387 OFFCURVE",
"130 414 CURVE SMOOTH",
"130 700 LINE",
"116 700 LINE",
"116 700 LINE"
);
},
{
closed = 1;
nodes = (
"89 24 LINE",
"89 7 OFFCURVE",
"104 -8 OFFCURVE",
"121 -8 CURVE SMOOTH",
"140 -8 OFFCURVE",
"154 7 OFFCURVE",
"154 24 CURVE SMOOTH",
"154 43 OFFCURVE",
"140 57 OFFCURVE",
"121 57 CURVE SMOOTH",
"104 57 OFFCURVE",
"89 43 OFFCURVE",
"89 24 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
20 14 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
12 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 241;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"80 443 LINE SMOOTH",
"80 382 OFFCURVE",
"88 322 OFFCURVE",
"100 259 CURVE",
"205 259 LINE",
"217 322 OFFCURVE",
"225 382 OFFCURVE",
"225 443 CURVE SMOOTH",
"225 729 LINE",
"80 729 LINE",
"80 729 LINE"
);
},
{
closed = 1;
nodes = (
"63 79 LINE",
"63 30 OFFCURVE",
"102 -7 OFFCURVE",
"151 -7 CURVE SMOOTH",
"202 -7 OFFCURVE",
"239 30 OFFCURVE",
"239 79 CURVE SMOOTH",
"239 127 OFFCURVE",
"201 164 OFFCURVE",
"151 164 CURVE SMOOTH",
"102 164 OFFCURVE",
"63 127 OFFCURVE",
"63 79 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 26 24 16 14 0 9 0 9 5 4 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 0 0 36 4 1 1 1 11 31 0 2 2 3 1 0 36 0 3 3 18 3 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 1 0 0 2 1 0 0 0 38 0 2 3 3 2 1 0 35 0 2 2 3 1 0 36 0 3 2 3 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"107 431 LINE SMOOTH",
"107 369 OFFCURVE",
"111 317 OFFCURVE",
"119 250 CURVE",
"179 250 LINE",
"187 317 OFFCURVE",
"191 369 OFFCURVE",
"191 431 CURVE SMOOTH",
"191 717 LINE",
"107 717 LINE",
"107 717 LINE"
);
},
{
closed = 1;
nodes = (
"85 55 LINE",
"85 20 OFFCURVE",
"113 -8 OFFCURVE",
"147 -8 CURVE SMOOTH",
"182 -8 OFFCURVE",
"210 20 OFFCURVE",
"210 55 CURVE SMOOTH",
"210 90 OFFCURVE",
"182 118 OFFCURVE",
"147 118 CURVE SMOOTH",
"113 118 OFFCURVE",
"85 90 OFFCURVE",
"85 55 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 30 28 20 18 0 13 0 13 7 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 1 0 0 36 4 1 1 1 11 31 0 2 2 3 1 0 36 0 3 3 18 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 1 0 0 2 1 0 0 0 38 0 2 2 3 1 0 36 0 3 3 21 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
4 1 1 0 0 2 1 0 0 0 38 0 2 3 3 2 1 0 35 0 2 2 3 1 0 36 0 3 2 3 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"130 99 LINE SMOOTH",
"130 127 OFFCURVE",
"128 243 OFFCURVE",
"127 275 CURVE",
"119 275 LINE",
"118 237 OFFCURVE",
"116 133 OFFCURVE",
"116 99 CURVE SMOOTH",
"116 -180 LINE",
"130 -180 LINE",
"130 -180 LINE"
);
},
{
closed = 1;
nodes = (
"89 466 LINE",
"89 449 OFFCURVE",
"104 433 OFFCURVE",
"121 433 CURVE SMOOTH",
"140 433 OFFCURVE",
"154 449 OFFCURVE",
"154 466 CURVE SMOOTH",
"154 485 OFFCURVE",
"140 498 OFFCURVE",
"121 498 CURVE SMOOTH",
"104 498 OFFCURVE",
"89 485 OFFCURVE",
"89 466 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
20 14 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 241;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"225 99 LINE SMOOTH",
"225 160 OFFCURVE",
"217 220 OFFCURVE",
"205 283 CURVE",
"100 283 LINE",
"88 220 OFFCURVE",
"80 160 OFFCURVE",
"80 99 CURVE SMOOTH",
"80 -165 LINE",
"225 -165 LINE",
"225 -165 LINE"
);
},
{
closed = 1;
nodes = (
"63 441 LINE",
"63 393 OFFCURVE",
"102 356 OFFCURVE",
"151 356 CURVE SMOOTH",
"201 356 OFFCURVE",
"239 393 OFFCURVE",
"239 441 CURVE SMOOTH",
"239 490 OFFCURVE",
"202 527 OFFCURVE",
"151 527 CURVE SMOOTH",
"102 527 OFFCURVE",
"63 490 OFFCURVE",
"63 441 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 26 24 16 14 0 9 0 9 5 4 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 3 2 1 0 36 0 2 2 20 31 0 0 0 1 0 0 36 4 1 1 1 16 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 1 0 1 0 0 37 0 3 3 2 1 0 36 0 2 2 20 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 4 1 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"192 99 LINE SMOOTH",
"192 148 OFFCURVE",
"186 224 OFFCURVE",
"180 280 CURVE",
"119 280 LINE",
"113 224 OFFCURVE",
"107 148 OFFCURVE",
"107 99 CURVE SMOOTH",
"107 -172 LINE",
"192 -172 LINE",
"192 -172 LINE"
);
},
{
closed = 1;
nodes = (
"85 452 LINE",
"85 417 OFFCURVE",
"113 389 OFFCURVE",
"148 389 CURVE SMOOTH",
"182 389 OFFCURVE",
"210 418 OFFCURVE",
"210 452 CURVE SMOOTH",
"210 487 OFFCURVE",
"182 515 OFFCURVE",
"148 515 CURVE SMOOTH",
"113 515 OFFCURVE",
"85 487 OFFCURVE",
"85 452 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 30 28 20 18 0 13 0 13 7 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 3 2 1 0 36 0 2 2 20 31 0 0 0 1 0 0 36 4 1 1 1 16 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 4 1 1 0 1 0 0 37 0 3 3 2 1 0 36 0 2 2 20 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 4 1 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
leftMetricsKey = exclam;
note = exclamdown;
rightMetricsKey = exclam;
unicode = 00A1;
},
{
glyphname = question;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 79, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"175 238 LINE",
"178 324 LINE SMOOTH",
"179 359 OFFCURVE",
"225 387 OFFCURVE",
"264 416 CURVE SMOOTH",
"309 450 OFFCURVE",
"346 496 OFFCURVE",
"346 566 CURVE SMOOTH",
"346 654 OFFCURVE",
"270 708 OFFCURVE",
"186 708 CURVE SMOOTH",
"121 708 OFFCURVE",
"70 678 OFFCURVE",
"35 640 CURVE",
"38 637 LINE SMOOTH",
"40 635 OFFCURVE",
"41 634 OFFCURVE",
"44 634 CURVE SMOOTH",
"50 634 OFFCURVE",
"94 698 OFFCURVE",
"186 698 CURVE SMOOTH",
"264 698 OFFCURVE",
"334 647 OFFCURVE",
"334 566 CURVE SMOOTH",
"334 498 OFFCURVE",
"296 453 OFFCURVE",
"251 420 CURVE SMOOTH",
"212 392 OFFCURVE",
"167 363 OFFCURVE",
"167 325 CURVE SMOOTH",
"167 324 OFFCURVE",
"167 324 OFFCURVE",
"167 323 CURVE",
"167 238 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
46 40 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 384;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"260 259 LINE",
"274 329 LINE SMOOTH",
"280 358 OFFCURVE",
"324 386 OFFCURVE",
"357 411 CURVE SMOOTH",
"398 441 OFFCURVE",
"429 491 OFFCURVE",
"429 560 CURVE SMOOTH",
"429 670 OFFCURVE",
"347 737 OFFCURVE",
"225 737 CURVE SMOOTH",
"142 737 OFFCURVE",
"73 705 OFFCURVE",
"22 662 CURVE",
"63 599 LINE SMOOTH",
"70 587 OFFCURVE",
"81 581 OFFCURVE",
"95 581 CURVE SMOOTH",
"115 581 OFFCURVE",
"171 616 OFFCURVE",
"211 616 CURVE SMOOTH",
"258 616 OFFCURVE",
"285 591 OFFCURVE",
"285 551 CURVE SMOOTH",
"285 503 OFFCURVE",
"250 473 OFFCURVE",
"214 447 CURVE SMOOTH",
"178 422 OFFCURVE",
"142 394 OFFCURVE",
"142 352 CURVE SMOOTH",
"142 351 OFFCURVE",
"143 342 OFFCURVE",
"143 340 CURVE SMOOTH",
"154 259 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 47 45 39 37 34 32 19 18 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 2 2 0 1 0 36 0 0 0 17 31 0 4 4 5 1 0 36 0 5 5 18 5 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 0 0 2 3 0 2 1 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 472;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"226 250 LINE",
"235 327 LINE SMOOTH",
"238 357 OFFCURVE",
"285 387 OFFCURVE",
"319 413 CURVE SMOOTH",
"363 446 OFFCURVE",
"396 492 OFFCURVE",
"396 562 CURVE SMOOTH",
"396 662 OFFCURVE",
"317 725 OFFCURVE",
"212 725 CURVE SMOOTH",
"137 725 OFFCURVE",
"78 693 OFFCURVE",
"33 653 CURVE",
"57 615 LINE SMOOTH",
"62 608 OFFCURVE",
"68 604 OFFCURVE",
"76 604 CURVE SMOOTH",
"91 604 OFFCURVE",
"157 652 OFFCURVE",
"205 652 CURVE SMOOTH",
"264 652 OFFCURVE",
"313 615 OFFCURVE",
"313 558 CURVE SMOOTH",
"313 503 OFFCURVE",
"276 463 OFFCURVE",
"236 435 CURVE SMOOTH",
"199 409 OFFCURVE",
"159 378 OFFCURVE",
"159 339 CURVE SMOOTH",
"159 337 OFFCURVE",
"159 335 OFFCURVE",
"159 333 CURVE SMOOTH",
"165 250 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 47 45 39 37 34 32 19 18 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 2 0 20 1 1 3 2 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 2 2 0 1 0 36 0 0 0 17 31 0 4 4 5 1 0 36 0 5 5 18 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 2 0 20 1 1 3 2 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 0 0 2 3 0 2 1 0 38 0 4 4 5 1 0 36 0 5 5 21 5 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 1 2 0 20 1 1 3 2 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 0 0 2 3 0 2 1 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
layers = (
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 380, 522}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
46 40 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 377;
},
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 467, 564}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
57 55 47 45 39 37 34 32 19 18 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 2 1 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 5 5 4 1 0 36 0 4 4 20 31 0 2 2 0 1 2 36 0 0 0 22 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 2 1 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 2 0 0 2 0 1 2 37 0 5 5 4 1 0 36 0 4 4 20 5 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 1 0 2 1 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 4 0 5 1 4 5 1 0 38 0 2 0 0 2 1 0 35 0 2 2 0 1 2 36 0 0 2 0 1 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 464;
},
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 430, 547}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
58 56 48 46 39 37 34 32 19 18 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
20 1 3 1 0 1 0 2 2 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 5 5 4 1 0 36 0 4 4 20 31 0 2 2 0 1 2 36 0 0 0 22 0 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
20 1 3 1 0 1 0 2 2 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 2 0 0 2 0 1 2 37 0 5 5 4 1 0 36 0 4 4 20 5 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
20 1 3 1 0 1 0 2 2 30 0 1 5 3 5 1 3 50 0 3 2 5 3 2 48 0 4 0 5 1 4 5 1 0 38 0 2 0 0 2 1 0 35 0 2 2 0 1 2 36 0 0 2 0 1 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"69 295 LINE",
"69 280 OFFCURVE",
"83 266 OFFCURVE",
"98 266 CURVE SMOOTH",
"115 266 OFFCURVE",
"129 280 OFFCURVE",
"129 295 CURVE SMOOTH",
"129 312 OFFCURVE",
"115 326 OFFCURVE",
"98 326 CURVE SMOOTH",
"83 326 OFFCURVE",
"69 312 OFFCURVE",
"69 295 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
6 0 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
3 9 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 198;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"50 298 LINE",
"50 238 OFFCURVE",
"101 190 OFFCURVE",
"162 190 CURVE SMOOTH",
"226 190 OFFCURVE",
"275 238 OFFCURVE",
"275 298 CURVE SMOOTH",
"275 359 OFFCURVE",
"226 407 OFFCURVE",
"162 407 CURVE SMOOTH",
"101 407 OFFCURVE",
"50 359 OFFCURVE",
"50 298 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"65 297 LINE",
"65 256 OFFCURVE",
"99 223 OFFCURVE",
"139 223 CURVE SMOOTH",
"181 223 OFFCURVE",
"215 255 OFFCURVE",
"215 297 CURVE SMOOTH",
"215 338 OFFCURVE",
"181 372 OFFCURVE",
"139 372 CURVE SMOOTH",
"99 372 OFFCURVE",
"65 338 OFFCURVE",
"65 297 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"91 299 LINE",
"91 239 OFFCURVE",
"143 187 OFFCURVE",
"203 187 CURVE SMOOTH",
"265 187 OFFCURVE",
"317 238 OFFCURVE",
"317 299 CURVE SMOOTH",
"317 362 OFFCURVE",
"266 413 OFFCURVE",
"203 413 CURVE SMOOTH",
"142 413 OFFCURVE",
"91 361 OFFCURVE",
"91 299 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
10 0 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
5 15 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 409;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"68 296 LINE",
"68 164 OFFCURVE",
"179 56 OFFCURVE",
"315 56 CURVE SMOOTH",
"452 56 OFFCURVE",
"563 164 OFFCURVE",
"563 296 CURVE SMOOTH",
"563 430 OFFCURVE",
"452 538 OFFCURVE",
"315 538 CURVE SMOOTH",
"180 538 OFFCURVE",
"68 430 OFFCURVE",
"68 296 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 1 0 1 0 36 0 0 0 20 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 632;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"86 298 LINE",
"86 197 OFFCURVE",
"171 112 OFFCURVE",
"271 112 CURVE SMOOTH",
"373 112 OFFCURVE",
"458 196 OFFCURVE",
"458 298 CURVE SMOOTH",
"458 401 OFFCURVE",
"373 484 OFFCURVE",
"271 484 CURVE SMOOTH",
"171 484 OFFCURVE",
"86 400 OFFCURVE",
"86 298 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 1 1 0 1 0 36 0 0 0 14 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 1 0 35 0 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"199 463 LINE",
"199 463 LINE",
"199 577 LINE SMOOTH",
"199 585 OFFCURVE",
"199 587 OFFCURVE",
"196 599 CURVE",
"200 595 OFFCURVE",
"212 587 OFFCURVE",
"214 585 CURVE",
"316 526 LINE",
"321 535 LINE",
"219 594 LINE SMOOTH",
"216 596 OFFCURVE",
"208 599 OFFCURVE",
"199 602 CURVE",
"210 605 OFFCURVE",
"212 606 OFFCURVE",
"219 610 CURVE SMOOTH",
"320 669 LINE",
"315 678 LINE",
"214 619 LINE SMOOTH",
"207 615 OFFCURVE",
"205 613 OFFCURVE",
"196 604 CURVE",
"199 612 OFFCURVE",
"199 618 OFFCURVE",
"199 627 CURVE SMOOTH",
"199 741 LINE",
"189 741 LINE",
"189 627 LINE SMOOTH",
"189 624 OFFCURVE",
"191 615 OFFCURVE",
"193 604 CURVE",
"189 608 OFFCURVE",
"178 618 OFFCURVE",
"175 619 CURVE",
"73 678 LINE",
"68 669 LINE",
"170 610 LINE SMOOTH",
"173 608 OFFCURVE",
"180 606 OFFCURVE",
"191 602 CURVE",
"188 601 OFFCURVE",
"176 597 OFFCURVE",
"170 594 CURVE SMOOTH",
"69 535 LINE",
"74 526 LINE",
"175 585 LINE SMOOTH",
"180 588 OFFCURVE",
"187 593 OFFCURVE",
"193 599 CURVE",
"191 590 OFFCURVE",
"189 583 OFFCURVE",
"189 577 CURVE SMOOTH",
"189 463 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
57 4 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
4 0 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
13 0 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
24 0 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
33 0 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
28 0 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 389;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"250 408 LINE",
"250 408 LINE",
"250 495 LINE SMOOTH",
"250 509 OFFCURVE",
"248 522 OFFCURVE",
"244 534 CURVE",
"253 525 OFFCURVE",
"264 517 OFFCURVE",
"276 510 CURVE SMOOTH",
"349 466 LINE",
"385 526 LINE",
"312 569 LINE SMOOTH",
"300 577 OFFCURVE",
"286 582 OFFCURVE",
"273 585 CURVE",
"286 588 OFFCURVE",
"299 593 OFFCURVE",
"312 601 CURVE SMOOTH",
"385 643 LINE",
"349 703 LINE",
"276 660 LINE SMOOTH",
"264 653 OFFCURVE",
"253 645 OFFCURVE",
"245 636 CURVE",
"249 648 OFFCURVE",
"250 661 OFFCURVE",
"250 676 CURVE SMOOTH",
"250 762 LINE",
"177 762 LINE",
"177 675 LINE SMOOTH",
"177 660 OFFCURVE",
"179 647 OFFCURVE",
"183 636 CURVE",
"175 645 OFFCURVE",
"163 653 OFFCURVE",
"151 660 CURVE SMOOTH",
"78 704 LINE",
"42 644 LINE",
"115 601 LINE SMOOTH",
"128 593 OFFCURVE",
"141 588 OFFCURVE",
"154 585 CURVE",
"141 582 OFFCURVE",
"128 577 OFFCURVE",
"115 569 CURVE SMOOTH",
"42 527 LINE",
"78 467 LINE",
"151 510 LINE SMOOTH",
"163 517 OFFCURVE",
"174 524 OFFCURVE",
"183 533 CURVE",
"179 522 OFFCURVE",
"177 507 OFFCURVE",
"177 494 CURVE SMOOTH",
"177 408 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 51 0 51 26 25 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
48 44 43 39 35 34 30 22 18 17 13 9 8 4 14 1 0 1 30 2 1 1 1 0 0 0 36 0 0 0 13 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
48 44 43 39 35 34 30 22 18 17 13 9 8 4 14 1 0 1 30 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 2 1 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 427;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"235 432 LINE",
"235 432 LINE",
"235 531 LINE SMOOTH",
"235 544 OFFCURVE",
"232 556 OFFCURVE",
"227 567 CURVE",
"235 556 OFFCURVE",
"244 550 OFFCURVE",
"256 542 CURVE SMOOTH",
"342 492 LINE",
"364 530 LINE",
"278 580 LINE SMOOTH",
"266 588 OFFCURVE",
"256 591 OFFCURVE",
"244 592 CURVE",
"256 593 OFFCURVE",
"266 597 OFFCURVE",
"278 605 CURVE SMOOTH",
"364 655 LINE",
"342 692 LINE",
"256 643 LINE SMOOTH",
"244 635 OFFCURVE",
"236 628 OFFCURVE",
"228 619 CURVE",
"233 629 OFFCURVE",
"235 641 OFFCURVE",
"235 655 CURVE SMOOTH",
"235 753 LINE",
"191 753 LINE",
"191 654 LINE SMOOTH",
"191 641 OFFCURVE",
"194 629 OFFCURVE",
"199 617 CURVE",
"192 628 OFFCURVE",
"182 636 OFFCURVE",
"171 643 CURVE SMOOTH",
"84 693 LINE",
"62 655 LINE",
"149 605 LINE SMOOTH",
"161 597 OFFCURVE",
"172 593 OFFCURVE",
"185 592 CURVE",
"173 591 OFFCURVE",
"161 587 OFFCURVE",
"149 580 CURVE SMOOTH",
"63 530 LINE",
"85 493 LINE",
"171 542 LINE SMOOTH",
"182 549 OFFCURVE",
"190 556 OFFCURVE",
"197 565 CURVE",
"193 554 OFFCURVE",
"191 543 OFFCURVE",
"191 530 CURVE SMOOTH",
"191 432 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 48 0 48 24 23 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
45 41 40 36 32 31 27 19 16 15 11 8 7 4 14 1 0 1 30 2 1 1 1 0 0 0 36 0 0 0 13 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
45 41 40 36 32 31 27 19 16 15 11 8 7 4 14 1 0 1 30 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 2 1 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 426;
}
);
leftKerningGroup = quotedbl;
note = asterisk;
rightKerningGroup = quotedbl;
unicode = 002A;
},
{
glyphname = numbersign;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"106 0 LINE SMOOTH",
"111 0 OFFCURVE",
"113 3 OFFCURVE",
"114 8 CURVE SMOOTH",
"164 230 LINE",
"335 230 LINE",
"285 4 LINE SMOOTH",
"284 1 OFFCURVE",
"286 0 OFFCURVE",
"288 0 CURVE SMOOTH",
"294 0 LINE",
"346 230 LINE",
"486 230 LINE",
"486 233 LINE SMOOTH",
"486 237 OFFCURVE",
"484 239 OFFCURVE",
"479 239 CURVE SMOOTH",
"347 239 LINE",
"396 461 LINE",
"507 461 LINE SMOOTH",
"512 461 OFFCURVE",
"514 463 OFFCURVE",
"514 467 CURVE SMOOTH",
"514 470 LINE",
"397 470 LINE",
"446 690 LINE SMOOTH",
"448 697 OFFCURVE",
"447 700 OFFCURVE",
"442 700 CURVE SMOOTH",
"437 700 LINE",
"386 470 LINE",
"215 470 LINE",
"266 700 LINE",
"262 700 LINE SMOOTH",
"257 700 OFFCURVE",
"254 697 OFFCURVE",
"253 692 CURVE SMOOTH",
"204 470 LINE",
"73 470 LINE SMOOTH",
"68 470 OFFCURVE",
"66 468 OFFCURVE",
"66 464 CURVE SMOOTH",
"66 461 LINE",
"203 461 LINE",
"154 239 LINE",
"38 239 LINE",
"38 236 LINE SMOOTH",
"38 232 OFFCURVE",
"40 230 OFFCURVE",
"45 230 CURVE SMOOTH",
"153 230 LINE",
"101 0 LINE"
);
},
{
closed = 1;
nodes = (
"214 461 LINE",
"385 461 LINE",
"336 239 LINE",
"165 239 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
24 1 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 552;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"154 0 LINE SMOOTH",
"188 0 OFFCURVE",
"217 18 OFFCURVE",
"223 54 CURVE SMOOTH",
"248 198 LINE",
"330 198 LINE",
"305 51 LINE SMOOTH",
"301 28 OFFCURVE",
"325 0 OFFCURVE",
"350 0 CURVE SMOOTH",
"422 0 LINE",
"457 198 LINE",
"556 198 LINE",
"564 246 LINE SMOOTH",
"570 283 OFFCURVE",
"561 306 OFFCURVE",
"526 306 CURVE SMOOTH",
"472 306 LINE",
"493 424 LINE",
"524 424 LINE SMOOTH",
"568 424 OFFCURVE",
"586 438 OFFCURVE",
"592 469 CURVE SMOOTH",
"604 532 LINE",
"507 532 LINE",
"533 682 LINE SMOOTH",
"538 711 OFFCURVE",
"514 729 OFFCURVE",
"484 729 CURVE SMOOTH",
"415 729 LINE",
"380 532 LINE",
"297 532 LINE",
"332 729 LINE",
"261 729 LINE SMOOTH",
"229 729 OFFCURVE",
"201 710 OFFCURVE",
"196 679 CURVE SMOOTH",
"170 532 LINE",
"136 532 LINE SMOOTH",
"92 532 OFFCURVE",
"74 518 OFFCURVE",
"68 487 CURVE SMOOTH",
"56 424 LINE",
"156 424 LINE",
"135 306 LINE",
"46 306 LINE",
"38 258 LINE SMOOTH",
"32 221 OFFCURVE",
"41 198 OFFCURVE",
"76 198 CURVE SMOOTH",
"120 198 LINE",
"85 0 LINE"
);
},
{
closed = 1;
nodes = (
"283 424 LINE",
"366 424 LINE",
"345 306 LINE",
"262 306 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 71 70 69 68 0 67 0 67 61 59 58 56 53 52 46 44 43 42 41 39 36 34 31 30 29 28 22 20 19 17 12 11 3 1 17 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
14 12 2 4 16 13 3 3 1 0 4 1 0 0 38 9 1 7 7 11 31 15 11 2 5 5 6 0 0 36 10 8 2 6 6 14 31 2 1 0 0 12 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 8 2 6 15 11 2 5 4 6 5 0 2 38 14 12 2 4 16 13 3 3 1 0 4 1 0 0 38 9 1 7 7 11 31 2 1 0 0 12 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
9 1 7 6 7 52 2 1 0 1 0 53 10 8 2 6 15 11 2 5 4 6 5 0 2 38 14 12 2 4 1 1 4 0 0 35 14 12 2 4 4 1 0 0 36 16 13 3 3 1 4 1 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 96 values pushed */
0 7 9 7 52 0 9 6 9 52 0 2 1 0 1 2 0 50 0 0 0 51 0 8 0 15 11 8 15 0 2 38 0 10 0 11 5 10 11 1 2 38 0 6 0 5 4 6 5 0 0 38 0 14 13 1 14 0 0 35 0 12 16 1 13 3 12 13 0 0 38 0 4 0 3 1 4 3 1 0 38 0 14 14 1 0 0 36 0 1 14 1 0 0 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 640;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"132 0 LINE SMOOTH",
"151 0 OFFCURVE",
"168 10 OFFCURVE",
"173 34 CURVE SMOOTH",
"208 212 LINE",
"332 212 LINE",
"296 35 LINE SMOOTH",
"292 16 OFFCURVE",
"302 0 OFFCURVE",
"323 0 CURVE SMOOTH",
"363 0 LINE",
"405 212 LINE",
"524 212 LINE",
"529 246 LINE SMOOTH",
"532 264 OFFCURVE",
"527 277 OFFCURVE",
"504 277 CURVE SMOOTH",
"415 277 LINE",
"447 440 LINE",
"516 440 LINE SMOOTH",
"541 440 OFFCURVE",
"553 449 OFFCURVE",
"556 468 CURVE SMOOTH",
"563 506 LINE",
"457 506 LINE",
"493 683 LINE SMOOTH",
"497 703 OFFCURVE",
"484 717 OFFCURVE",
"465 717 CURVE SMOOTH",
"425 717 LINE",
"383 506 LINE",
"260 506 LINE",
"302 717 LINE",
"262 717 LINE SMOOTH",
"242 717 OFFCURVE",
"226 705 OFFCURVE",
"222 685 CURVE SMOOTH",
"186 506 LINE",
"107 506 LINE SMOOTH",
"82 506 OFFCURVE",
"70 497 OFFCURVE",
"67 477 CURVE SMOOTH",
"61 440 LINE",
"177 440 LINE",
"144 277 LINE",
"42 277 LINE",
"37 237 LINE SMOOTH",
"35 220 OFFCURVE",
"46 212 OFFCURVE",
"62 212 CURVE SMOOTH",
"135 212 LINE",
"92 0 LINE"
);
},
{
closed = 1;
nodes = (
"250 440 LINE",
"374 440 LINE",
"341 277 LINE",
"218 277 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 66 65 64 63 0 62 0 62 56 54 53 51 48 47 42 40 39 38 37 35 32 30 27 26 25 24 18 16 15 13 10 9 3 1 17 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
14 12 2 4 16 13 3 3 1 0 4 1 0 0 38 9 1 7 7 11 31 15 11 2 5 5 6 0 0 36 10 8 2 6 6 14 31 2 1 0 0 12 0 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
9 1 7 6 7 52 10 8 2 6 15 11 2 5 4 6 5 0 2 38 14 12 2 4 16 13 3 3 1 0 4 1 0 0 38 2 1 0 0 15 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
9 1 7 6 7 52 2 1 0 1 0 53 10 8 2 6 15 11 2 5 4 6 5 0 2 38 14 12 2 4 1 1 4 0 0 35 14 12 2 4 4 1 0 0 36 16 13 3 3 1 4 1 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 96 values pushed */
0 7 9 7 52 0 9 6 9 52 0 2 1 0 1 2 0 50 0 0 0 51 0 8 0 15 11 8 15 0 2 38 0 10 0 11 5 10 11 1 2 38 0 6 0 5 4 6 5 0 0 38 0 14 13 1 14 0 0 35 0 12 16 1 13 3 12 13 0 0 38 0 4 0 3 1 4 3 1 0 38 0 14 14 1 0 0 36 0 1 14 1 0 0 33 12 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"31 -39 LINE SMOOTH",
"35 -39 OFFCURVE",
"41 -38 OFFCURVE",
"42 -33 CURVE",
"362 720 LINE",
"357 720 LINE SMOOTH",
"352 720 OFFCURVE",
"349 718 OFFCURVE",
"347 714 CURVE SMOOTH",
"27 -39 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
7 3 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 390;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"92 -50 LINE SMOOTH",
"125 -50 OFFCURVE",
"160 -30 OFFCURVE",
"173 6 CURVE SMOOTH",
"454 749 LINE",
"388 749 LINE SMOOTH",
"352 749 OFFCURVE",
"323 731 OFFCURVE",
"310 696 CURVE SMOOTH",
"26 -50 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
11 9 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 1 0 53 0 1 1 13 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 0 1 52 0 0 0 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"65 -45 LINE SMOOTH",
"84 -45 OFFCURVE",
"105 -34 OFFCURVE",
"114 -11 CURVE SMOOTH",
"412 737 LINE",
"375 737 LINE SMOOTH",
"352 737 OFFCURVE",
"336 725 OFFCURVE",
"328 704 CURVE SMOOTH",
"27 -45 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
9 7 4 2 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 1 0 53 0 1 1 13 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 0 1 52 0 0 0 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
leftKerningGroup = A;
note = slash;
rightKerningGroup = V;
unicode = 002F;
},
{
glyphname = backslash;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"350 -38 OFFCURVE",
"354 -39 OFFCURVE",
"358 -39 CURVE SMOOTH",
"362 -39 LINE",
"42 714 LINE SMOOTH",
"40 718 OFFCURVE",
"37 720 OFFCURVE",
"32 720 CURVE SMOOTH",
"27 720 LINE",
"347 -33 LINE",
"347 -33 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
1 5 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 388;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"319 -30 OFFCURVE",
"355 -50 OFFCURVE",
"387 -50 CURVE SMOOTH",
"453 -50 LINE",
"169 696 LINE SMOOTH",
"156 731 OFFCURVE",
"127 749 OFFCURVE",
"91 749 CURVE SMOOTH",
"25 749 LINE",
"306 6 LINE",
"306 6 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
7 5 2 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 0 1 53 0 0 0 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 52 0 1 1 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 477;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"336 -34 OFFCURVE",
"357 -45 OFFCURVE",
"376 -45 CURVE SMOOTH",
"414 -45 LINE",
"113 704 LINE SMOOTH",
"105 725 OFFCURVE",
"89 737 OFFCURVE",
"66 737 CURVE SMOOTH",
"28 737 LINE",
"327 -11 LINE",
"327 -11 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
7 5 2 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 0 1 53 0 0 0 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 52 0 1 1 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = parenleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"193 -117 LINE SMOOTH",
"194 -116 OFFCURVE",
"195 -115 OFFCURVE",
"195 -114 CURVE SMOOTH",
"195 -113 OFFCURVE",
"194 -111 OFFCURVE",
"193 -109 CURVE SMOOTH",
"105 23 OFFCURVE",
"61 161 OFFCURVE",
"61 316 CURVE SMOOTH",
"61 471 OFFCURVE",
"105 609 OFFCURVE",
"193 741 CURVE SMOOTH",
"194 743 OFFCURVE",
"195 745 OFFCURVE",
"195 746 CURVE SMOOTH",
"195 747 OFFCURVE",
"194 748 OFFCURVE",
"193 749 CURVE SMOOTH",
"188 752 LINE",
"136 673 OFFCURVE",
"101 602 OFFCURVE",
"80 531 CURVE SMOOTH",
"59 460 OFFCURVE",
"50 391 OFFCURVE",
"50 316 CURVE SMOOTH",
"50 241 OFFCURVE",
"59 172 OFFCURVE",
"80 102 CURVE SMOOTH",
"101 32 OFFCURVE",
"136 -41 OFFCURVE",
"188 -120 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 13 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
7 4 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
18 8 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 230;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"231 -127 LINE SMOOTH",
"243 -119 OFFCURVE",
"253 -110 OFFCURVE",
"253 -94 CURVE SMOOTH",
"253 -86 OFFCURVE",
"251 -77 OFFCURVE",
"246 -68 CURVE SMOOTH",
"192 45 OFFCURVE",
"159 183 OFFCURVE",
"159 313 CURVE SMOOTH",
"159 443 OFFCURVE",
"189 584 OFFCURVE",
"245 695 CURVE SMOOTH",
"250 706 OFFCURVE",
"253 714 OFFCURVE",
"253 721 CURVE SMOOTH",
"253 737 OFFCURVE",
"243 746 OFFCURVE",
"231 753 CURVE SMOOTH",
"162 793 LINE",
"114 718 OFFCURVE",
"80 641 OFFCURVE",
"58 561 CURVE SMOOTH",
"36 481 OFFCURVE",
"25 398 OFFCURVE",
"25 313 CURVE SMOOTH",
"25 228 OFFCURVE",
"36 145 OFFCURVE",
"58 66 CURVE SMOOTH",
"80 -14 OFFCURVE",
"114 -92 OFFCURVE",
"162 -167 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
21 11 1 11 
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"221 -123 LINE SMOOTH",
"229 -118 OFFCURVE",
"234 -112 OFFCURVE",
"234 -103 CURVE SMOOTH",
"234 -98 OFFCURVE",
"233 -93 OFFCURVE",
"229 -86 CURVE SMOOTH",
"160 37 OFFCURVE",
"122 172 OFFCURVE",
"122 315 CURVE SMOOTH",
"122 458 OFFCURVE",
"158 594 OFFCURVE",
"229 715 CURVE SMOOTH",
"232 721 OFFCURVE",
"234 727 OFFCURVE",
"234 732 CURVE SMOOTH",
"234 741 OFFCURVE",
"229 747 OFFCURVE",
"221 751 CURVE",
"182 776 LINE",
"131 699 OFFCURVE",
"98 624 OFFCURVE",
"76 548 CURVE SMOOTH",
"54 472 OFFCURVE",
"44 395 OFFCURVE",
"44 315 CURVE SMOOTH",
"44 234 OFFCURVE",
"54 157 OFFCURVE",
"76 81 CURVE SMOOTH",
"98 5 OFFCURVE",
"131 -70 OFFCURVE",
"182 -147 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
20 10 1 11 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"94 -41 OFFCURVE",
"129 32 OFFCURVE",
"150 102 CURVE SMOOTH",
"171 172 OFFCURVE",
"180 241 OFFCURVE",
"180 316 CURVE SMOOTH",
"180 391 OFFCURVE",
"171 460 OFFCURVE",
"150 531 CURVE SMOOTH",
"129 602 OFFCURVE",
"94 673 OFFCURVE",
"42 752 CURVE",
"37 749 LINE SMOOTH",
"36 748 OFFCURVE",
"35 747 OFFCURVE",
"35 746 CURVE SMOOTH",
"35 745 OFFCURVE",
"36 743 OFFCURVE",
"37 741 CURVE SMOOTH",
"125 609 OFFCURVE",
"169 471 OFFCURVE",
"169 316 CURVE SMOOTH",
"169 161 OFFCURVE",
"125 23 OFFCURVE",
"37 -109 CURVE SMOOTH",
"36 -111 OFFCURVE",
"35 -113 OFFCURVE",
"35 -114 CURVE SMOOTH",
"35 -115 OFFCURVE",
"36 -116 OFFCURVE",
"37 -117 CURVE SMOOTH",
"42 -120 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
13 5 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
8 18 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 230;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"154 -92 OFFCURVE",
"189 -14 OFFCURVE",
"211 66 CURVE SMOOTH",
"233 145 OFFCURVE",
"243 228 OFFCURVE",
"243 313 CURVE SMOOTH",
"243 398 OFFCURVE",
"233 481 OFFCURVE",
"211 561 CURVE SMOOTH",
"189 641 OFFCURVE",
"154 718 OFFCURVE",
"106 793 CURVE",
"37 753 LINE SMOOTH",
"25 746 OFFCURVE",
"15 737 OFFCURVE",
"15 721 CURVE SMOOTH",
"15 714 OFFCURVE",
"18 706 OFFCURVE",
"23 695 CURVE SMOOTH",
"79 584 OFFCURVE",
"109 443 OFFCURVE",
"109 313 CURVE SMOOTH",
"109 183 OFFCURVE",
"76 45 OFFCURVE",
"22 -68 CURVE SMOOTH",
"17 -77 OFFCURVE",
"15 -86 OFFCURVE",
"15 -94 CURVE SMOOTH",
"15 -110 OFFCURVE",
"25 -119 OFFCURVE",
"37 -127 CURVE SMOOTH",
"106 -167 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
12 18 1 11 
CALL[ ]	/* CallFunction */";
};
width = 268;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"135 -70 OFFCURVE",
"169 5 OFFCURVE",
"191 81 CURVE SMOOTH",
"213 157 OFFCURVE",
"222 234 OFFCURVE",
"222 315 CURVE SMOOTH",
"222 395 OFFCURVE",
"213 472 OFFCURVE",
"191 548 CURVE SMOOTH",
"169 624 OFFCURVE",
"135 699 OFFCURVE",
"84 776 CURVE",
"45 751 LINE",
"37 747 OFFCURVE",
"32 741 OFFCURVE",
"32 732 CURVE SMOOTH",
"32 727 OFFCURVE",
"34 721 OFFCURVE",
"37 715 CURVE SMOOTH",
"108 594 OFFCURVE",
"144 458 OFFCURVE",
"144 315 CURVE SMOOTH",
"144 172 OFFCURVE",
"106 37 OFFCURVE",
"37 -86 CURVE SMOOTH",
"33 -93 OFFCURVE",
"32 -98 OFFCURVE",
"32 -103 CURVE SMOOTH",
"32 -112 OFFCURVE",
"37 -118 OFFCURVE",
"45 -123 CURVE SMOOTH",
"84 -147 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
9 19 1 11 
CALL[ ]	/* CallFunction */";
};
width = 266;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"268 -121 LINE",
"268 -117 LINE SMOOTH",
"268 -114 OFFCURVE",
"266 -112 OFFCURVE",
"262 -112 CURVE SMOOTH",
"240 -112 LINE SMOOTH",
"177 -112 OFFCURVE",
"131 -63 OFFCURVE",
"131 8 CURVE SMOOTH",
"131 77 OFFCURVE",
"165 161 OFFCURVE",
"165 231 CURVE SMOOTH",
"165 278 OFFCURVE",
"130 309 OFFCURVE",
"92 315 CURVE",
"130 321 OFFCURVE",
"165 352 OFFCURVE",
"165 399 CURVE SMOOTH",
"165 471 OFFCURVE",
"131 551 OFFCURVE",
"131 622 CURVE SMOOTH",
"131 693 OFFCURVE",
"177 742 OFFCURVE",
"240 742 CURVE SMOOTH",
"262 742 LINE SMOOTH",
"266 742 OFFCURVE",
"268 744 OFFCURVE",
"268 747 CURVE SMOOTH",
"268 751 LINE",
"240 751 LINE SMOOTH",
"170 751 OFFCURVE",
"120 695 OFFCURVE",
"120 622 CURVE SMOOTH",
"120 547 OFFCURVE",
"154 474 OFFCURVE",
"154 399 CURVE SMOOTH",
"154 354 OFFCURVE",
"117 320 OFFCURVE",
"68 320 CURVE",
"68 310 LINE",
"117 310 OFFCURVE",
"154 276 OFFCURVE",
"154 231 CURVE SMOOTH",
"154 157 OFFCURVE",
"120 81 OFFCURVE",
"120 8 CURVE SMOOTH",
"120 -65 OFFCURVE",
"170 -121 OFFCURVE",
"240 -121 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
0 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
31 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
57 1 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 1 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 1 5 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 324;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"298 -162 LINE",
"298 -95 LINE SMOOTH",
"298 -76 OFFCURVE",
"279 -66 OFFCURVE",
"266 -66 CURVE SMOOTH",
"265 -66 LINE SMOOTH",
"224 -66 OFFCURVE",
"205 -38 OFFCURVE",
"205 8 CURVE SMOOTH",
"205 64 OFFCURVE",
"219 149 OFFCURVE",
"219 197 CURVE SMOOTH",
"219 248 OFFCURVE",
"191 292 OFFCURVE",
"139 308 CURVE",
"191 324 OFFCURVE",
"219 370 OFFCURVE",
"219 420 CURVE SMOOTH",
"219 468 OFFCURVE",
"205 553 OFFCURVE",
"205 609 CURVE SMOOTH",
"205 654 OFFCURVE",
"224 681 OFFCURVE",
"265 682 CURVE SMOOTH",
"266 682 LINE SMOOTH",
"279 682 OFFCURVE",
"298 694 OFFCURVE",
"298 712 CURVE SMOOTH",
"298 779 LINE",
"272 779 LINE SMOOTH",
"139 779 OFFCURVE",
"70 713 OFFCURVE",
"70 599 CURVE SMOOTH",
"70 546 OFFCURVE",
"88 470 OFFCURVE",
"88 418 CURVE SMOOTH",
"88 379 OFFCURVE",
"75 352 OFFCURVE",
"35 352 CURVE",
"35 265 LINE",
"75 265 OFFCURVE",
"88 239 OFFCURVE",
"88 199 CURVE SMOOTH",
"88 147 OFFCURVE",
"70 71 OFFCURVE",
"70 18 CURVE SMOOTH",
"70 -98 OFFCURVE",
"139 -162 OFFCURVE",
"272 -162 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
60 58 53 51 27 25 20 18 5 4 3 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
39 1 0 1 1 30 0 2 0 3 1 2 3 1 0 38 0 1 0 0 4 1 0 1 0 38 0 4 4 5 1 0 36 0 5 5 16 5 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
39 1 0 1 1 30 0 2 0 3 1 2 3 1 0 38 0 1 0 0 4 1 0 1 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 352;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"287 -145 LINE",
"287 -105 LINE SMOOTH",
"287 -92 OFFCURVE",
"275 -86 OFFCURVE",
"267 -86 CURVE SMOOTH",
"257 -86 LINE SMOOTH",
"206 -86 OFFCURVE",
"174 -51 OFFCURVE",
"174 8 CURVE SMOOTH",
"174 71 OFFCURVE",
"197 154 OFFCURVE",
"197 212 CURVE SMOOTH",
"197 259 OFFCURVE",
"166 300 OFFCURVE",
"122 311 CURVE",
"167 325 OFFCURVE",
"197 361 OFFCURVE",
"197 411 CURVE SMOOTH",
"197 469 OFFCURVE",
"174 552 OFFCURVE",
"174 615 CURVE SMOOTH",
"174 672 OFFCURVE",
"206 708 OFFCURVE",
"257 708 CURVE SMOOTH",
"267 708 LINE SMOOTH",
"275 708 OFFCURVE",
"287 714 OFFCURVE",
"287 727 CURVE SMOOTH",
"287 767 LINE",
"261 767 LINE SMOOTH",
"155 767 OFFCURVE",
"96 706 OFFCURVE",
"96 609 CURVE SMOOTH",
"96 550 OFFCURVE",
"122 467 OFFCURVE",
"122 410 CURVE SMOOTH",
"122 367 OFFCURVE",
"98 338 OFFCURVE",
"53 338 CURVE",
"53 285 LINE",
"98 285 OFFCURVE",
"122 254 OFFCURVE",
"122 213 CURVE SMOOTH",
"122 156 OFFCURVE",
"96 72 OFFCURVE",
"96 14 CURVE SMOOTH",
"96 -82 OFFCURVE",
"155 -145 OFFCURVE",
"261 -145 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 54 51 48 24 21 18 16 5 4 3 2 6 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 49 values pushed */
36 1 0 1 1 30 0 2 0 3 1 2 3 1 0 38 0 1 0 0 4 1 0 1 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 6 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
layers = (
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, -1, 324, 630}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
0 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
15 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
50 1 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
65 1 66 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 324;
},
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, -1, 352, 617}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
67 66 65 64 51 49 44 42 18 16 11 9 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
30 1 5 4 1 30 0 3 0 2 4 3 2 1 0 38 0 4 0 5 1 4 5 1 0 38 0 1 1 0 1 0 36 0 0 0 16 0 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
30 1 5 4 1 30 0 3 0 2 4 3 2 1 0 38 0 4 0 5 1 4 5 1 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 352;
},
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, -1, 337, 622}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
63 62 61 60 49 47 44 41 17 14 11 9 6 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 49 values pushed */
29 1 5 4 1 30 0 3 0 2 4 3 2 1 0 38 0 4 0 5 1 4 5 1 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"234 -118 LINE SMOOTH",
"234 -114 OFFCURVE",
"232 -112 OFFCURVE",
"227 -112 CURVE SMOOTH",
"108 -112 LINE",
"108 742 LINE",
"227 742 LINE SMOOTH",
"232 742 OFFCURVE",
"234 744 OFFCURVE",
"234 748 CURVE SMOOTH",
"234 751 LINE",
"97 751 LINE",
"97 -121 LINE",
"234 -121 LINE",
"234 -121 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 3 0 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
7 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
2 1 5 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 295;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"303 -103 LINE SMOOTH",
"303 -83 OFFCURVE",
"287 -66 OFFCURVE",
"263 -66 CURVE SMOOTH",
"208 -66 LINE",
"208 682 LINE",
"263 682 LINE SMOOTH",
"287 682 OFFCURVE",
"303 699 OFFCURVE",
"303 720 CURVE SMOOTH",
"303 779 LINE",
"79 779 LINE",
"79 -162 LINE",
"303 -162 LINE",
"303 -162 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 10 8 7 5 2 1 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 1 2 0 1 1 0 38 0 2 2 3 0 0 36 4 1 3 3 16 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 2 0 1 1 0 38 0 2 3 3 2 1 0 35 0 2 2 3 0 0 36 4 1 3 2 3 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"272 -110 LINE SMOOTH",
"272 -94 OFFCURVE",
"263 -86 OFFCURVE",
"248 -86 CURVE SMOOTH",
"163 -86 LINE",
"163 708 LINE",
"248 708 LINE SMOOTH",
"263 708 OFFCURVE",
"272 717 OFFCURVE",
"272 732 CURVE SMOOTH",
"272 767 LINE",
"88 767 LINE",
"88 -145 LINE",
"272 -145 LINE",
"272 -145 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 0 13 0 13 10 8 7 5 2 1 5 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 34 values pushed */
0 0 0 1 2 0 1 1 0 38 0 2 3 3 2 1 0 35 0 2 2 3 0 0 36 4 1 3 2 3 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"198 -121 LINE",
"198 751 LINE",
"61 751 LINE",
"61 748 LINE SMOOTH",
"61 744 OFFCURVE",
"63.333 742 OFFCURVE",
"68 742 CURVE SMOOTH",
"187 742 LINE",
"187 -112 LINE",
"68 -112 LINE SMOOTH",
"63.333 -112 OFFCURVE",
"61 -114 OFFCURVE",
"61 -118 CURVE SMOOTH",
"61 -121 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
10 3 3 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 1 4 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 295;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"271 -162 LINE",
"271 779 LINE",
"47 779 LINE",
"47 720 LINE",
"47 699 OFFCURVE",
"64 682 OFFCURVE",
"87 682 CURVE SMOOTH",
"142 682 LINE",
"142 -66 LINE",
"87 -66 LINE SMOOTH",
"64 -66 OFFCURVE",
"47 -83 OFFCURVE",
"47 -103 CURVE SMOOTH",
"47 -162 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 9 8 6 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 2 1 0 0 36 0 1 1 16 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 0 0 36 0 1 2 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"235 -145 LINE",
"235 767 LINE",
"51 767 LINE",
"51 732 LINE SMOOTH",
"51 719 OFFCURVE",
"61 708 OFFCURVE",
"76 708 CURVE SMOOTH",
"160 708 LINE",
"160 -86 LINE",
"76 -86 LINE SMOOTH",
"61 -86 OFFCURVE",
"51 -97 OFFCURVE",
"51 -110 CURVE SMOOTH",
"51 -145 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
13 12 11 10 7 5 4 2 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 0 2 1 1 0 38 0 0 3 3 0 1 0 35 0 0 0 3 0 0 36 0 3 0 3 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"289 289 LINE",
"289 299 LINE",
"69 299 LINE",
"69 289 LINE",
"69 289 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 358;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"320 242 LINE",
"320 367 LINE",
"50 367 LINE",
"50 242 LINE",
"50 242 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"287 262 LINE",
"287 338 LINE",
"40 338 LINE",
"40 262 LINE",
"40 262 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 327;
}
);
leftKerningGroup = emdash;
note = hyphen;
rightKerningGroup = emdash;
unicode = 002D;
},
{
glyphname = uni00AD;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"270 289 LINE",
"270 299 LINE",
"50 299 LINE",
"50 289 LINE",
"50 289 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 320;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"320 242 LINE",
"320 367 LINE",
"50 367 LINE",
"50 242 LINE",
"50 242 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"297 262 LINE",
"297 338 LINE",
"50 338 LINE",
"50 262 LINE",
"50 262 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 347;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = endash;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"419 279 LINE",
"419 289 LINE",
"31 289 LINE",
"31 279 LINE",
"31 279 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 441;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"436 251 LINE",
"436 357 LINE",
"26 357 LINE",
"26 251 LINE",
"26 251 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 456;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"428 263 LINE",
"428 328 LINE",
"28 328 LINE",
"28 263 LINE",
"28 263 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
leftKerningGroup = emdash;
leftMetricsKey = n;
note = endash;
rightKerningGroup = emdash;
rightMetricsKey = n;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"665 279 LINE",
"665 289 LINE",
"31 289 LINE",
"31 279 LINE",
"31 279 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 687;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"717 251 LINE",
"717 357 LINE",
"26 357 LINE",
"26 251 LINE",
"26 251 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 737;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"693 263 LINE",
"693 328 LINE",
"28 328 LINE",
"28 263 LINE",
"28 263 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
leftKerningGroup = emdash;
leftMetricsKey = n;
note = emdash;
rightKerningGroup = emdash;
rightMetricsKey = n;
unicode = 2014;
},
{
glyphname = underscore;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"0 -131 LINE",
"394 -131 LINE",
"394 -120 LINE",
"0 -120 LINE",
"0 -120 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
0 1 1 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 394;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"44 -151 LINE",
"438 -151 LINE",
"438 -54 LINE",
"44 -54 LINE",
"44 -54 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
2 1 1 1 0 0 0 36 0 0 0 16 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 482;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"0 -143 LINE",
"394 -143 LINE",
"394 -83 LINE",
"0 -83 LINE",
"0 -83 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 3 0 3 2 1 3 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 0 0 35 2 1 1 1 0 0 0 36 0 0 1 0 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 394;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"86 54 OFFCURVE",
"85 53 OFFCURVE",
"85 51 CURVE SMOOTH",
"85 50 OFFCURVE",
"86 49 OFFCURVE",
"87 46 CURVE SMOOTH",
"96 29 OFFCURVE",
"101 15 OFFCURVE",
"101 -6 CURVE SMOOTH",
"101 -39 OFFCURVE",
"85 -72 OFFCURVE",
"56 -112 CURVE SMOOTH",
"55 -113 OFFCURVE",
"55 -114 OFFCURVE",
"55 -115 CURVE SMOOTH",
"55 -116 OFFCURVE",
"55 -116 OFFCURVE",
"56 -117 CURVE SMOOTH",
"58 -119 LINE",
"87 -87 OFFCURVE",
"113 -42 OFFCURVE",
"113 3 CURVE SMOOTH",
"113 22 OFFCURVE",
"109 41 OFFCURVE",
"98 60 CURVE",
"88 55 LINE",
"88 55 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 3 16 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
0 8 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 168;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"50 127 OFFCURVE",
"41 117 OFFCURVE",
"41 105 CURVE SMOOTH",
"41 100 OFFCURVE",
"43 94 OFFCURVE",
"46 89 CURVE SMOOTH",
"65 57 OFFCURVE",
"73 30 OFFCURVE",
"73 6 CURVE SMOOTH",
"73 -34 OFFCURVE",
"49 -70 OFFCURVE",
"33 -86 CURVE",
"29 -91 OFFCURVE",
"25 -98 OFFCURVE",
"25 -105 CURVE SMOOTH",
"25 -112 OFFCURVE",
"28 -119 OFFCURVE",
"36 -124 CURVE SMOOTH",
"85 -153 LINE",
"158 -97 OFFCURVE",
"196 -31 OFFCURVE",
"196 41 CURVE SMOOTH",
"196 82 OFFCURVE",
"183 125 OFFCURVE",
"156 166 CURVE",
"63 132 LINE",
"63 132 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
0 6 1 11 
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"72.333 95 OFFCURVE",
"68 89 OFFCURVE",
"68 81 CURVE SMOOTH",
"68 77.667 OFFCURVE",
"69 74 OFFCURVE",
"71 70 CURVE SMOOTH",
"87 44.667 OFFCURVE",
"92 22.333 OFFCURVE",
"92 1 CURVE SMOOTH",
"92 -36.739 OFFCURVE",
"71.412 -71.235 OFFCURVE",
"50 -98 CURVE SMOOTH",
"46.667 -101.333 OFFCURVE",
"45 -105.333 OFFCURVE",
"45 -110 CURVE SMOOTH",
"45 -114 OFFCURVE",
"46.667 -118.333 OFFCURVE",
"52 -121 CURVE SMOOTH",
"79 -138 LINE",
"132.333 -92.667 OFFCURVE",
"163 -36.333 OFFCURVE",
"163 25 CURVE SMOOTH",
"163 57 OFFCURVE",
"154.667 89 OFFCURVE",
"136 121 CURVE",
"81 99 LINE",
"81 99 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
0 6 1 11 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
leftKerningGroup = comma;
leftMetricsKey = comma;
note = quotesinglbase;
rightKerningGroup = comma;
rightMetricsKey = comma;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"206 54 OFFCURVE",
"205 53 OFFCURVE",
"205 51 CURVE SMOOTH",
"205 50 OFFCURVE",
"206 49 OFFCURVE",
"207 46 CURVE SMOOTH",
"216 29 OFFCURVE",
"221 15 OFFCURVE",
"221 -6 CURVE SMOOTH",
"221 -39 OFFCURVE",
"205 -72 OFFCURVE",
"176 -112 CURVE SMOOTH",
"175 -113 OFFCURVE",
"175 -114 OFFCURVE",
"175 -115 CURVE SMOOTH",
"175 -116 OFFCURVE",
"175 -116 OFFCURVE",
"176 -117 CURVE SMOOTH",
"178 -119 LINE",
"207 -87 OFFCURVE",
"233 -42 OFFCURVE",
"233 3 CURVE SMOOTH",
"233 22 OFFCURVE",
"229 41 OFFCURVE",
"218 60 CURVE",
"208 55 LINE",
"208 55 LINE"
);
},
{
closed = 1;
nodes = (
"86 54 OFFCURVE",
"85 53 OFFCURVE",
"85 51 CURVE SMOOTH",
"85 50 OFFCURVE",
"86 49 OFFCURVE",
"87 46 CURVE SMOOTH",
"96 29 OFFCURVE",
"101 15 OFFCURVE",
"101 -6 CURVE SMOOTH",
"101 -39 OFFCURVE",
"85 -72 OFFCURVE",
"56 -112 CURVE SMOOTH",
"55 -113 OFFCURVE",
"55 -114 OFFCURVE",
"55 -115 CURVE SMOOTH",
"55 -116 OFFCURVE",
"55 -116 OFFCURVE",
"56 -117 CURVE SMOOTH",
"58 -119 LINE",
"87 -87 OFFCURVE",
"113 -42 OFFCURVE",
"113 3 CURVE SMOOTH",
"113 22 OFFCURVE",
"109 41 OFFCURVE",
"98 60 CURVE",
"88 55 LINE",
"88 55 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
13 24 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
0 8 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 288;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"50 127 OFFCURVE",
"41 117 OFFCURVE",
"41 105 CURVE SMOOTH",
"41 100 OFFCURVE",
"43 94 OFFCURVE",
"46 89 CURVE SMOOTH",
"65 57 OFFCURVE",
"73 30 OFFCURVE",
"73 6 CURVE SMOOTH",
"73 -34 OFFCURVE",
"49 -70 OFFCURVE",
"33 -86 CURVE",
"29 -91 OFFCURVE",
"25 -98 OFFCURVE",
"25 -105 CURVE SMOOTH",
"25 -112 OFFCURVE",
"28 -119 OFFCURVE",
"36 -124 CURVE SMOOTH",
"85 -153 LINE",
"158 -97 OFFCURVE",
"196 -31 OFFCURVE",
"196 41 CURVE SMOOTH",
"196 82 OFFCURVE",
"183 125 OFFCURVE",
"156 166 CURVE",
"63 132 LINE",
"63 132 LINE"
);
},
{
closed = 1;
nodes = (
"229 127 OFFCURVE",
"220 117 OFFCURVE",
"220 105 CURVE SMOOTH",
"220 100 OFFCURVE",
"222 94 OFFCURVE",
"225 89 CURVE SMOOTH",
"244 57 OFFCURVE",
"252 30 OFFCURVE",
"252 6 CURVE SMOOTH",
"252 -34 OFFCURVE",
"228 -70 OFFCURVE",
"212 -86 CURVE",
"208 -91 OFFCURVE",
"204 -98 OFFCURVE",
"204 -105 CURVE SMOOTH",
"204 -112 OFFCURVE",
"207 -119 OFFCURVE",
"215 -124 CURVE SMOOTH",
"264 -153 LINE",
"337 -97 OFFCURVE",
"375 -31 OFFCURVE",
"375 41 CURVE SMOOTH",
"375 82 OFFCURVE",
"362 125 OFFCURVE",
"335 166 CURVE",
"242 132 LINE",
"242 132 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
27 33 0 6 2 11 
CALL[ ]	/* CallFunction */";
};
width = 400;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"72.333 95 OFFCURVE",
"68 89 OFFCURVE",
"68 81 CURVE SMOOTH",
"68 77.667 OFFCURVE",
"69 74 OFFCURVE",
"71 70 CURVE SMOOTH",
"87 44.667 OFFCURVE",
"92 22.333 OFFCURVE",
"92 1 CURVE SMOOTH",
"92 -36.739 OFFCURVE",
"71.412 -71.235 OFFCURVE",
"50 -98 CURVE SMOOTH",
"46.667 -101.333 OFFCURVE",
"45 -105.333 OFFCURVE",
"45 -110 CURVE SMOOTH",
"45 -114 OFFCURVE",
"46.667 -118.333 OFFCURVE",
"52 -121 CURVE SMOOTH",
"79 -138 LINE",
"132.333 -92.667 OFFCURVE",
"163 -36.333 OFFCURVE",
"163 25 CURVE SMOOTH",
"163 57 OFFCURVE",
"154.667 89 OFFCURVE",
"136 121 CURVE",
"81 99 LINE",
"81 99 LINE"
);
},
{
closed = 1;
nodes = (
"224.333 95 OFFCURVE",
"220 89 OFFCURVE",
"220 81 CURVE SMOOTH",
"220 77.667 OFFCURVE",
"221 74 OFFCURVE",
"223 70 CURVE SMOOTH",
"239 44.667 OFFCURVE",
"244 22.333 OFFCURVE",
"244 1 CURVE SMOOTH",
"244 -36.739 OFFCURVE",
"223.412 -71.235 OFFCURVE",
"202 -98 CURVE SMOOTH",
"198.667 -101.333 OFFCURVE",
"197 -105.333 OFFCURVE",
"197 -110 CURVE SMOOTH",
"197 -114 OFFCURVE",
"198.667 -118.333 OFFCURVE",
"204 -121 CURVE SMOOTH",
"231 -138 LINE",
"284.333 -92.667 OFFCURVE",
"315 -36.333 OFFCURVE",
"315 25 CURVE SMOOTH",
"315 57 OFFCURVE",
"306.667 89 OFFCURVE",
"288 121 CURVE",
"233 99 LINE",
"233 99 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
25 31 0 6 2 11 
CALL[ ]	/* CallFunction */";
};
width = 360;
}
);
leftKerningGroup = comma;
leftMetricsKey = comma;
note = quotedblbase;
rightKerningGroup = comma;
rightMetricsKey = comma;
unicode = 201E;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"97 554 OFFCURVE",
"98 556 OFFCURVE",
"98 557 CURVE SMOOTH",
"98 558 OFFCURVE",
"97 559 OFFCURVE",
"96 562 CURVE SMOOTH",
"87 581 OFFCURVE",
"82 593 OFFCURVE",
"82 614 CURVE SMOOTH",
"82 647 OFFCURVE",
"98 680 OFFCURVE",
"127 720 CURVE SMOOTH",
"128 721 OFFCURVE",
"128 722 OFFCURVE",
"128 723 CURVE SMOOTH",
"128 724 OFFCURVE",
"128 724 OFFCURVE",
"127 725 CURVE SMOOTH",
"125 727 LINE",
"96 695 OFFCURVE",
"70 650 OFFCURVE",
"70 606 CURVE SMOOTH",
"70 586 OFFCURVE",
"74 568 OFFCURVE",
"85 548 CURVE",
"95 553 LINE",
"95 553 LINE"
);
},
{
closed = 1;
nodes = (
"217 554 OFFCURVE",
"218 556 OFFCURVE",
"218 557 CURVE SMOOTH",
"218 558 OFFCURVE",
"217 559 OFFCURVE",
"216 562 CURVE SMOOTH",
"207 581 OFFCURVE",
"202 593 OFFCURVE",
"202 614 CURVE SMOOTH",
"202 647 OFFCURVE",
"218 680 OFFCURVE",
"247 720 CURVE SMOOTH",
"248 721 OFFCURVE",
"248 722 OFFCURVE",
"248 723 CURVE SMOOTH",
"248 724 OFFCURVE",
"248 724 OFFCURVE",
"247 725 CURVE SMOOTH",
"245 727 LINE",
"216 695 OFFCURVE",
"190 650 OFFCURVE",
"190 606 CURVE SMOOTH",
"190 586 OFFCURVE",
"194 568 OFFCURVE",
"205 548 CURVE",
"215 553 LINE",
"215 553 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
13 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
8 0 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 318;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"201 514 OFFCURVE",
"209 524 OFFCURVE",
"209 536 CURVE SMOOTH",
"209 541 OFFCURVE",
"207 547 OFFCURVE",
"204 552 CURVE SMOOTH",
"184 584 OFFCURVE",
"177 611 OFFCURVE",
"177 635 CURVE SMOOTH",
"177 676 OFFCURVE",
"199 706 OFFCURVE",
"216 727 CURVE",
"221 731 OFFCURVE",
"225 738 OFFCURVE",
"225 746 CURVE SMOOTH",
"225 753 OFFCURVE",
"221 759 OFFCURVE",
"213 764 CURVE SMOOTH",
"164 793 LINE",
"92 738 OFFCURVE",
"54 671 OFFCURVE",
"54 600 CURVE SMOOTH",
"54 559 OFFCURVE",
"66 516 OFFCURVE",
"93 475 CURVE",
"186 509 LINE",
"186 509 LINE"
);
},
{
closed = 1;
nodes = (
"380 514 OFFCURVE",
"388 524 OFFCURVE",
"388 536 CURVE SMOOTH",
"388 541 OFFCURVE",
"386 547 OFFCURVE",
"383 552 CURVE SMOOTH",
"363 584 OFFCURVE",
"356 611 OFFCURVE",
"356 635 CURVE SMOOTH",
"356 676 OFFCURVE",
"378 706 OFFCURVE",
"395 727 CURVE",
"400 731 OFFCURVE",
"404 738 OFFCURVE",
"404 746 CURVE SMOOTH",
"404 753 OFFCURVE",
"400 759 OFFCURVE",
"392 764 CURVE SMOOTH",
"343 793 LINE",
"271 738 OFFCURVE",
"233 671 OFFCURVE",
"233 600 CURVE SMOOTH",
"233 559 OFFCURVE",
"245 516 OFFCURVE",
"272 475 CURVE",
"365 509 LINE",
"365 509 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
33 27 6 0 2 11 
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"161 531 OFFCURVE",
"165 537 OFFCURVE",
"165 545 CURVE SMOOTH",
"165 549 OFFCURVE",
"164 553 OFFCURVE",
"162 557 CURVE SMOOTH",
"146 582 OFFCURVE",
"141 605 OFFCURVE",
"141 626 CURVE SMOOTH",
"141 664 OFFCURVE",
"161 697 OFFCURVE",
"183 724 CURVE SMOOTH",
"186 727 OFFCURVE",
"188 731 OFFCURVE",
"188 736 CURVE SMOOTH",
"188 740 OFFCURVE",
"186 744 OFFCURVE",
"181 748 CURVE SMOOTH",
"154 765 LINE",
"101 718 OFFCURVE",
"69 663 OFFCURVE",
"69 603 CURVE SMOOTH",
"69 571 OFFCURVE",
"78 538 OFFCURVE",
"97 506 CURVE",
"152 528 LINE",
"152 528 LINE"
);
},
{
closed = 1;
nodes = (
"313 531 OFFCURVE",
"317 537 OFFCURVE",
"317 545 CURVE SMOOTH",
"317 549 OFFCURVE",
"316 553 OFFCURVE",
"314 557 CURVE SMOOTH",
"298 582 OFFCURVE",
"293 605 OFFCURVE",
"293 626 CURVE SMOOTH",
"293 664 OFFCURVE",
"313 697 OFFCURVE",
"335 724 CURVE SMOOTH",
"338 727 OFFCURVE",
"340 731 OFFCURVE",
"340 736 CURVE SMOOTH",
"340 740 OFFCURVE",
"338 744 OFFCURVE",
"333 748 CURVE SMOOTH",
"306 765 LINE",
"253 718 OFFCURVE",
"221 663 OFFCURVE",
"221 603 CURVE SMOOTH",
"221 571 OFFCURVE",
"230 538 OFFCURVE",
"249 506 CURVE",
"304 528 LINE",
"304 528 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
31 25 6 0 2 11 
CALL[ ]	/* CallFunction */";
};
width = 409;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = quotesingle;
note = quotedblleft;
rightKerningGroup = ordfeminine;
rightMetricsKey = quotesingle;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"222 580 OFFCURVE",
"248 623 OFFCURVE",
"248 668 CURVE SMOOTH",
"248 687 OFFCURVE",
"244 706 OFFCURVE",
"233 725 CURVE",
"223 720 LINE",
"221 719 OFFCURVE",
"220 718 OFFCURVE",
"220 716 CURVE SMOOTH",
"220 715 OFFCURVE",
"221 714 OFFCURVE",
"222 711 CURVE SMOOTH",
"231 694 OFFCURVE",
"236 680 OFFCURVE",
"236 659 CURVE SMOOTH",
"236 626 OFFCURVE",
"220 593 OFFCURVE",
"191 553 CURVE SMOOTH",
"190 552 OFFCURVE",
"190 551 OFFCURVE",
"190 551 CURVE",
"190 550 OFFCURVE",
"190 549 OFFCURVE",
"191 548 CURVE SMOOTH",
"193 546 LINE"
);
},
{
closed = 1;
nodes = (
"102 580 OFFCURVE",
"128 623 OFFCURVE",
"128 668 CURVE SMOOTH",
"128 687 OFFCURVE",
"124 706 OFFCURVE",
"113 725 CURVE",
"103 720 LINE",
"101 719 OFFCURVE",
"100 718 OFFCURVE",
"100 716 CURVE SMOOTH",
"100 715 OFFCURVE",
"101 714 OFFCURVE",
"102 711 CURVE SMOOTH",
"111 694 OFFCURVE",
"116 680 OFFCURVE",
"116 659 CURVE SMOOTH",
"116 626 OFFCURVE",
"100 593 OFFCURVE",
"71 553 CURVE SMOOTH",
"70 552 OFFCURVE",
"70 551 OFFCURVE",
"70 551 CURVE",
"70 550 OFFCURVE",
"70 549 OFFCURVE",
"71 548 CURVE SMOOTH",
"73 546 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
13 24 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
0 8 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 318;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"366 513 OFFCURVE",
"404 579 OFFCURVE",
"404 650 CURVE SMOOTH",
"404 691 OFFCURVE",
"391 733 OFFCURVE",
"364 776 CURVE",
"271 741 LINE",
"258 736 OFFCURVE",
"249 726 OFFCURVE",
"249 714 CURVE SMOOTH",
"249 709 OFFCURVE",
"251 703 OFFCURVE",
"254 698 CURVE SMOOTH",
"273 667 OFFCURVE",
"281 640 OFFCURVE",
"281 616 CURVE SMOOTH",
"281 576 OFFCURVE",
"257 540 OFFCURVE",
"241 524 CURVE",
"237 519 OFFCURVE",
"233 512 OFFCURVE",
"233 505 CURVE SMOOTH",
"233 498 OFFCURVE",
"236 491 OFFCURVE",
"244 486 CURVE SMOOTH",
"293 457 LINE"
);
},
{
closed = 1;
nodes = (
"187 513 OFFCURVE",
"225 579 OFFCURVE",
"225 650 CURVE SMOOTH",
"225 691 OFFCURVE",
"212 733 OFFCURVE",
"185 776 CURVE",
"92 741 LINE",
"79 736 OFFCURVE",
"70 726 OFFCURVE",
"70 714 CURVE SMOOTH",
"70 709 OFFCURVE",
"72 703 OFFCURVE",
"75 698 CURVE SMOOTH",
"94 667 OFFCURVE",
"102 640 OFFCURVE",
"102 616 CURVE SMOOTH",
"102 576 OFFCURVE",
"78 540 OFFCURVE",
"62 524 CURVE",
"58 519 OFFCURVE",
"54 512 OFFCURVE",
"54 505 CURVE SMOOTH",
"54 498 OFFCURVE",
"57 491 OFFCURVE",
"65 486 CURVE SMOOTH",
"114 457 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
27 33 0 6 2 11 
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"308 541 OFFCURVE",
"339 598 OFFCURVE",
"339 658 CURVE SMOOTH",
"339 690 OFFCURVE",
"331 722 OFFCURVE",
"312 754 CURVE",
"257 732 LINE",
"248 729 OFFCURVE",
"244 723 OFFCURVE",
"244 715 CURVE SMOOTH",
"244 711 OFFCURVE",
"245 707 OFFCURVE",
"247 704 CURVE SMOOTH",
"263 679 OFFCURVE",
"268 656 OFFCURVE",
"268 635 CURVE SMOOTH",
"268 597 OFFCURVE",
"247 563 OFFCURVE",
"226 536 CURVE SMOOTH",
"223 533 OFFCURVE",
"221 529 OFFCURVE",
"221 524 CURVE SMOOTH",
"221 520 OFFCURVE",
"223 516 OFFCURVE",
"228 513 CURVE SMOOTH",
"255 496 LINE"
);
},
{
closed = 1;
nodes = (
"156 541 OFFCURVE",
"187 598 OFFCURVE",
"187 658 CURVE SMOOTH",
"187 690 OFFCURVE",
"179 722 OFFCURVE",
"160 754 CURVE",
"105 732 LINE",
"96 729 OFFCURVE",
"92 723 OFFCURVE",
"92 715 CURVE SMOOTH",
"92 711 OFFCURVE",
"93 707 OFFCURVE",
"95 704 CURVE SMOOTH",
"111 679 OFFCURVE",
"116 656 OFFCURVE",
"116 635 CURVE SMOOTH",
"116 597 OFFCURVE",
"95 563 OFFCURVE",
"74 536 CURVE SMOOTH",
"71 533 OFFCURVE",
"69 529 OFFCURVE",
"69 524 CURVE SMOOTH",
"69 520 OFFCURVE",
"71 516 OFFCURVE",
"76 513 CURVE SMOOTH",
"103 496 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
25 31 0 6 2 11 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = quotesingle;
note = quotedblright;
rightKerningGroup = ordfeminine;
rightMetricsKey = quotesingle;
unicode = 201D;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"97 554 OFFCURVE",
"98 556 OFFCURVE",
"98 557 CURVE SMOOTH",
"98 558 OFFCURVE",
"97 559 OFFCURVE",
"96 562 CURVE SMOOTH",
"87 581 OFFCURVE",
"82 593 OFFCURVE",
"82 614 CURVE SMOOTH",
"82 647 OFFCURVE",
"98 680 OFFCURVE",
"127 720 CURVE SMOOTH",
"128 721 OFFCURVE",
"128 722 OFFCURVE",
"128 723 CURVE SMOOTH",
"128 724 OFFCURVE",
"128 724 OFFCURVE",
"127 725 CURVE SMOOTH",
"125 727 LINE",
"96 695 OFFCURVE",
"70 650 OFFCURVE",
"70 606 CURVE SMOOTH",
"70 586 OFFCURVE",
"74 568 OFFCURVE",
"85 548 CURVE",
"95 553 LINE",
"95 553 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
16 3 3 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
8 0 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 198;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"201 514 OFFCURVE",
"209 524 OFFCURVE",
"209 536 CURVE SMOOTH",
"209 541 OFFCURVE",
"207 547 OFFCURVE",
"204 552 CURVE SMOOTH",
"184 584 OFFCURVE",
"177 611 OFFCURVE",
"177 635 CURVE SMOOTH",
"177 676 OFFCURVE",
"199 706 OFFCURVE",
"216 727 CURVE",
"221 731 OFFCURVE",
"225 738 OFFCURVE",
"225 746 CURVE SMOOTH",
"225 753 OFFCURVE",
"221 759 OFFCURVE",
"213 764 CURVE SMOOTH",
"164 793 LINE",
"92 738 OFFCURVE",
"54 671 OFFCURVE",
"54 600 CURVE SMOOTH",
"54 559 OFFCURVE",
"66 516 OFFCURVE",
"93 475 CURVE",
"186 509 LINE",
"186 509 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
6 0 1 11 
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"161 531 OFFCURVE",
"165 537 OFFCURVE",
"165 545 CURVE SMOOTH",
"165 549 OFFCURVE",
"164 553 OFFCURVE",
"162 557 CURVE SMOOTH",
"146 582 OFFCURVE",
"141 605 OFFCURVE",
"141 626 CURVE SMOOTH",
"141 664 OFFCURVE",
"161 697 OFFCURVE",
"183 724 CURVE SMOOTH",
"186 727 OFFCURVE",
"188 731 OFFCURVE",
"188 736 CURVE SMOOTH",
"188 740 OFFCURVE",
"186 744 OFFCURVE",
"181 748 CURVE SMOOTH",
"154 765 LINE",
"101 718 OFFCURVE",
"69 663 OFFCURVE",
"69 603 CURVE SMOOTH",
"69 571 OFFCURVE",
"78 538 OFFCURVE",
"97 506 CURVE",
"152 528 LINE",
"152 528 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
6 0 1 11 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = quotesingle;
note = quoteleft;
rightKerningGroup = ordfeminine;
rightMetricsKey = quotesingle;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"101 719 OFFCURVE",
"100 718 OFFCURVE",
"100 716 CURVE SMOOTH",
"100 715 OFFCURVE",
"101 714 OFFCURVE",
"102 711 CURVE SMOOTH",
"111 694 OFFCURVE",
"116 680 OFFCURVE",
"116 659 CURVE SMOOTH",
"116 626 OFFCURVE",
"100 593 OFFCURVE",
"71 553 CURVE SMOOTH",
"70 552 OFFCURVE",
"70 551 OFFCURVE",
"70 551 CURVE",
"70 550 OFFCURVE",
"70 549 OFFCURVE",
"71 548 CURVE SMOOTH",
"73 546 LINE",
"102 580 OFFCURVE",
"128 623 OFFCURVE",
"128 668 CURVE SMOOTH",
"128 687 OFFCURVE",
"124 706 OFFCURVE",
"113 725 CURVE",
"103 720 LINE",
"103 720 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 3 16 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
0 8 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 198;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"79 736 OFFCURVE",
"70 726 OFFCURVE",
"70 714 CURVE SMOOTH",
"70 709 OFFCURVE",
"72 703 OFFCURVE",
"75 698 CURVE SMOOTH",
"94 667 OFFCURVE",
"102 640 OFFCURVE",
"102 616 CURVE SMOOTH",
"102 576 OFFCURVE",
"78 540 OFFCURVE",
"62 524 CURVE",
"58 519 OFFCURVE",
"54 512 OFFCURVE",
"54 505 CURVE SMOOTH",
"54 498 OFFCURVE",
"57 491 OFFCURVE",
"65 486 CURVE SMOOTH",
"114 457 LINE",
"187 513 OFFCURVE",
"225 579 OFFCURVE",
"225 650 CURVE SMOOTH",
"225 691 OFFCURVE",
"212 733 OFFCURVE",
"185 776 CURVE",
"92 741 LINE",
"92 741 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
0 6 1 11 
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"96 729 OFFCURVE",
"92 723 OFFCURVE",
"92 715 CURVE SMOOTH",
"92 711 OFFCURVE",
"93 707 OFFCURVE",
"95 704 CURVE SMOOTH",
"111 679 OFFCURVE",
"116 656 OFFCURVE",
"116 635 CURVE SMOOTH",
"116 597 OFFCURVE",
"95 563 OFFCURVE",
"74 536 CURVE SMOOTH",
"71 533 OFFCURVE",
"69 529 OFFCURVE",
"69 524 CURVE SMOOTH",
"69 520 OFFCURVE",
"71 516 OFFCURVE",
"76 513 CURVE SMOOTH",
"103 496 LINE",
"156 541 OFFCURVE",
"187 598 OFFCURVE",
"187 658 CURVE SMOOTH",
"187 690 OFFCURVE",
"179 722 OFFCURVE",
"160 754 CURVE",
"105 732 LINE",
"105 732 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
0 6 1 11 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = quotesingle;
note = quoteright;
rightKerningGroup = ordfeminine;
rightMetricsKey = quotesingle;
unicode = 2019;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"205 71 LINE SMOOTH",
"207 72.333 OFFCURVE",
"208 74.333 OFFCURVE",
"208 77 CURVE SMOOTH",
"208 79 OFFCURVE",
"207 81 OFFCURVE",
"206 83 CURVE SMOOTH",
"104 244 LINE SMOOTH",
"100 250 OFFCURVE",
"97 253.667 OFFCURVE",
"95 255 CURVE",
"96.333 255.667 OFFCURVE",
"100 259 OFFCURVE",
"104 266 CURVE SMOOTH",
"206 427 LINE SMOOTH",
"208 430 OFFCURVE",
"208 431.667 OFFCURVE",
"208 433 CURVE SMOOTH",
"208 435.667 OFFCURVE",
"207 437.667 OFFCURVE",
"205 439 CURVE SMOOTH",
"202 441 LINE",
"85 256 LINE",
"85 254 LINE",
"202 69 LINE",
"202 69 LINE"
);
},
{
closed = 1;
nodes = (
"315 71 LINE SMOOTH",
"317 72 OFFCURVE",
"318 74 OFFCURVE",
"318 77 CURVE SMOOTH",
"318 79 OFFCURVE",
"317 81 OFFCURVE",
"316 83 CURVE SMOOTH",
"214 244 LINE SMOOTH",
"210 250 OFFCURVE",
"207 254 OFFCURVE",
"205 255 CURVE",
"206 256 OFFCURVE",
"210 259 OFFCURVE",
"214 266 CURVE SMOOTH",
"316 427 LINE SMOOTH",
"318 430 OFFCURVE",
"318 432 OFFCURVE",
"318 433 CURVE SMOOTH",
"318 436 OFFCURVE",
"317 438 OFFCURVE",
"315 439 CURVE SMOOTH",
"312 441 LINE",
"195 256 LINE",
"195 254 LINE",
"312 69 LINE",
"312 69 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 4 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
24 4 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
2 18 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 414;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"237 85 LINE SMOOTH",
"253 91.667 OFFCURVE",
"261 102.667 OFFCURVE",
"261 116 CURVE SMOOTH",
"261 124 OFFCURVE",
"258.333 132.333 OFFCURVE",
"253 141 CURVE SMOOTH",
"193 249 LINE SMOOTH",
"187 259 OFFCURVE",
"181 266.667 OFFCURVE",
"175 272 CURVE",
"181.667 278 OFFCURVE",
"187.667 286 OFFCURVE",
"193 296 CURVE SMOOTH",
"253 403 LINE SMOOTH",
"258.333 412.333 OFFCURVE",
"261 421 OFFCURVE",
"261 429 CURVE SMOOTH",
"261 442.333 OFFCURVE",
"253 453.333 OFFCURVE",
"237 460 CURVE SMOOTH",
"186 483 LINE",
"55 282 LINE",
"55 263 LINE",
"186 62 LINE",
"186 62 LINE"
);
},
{
closed = 1;
nodes = (
"417 85 LINE SMOOTH",
"433 91.667 OFFCURVE",
"441 102.667 OFFCURVE",
"441 116 CURVE SMOOTH",
"441 124 OFFCURVE",
"438.333 132.333 OFFCURVE",
"433 141 CURVE SMOOTH",
"373 249 LINE SMOOTH",
"367 259 OFFCURVE",
"361 266.667 OFFCURVE",
"355 272 CURVE",
"361.667 278 OFFCURVE",
"367.667 286 OFFCURVE",
"373 296 CURVE SMOOTH",
"433 403 LINE SMOOTH",
"438.333 412.333 OFFCURVE",
"441 421 OFFCURVE",
"441 429 CURVE SMOOTH",
"441 442.333 OFFCURVE",
"433 453.333 OFFCURVE",
"417 460 CURVE SMOOTH",
"366 483 LINE",
"235 282 LINE",
"235 263 LINE",
"366 62 LINE",
"366 62 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
23 41 2 20 2 11 
CALL[ ]	/* CallFunction */";
};
width = 506;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"223 79 LINE SMOOTH",
"232.333 83 OFFCURVE",
"237 89.667 OFFCURVE",
"237 99 CURVE SMOOTH",
"237 104.333 OFFCURVE",
"234.667 110.667 OFFCURVE",
"232 116 CURVE SMOOTH",
"152 247 LINE SMOOTH",
"148 254.333 OFFCURVE",
"143.333 260.333 OFFCURVE",
"138 265 CURVE",
"142.667 269 OFFCURVE",
"147.333 275 OFFCURVE",
"152 283 CURVE SMOOTH",
"232 414 LINE SMOOTH",
"235.333 419.333 OFFCURVE",
"237 424.667 OFFCURVE",
"237 430 CURVE SMOOTH",
"237 439.333 OFFCURVE",
"232.333 447 OFFCURVE",
"223 451 CURVE SMOOTH",
"194 465 LINE",
"69 271 LINE",
"69 259 LINE",
"194 65 LINE",
"194 65 LINE"
);
},
{
closed = 1;
nodes = (
"371 79 LINE SMOOTH",
"380.333 83 OFFCURVE",
"385 89.667 OFFCURVE",
"385 99 CURVE SMOOTH",
"385 104.333 OFFCURVE",
"382.667 110.667 OFFCURVE",
"380 116 CURVE SMOOTH",
"300 247 LINE SMOOTH",
"296 254.333 OFFCURVE",
"291.333 260.333 OFFCURVE",
"286 265 CURVE",
"290.667 269 OFFCURVE",
"295.333 275 OFFCURVE",
"300 283 CURVE SMOOTH",
"380 414 LINE SMOOTH",
"383.333 419.333 OFFCURVE",
"385 424.667 OFFCURVE",
"385 430 CURVE SMOOTH",
"385 439.333 OFFCURVE",
"380.333 447 OFFCURVE",
"371 451 CURVE SMOOTH",
"342 465 LINE",
"217 271 LINE",
"217 259 LINE",
"342 65 LINE",
"342 65 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
23 41 2 20 2 11 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
layers = (
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, -1, 412, 510}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 4 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 3 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
21 3 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
11 8 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
31 28 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
19 2 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 414;
},
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, -1, 506, 545}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
43 24 19 0 2 11 
CALL[ ]	/* CallFunction */";
};
width = 506;
},
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, -1, 460, 530}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
37 21 16 0 2 11 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"157 69 LINE",
"160 71 LINE SMOOTH",
"164 74 OFFCURVE",
"164 79 OFFCURVE",
"161 83 CURVE SMOOTH",
"59 244 LINE SMOOTH",
"55 250 OFFCURVE",
"52 254 OFFCURVE",
"50 255 CURVE",
"51 256 OFFCURVE",
"55 259 OFFCURVE",
"59 266 CURVE SMOOTH",
"161 427 LINE SMOOTH",
"164 431 OFFCURVE",
"164 436 OFFCURVE",
"160 439 CURVE SMOOTH",
"157 441 LINE",
"40 256 LINE",
"40 254 LINE",
"157 69 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 4 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
2 18 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 233;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"143 62 LINE",
"194 85 LINE SMOOTH",
"219 96 OFFCURVE",
"225 117 OFFCURVE",
"210 141 CURVE SMOOTH",
"150 249 LINE SMOOTH",
"144 259 OFFCURVE",
"138 267 OFFCURVE",
"132 272 CURVE",
"139 278 OFFCURVE",
"145 286 OFFCURVE",
"150 296 CURVE SMOOTH",
"210 403 LINE SMOOTH",
"224 428 OFFCURVE",
"220 449 OFFCURVE",
"194 460 CURVE SMOOTH",
"143 483 LINE",
"12 282 LINE",
"12 263 LINE",
"143 62 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
2 20 1 11 
CALL[ ]	/* CallFunction */";
};
width = 236;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"166 65 LINE",
"195 79 LINE SMOOTH",
"211 86 OFFCURVE",
"212 100 OFFCURVE",
"204 116 CURVE SMOOTH",
"124 247 LINE SMOOTH",
"120 254 OFFCURVE",
"115 260 OFFCURVE",
"110 265 CURVE",
"115 269 OFFCURVE",
"119 275 OFFCURVE",
"124 283 CURVE SMOOTH",
"204 414 LINE SMOOTH",
"213 429 OFFCURVE",
"209 445 OFFCURVE",
"195 451 CURVE SMOOTH",
"166 465 LINE",
"41 271 LINE",
"41 259 LINE",
"166 65 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
2 20 1 11 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{-1, 0, 0, -1, 233, 510}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
18 3 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
16 0 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 233;
},
{
components = (
{
name = guilsinglleft;
transform = "{-1, 0, 0, -1, 236, 545}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
19 0 1 11 
CALL[ ]	/* CallFunction */";
};
width = 236;
},
{
components = (
{
name = guilsinglleft;
transform = "{-1, 0, 0, -1, 272, 530}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
18 2 1 11 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"70 553 LINE",
"71 477 LINE SMOOTH",
"71 474 OFFCURVE",
"72 473 OFFCURVE",
"75 473 CURVE SMOOTH",
"78 473 OFFCURVE",
"79 474 OFFCURVE",
"79 477 CURVE SMOOTH",
"80 553 LINE",
"80 700 LINE",
"70 700 LINE",
"70 700 LINE"
);
},
{
closed = 1;
nodes = (
"197 553 LINE",
"198 477 LINE SMOOTH",
"198 474 OFFCURVE",
"199 473 OFFCURVE",
"202 473 CURVE SMOOTH",
"205 473 OFFCURVE",
"206 474 OFFCURVE",
"206 477 CURVE SMOOTH",
"207 553 LINE",
"207 700 LINE",
"197 700 LINE",
"197 700 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 277;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"54 586 LINE",
"68 507 LINE SMOOTH",
"75 471 OFFCURVE",
"92 451 OFFCURVE",
"121 451 CURVE SMOOTH",
"157 451 OFFCURVE",
"170 471 OFFCURVE",
"175 507 CURVE SMOOTH",
"189 586 LINE",
"189 729 LINE",
"54 729 LINE",
"54 729 LINE"
);
},
{
closed = 1;
nodes = (
"254 586 LINE",
"268 507 LINE SMOOTH",
"275 471 OFFCURVE",
"292 451 OFFCURVE",
"321 451 CURVE SMOOTH",
"357 451 OFFCURVE",
"370 471 OFFCURVE",
"375 507 CURVE SMOOTH",
"389 586 LINE",
"389 729 LINE",
"254 729 LINE",
"254 729 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
11 11 0 0 11 21 11 21 17 15 0 10 0 10 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
20 12 9 1 4 0 1 1 30 2 1 0 0 1 0 0 36 5 3 4 3 1 1 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
20 12 9 1 4 0 1 1 30 5 3 4 3 1 0 0 1 0 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
20 12 9 1 4 2 3 1 30 4 1 1 3 0 1 0 0 35 5 1 3 0 2 0 3 2 1 0 38 4 1 1 1 0 1 0 36 0 0 1 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 443;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"69 572 LINE",
"77 494 LINE",
"81 473 OFFCURVE",
"91 461 OFFCURVE",
"108 461 CURVE SMOOTH",
"128 461 OFFCURVE",
"136 473 OFFCURVE",
"139 494 CURVE SMOOTH",
"147 572 LINE",
"147 717 LINE",
"69 717 LINE",
"69 717 LINE"
);
},
{
closed = 1;
nodes = (
"236 572 LINE",
"244 494 LINE",
"248 473 OFFCURVE",
"257 461 OFFCURVE",
"274 461 CURVE SMOOTH",
"295 461 OFFCURVE",
"304 473 OFFCURVE",
"305 494 CURVE SMOOTH",
"313 572 LINE",
"313 717 LINE",
"236 717 LINE",
"236 717 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
11 11 0 0 11 21 11 21 17 15 0 10 0 10 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
20 12 9 1 4 0 1 1 30 2 1 0 0 1 0 0 36 5 3 4 3 1 1 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
20 12 9 1 4 0 1 1 30 5 3 4 3 1 0 0 1 0 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
20 12 9 1 4 2 3 1 30 4 1 1 3 0 1 0 0 35 5 1 3 0 2 0 3 2 1 0 38 4 1 1 1 0 1 0 36 0 0 1 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 382;
}
);
leftKerningGroup = ordfeminine;
leftMetricsKey = quotesingle;
note = quotedbl;
rightKerningGroup = ordfeminine;
rightMetricsKey = quotesingle;
unicode = 0022;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"78 473 OFFCURVE",
"79 474 OFFCURVE",
"79 477 CURVE SMOOTH",
"80 553 LINE",
"80 700 LINE",
"70 700 LINE",
"70 553 LINE",
"71 477 LINE SMOOTH",
"71 474 OFFCURVE",
"72 473 OFFCURVE",
"75 473 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 4 7 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 150;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"157 451 OFFCURVE",
"170 471 OFFCURVE",
"175 507 CURVE SMOOTH",
"189 586 LINE",
"189 729 LINE",
"54 729 LINE",
"54 586 LINE",
"68 507 LINE SMOOTH",
"75 471 OFFCURVE",
"92 451 OFFCURVE",
"121 451 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 10 0 10 6 4 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
9 1 2 0 1 1 30 0 0 0 1 0 0 36 2 1 1 1 11 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
9 1 2 0 1 1 30 2 1 1 0 0 1 0 0 35 2 1 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 243;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"128 461 OFFCURVE",
"136 473 OFFCURVE",
"139 494 CURVE SMOOTH",
"147 572 LINE",
"147 717 LINE",
"69 717 LINE",
"69 572 LINE",
"77 494 LINE",
"81 473 OFFCURVE",
"91 461 OFFCURVE",
"108 461 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 10 0 10 6 4 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
9 1 2 0 1 1 30 0 0 0 1 0 0 36 2 1 1 1 11 0 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
9 1 2 0 1 1 30 2 1 1 0 0 1 0 0 35 2 1 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 216;
}
);
leftKerningGroup = ordfeminine;
note = quotesingle;
rightKerningGroup = ordfeminine;
unicode = 0027;
},
{
glyphname = space;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 270;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 235;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 260;
}
);
note = space;
unicode = 0020;
},
{
glyphname = uni00A0;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 193;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 193;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 193;
}
);
note = uni00A0;
unicode = 00A0;
},
{
glyphname = nonmarkingreturn;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 600;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 600;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 600;
}
);
note = nonmarkingreturn;
unicode = 000D;
},
{
glyphname = .notdef;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"158 558 OFFCURVE",
"159 558 OFFCURVE",
"160 558 CURVE SMOOTH",
"168 558 OFFCURVE",
"222 603 OFFCURVE",
"263 603 CURVE SMOOTH",
"319 603 OFFCURVE",
"368 566 OFFCURVE",
"368 509 CURVE SMOOTH",
"368 461 OFFCURVE",
"341 428 OFFCURVE",
"309 405 CURVE SMOOTH",
"280 385 OFFCURVE",
"249 364 OFFCURVE",
"249 337 CURVE SMOOTH",
"249 274 LINE",
"257 274 LINE",
"259 336 LINE SMOOTH",
"261 360 OFFCURVE",
"293 381 OFFCURVE",
"321 402 CURVE SMOOTH",
"352 425 OFFCURVE",
"380 461 OFFCURVE",
"380 510 CURVE SMOOTH",
"380 573 OFFCURVE",
"324 613 OFFCURVE",
"263 613 CURVE SMOOTH",
"215 613 OFFCURVE",
"180 590 OFFCURVE",
"154 564 CURVE",
"157 559 LINE",
"157 559 LINE"
);
},
{
closed = 1;
nodes = (
"228 121 LINE",
"228 108 OFFCURVE",
"238 96 OFFCURVE",
"253 96 CURVE SMOOTH",
"266 96 OFFCURVE",
"277 108 OFFCURVE",
"277 121 CURVE SMOOTH",
"277 134 OFFCURVE",
"266 146 OFFCURVE",
"253 146 CURVE SMOOTH",
"238 146 OFFCURVE",
"228 134 OFFCURVE",
"228 121 CURVE"
);
},
{
closed = 1;
nodes = (
"489 0 LINE",
"489 700 LINE",
"42 700 LINE",
"42 0 LINE",
"42 0 LINE"
);
},
{
closed = 1;
nodes = (
"479 690 LINE",
"479 10 LINE",
"52 10 LINE",
"52 690 LINE",
"52 690 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
59 4 52 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
54 4 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
46 40 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
19 40 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
18 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
43 49 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 2 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
56 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
58 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 531;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"163 501 OFFCURVE",
"173 495 OFFCURVE",
"188 495 CURVE SMOOTH",
"208 495 OFFCURVE",
"236 511 OFFCURVE",
"263 511 CURVE SMOOTH",
"287 511 OFFCURVE",
"294 500 OFFCURVE",
"294 484 CURVE SMOOTH",
"294 457 OFFCURVE",
"268 435 OFFCURVE",
"246 419 CURVE SMOOTH",
"220 401 OFFCURVE",
"201 378 OFFCURVE",
"209 342 CURVE SMOOTH",
"220 286 LINE",
"326 286 LINE",
"339 331 LINE SMOOTH",
"344 348 OFFCURVE",
"374 370 OFFCURVE",
"393 387 CURVE SMOOTH",
"418 408 OFFCURVE",
"437 445 OFFCURVE",
"437 494 CURVE SMOOTH",
"437 579 OFFCURVE",
"376 632 OFFCURVE",
"277 632 CURVE SMOOTH",
"206 632 OFFCURVE",
"156 608 OFFCURVE",
"115 576 CURVE",
"156 513 LINE",
"156 513 LINE"
);
},
{
closed = 1;
nodes = (
"187 166 LINE",
"187 122 OFFCURVE",
"222 88 OFFCURVE",
"268 88 CURVE SMOOTH",
"312 88 OFFCURVE",
"347 122 OFFCURVE",
"347 166 CURVE SMOOTH",
"347 209 OFFCURVE",
"312 244 OFFCURVE",
"268 244 CURVE SMOOTH",
"221 244 OFFCURVE",
"187 210 OFFCURVE",
"187 166 CURVE"
);
},
{
closed = 1;
nodes = (
"542 0 LINE",
"542 729 LINE",
"20 729 LINE",
"20 0 LINE",
"20 0 LINE"
);
},
{
closed = 1;
nodes = (
"498 689 LINE",
"498 40 LINE",
"59 40 LINE",
"59 689 LINE",
"59 689 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
63 62 61 60 59 58 57 56 52 50 42 40 34 32 29 27 17 16 4 2 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 2 0 1 30 0 1 2 4 2 1 4 50 0 0 3 1 2 1 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 9 9 6 0 0 36 0 6 6 11 31 0 8 8 7 0 0 36 0 7 7 12 7 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 0 0 2 3 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 9 9 6 0 0 36 0 6 6 11 31 0 8 8 7 0 0 36 0 7 7 12 7 32 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 6 0 9 0 6 9 0 0 38 0 0 0 2 3 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 8 7 7 8 0 0 35 0 8 8 7 0 0 36 0 7 8 7 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"163 526 OFFCURVE",
"169 522 OFFCURVE",
"177 522 CURVE SMOOTH",
"191 522 OFFCURVE",
"233 551 OFFCURVE",
"265 551 CURVE SMOOTH",
"304 551 OFFCURVE",
"330 530 OFFCURVE",
"330 495 CURVE SMOOTH",
"330 458 OFFCURVE",
"304 433 OFFCURVE",
"277 413 CURVE SMOOTH",
"250 393 OFFCURVE",
"225 372 OFFCURVE",
"229 339 CURVE SMOOTH",
"235 281 LINE",
"296 281 LINE",
"305 333 LINE SMOOTH",
"309 355 OFFCURVE",
"338 374 OFFCURVE",
"362 393 CURVE SMOOTH",
"390 416 OFFCURVE",
"413 451 OFFCURVE",
"413 501 CURVE SMOOTH",
"413 576 OFFCURVE",
"353 624 OFFCURVE",
"273 624 CURVE SMOOTH",
"214 624 OFFCURVE",
"170 601 OFFCURVE",
"135 571 CURVE",
"159 533 LINE",
"159 533 LINE"
);
},
{
closed = 1;
nodes = (
"208 146 LINE",
"208 115 OFFCURVE",
"231 91 OFFCURVE",
"263 91 CURVE SMOOTH",
"293 91 OFFCURVE",
"317 117 OFFCURVE",
"317 146 CURVE SMOOTH",
"317 176 OFFCURVE",
"293 202 OFFCURVE",
"263 202 CURVE SMOOTH",
"231 202 OFFCURVE",
"208 178 OFFCURVE",
"208 146 CURVE"
);
},
{
closed = 1;
nodes = (
"520 0 LINE",
"520 717 LINE",
"33 717 LINE",
"33 0 LINE",
"33 0 LINE"
);
},
{
closed = 1;
nodes = (
"491 689 LINE",
"491 27 LINE",
"58 27 LINE",
"58 689 LINE",
"58 689 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
61 60 59 58 57 56 55 54 52 50 42 40 36 34 31 29 19 18 6 4 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 0 0 2 3 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 9 9 6 0 0 36 0 6 6 11 31 0 8 8 7 0 0 36 0 7 7 12 7 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 6 0 9 0 6 9 0 0 38 0 0 0 2 3 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 8 8 7 0 0 36 0 7 7 15 7 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 1 2 0 1 30 0 3 2 1 2 3 1 50 0 1 4 2 1 4 48 0 6 0 9 0 6 9 0 0 38 0 0 0 2 3 0 2 1 0 38 0 4 0 5 8 4 5 1 0 38 0 8 7 7 8 0 0 35 0 8 8 7 0 0 36 0 7 8 7 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
leftMetricsKey = H;
note = ".notdef";
rightMetricsKey = H;
},
{
glyphname = .null;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 600;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 600;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 600;
}
);
note = ".null";
},
{
glyphname = Euro;
layers = (
{
components = (
{
name = C;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"479 406 LINE SMOOTH",
"485 406 OFFCURVE",
"486 408 OFFCURVE",
"486 412 CURVE SMOOTH",
"486 416 LINE",
"20 416 LINE",
"20 406 LINE"
);
},
{
closed = 1;
nodes = (
"464 292 LINE SMOOTH",
"469 292 OFFCURVE",
"471 294 OFFCURVE",
"471 298 CURVE SMOOTH",
"471 302 LINE",
"20 302 LINE",
"20 292 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
35 3 72 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
11 2 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
54 2 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
38 1 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
27 1 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 688;
},
{
components = (
{
name = C;
transform = "{1, 0, 0, 1, 67, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"465 393 LINE SMOOTH",
"489 393 OFFCURVE",
"507 410 OFFCURVE",
"507 429 CURVE SMOOTH",
"507 475 LINE",
"10 475 LINE",
"10 393 LINE"
);
},
{
closed = 1;
nodes = (
"437 265 LINE SMOOTH",
"461 265 OFFCURVE",
"479 282 OFFCURVE",
"479 301 CURVE SMOOTH",
"479 347 LINE",
"10 347 LINE",
"10 265 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
71 70 66 65 64 63 59 57 52 50 45 43 41 39 34 33 29 27 22 21 19 17 14 12 7 5 1 0 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 8 8 10 1 0 36 0 10 10 18 10 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 0 0 0 13 5 0 13 0 0 38 0 4 0 5 6 4 5 1 0 38 0 12 0 11 7 12 11 0 0 38 0 6 0 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 735;
},
{
components = (
{
name = C;
transform = "{1, 0, 0, 1, 45, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"479 399 LINE SMOOTH",
"495 399 OFFCURVE",
"504 410 OFFCURVE",
"504 422 CURVE SMOOTH",
"504 450 LINE",
"15 450 LINE",
"15 399 LINE"
);
},
{
closed = 1;
nodes = (
"452 277 LINE SMOOTH",
"468 277 OFFCURVE",
"478 288 OFFCURVE",
"478 300 CURVE SMOOTH",
"478 328 LINE",
"15 328 LINE",
"15 277 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
71 70 64 63 62 61 57 55 50 48 43 41 39 37 34 33 27 25 22 21 19 17 14 12 7 5 1 0 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 8 8 10 1 0 36 0 10 10 18 10 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 8 10 1 0 36 0 10 10 21 10 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 0 0 0 13 5 0 13 0 0 38 0 4 0 5 6 4 5 1 0 38 0 12 0 11 7 12 11 0 0 38 0 6 0 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 714;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "059F7850-3715-4C8E-AB80-DC2E928C5839";
name = "Jan 27 23, 16:54";
paths = (
{
closed = 1;
nodes = (
"103 406 LINE",
"101.667 388.667 OFFCURVE",
"101 370 OFFCURVE",
"101 350 CURVE SMOOTH",
"101 333.333 OFFCURVE",
"101.667 317.333 OFFCURVE",
"103 302 CURVE",
"14 302 LINE",
"14 292 LINE",
"103 292 LINE",
"111 194.667 OFFCURVE",
"139.833 119.667 OFFCURVE",
"184.5 69 CURVE SMOOTH",
"229.167 18.333 OFFCURVE",
"290.667 -8 OFFCURVE",
"364 -8 CURVE SMOOTH",
"454.472 -8 OFFCURVE",
"516.061 30.738 OFFCURVE",
"566 89 CURVE",
"564 91 LINE SMOOTH",
"562 93 OFFCURVE",
"560.333 94 OFFCURVE",
"559 94 CURVE SMOOTH",
"555.057 94 OFFCURVE",
"525.574 62.13 OFFCURVE",
"508.5 48 CURVE SMOOTH",
"478.643 23.291 OFFCURVE",
"424.013 2 OFFCURVE",
"365 2 CURVE SMOOTH",
"295.667 2 OFFCURVE",
"236.833 27.833 OFFCURVE",
"193.5 76.5 CURVE SMOOTH",
"150.167 125.167 OFFCURVE",
"124 197.333 OFFCURVE",
"116 292 CURVE",
"388 292 LINE SMOOTH",
"392.667 292 OFFCURVE",
"395 294 OFFCURVE",
"395 298 CURVE SMOOTH",
"395 302 LINE",
"115 302 LINE",
"113.667 317.333 OFFCURVE",
"113 333.333 OFFCURVE",
"113 350 CURVE SMOOTH",
"113 370 OFFCURVE",
"113.667 388.667 OFFCURVE",
"115 406 CURVE",
"433 406 LINE SMOOTH",
"439.667 406 OFFCURVE",
"440 408 OFFCURVE",
"440 412 CURVE SMOOTH",
"440 416 LINE",
"116 416 LINE",
"134.055 591.389 OFFCURVE",
"221.296 697 OFFCURVE",
"367 697 CURVE SMOOTH",
"422.398 697 OFFCURVE",
"473.7 680.333 OFFCURVE",
"502.5 659 CURVE SMOOTH",
"512.357 651.698 OFFCURVE",
"547.867 620 OFFCURVE",
"548 620 CURVE SMOOTH",
"550 620 OFFCURVE",
"551.333 620.667 OFFCURVE",
"552 622 CURVE SMOOTH",
"554 625 LINE",
"503.317 681.018 OFFCURVE",
"447.255 707 OFFCURVE",
"367 707 CURVE SMOOTH",
"292.333 707 OFFCURVE",
"231.167 680.5 OFFCURVE",
"186.5 630.5 CURVE SMOOTH",
"141.833 580.5 OFFCURVE",
"113.333 508 OFFCURVE",
"104 416 CURVE",
"14 416 LINE",
"14 406 LINE",
"14 406 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
35 3 72 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
62 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
11 2 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
54 2 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
38 1 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
27 1 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "E3636851-E79C-4946-8EEF-3BAE902550E4";
name = "Jan 27 23, 16:54";
paths = (
{
closed = 1;
nodes = (
"85 399 LINE",
"84.333 392.333 OFFCURVE",
"84 385.5 OFFCURVE",
"84 378.5 CURVE SMOOTH",
"84 371.5 OFFCURVE",
"84 364.667 OFFCURVE",
"84 358 CURVE SMOOTH",
"84 352.667 OFFCURVE",
"84 347.5 OFFCURVE",
"84 342.5 CURVE SMOOTH",
"84 337.5 OFFCURVE",
"84 332.667 OFFCURVE",
"84 328 CURVE",
"17 328 LINE",
"17 277 LINE",
"88 277 LINE",
"108.75 105.815 OFFCURVE",
"203.674 -8 OFFCURVE",
"359 -8 CURVE SMOOTH",
"453.667 -8 OFFCURVE",
"522.333 32 OFFCURVE",
"569 100 CURVE",
"532 135 LINE SMOOTH",
"526.667 140.333 OFFCURVE",
"523.333 142 OFFCURVE",
"518 142 CURVE SMOOTH",
"506.969 142 OFFCURVE",
"488.384 120.871 OFFCURVE",
"472.5 106.5 CURVE SMOOTH",
"449.547 85.733 OFFCURVE",
"411.508 71 OFFCURVE",
"364 71 CURVE SMOOTH",
"266.667 71 OFFCURVE",
"199.667 139.667 OFFCURVE",
"181 277 CURVE",
"384 277 LINE SMOOTH",
"400 277 OFFCURVE",
"410 288 OFFCURVE",
"410 300 CURVE SMOOTH",
"410 328 LINE",
"176 328 LINE",
"176 332.667 OFFCURVE",
"176 337.5 OFFCURVE",
"176 342.5 CURVE SMOOTH",
"176 347.5 OFFCURVE",
"176 352.667 OFFCURVE",
"176 358 CURVE SMOOTH",
"176 365.333 OFFCURVE",
"176 372.333 OFFCURVE",
"176 379 CURVE SMOOTH",
"176 385.667 OFFCURVE",
"176.333 392.333 OFFCURVE",
"177 399 CURVE",
"431 399 LINE SMOOTH",
"447 399 OFFCURVE",
"456 410 OFFCURVE",
"456 422 CURVE SMOOTH",
"456 450 LINE",
"183 450 LINE",
"204.333 578 OFFCURVE",
"270.667 646 OFFCURVE",
"368 646 CURVE SMOOTH",
"424.575 646 OFFCURVE",
"493.577 585 OFFCURVE",
"512 585 CURVE SMOOTH",
"521.333 585 OFFCURVE",
"525.667 589.333 OFFCURVE",
"531 596 CURVE SMOOTH",
"562 630 LINE",
"515.333 688.667 OFFCURVE",
"454.333 724 OFFCURVE",
"365 724 CURVE SMOOTH",
"216.975 724 OFFCURVE",
"117.009 613.859 OFFCURVE",
"91 450 CURVE",
"17 450 LINE",
"17 399 LINE",
"17 399 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
71 70 64 63 62 61 57 55 50 48 43 41 39 37 34 33 27 25 22 21 19 17 14 12 7 5 1 0 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 8 8 10 1 0 36 0 10 10 18 10 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 8 10 1 0 36 0 10 10 21 10 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
9 1 2 3 53 1 8 9 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 0 0 0 13 5 0 13 0 0 38 0 4 0 5 6 4 5 1 0 38 0 12 0 11 7 12 11 0 0 38 0 6 0 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "9E3F102B-0933-406E-B653-4E1B22CA7074";
name = "Jan 27 23, 16:54";
paths = (
{
closed = 1;
nodes = (
"70 393 LINE",
"69.333 388.333 OFFCURVE",
"69 383.667 OFFCURVE",
"69 379 CURVE SMOOTH",
"69 374.333 OFFCURVE",
"69 369.667 OFFCURVE",
"69 365 CURVE SMOOTH",
"69 347 LINE",
"20 347 LINE",
"20 265 LINE",
"77 265 LINE",
"100.765 103.924 OFFCURVE",
"197.152 -7 OFFCURVE",
"354 -7 CURVE SMOOTH",
"450 -7 OFFCURVE",
"526.667 33.333 OFFCURVE",
"572 108 CURVE",
"504 169 LINE SMOOTH",
"497.333 175.667 OFFCURVE",
"491.333 178 OFFCURVE",
"482 178 CURVE SMOOTH",
"467.341 178 OFFCURVE",
"454.288 163.288 OFFCURVE",
"441.5 150.5 CURVE SMOOTH",
"426.696 135.696 OFFCURVE",
"397.358 122 OFFCURVE",
"362 122 CURVE SMOOTH",
"299.333 122 OFFCURVE",
"254.333 167.667 OFFCURVE",
"237 265 CURVE",
"380 265 LINE SMOOTH",
"403.653 265 OFFCURVE",
"422 282.259 OFFCURVE",
"422 301 CURVE SMOOTH",
"422 347 LINE",
"229 347 LINE",
"229 365 LINE SMOOTH",
"229 369.667 OFFCURVE",
"229 374.333 OFFCURVE",
"229 379 CURVE SMOOTH",
"229 383.667 OFFCURVE",
"229.333 388.333 OFFCURVE",
"230 393 CURVE",
"428 393 LINE SMOOTH",
"451.653 393 OFFCURVE",
"470 410.259 OFFCURVE",
"470 429 CURVE SMOOTH",
"470 475 LINE",
"240 475 LINE",
"261.333 561.667 OFFCURVE",
"306.333 607 OFFCURVE",
"369 607 CURVE SMOOTH",
"421.214 607 OFFCURVE",
"453.269 558 OFFCURVE",
"481 558 CURVE SMOOTH",
"495.667 558 OFFCURVE",
"504.333 566 OFFCURVE",
"511 574 CURVE SMOOTH",
"568 633 LINE",
"526.667 694.333 OFFCURVE",
"456.667 736 OFFCURVE",
"362 736 CURVE SMOOTH",
"219.041 736 OFFCURVE",
"114.038 629.481 OFFCURVE",
"80 475 CURVE",
"20 475 LINE",
"20 393 LINE",
"20 393 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
71 70 66 65 64 63 59 57 52 50 45 43 41 39 34 33 29 27 22 21 19 17 14 12 7 5 1 0 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 8 8 10 1 0 36 0 10 10 18 10 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 4 1 0 13 1 5 6 0 5 1 0 38 12 1 6 11 1 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
9 1 3 1 55 1 10 8 2 30 0 2 3 0 3 2 0 50 0 9 7 8 7 9 8 50 0 1 0 3 2 1 3 1 0 38 0 0 0 13 5 0 13 0 0 38 0 4 0 5 6 4 5 1 0 38 0 12 0 11 7 12 11 0 0 38 0 6 0 7 9 6 7 1 0 38 0 8 10 10 8 1 0 35 0 8 8 10 1 0 36 0 10 8 10 1 0 33 11 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = Euro;
rightMetricsKey = C;
unicode = 20AC;
},
{
glyphname = cent;
layers = (
{
components = (
{
name = c;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"242 -134 LINE SMOOTH",
"246 -134 OFFCURVE",
"248 -131 OFFCURVE",
"248 -126 CURVE SMOOTH",
"273 621 LINE",
"268 621 LINE SMOOTH",
"264 621 OFFCURVE",
"262 618 OFFCURVE",
"262 613 CURVE SMOOTH",
"237 -134 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
45 3 5 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
18 2 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
32 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
},
{
components = (
{
name = c;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"247 -106 LINE SMOOTH",
"271 -106 OFFCURVE",
"286 -88 OFFCURVE",
"288 -69 CURVE SMOOTH",
"359 632 LINE",
"302 632 LINE SMOOTH",
"279 632 OFFCURVE",
"263 614 OFFCURVE",
"261 595 CURVE SMOOTH",
"190 -106 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
48 46 35 33 24 22 15 13 10 9 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
53 19 16 3 2 0 52 38 29 0 4 4 3 2 30 0 1 0 1 52 0 2 0 3 0 2 3 50 0 3 4 0 3 4 48 0 4 4 0 1 0 36 0 0 0 20 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
53 19 16 3 2 0 52 38 29 0 4 4 3 2 30 0 1 0 1 52 0 2 0 3 0 2 3 50 0 3 4 0 3 4 48 0 0 2 4 0 1 0 35 0 0 0 4 1 0 36 0 4 0 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
components = (
{
name = c;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"245 -118 LINE SMOOTH",
"260 -118 OFFCURVE",
"269 -106 OFFCURVE",
"270 -94 CURVE SMOOTH",
"320 627 LINE",
"287 627 LINE SMOOTH",
"272 627 OFFCURVE",
"263 616 OFFCURVE",
"262 603 CURVE SMOOTH",
"212 -118 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
46 44 41 40 35 33 30 29 24 22 15 13 10 9 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
11 1 0 1 51 28 19 16 4 2 0 50 38 2 3 4 42 0 2 6 5 4 30 0 1 0 1 52 0 2 0 4 0 2 4 50 0 4 3 0 4 3 48 0 3 3 5 1 2 36 0 5 5 21 31 0 6 6 0 1 0 36 0 0 0 20 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
11 1 0 1 51 28 19 16 4 2 0 50 38 2 3 4 42 0 2 6 5 4 30 0 1 0 1 52 0 2 0 4 0 2 4 50 0 4 3 0 4 3 48 0 3 3 5 1 2 36 0 5 5 18 31 0 6 6 0 1 0 36 0 0 0 20 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
11 1 0 1 51 28 19 16 4 2 0 50 38 2 3 4 42 0 2 6 5 4 30 0 1 0 1 52 0 2 0 4 0 2 4 50 0 4 3 0 4 3 48 0 3 3 5 1 2 36 0 5 5 21 31 0 6 6 0 1 0 36 0 0 0 20 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
11 1 0 1 51 28 19 16 4 2 0 50 38 2 3 4 42 0 2 6 5 4 30 0 1 0 1 52 0 2 0 4 0 2 4 50 0 4 3 0 4 3 48 0 0 0 6 0 6 1 0 37 0 3 3 5 1 2 36 0 5 5 21 5 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
11 1 0 1 51 28 19 16 4 2 0 50 38 2 3 4 42 0 2 6 5 4 30 0 1 0 1 52 0 2 0 4 0 2 4 50 0 4 3 0 4 3 48 0 0 2 6 0 1 0 35 0 3 0 5 6 3 5 1 2 38 0 0 0 6 1 0 36 0 6 0 6 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
leftKerningGroup = c;
leftMetricsKey = c;
note = cent;
rightMetricsKey = c;
unicode = 00A2;
},
{
glyphname = currency;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"98 335 LINE",
"98 291 OFFCURVE",
"115 253 OFFCURVE",
"143 222 CURVE",
"64 143 LINE",
"71 136 LINE",
"150 215 LINE",
"181 187 OFFCURVE",
"219 170 OFFCURVE",
"263 170 CURVE SMOOTH",
"307 170 OFFCURVE",
"346 187 OFFCURVE",
"377 215 CURVE",
"455 136 LINE",
"462 143 LINE",
"384 222 LINE",
"412 251 OFFCURVE",
"429 291 OFFCURVE",
"429 335 CURVE SMOOTH",
"429 379 OFFCURVE",
"412 420 OFFCURVE",
"384 449 CURVE",
"462 527 LINE",
"455 534 LINE",
"377 456 LINE",
"348 484 OFFCURVE",
"307 501 OFFCURVE",
"263 501 CURVE SMOOTH",
"219 501 OFFCURVE",
"179 484 OFFCURVE",
"150 456 CURVE",
"71 534 LINE",
"64 527 LINE",
"143 449 LINE",
"115 418 OFFCURVE",
"98 379 OFFCURVE",
"98 335 CURVE"
);
},
{
closed = 1;
nodes = (
"108 335 LINE",
"108 421 OFFCURVE",
"179 491 OFFCURVE",
"263 491 CURVE SMOOTH",
"349 491 OFFCURVE",
"419 421 OFFCURVE",
"419 335 CURVE SMOOTH",
"419 251 OFFCURVE",
"349 180 OFFCURVE",
"263 180 CURVE SMOOTH",
"179 180 OFFCURVE",
"108 251 OFFCURVE",
"108 335 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
36 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
46 4 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
41 1 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 1 51 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"98 337 LINE",
"98 304 OFFCURVE",
"107 272 OFFCURVE",
"122 244 CURVE",
"46 169 LINE",
"123 94 LINE",
"200 169 LINE",
"227 156 OFFCURVE",
"256 148 OFFCURVE",
"288 148 CURVE SMOOTH",
"321 148 OFFCURVE",
"352 156 OFFCURVE",
"380 171 CURVE",
"455 97 LINE",
"533 172 LINE",
"456 248 LINE",
"471 275 OFFCURVE",
"478 305 OFFCURVE",
"478 337 CURVE SMOOTH",
"478 372 OFFCURVE",
"469 402 OFFCURVE",
"454 430 CURVE",
"530 505 LINE",
"453 580 LINE",
"377 504 LINE",
"350 519 OFFCURVE",
"320 526 OFFCURVE",
"288 526 CURVE SMOOTH",
"255 526 OFFCURVE",
"224 518 OFFCURVE",
"196 503 CURVE",
"121 577 LINE",
"43 503 LINE",
"120 427 LINE",
"107 400 OFFCURVE",
"98 370 OFFCURVE",
"98 337 CURVE"
);
},
{
closed = 1;
nodes = (
"212 337 LINE",
"212 380 OFFCURVE",
"246 418 OFFCURVE",
"288 418 CURVE SMOOTH",
"331 418 OFFCURVE",
"365 381 OFFCURVE",
"365 337 CURVE SMOOTH",
"365 293 OFFCURVE",
"331 258 OFFCURVE",
"288 258 CURVE SMOOTH",
"246 258 OFFCURVE",
"212 294 OFFCURVE",
"212 337 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
52 50 42 40 28 26 10 8 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
15 14 12 6 4 3 6 3 0 33 32 30 24 22 21 6 1 2 2 30 13 5 2 0 28 31 23 2 1 27 0 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 0 0 0 20 3 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
15 14 12 6 4 3 6 3 0 33 32 30 24 22 21 6 1 2 2 30 13 5 2 0 28 31 23 2 1 27 0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"99 336 LINE",
"99 297 OFFCURVE",
"111 263 OFFCURVE",
"131 234 CURVE",
"55 158 LINE",
"100 112 LINE",
"176 189 LINE",
"205 169 OFFCURVE",
"240 158 OFFCURVE",
"277 158 CURVE SMOOTH",
"316 158 OFFCURVE",
"351 170 OFFCURVE",
"380 190 CURVE",
"456 114 LINE",
"501 160 LINE",
"425 235 LINE",
"445 264 OFFCURVE",
"456 299 OFFCURVE",
"456 336 CURVE SMOOTH",
"456 375 OFFCURVE",
"444 410 OFFCURVE",
"424 439 CURVE",
"499 515 LINE",
"455 560 LINE",
"378 484 LINE",
"350 504 OFFCURVE",
"316 515 OFFCURVE",
"277 515 CURVE SMOOTH",
"238 515 OFFCURVE",
"203 503 OFFCURVE",
"174 483 CURVE",
"99 559 LINE",
"53 514 LINE",
"130 437 LINE",
"110 408 OFFCURVE",
"99 375 OFFCURVE",
"99 336 CURVE"
);
},
{
closed = 1;
nodes = (
"165 336 LINE",
"165 400 OFFCURVE",
"214 449 OFFCURVE",
"277 449 CURVE SMOOTH",
"340 449 OFFCURVE",
"391 400 OFFCURVE",
"391 336 CURVE SMOOTH",
"391 275 OFFCURVE",
"339 224 OFFCURVE",
"277 224 CURVE SMOOTH",
"215 224 OFFCURVE",
"165 275 OFFCURVE",
"165 336 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
52 50 42 40 28 26 10 8 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
14 12 6 4 4 3 0 33 21 15 3 4 2 3 30 24 22 3 1 2 3 30 13 5 2 0 28 32 31 23 3 1 27 0 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 0 0 0 20 3 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
14 12 6 4 4 3 0 33 21 15 3 4 2 3 30 24 22 3 1 2 3 30 13 5 2 0 28 32 31 23 3 1 27 0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = dollar;
layers = (
{
components = (
{
name = S;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"252 -137 LINE SMOOTH",
"256 -137 OFFCURVE",
"258 -134 OFFCURVE",
"258 -129 CURVE SMOOTH",
"291 809 LINE",
"286 809 LINE SMOOTH",
"282 809 OFFCURVE",
"280 806 OFFCURVE",
"280 801 CURVE SMOOTH",
"247 -137 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
59 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
64 22 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
70 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
75 22 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
35 2 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 2 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
16 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
76 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 515;
},
{
components = (
{
name = S;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"240 -106 LINE SMOOTH",
"264 -106 OFFCURVE",
"279 -88 OFFCURVE",
"281 -69 CURVE SMOOTH",
"369 827 LINE",
"312 827 LINE SMOOTH",
"289 827 OFFCURVE",
"273 809 OFFCURVE",
"271 791 CURVE SMOOTH",
"183 -106 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
59 57 37 35 28 26 23 22 8 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
70 32 29 3 3 1 69 63 42 13 4 0 3 64 3 0 3 4 0 3 30 0 2 1 2 52 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 4 4 1 1 0 36 0 1 1 17 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
70 32 29 3 3 1 69 63 42 13 4 0 3 64 3 0 3 4 0 3 30 0 2 1 2 52 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 3 4 1 1 0 35 0 1 1 4 1 0 36 0 4 1 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 574;
},
{
components = (
{
name = S;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"255 -119 LINE SMOOTH",
"268 -119 OFFCURVE",
"279 -108 OFFCURVE",
"280 -95 CURVE SMOOTH",
"342 820 LINE",
"309 820 LINE SMOOTH",
"294 820 OFFCURVE",
"285 808 OFFCURVE",
"284 795 CURVE SMOOTH",
"222 -119 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 54 51 50 36 34 28 26 23 22 8 6 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 2 2 4 1 0 36 0 4 4 18 31 0 5 5 1 1 0 36 0 1 1 17 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 2 2 4 1 0 36 0 4 4 21 31 0 5 5 1 1 0 36 0 1 1 17 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 0 5 1 5 1 0 37 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 3 5 1 1 0 35 0 2 0 4 5 2 4 1 0 38 0 1 1 5 1 0 36 0 5 1 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 545;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "B5DF48EF-A55F-44CC-B1E1-B7581AC9FFA9";
name = "Jan 27 23, 16:37";
paths = (
{
closed = 1;
nodes = (
"275 -119 LINE SMOOTH",
"288.333 -119 OFFCURVE",
"299 -108 OFFCURVE",
"300 -95 CURVE SMOOTH",
"306 -7 LINE",
"443.469 0.781 OFFCURVE",
"530 94.915 OFFCURVE",
"530 218 CURVE SMOOTH",
"530 336.188 OFFCURVE",
"438.328 371.122 OFFCURVE",
"334 403 CURVE",
"350 645 LINE",
"381.692 641.197 OFFCURVE",
"457.26 596 OFFCURVE",
"469 596 CURVE SMOOTH",
"477.667 596 OFFCURVE",
"485.333 601 OFFCURVE",
"492 611 CURVE SMOOTH",
"514 644 LINE",
"474 682.667 OFFCURVE",
"425.667 711.667 OFFCURVE",
"355 721 CURVE",
"362 820 LINE",
"329 820 LINE SMOOTH",
"314.333 820 OFFCURVE",
"305 808 OFFCURVE",
"304 795 CURVE SMOOTH",
"299 723 LINE",
"169.047 718.002 OFFCURVE",
"84 632.197 OFFCURVE",
"84 527 CURVE SMOOTH",
"84 401.356 OFFCURVE",
"170.371 366.255 OFFCURVE",
"273 334 CURVE",
"254 69 LINE",
"207.098 74.518 OFFCURVE",
"120.837 139 OFFCURVE",
"103 139 CURVE SMOOTH",
"93.667 139 OFFCURVE",
"84 133 OFFCURVE",
"80 127 CURVE SMOOTH",
"53 86 LINE",
"101 35.333 OFFCURVE",
"169 0.667 OFFCURVE",
"249 -6 CURVE",
"242 -119 LINE",
"242 -119 LINE"
);
},
{
closed = 1;
nodes = (
"446 204 LINE",
"446 127.222 OFFCURVE",
"394.694 76.846 OFFCURVE",
"311 69 CURVE",
"328 318 LINE",
"392.726 296.425 OFFCURVE",
"446 269.502 OFFCURVE",
"446 204 CURVE"
);
},
{
closed = 1;
nodes = (
"168 536 LINE",
"168 595.394 OFFCURVE",
"213.761 639.706 OFFCURVE",
"294 647 CURVE",
"279 421 LINE",
"215.798 442.067 OFFCURVE",
"168 473.011 OFFCURVE",
"168 536 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 54 51 50 36 34 28 26 23 22 8 6 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 2 2 4 1 0 36 0 4 4 18 31 0 5 5 1 1 0 36 0 1 1 17 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 2 2 4 1 0 36 0 4 4 21 31 0 5 5 1 1 0 36 0 1 1 17 5 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 0 5 1 5 1 0 37 0 2 2 4 1 0 36 0 4 4 21 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
24 1 1 2 74 40 32 29 4 3 1 73 62 41 13 4 0 3 63 12 3 3 4 0 52 0 2 5 4 5 30 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 3 5 1 1 0 35 0 2 0 4 5 2 4 1 0 38 0 1 1 5 1 0 36 0 5 1 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
visible = 1;
width = 580;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "097E9498-039F-41B3-B26E-A792EDE9DFB1";
name = "Jan 27 23, 16:40";
paths = (
{
closed = 1;
nodes = (
"262 -106 LINE SMOOTH",
"286 -106 OFFCURVE",
"301.667 -87.667 OFFCURVE",
"303 -69 CURVE SMOOTH",
"309 -7 LINE",
"458.216 5.863 OFFCURVE",
"551 102.532 OFFCURVE",
"551 234 CURVE SMOOTH",
"551 292.248 OFFCURVE",
"527.021 338.626 OFFCURVE",
"487.5 367 CURVE SMOOTH",
"452.306 392.268 OFFCURVE",
"395.912 413.192 OFFCURVE",
"352 426 CURVE",
"369 603 LINE",
"402.607 594.598 OFFCURVE",
"443.381 569 OFFCURVE",
"464 569 CURVE SMOOTH",
"480 569 OFFCURVE",
"491.333 577 OFFCURVE",
"502 593 CURVE SMOOTH",
"540 649 LINE",
"504 682.333 OFFCURVE",
"453 715.667 OFFCURVE",
"381 729 CURVE",
"391 827 LINE",
"334 827 LINE SMOOTH",
"311.333 827 OFFCURVE",
"295.667 809.667 OFFCURVE",
"293 791 CURVE SMOOTH",
"288 735 LINE",
"142.685 727.484 OFFCURVE",
"46 634.083 OFFCURVE",
"46 519 CURVE SMOOTH",
"46 384.248 OFFCURVE",
"138.497 341.862 OFFCURVE",
"246 312 CURVE",
"227 123 LINE",
"182.405 135.162 OFFCURVE",
"128.675 178 OFFCURVE",
"103 178 CURVE SMOOTH",
"88.333 178 OFFCURVE",
"73 168.667 OFFCURVE",
"65 158 CURVE SMOOTH",
"17 88 LINE",
"65 44 OFFCURVE",
"139 10.333 OFFCURVE",
"215 -3 CURVE",
"205 -106 LINE",
"205 -106 LINE"
);
},
{
closed = 1;
nodes = (
"404 211 LINE",
"404 159.667 OFFCURVE",
"376.667 129.333 OFFCURVE",
"322 120 CURVE",
"338 285 LINE",
"378 269 OFFCURVE",
"404 248.333 OFFCURVE",
"404 211 CURVE"
);
},
{
closed = 1;
nodes = (
"192 534 LINE",
"192 574.11 OFFCURVE",
"219.833 597.406 OFFCURVE",
"275 607 CURVE",
"260 456 LINE",
"220 472 OFFCURVE",
"192 495.333 OFFCURVE",
"192 534 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
59 57 37 35 28 26 23 22 8 6 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
70 32 29 3 3 1 69 63 42 13 4 0 3 64 3 0 3 4 0 3 30 0 2 1 2 52 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 4 4 1 1 0 36 0 1 1 17 4 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
70 32 29 3 3 1 69 63 42 13 4 0 3 64 3 0 3 4 0 3 30 0 2 1 2 52 0 3 1 0 1 3 0 50 0 0 4 1 0 4 48 0 1 3 4 1 1 0 35 0 1 1 4 1 0 36 0 4 1 4 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "086130A8-3A17-401C-ADF4-D87D25CBC015";
name = "Jan 27 23, 16:42";
paths = (
{
closed = 1;
nodes = (
"290 -137 LINE SMOOTH",
"294 -137 OFFCURVE",
"296 -134.333 OFFCURVE",
"296 -129 CURVE SMOOTH",
"300 -8 LINE",
"427.847 -2.782 OFFCURVE",
"506 81.493 OFFCURVE",
"506 197 CURVE SMOOTH",
"506 312.049 OFFCURVE",
"417.206 338.615 OFFCURVE",
"314 374 CURVE",
"325 697 LINE",
"386.812 695.455 OFFCURVE",
"463.57 632 OFFCURVE",
"476 632 CURVE SMOOTH",
"478.667 632 OFFCURVE",
"480.333 633 OFFCURVE",
"481 635 CURVE SMOOTH",
"483 638 LINE",
"439 684.667 OFFCURVE",
"390.333 705.667 OFFCURVE",
"325 707 CURVE",
"329 809 LINE",
"324 809 LINE SMOOTH",
"320 809 OFFCURVE",
"318 806.333 OFFCURVE",
"318 801 CURVE SMOOTH",
"315 707 LINE",
"202.638 704.503 OFFCURVE",
"130 631.204 OFFCURVE",
"130 537 CURVE SMOOTH",
"130 428.763 OFFCURVE",
"207.584 396.805 OFFCURVE",
"303 365 CURVE",
"290 2 LINE",
"234.147 2 OFFCURVE",
"180.888 21.77 OFFCURVE",
"152 45.5 CURVE SMOOTH",
"137.025 57.801 OFFCURVE",
"108.688 88 OFFCURVE",
"104 88 CURVE SMOOTH",
"101.333 88 OFFCURVE",
"100.667 87.667 OFFCURVE",
"98 85 CURVE SMOOTH",
"96 83 LINE",
"145.788 24.914 OFFCURVE",
"200.921 -8 OFFCURVE",
"290 -8 CURVE",
"285 -137 LINE",
"285 -137 LINE"
);
},
{
closed = 1;
nodes = (
"495 195 LINE",
"495 88.979 OFFCURVE",
"420.027 7.175 OFFCURVE",
"301 2 CURVE",
"313 362 LINE",
"411.445 330.15 OFFCURVE",
"495 302.45 OFFCURVE",
"495 195 CURVE"
);
},
{
closed = 1;
nodes = (
"141 537 LINE",
"141 624.997 OFFCURVE",
"209.065 694.478 OFFCURVE",
"315 697 CURVE",
"303 377 LINE",
"213.89 408.62 OFFCURVE",
"141 437.944 OFFCURVE",
"141 537 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
59 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
64 22 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
70 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
75 22 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
35 2 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 2 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
16 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
76 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
}
);
leftMetricsKey = S;
note = dollar;
rightMetricsKey = S;
unicode = 0024;
},
{
glyphname = florin;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"12 -184 OFFCURVE",
"85 -123 OFFCURVE",
"98 -4 CURVE SMOOTH",
"149 411 LINE",
"342 411 LINE",
"342 421 LINE",
"150 421 LINE",
"163 527 LINE SMOOTH",
"178 645 OFFCURVE",
"243 697 OFFCURVE",
"329 697 CURVE SMOOTH",
"334 697 OFFCURVE",
"337 699 OFFCURVE",
"337 702 CURVE SMOOTH",
"337 707 LINE",
"231 707 OFFCURVE",
"166 647 OFFCURVE",
"151 527 CURVE SMOOTH",
"138 421 LINE",
"18 421 LINE",
"18 417 LINE SMOOTH",
"18 414 OFFCURVE",
"20 413 OFFCURVE",
"24 413 CURVE SMOOTH",
"137 411 LINE",
"86 -4 LINE SMOOTH",
"74 -119 OFFCURVE",
"3 -174 OFFCURVE",
"-80 -174 CURVE SMOOTH",
"-85 -174 OFFCURVE",
"-88 -176 OFFCURVE",
"-88 -179 CURVE SMOOTH",
"-88 -184 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
37 7 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
9 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 384;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"103 -170 OFFCURVE",
"198 -113 OFFCURVE",
"214 36 CURVE SMOOTH",
"254 364 LINE",
"397 364 LINE",
"397 470 LINE",
"263 470 LINE",
"271 532 LINE SMOOTH",
"280 595 OFFCURVE",
"309 618 OFFCURVE",
"357 618 CURVE SMOOTH",
"390 618 OFFCURVE",
"405 628 OFFCURVE",
"405 660 CURVE SMOOTH",
"405 743 LINE",
"232 743 OFFCURVE",
"140 679 OFFCURVE",
"121 537 CURVE SMOOTH",
"113 470 LINE",
"18 470 LINE",
"18 409 LINE SMOOTH",
"18 388 OFFCURVE",
"31 376 OFFCURVE",
"52 371 CURVE SMOOTH",
"100 361 LINE",
"60 41 LINE SMOOTH",
"52 -19 OFFCURVE",
"29 -45 OFFCURVE",
"-22 -45 CURVE SMOOTH",
"-55 -45 OFFCURVE",
"-70 -59 OFFCURVE",
"-70 -91 CURVE SMOOTH",
"-70 -170 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 38 0 38 37 36 33 31 28 27 22 21 11 9 6 5 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
16 1 1 6 1 30 5 1 2 7 1 6 1 2 6 0 0 38 0 4 4 3 1 0 36 0 3 3 17 31 0 1 1 0 1 0 36 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
16 1 1 6 1 30 5 1 2 7 1 6 1 2 6 0 0 38 0 1 0 0 1 0 1 0 37 0 4 4 3 1 0 36 0 3 3 17 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
16 1 1 6 1 30 0 3 0 4 2 3 4 1 0 38 5 1 2 7 1 6 1 2 6 0 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
16 1 1 6 1 30 0 2 4 5 4 2 5 50 0 3 0 4 2 3 4 1 0 38 0 5 7 1 6 1 5 6 0 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 422;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"52 -176 OFFCURVE",
"132 -118 OFFCURVE",
"148 19 CURVE SMOOTH",
"193 384 LINE",
"359 384 LINE",
"359 449 LINE",
"198 449 LINE",
"209 530 LINE SMOOTH",
"221 614 OFFCURVE",
"265 652 OFFCURVE",
"332 652 CURVE SMOOTH",
"352 652 OFFCURVE",
"361 659 OFFCURVE",
"361 678 CURVE SMOOTH",
"361 727 LINE",
"216 727 OFFCURVE",
"139 665 OFFCURVE",
"123 533 CURVE SMOOTH",
"112 449 LINE",
"6 449 LINE",
"6 412 LINE SMOOTH",
"6 400 OFFCURVE",
"12 390 OFFCURVE",
"27 389 CURVE SMOOTH",
"104 382 LINE",
"60 22 LINE SMOOTH",
"50 -62 OFFCURVE",
"4 -101 OFFCURVE",
"-61 -101 CURVE SMOOTH",
"-81 -101 OFFCURVE",
"-91 -110 OFFCURVE",
"-91 -129 CURVE SMOOTH",
"-91 -176 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 0 35 0 35 34 33 28 26 23 22 19 18 8 6 4 3 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
13 1 1 6 1 30 5 1 2 7 1 6 1 2 6 0 0 38 0 4 4 3 1 0 36 0 3 3 17 31 0 1 1 0 1 2 36 0 0 0 16 0 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
13 1 1 6 1 30 5 1 2 7 1 6 1 2 6 0 0 38 0 1 0 0 1 0 1 2 37 0 4 4 3 1 0 36 0 3 3 17 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
13 1 1 6 1 30 0 3 0 4 2 3 4 1 0 38 5 1 2 7 1 6 1 2 6 0 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 2 36 0 0 1 0 1 2 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
13 1 1 6 1 30 0 2 4 5 4 2 5 50 0 3 0 4 2 3 4 1 0 38 0 5 7 1 6 1 5 6 0 0 38 0 1 0 0 1 1 0 35 0 1 1 0 1 2 36 0 0 1 0 1 2 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 387;
}
);
note = florin;
rightKerningGroup = f;
rightMetricsKey = f;
unicode = 0192;
},
{
glyphname = sterling;
layers = (
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 556, 11}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"556 0 LINE",
"556 11 LINE",
"97 11 LINE SMOOTH",
"92 11 OFFCURVE",
"86 11 OFFCURVE",
"79 10 CURVE",
"131 35 OFFCURVE",
"163 81 OFFCURVE",
"163 145 CURVE SMOOTH",
"163 324 LINE",
"413 324 LINE SMOOTH",
"417 324 OFFCURVE",
"419 326 OFFCURVE",
"419 329 CURVE SMOOTH",
"419 334 LINE",
"163 334 LINE",
"163 495 LINE SMOOTH",
"163 614 OFFCURVE",
"228 697 OFFCURVE",
"346 697 CURVE SMOOTH",
"437 697 OFFCURVE",
"473 656 OFFCURVE",
"504 600 CURVE SMOOTH",
"506 597 OFFCURVE",
"508 595 OFFCURVE",
"510 595 CURVE SMOOTH",
"511 595 OFFCURVE",
"511 595 OFFCURVE",
"512 595 CURVE SMOOTH",
"514 595 OFFCURVE",
"516 595 OFFCURVE",
"518 596 CURVE",
"489 662 OFFCURVE",
"439 707 OFFCURVE",
"346 707 CURVE SMOOTH",
"220 707 OFFCURVE",
"151 621 OFFCURVE",
"151 495 CURVE SMOOTH",
"151 334 LINE",
"55 334 LINE SMOOTH",
"52 334 OFFCURVE",
"48 332 OFFCURVE",
"48 328 CURVE SMOOTH",
"48 324 LINE",
"151 324 LINE",
"151 145 LINE SMOOTH",
"151 73 OFFCURVE",
"112 34 OFFCURVE",
"61 11 CURVE",
"61 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
33 1 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 604;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 601, 128}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"601 0 LINE",
"601 128 LINE",
"350 128 LINE SMOOTH",
"319 128 OFFCURVE",
"289 124 OFFCURVE",
"260 117 CURVE",
"285 145 OFFCURVE",
"301 177 OFFCURVE",
"301 217 CURVE SMOOTH",
"301 295 LINE",
"448 295 LINE SMOOTH",
"473 295 OFFCURVE",
"491 312 OFFCURVE",
"491 333 CURVE SMOOTH",
"491 392 LINE",
"301 392 LINE",
"301 501 LINE SMOOTH",
"301 572 OFFCURVE",
"328 610 OFFCURVE",
"381 610 CURVE SMOOTH",
"410 610 OFFCURVE",
"428 597 OFFCURVE",
"453 572 CURVE SMOOTH",
"466 559 OFFCURVE",
"480 553 OFFCURVE",
"495 553 CURVE SMOOTH",
"506 553 OFFCURVE",
"518 556 OFFCURVE",
"530 563 CURVE SMOOTH",
"551 576 OFFCURVE",
"571 589 OFFCURVE",
"592 602 CURVE",
"552 682 OFFCURVE",
"485 737 OFFCURVE",
"381 737 CURVE SMOOTH",
"226 737 OFFCURVE",
"142 633 OFFCURVE",
"142 500 CURVE SMOOTH",
"142 392 LINE",
"100 392 LINE SMOOTH",
"67 392 OFFCURVE",
"49 370 OFFCURVE",
"49 343 CURVE SMOOTH",
"49 295 LINE",
"142 295 LINE",
"142 176 LINE SMOOTH",
"142 128 OFFCURVE",
"103 101 OFFCURVE",
"58 93 CURVE",
"58 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
58 57 50 48 43 41 35 33 28 27 24 22 19 17 11 9 4 2 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 4 1 0 8 1 5 6 0 5 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 6 6 7 1 0 36 0 7 7 12 7 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 4 1 0 8 1 5 6 0 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 0 0 0 8 5 0 8 0 0 38 0 4 0 5 6 4 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 636;
},
{
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 584, 77}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"584 0 LINE",
"584 77 LINE",
"246 77 LINE SMOOTH",
"226 77 OFFCURVE",
"207 75 OFFCURVE",
"188 71 CURVE",
"221 102 OFFCURVE",
"241 135 OFFCURVE",
"241 186 CURVE SMOOTH",
"241 307 LINE",
"436 307 LINE SMOOTH",
"451 307 OFFCURVE",
"462 319 OFFCURVE",
"462 331 CURVE SMOOTH",
"462 367 LINE",
"241 367 LINE",
"241 499 LINE SMOOTH",
"241 589 OFFCURVE",
"284 648 OFFCURVE",
"369 648 CURVE SMOOTH",
"428 648 OFFCURVE",
"450 619 OFFCURVE",
"480 584 CURVE SMOOTH",
"488 575 OFFCURVE",
"496 571 OFFCURVE",
"505 571 CURVE SMOOTH",
"512 571 OFFCURVE",
"519 573 OFFCURVE",
"526 577 CURVE SMOOTH",
"538 585 OFFCURVE",
"550 592 OFFCURVE",
"562 600 CURVE",
"528 674 OFFCURVE",
"465 724 OFFCURVE",
"369 724 CURVE SMOOTH",
"227 724 OFFCURVE",
"150 629 OFFCURVE",
"150 498 CURVE SMOOTH",
"150 367 LINE",
"83 367 LINE SMOOTH",
"63 367 OFFCURVE",
"52 353 OFFCURVE",
"52 336 CURVE SMOOTH",
"52 307 LINE",
"150 307 LINE",
"150 163 LINE SMOOTH",
"150 105 OFFCURVE",
"110 72 OFFCURVE",
"63 58 CURVE",
"63 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
62 61 54 52 47 45 39 37 34 33 28 26 20 18 11 9 4 2 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 3 55 43 2 7 6 2 30 0 2 3 0 3 2 0 50 4 1 0 8 1 5 6 0 5 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 6 6 7 1 0 36 0 7 7 12 7 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
15 1 2 3 55 43 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 4 1 0 8 1 5 6 0 5 1 0 38 0 6 6 7 1 0 36 0 7 7 15 7 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
15 1 2 3 55 43 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 4 1 0 8 1 5 6 0 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
15 1 2 3 55 43 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 0 0 0 8 5 0 8 0 0 38 0 4 0 5 6 4 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 627;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
components = (
{
name = SerifUpLeftCaps;
transform = "{1, 0, 0, 1, 566, 128}";
}
);
layerId = "F6FC7D59-0785-474B-8FFF-57E98CCBAE87";
name = "Jan 27 23, 16:52";
paths = (
{
closed = 1;
nodes = (
"500 0 LINE SMOOTH",
"538.649 0 OFFCURVE",
"566 32.737 OFFCURVE",
"566 64 CURVE SMOOTH",
"566 128 LINE",
"315 128 LINE SMOOTH",
"284.333 128 OFFCURVE",
"254.333 123.667 OFFCURVE",
"225 117 CURVE",
"250.333 145 OFFCURVE",
"266 177 OFFCURVE",
"266 217 CURVE SMOOTH",
"266 295 LINE",
"413 295 LINE SMOOTH",
"437.73 295 OFFCURVE",
"456 312.398 OFFCURVE",
"456 333 CURVE SMOOTH",
"456 392 LINE",
"266 392 LINE",
"266 501 LINE SMOOTH",
"266 571.667 OFFCURVE",
"292.667 610 OFFCURVE",
"346 610 CURVE SMOOTH",
"375.333 610 OFFCURVE",
"392.667 597.333 OFFCURVE",
"418 572 CURVE SMOOTH",
"430.667 559.333 OFFCURVE",
"444.667 553 OFFCURVE",
"460 553 CURVE SMOOTH",
"471.333 553 OFFCURVE",
"483 556.333 OFFCURVE",
"495 563 CURVE SMOOTH",
"516 576 OFFCURVE",
"536 589 OFFCURVE",
"557 602 CURVE",
"517.15 681.699 OFFCURVE",
"450.075 737 OFFCURVE",
"346 737 CURVE SMOOTH",
"191.317 737 OFFCURVE",
"107 632.733 OFFCURVE",
"107 500 CURVE SMOOTH",
"107 392 LINE",
"65 392 LINE SMOOTH",
"31.667 392 OFFCURVE",
"14 369.667 OFFCURVE",
"14 343 CURVE SMOOTH",
"14 295 LINE",
"107 295 LINE",
"107 176 LINE SMOOTH",
"107 128.15 OFFCURVE",
"68.451 101.021 OFFCURVE",
"23 93 CURVE",
"23 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
58 57 50 48 43 41 35 33 28 27 24 22 19 17 11 9 4 2 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 4 1 0 8 1 5 6 0 5 1 0 38 0 3 3 1 1 0 36 0 1 1 17 31 0 6 6 7 1 0 36 0 7 7 12 7 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 4 1 0 8 1 5 6 0 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
15 1 2 3 51 39 2 7 6 2 30 0 2 3 0 3 2 0 50 0 1 0 3 2 1 3 1 0 38 0 0 0 8 5 0 8 0 0 38 0 4 0 5 6 4 5 1 0 38 0 6 7 7 6 1 0 35 0 6 6 7 1 0 36 0 7 6 7 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "AE3322F3-6D11-49CA-B0A2-6D3D0AB73F01";
name = "Jan 27 23, 16:53";
paths = (
{
closed = 1;
nodes = (
"541 0 LINE SMOOTH",
"545 0 OFFCURVE",
"548 3.333 OFFCURVE",
"548 6 CURVE SMOOTH",
"548 11 LINE",
"89 11 LINE SMOOTH",
"83.667 11 OFFCURVE",
"77.667 10.667 OFFCURVE",
"71 10 CURVE",
"123.119 34.688 OFFCURVE",
"155 81.054 OFFCURVE",
"155 145 CURVE SMOOTH",
"155 324 LINE",
"405 324 LINE SMOOTH",
"409 324 OFFCURVE",
"411 326.333 OFFCURVE",
"411 329 CURVE SMOOTH",
"411 334 LINE",
"155 334 LINE",
"155 495 LINE SMOOTH",
"155 613.729 OFFCURVE",
"219.682 697 OFFCURVE",
"338 697 CURVE SMOOTH",
"429.163 697 OFFCURVE",
"464.754 656.243 OFFCURVE",
"496 600 CURVE SMOOTH",
"498 597 OFFCURVE",
"500 595 OFFCURVE",
"502 595 CURVE SMOOTH",
"503 595 OFFCURVE",
"503 595 OFFCURVE",
"504 595 CURVE SMOOTH",
"506 595 OFFCURVE",
"508 595 OFFCURVE",
"510 596 CURVE",
"481 662 OFFCURVE",
"431 707 OFFCURVE",
"338 707 CURVE SMOOTH",
"211.888 707 OFFCURVE",
"143 620.701 OFFCURVE",
"143 495 CURVE SMOOTH",
"143 334 LINE",
"47 334 LINE SMOOTH",
"44.333 334 OFFCURVE",
"40 332 OFFCURVE",
"40 328 CURVE SMOOTH",
"40 324 LINE",
"143 324 LINE",
"143 145 LINE SMOOTH",
"143 73.261 OFFCURVE",
"104.306 33.803 OFFCURVE",
"53 11 CURVE",
"53 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
33 1 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = yen;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"237 294 LINE",
"237 230 LINE",
"43 230 LINE",
"43 220 LINE",
"237 220 LINE",
"237 0 LINE",
"249 0 LINE",
"249 220 LINE",
"443 220 LINE",
"443 230 LINE",
"249 230 LINE",
"249 294 LINE",
"443 294 LINE",
"443 304 LINE",
"253 304 LINE",
"470 700 LINE",
"460 700 LINE SMOOTH",
"457 700 OFFCURVE",
"455 699 OFFCURVE",
"453 696 CURVE",
"250 321 LINE SMOOTH",
"247 316 OFFCURVE",
"246 312 OFFCURVE",
"243 307 CURVE",
"242 312 OFFCURVE",
"240 316 OFFCURVE",
"236 321 CURVE",
"33 696 LINE SMOOTH",
"32 699 OFFCURVE",
"29 700 OFFCURVE",
"26 700 CURVE SMOOTH",
"16 700 LINE",
"234 304 LINE",
"43 304 LINE",
"43 294 LINE",
"43 294 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
25 3 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
9 26 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
22 1 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 1 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 486;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"229 237 LINE",
"229 193 LINE",
"79 193 LINE",
"79 111 LINE",
"229 111 LINE",
"229 0 LINE",
"384 0 LINE",
"384 111 LINE",
"534 111 LINE",
"534 193 LINE",
"384 193 LINE",
"384 237 LINE",
"534 237 LINE",
"534 320 LINE",
"410 320 LINE",
"605 729 LINE",
"475 729 LINE SMOOTH",
"447 729 OFFCURVE",
"428 712 OFFCURVE",
"420 692 CURVE SMOOTH",
"338 480 LINE SMOOTH",
"325 444 OFFCURVE",
"315 417 OFFCURVE",
"308 386 CURVE",
"301 415 OFFCURVE",
"291 444 OFFCURVE",
"276 480 CURVE SMOOTH",
"193 692 LINE SMOOTH",
"184 715 OFFCURVE",
"166 729 OFFCURVE",
"137 729 CURVE SMOOTH",
"8 729 LINE",
"203 320 LINE",
"79 320 LINE",
"79 237 LINE",
"79 237 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 16 4 2 1 0 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 0 1 1 30 3 1 0 10 1 4 5 0 4 0 2 38 9 1 5 8 1 6 7 5 6 0 0 38 2 1 1 1 11 31 0 7 7 12 7 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 0 7 6 7 53 3 1 0 10 1 4 5 0 4 0 2 38 9 1 5 6 6 5 0 0 35 9 1 5 5 6 0 0 36 8 1 6 5 6 0 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
10 1 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 7 6 7 53 0 0 0 10 4 0 10 0 2 38 0 3 0 4 5 3 4 0 2 38 0 5 9 6 5 0 0 35 0 9 0 8 6 9 8 0 0 38 0 5 5 6 0 0 36 0 6 5 6 0 0 33 10 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"234 262 LINE",
"234 209 LINE",
"64 209 LINE",
"64 158 LINE",
"234 158 LINE",
"234 0 LINE",
"324 0 LINE",
"324 158 LINE",
"494 158 LINE",
"494 209 LINE",
"324 209 LINE",
"324 262 LINE",
"494 262 LINE",
"494 313 LINE",
"340 313 LINE",
"545 717 LINE",
"470 717 LINE SMOOTH",
"453 717 OFFCURVE",
"442 706 OFFCURVE",
"437 694 CURVE SMOOTH",
"299 411 LINE",
"290 388 OFFCURVE",
"284 370 OFFCURVE",
"280 350 CURVE",
"275 370 OFFCURVE",
"268 388 OFFCURVE",
"259 411 CURVE",
"121 694 LINE SMOOTH",
"114 707 OFFCURVE",
"105 717 OFFCURVE",
"88 717 CURVE SMOOTH",
"13 717 LINE",
"217 313 LINE",
"64 313 LINE",
"64 262 LINE",
"64 262 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 16 4 2 1 0 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 0 1 1 30 3 1 0 10 1 4 5 0 4 0 2 38 9 1 5 8 1 6 7 5 6 0 0 38 2 1 1 1 11 31 0 7 7 12 7 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 3 1 0 10 1 4 5 0 4 0 2 38 9 1 5 8 1 6 7 5 6 0 0 38 0 7 7 15 7 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 0 7 6 7 53 3 1 0 10 1 4 5 0 4 0 2 38 9 1 5 6 6 5 0 0 35 9 1 5 5 6 0 0 36 8 1 6 5 6 0 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
10 1 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 7 6 7 53 0 0 0 10 4 0 10 0 2 38 0 3 0 4 5 3 4 0 2 38 0 5 9 6 5 0 0 35 0 9 0 8 6 9 8 0 0 38 0 5 5 6 0 0 36 0 6 5 6 0 0 33 10 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
leftMetricsKey = Y;
note = yen;
rightMetricsKey = Y;
unicode = 00A5;
},
{
glyphname = plus;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"281 340 LINE",
"56 340 LINE",
"56 330 LINE",
"281 330 LINE",
"281 94 LINE",
"291 94 LINE",
"291 330 LINE",
"517 330 LINE",
"517 340 LINE",
"291 340 LINE",
"291 575 LINE",
"281 575 LINE",
"281 575 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 4 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
2 1 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"228 392 LINE",
"44 392 LINE",
"44 281 LINE",
"228 281 LINE",
"228 82 LINE",
"354 82 LINE",
"354 281 LINE",
"539 281 LINE",
"539 392 LINE",
"354 392 LINE",
"354 590 LINE",
"228 590 LINE",
"228 590 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 5 0 2 5 0 0 35 4 1 0 3 1 1 2 0 1 0 0 38 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
6 1 5 0 2 5 0 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 2 0 1 0 0 38 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"255 370 LINE",
"52 370 LINE",
"52 302 LINE",
"255 302 LINE",
"255 87 LINE",
"328 87 LINE",
"328 302 LINE",
"531 302 LINE",
"531 370 LINE",
"328 370 LINE",
"328 583 LINE",
"255 583 LINE",
"255 583 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 5 0 2 5 0 0 35 4 1 0 3 1 1 2 0 1 0 0 38 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
6 1 5 0 2 5 0 0 35 0 4 0 3 1 4 3 0 0 38 0 0 0 1 2 0 1 0 0 38 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"471 330 LINE",
"471 340 LINE",
"70 340 LINE",
"70 330 LINE",
"70 330 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 541;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"510 281 LINE",
"510 392 LINE",
"55 392 LINE",
"55 281 LINE",
"55 281 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"498 302 LINE",
"498 370 LINE",
"68 370 LINE",
"68 302 LINE",
"68 302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
leftKerningGroup = emdash;
note = minus;
rightKerningGroup = emdash;
unicode = 2212;
},
{
glyphname = multiply;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"272 343 LINE",
"78 537 LINE",
"70 529 LINE",
"265 335 LINE",
"70 140 LINE",
"77 133 LINE",
"272 328 LINE",
"466 134 LINE",
"473 141 LINE",
"280 335 LINE",
"473 528 LINE",
"465 536 LINE",
"465 536 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
2 6 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
9 5 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"287 416 LINE",
"132 571 LINE",
"51 492 LINE",
"207 336 LINE",
"41 171 LINE",
"123 92 LINE",
"287 256 LINE",
"450 93 LINE",
"532 172 LINE",
"367 336 LINE",
"522 491 LINE",
"440 570 LINE",
"440 570 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
9 5 1 11 
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"290 383 LINE",
"117 556 LINE",
"70 508 LINE",
"242 336 LINE",
"64 158 LINE",
"112 110 LINE",
"290 288 LINE",
"467 111 LINE",
"515 159 LINE",
"338 335 LINE",
"510 507 LINE",
"462 555 LINE",
"462 555 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
9 5 1 11 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = divide;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"531 330 LINE",
"531 340 LINE",
"70 340 LINE",
"70 330 LINE",
"70 330 LINE"
);
},
{
closed = 1;
nodes = (
"268 512 LINE",
"268 495 OFFCURVE",
"283 480 OFFCURVE",
"300 480 CURVE SMOOTH",
"319 480 OFFCURVE",
"333 495 OFFCURVE",
"333 512 CURVE SMOOTH",
"333 531 OFFCURVE",
"319 545 OFFCURVE",
"300 545 CURVE SMOOTH",
"283 545 OFFCURVE",
"268 531 OFFCURVE",
"268 512 CURVE"
);
},
{
closed = 1;
nodes = (
"268 156 LINE",
"268 139 OFFCURVE",
"283 124 OFFCURVE",
"300 124 CURVE SMOOTH",
"319 124 OFFCURVE",
"333 139 OFFCURVE",
"333 156 CURVE SMOOTH",
"333 175 OFFCURVE",
"319 189 OFFCURVE",
"300 189 CURVE SMOOTH",
"283 189 OFFCURVE",
"268 175 OFFCURVE",
"268 156 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
10 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
19 25 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
7 13 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 601;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"536 281 LINE",
"536 392 LINE",
"41 392 LINE",
"41 281 LINE",
"41 281 LINE"
);
},
{
closed = 1;
nodes = (
"200 514 LINE",
"200 466 OFFCURVE",
"239 429 OFFCURVE",
"288 429 CURVE SMOOTH",
"338 429 OFFCURVE",
"376 466 OFFCURVE",
"376 514 CURVE SMOOTH",
"376 561 OFFCURVE",
"338 600 OFFCURVE",
"288 600 CURVE SMOOTH",
"239 600 OFFCURVE",
"200 561 OFFCURVE",
"200 514 CURVE"
);
},
{
closed = 1;
nodes = (
"200 158 LINE",
"200 110 OFFCURVE",
"239 73 OFFCURVE",
"288 73 CURVE SMOOTH",
"338 73 OFFCURVE",
"376 110 OFFCURVE",
"376 158 CURVE SMOOTH",
"376 205 OFFCURVE",
"338 244 OFFCURVE",
"288 244 CURVE SMOOTH",
"239 244 OFFCURVE",
"200 205 OFFCURVE",
"200 158 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 20 18 10 8 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 0 1 4 0 1 0 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 5 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"546 302 LINE",
"546 370 LINE",
"67 370 LINE",
"67 302 LINE",
"67 302 LINE"
);
},
{
closed = 1;
nodes = (
"244 513 LINE",
"244 477 OFFCURVE",
"272 451 OFFCURVE",
"306 451 CURVE SMOOTH",
"341 451 OFFCURVE",
"369 477 OFFCURVE",
"369 513 CURVE SMOOTH",
"369 548 OFFCURVE",
"341 576 OFFCURVE",
"306 576 CURVE SMOOTH",
"272 576 OFFCURVE",
"244 548 OFFCURVE",
"244 513 CURVE"
);
},
{
closed = 1;
nodes = (
"244 157 LINE",
"244 121 OFFCURVE",
"272 95 OFFCURVE",
"306 95 CURVE SMOOTH",
"341 95 OFFCURVE",
"369 121 OFFCURVE",
"369 157 CURVE SMOOTH",
"369 192 OFFCURVE",
"341 220 OFFCURVE",
"306 220 CURVE SMOOTH",
"272 220 OFFCURVE",
"244 192 OFFCURVE",
"244 157 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 38 30 28 20 18 10 8 3 2 1 0 6 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 43 values pushed */
0 2 0 3 0 2 3 1 0 38 0 0 0 1 4 0 1 0 0 38 0 4 5 5 4 1 0 35 0 4 4 5 1 0 36 0 5 4 5 1 0 33 5 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"470 260 LINE",
"470 270 LINE",
"70 270 LINE",
"70 260 LINE",
"70 260 LINE"
);
},
{
closed = 1;
nodes = (
"470 407 LINE",
"470 417 LINE",
"70 417 LINE",
"70 407 LINE",
"70 407 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 6 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 540;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"510 189 LINE",
"510 300 LINE",
"55 300 LINE",
"55 189 LINE",
"55 189 LINE"
);
},
{
closed = 1;
nodes = (
"510 372 LINE",
"510 483 LINE",
"55 483 LINE",
"55 372 LINE",
"55 372 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 6 5 4 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 0 2 3 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"498 220 LINE",
"498 287 LINE",
"68 287 LINE",
"68 220 LINE",
"68 220 LINE"
);
},
{
closed = 1;
nodes = (
"498 387 LINE",
"498 455 LINE",
"68 455 LINE",
"68 387 LINE",
"68 387 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 6 5 4 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 3 0 2 3 0 0 38 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"319 407 LINE",
"264 270 LINE",
"90 270 LINE",
"90 260 LINE",
"260 260 LINE",
"202 116 LINE",
"213 116 LINE",
"271 260 LINE",
"490 260 LINE",
"490 270 LINE",
"275 270 LINE",
"331 407 LINE",
"490 407 LINE",
"490 417 LINE",
"335 417 LINE",
"393 562 LINE",
"382 562 LINE",
"323 417 LINE",
"90 417 LINE",
"90 407 LINE",
"90 407 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
5 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
3 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
8 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
13 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
14 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
18 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
9 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"260 372 LINE",
"222 300 LINE",
"62 300 LINE",
"62 189 LINE",
"164 189 LINE",
"105 77 LINE",
"215 77 LINE",
"274 189 LINE",
"517 189 LINE",
"517 300 LINE",
"332 300 LINE",
"370 372 LINE",
"517 372 LINE",
"517 483 LINE",
"428 483 LINE",
"482 585 LINE",
"372 585 LINE",
"318 483 LINE",
"62 483 LINE",
"62 372 LINE",
"62 372 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 0 1 40 0 6 5 5 6 41 2 1 0 9 1 3 4 0 3 0 2 38 8 1 4 5 5 4 0 0 35 8 1 4 4 5 0 0 36 7 1 5 4 5 0 0 33 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 0 0 1 40 0 6 5 6 53 2 1 0 9 1 3 4 0 3 0 2 38 8 1 4 5 5 4 0 0 35 8 1 4 4 5 0 0 36 7 1 5 4 5 0 0 33 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 52 0 6 5 6 53 2 1 0 9 1 3 4 0 3 0 2 38 8 1 4 5 5 4 0 0 35 8 1 4 4 5 0 0 36 7 1 5 4 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 52 0 6 5 6 53 0 0 0 9 3 0 9 0 0 38 0 2 0 3 4 2 3 0 2 38 0 4 8 5 4 0 0 35 0 8 0 7 5 8 7 0 0 38 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"288 387 LINE",
"241 287 LINE",
"75 287 LINE",
"75 220 LINE",
"209 220 LINE",
"150 94 LINE",
"214 94 LINE",
"274 220 LINE",
"505 220 LINE",
"505 287 LINE",
"305 287 LINE",
"353 387 LINE",
"505 387 LINE",
"505 455 LINE",
"384 455 LINE",
"441 575 LINE",
"377 575 LINE",
"320 455 LINE",
"75 455 LINE",
"75 387 LINE",
"75 387 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 0 1 40 0 6 5 5 6 41 2 1 0 9 1 3 4 0 3 0 2 38 8 1 4 5 5 4 0 0 35 8 1 4 4 5 0 0 36 7 1 5 4 5 0 0 33 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 1 0 1 52 0 6 5 6 53 2 1 0 9 1 3 4 0 3 0 2 38 8 1 4 5 5 4 0 0 35 8 1 4 4 5 0 0 36 7 1 5 4 5 0 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 52 0 6 5 6 53 0 0 0 9 3 0 9 0 0 38 0 2 0 3 4 2 3 0 2 38 0 4 8 5 4 0 0 35 0 8 0 7 5 8 7 0 0 38 0 4 4 5 0 0 36 0 5 4 5 0 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
layers = (
{
components = (
{
name = less;
transform = "{-1, 0, 0, -1, 450, 670}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
15 3 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
14 0 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 450;
},
{
components = (
{
name = less;
transform = "{-1, 0, 0, -1, 502, 675}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
17 1 1 11 
CALL[ ]	/* CallFunction */";
};
width = 502;
},
{
components = (
{
name = less;
transform = "{-1, 0, 0, -1, 497, 673}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
16 0 1 11 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"399 146 LINE",
"399 152 LINE SMOOTH",
"399 155 OFFCURVE",
"396 159 OFFCURVE",
"390 162 CURVE SMOOTH",
"68 325 LINE SMOOTH",
"60 329 OFFCURVE",
"53 332 OFFCURVE",
"45 335 CURVE",
"53 338 OFFCURVE",
"60 341 OFFCURVE",
"68 345 CURVE SMOOTH",
"390 508 LINE SMOOTH",
"396 511 OFFCURVE",
"399 515 OFFCURVE",
"399 519 CURVE SMOOTH",
"399 524 LINE",
"34 338 LINE",
"34 332 LINE",
"34 332 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
8 3 0 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
1 15 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 501;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"436 96 LINE",
"436 203 LINE SMOOTH",
"436 219 OFFCURVE",
"428 232 OFFCURVE",
"411 241 CURVE SMOOTH",
"269 318 LINE SMOOTH",
"252 327 OFFCURVE",
"232 332 OFFCURVE",
"211 337 CURVE",
"232 342 OFFCURVE",
"252 349 OFFCURVE",
"269 358 CURVE SMOOTH",
"411 434 LINE SMOOTH",
"428 443 OFFCURVE",
"436 457 OFFCURVE",
"436 472 CURVE SMOOTH",
"436 580 LINE",
"31 368 LINE",
"31 307 LINE",
"31 307 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
1 17 1 11 
CALL[ ]	/* CallFunction */";
};
width = 502;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"442 117 LINE",
"442 181 LINE SMOOTH",
"442 192 OFFCURVE",
"437 200 OFFCURVE",
"424 207 CURVE SMOOTH",
"200 321 LINE SMOOTH",
"187 328 OFFCURVE",
"171 333 OFFCURVE",
"155 336 CURVE",
"171 340 OFFCURVE",
"187 345 OFFCURVE",
"200 352 CURVE SMOOTH",
"424 466 LINE SMOOTH",
"437 473 OFFCURVE",
"442 481 OFFCURVE",
"442 492 CURVE SMOOTH",
"442 556 LINE",
"55 355 LINE",
"55 318 LINE",
"55 318 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 4 values pushed */
1 17 1 11 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"73 519 LINE SMOOTH",
"73 515 OFFCURVE",
"76 511 OFFCURVE",
"83 508 CURVE SMOOTH",
"404 345 LINE SMOOTH",
"412 341 OFFCURVE",
"419 338 OFFCURVE",
"427 335 CURVE",
"419 332 OFFCURVE",
"412 329 OFFCURVE",
"404 325 CURVE SMOOTH",
"83 162 LINE SMOOTH",
"76 159 OFFCURVE",
"73 155 OFFCURVE",
"73 152 CURVE SMOOTH",
"73 146 LINE",
"438 332 LINE",
"438 338 LINE",
"73 524 LINE",
"73 524 LINE"
);
},
{
closed = 1;
nodes = (
"73 50 LINE",
"73 40 LINE",
"438 40 LINE",
"438 50 LINE",
"438 50 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 3 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
20 1 17 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 514;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"74 527 LINE SMOOTH",
"74 511 OFFCURVE",
"81 498 OFFCURVE",
"106 486 CURVE SMOOTH",
"241 428 LINE SMOOTH",
"260 421 OFFCURVE",
"282 415 OFFCURVE",
"306 410 CURVE",
"282 405 OFFCURVE",
"261 398 OFFCURVE",
"241 391 CURVE",
"107 330 LINE SMOOTH",
"82 319 OFFCURVE",
"74 305 OFFCURVE",
"74 290 CURVE SMOOTH",
"74 187 LINE",
"479 379 LINE",
"479 439 LINE",
"74 630 LINE",
"74 630 LINE"
);
},
{
closed = 1;
nodes = (
"74 151 LINE",
"74 40 LINE",
"479 40 LINE",
"479 151 LINE",
"479 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
21 20 19 18 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 31 values pushed */
17 10 2 1 0 5 1 28 0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 520;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"65 523 LINE SMOOTH",
"65 512 OFFCURVE",
"70 503 OFFCURVE",
"87 496 CURVE",
"308 392 LINE SMOOTH",
"321 385 OFFCURVE",
"339 381 OFFCURVE",
"356 377 CURVE",
"337 374 OFFCURVE",
"321 369 OFFCURVE",
"308 362 CURVE SMOOTH",
"87 258 LINE SMOOTH",
"71 250 OFFCURVE",
"65 241 OFFCURVE",
"65 230 CURVE SMOOTH",
"65 169 LINE",
"452 359 LINE",
"452 396 LINE",
"65 584 LINE",
"65 584 LINE"
);
},
{
closed = 1;
nodes = (
"65 108 LINE",
"65 40 LINE",
"452 40 LINE",
"452 108 LINE",
"452 108 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
21 20 19 18 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 31 values pushed */
17 9 2 1 0 5 1 28 0 1 0 0 1 0 0 35 0 1 1 0 0 0 36 0 0 1 0 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"441 146 LINE",
"441 152 LINE SMOOTH",
"441 155 OFFCURVE",
"438 159 OFFCURVE",
"432 162 CURVE SMOOTH",
"110 325 LINE SMOOTH",
"102 329 OFFCURVE",
"95 332 OFFCURVE",
"87 335 CURVE",
"95 338 OFFCURVE",
"102 341 OFFCURVE",
"110 345 CURVE SMOOTH",
"432 508 LINE SMOOTH",
"438 511 OFFCURVE",
"441 515 OFFCURVE",
"441 519 CURVE SMOOTH",
"441 524 LINE",
"76 338 LINE",
"76 332 LINE",
"76 332 LINE"
);
},
{
closed = 1;
nodes = (
"441 40 LINE",
"441 50 LINE",
"76 50 LINE",
"76 40 LINE",
"76 40 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
8 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
18 1 19 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 514;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"446 187 LINE",
"446 290 LINE SMOOTH",
"446 305 OFFCURVE",
"439 319 OFFCURVE",
"414 330 CURVE SMOOTH",
"279 391 LINE",
"260 398 OFFCURVE",
"238 405 OFFCURVE",
"214 410 CURVE",
"237 415 OFFCURVE",
"259 421 OFFCURVE",
"279 428 CURVE SMOOTH",
"414 486 LINE SMOOTH",
"439 498 OFFCURVE",
"446 511 OFFCURVE",
"446 527 CURVE SMOOTH",
"446 630 LINE",
"41 439 LINE",
"41 379 LINE",
"41 379 LINE"
);
},
{
closed = 1;
nodes = (
"446 40 LINE",
"446 151 LINE",
"41 151 LINE",
"41 40 LINE",
"41 40 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
21 20 19 18 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 31 values pushed */
17 16 8 1 0 5 0 28 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 520;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"449 169 LINE",
"449 230 LINE SMOOTH",
"449 241 OFFCURVE",
"444 250 OFFCURVE",
"427 258 CURVE SMOOTH",
"207 362 LINE SMOOTH",
"192 369 OFFCURVE",
"175 374 OFFCURVE",
"158 377 CURVE",
"175 381 OFFCURVE",
"192 386 OFFCURVE",
"207 392 CURVE",
"427 496 LINE SMOOTH",
"444 504 OFFCURVE",
"449 512 OFFCURVE",
"449 523 CURVE SMOOTH",
"449 584 LINE",
"62 396 LINE",
"62 359 LINE",
"62 359 LINE"
);
},
{
closed = 1;
nodes = (
"449 40 LINE",
"449 108 LINE",
"62 108 LINE",
"62 40 LINE",
"62 40 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
21 20 19 18 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 31 values pushed */
17 16 8 1 0 5 0 28 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"318 340 LINE",
"93 340 LINE",
"93 330 LINE",
"318 330 LINE",
"318 114 LINE",
"328 114 LINE",
"328 330 LINE",
"554 330 LINE",
"554 340 LINE",
"328 340 LINE",
"328 555 LINE",
"318 555 LINE",
"318 555 LINE"
);
},
{
closed = 1;
nodes = (
"554 40 LINE",
"554 50 LINE",
"93 50 LINE",
"93 40 LINE",
"93 40 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 4 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
13 1 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
2 1 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 647;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"233 468 LINE",
"49 468 LINE",
"49 357 LINE",
"233 357 LINE",
"233 197 LINE",
"359 197 LINE",
"359 357 LINE",
"544 357 LINE",
"544 468 LINE",
"359 468 LINE",
"359 636 LINE",
"233 636 LINE",
"233 636 LINE"
);
},
{
closed = 1;
nodes = (
"544 40 LINE",
"544 151 LINE",
"49 151 LINE",
"49 40 LINE",
"49 40 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 15 14 13 12 0 11 0 11 10 9 8 7 6 5 4 3 2 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 3 1 1 2 0 1 0 0 38 8 1 5 0 2 6 5 2 0 0 38 0 6 7 7 6 0 0 35 0 6 6 7 0 0 36 0 7 6 7 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 0 3 1 4 3 0 0 38 0 0 0 1 2 0 1 0 0 38 8 1 5 0 2 6 5 2 0 0 38 0 6 7 7 6 0 0 35 0 6 6 7 0 0 36 0 7 6 7 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 594;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"255 413 LINE",
"52 413 LINE",
"52 345 LINE",
"255 345 LINE",
"255 161 LINE",
"328 161 LINE",
"328 345 LINE",
"531 345 LINE",
"531 413 LINE",
"328 413 LINE",
"328 601 LINE",
"255 601 LINE",
"255 601 LINE"
);
},
{
closed = 1;
nodes = (
"531 40 LINE",
"531 108 LINE",
"52 108 LINE",
"52 40 LINE",
"52 40 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 15 14 13 12 0 11 0 11 10 9 8 7 6 5 4 3 2 1 9 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 3 1 1 2 0 1 0 0 38 8 1 5 0 2 6 5 2 0 0 38 0 6 7 7 6 0 0 35 0 6 6 7 0 0 36 0 7 6 7 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 0 3 1 4 3 0 0 38 0 0 0 1 2 0 1 0 0 38 8 1 5 0 2 6 5 2 0 0 38 0 6 7 7 6 0 0 35 0 6 6 7 0 0 36 0 7 6 7 0 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"349 384 LINE",
"287 384 OFFCURVE",
"221 446 OFFCURVE",
"153 446 CURVE SMOOTH",
"117 446 OFFCURVE",
"87 430 OFFCURVE",
"70 403 CURVE",
"77 398 LINE",
"93 421 OFFCURVE",
"120 436 OFFCURVE",
"153 436 CURVE SMOOTH",
"213 436 OFFCURVE",
"287 374 OFFCURVE",
"349 374 CURVE SMOOTH",
"384 374 OFFCURVE",
"415 392 OFFCURVE",
"432 417 CURVE",
"425 422 LINE",
"409 401 OFFCURVE",
"381 384 OFFCURVE",
"349 384 CURVE"
);
},
{
closed = 1;
nodes = (
"349 236 LINE",
"287 236 OFFCURVE",
"221 298 OFFCURVE",
"153 298 CURVE SMOOTH",
"117 298 OFFCURVE",
"87 282 OFFCURVE",
"70 255 CURVE",
"77 250 LINE",
"93 273 OFFCURVE",
"120 288 OFFCURVE",
"153 288 CURVE SMOOTH",
"213 288 OFFCURVE",
"287 226 OFFCURVE",
"349 226 CURVE SMOOTH",
"384 226 OFFCURVE",
"415 244 OFFCURVE",
"432 269 CURVE",
"425 274 LINE",
"409 253 OFFCURVE",
"381 236 OFFCURVE",
"349 236 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 16 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
19 31 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 502;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"368 463 LINE",
"309 463 OFFCURVE",
"237 510 OFFCURVE",
"168 510 CURVE SMOOTH",
"118 510 OFFCURVE",
"69 494 OFFCURVE",
"40 455 CURVE",
"61 363 LINE",
"72 378 OFFCURVE",
"119 397 OFFCURVE",
"158 397 CURVE SMOOTH",
"211 397 OFFCURVE",
"295 350 OFFCURVE",
"358 350 CURVE SMOOTH",
"402 350 OFFCURVE",
"454 366 OFFCURVE",
"480 400 CURVE",
"463 496 LINE",
"451 484 OFFCURVE",
"406 463 OFFCURVE",
"368 463 CURVE"
);
},
{
closed = 1;
nodes = (
"368 278 LINE",
"312 278 OFFCURVE",
"234 325 OFFCURVE",
"168 325 CURVE SMOOTH",
"117 325 OFFCURVE",
"70 308 OFFCURVE",
"40 270 CURVE",
"61 178 LINE",
"71 191 OFFCURVE",
"120 212 OFFCURVE",
"158 212 CURVE SMOOTH",
"212 212 OFFCURVE",
"293 165 OFFCURVE",
"358 165 CURVE SMOOTH",
"401 165 OFFCURVE",
"456 181 OFFCURVE",
"480 215 CURVE",
"463 311 LINE",
"454 299 OFFCURVE",
"405 278 OFFCURVE",
"368 278 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
33 32 1 0 60 58 49 47 44 42 32 63 33 63 28 26 17 15 12 10 0 31 1 31 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
22 6 2 2 0 21 1 1 2 37 1 4 7 54 38 2 6 4 53 1 5 6 5 30 8 1 0 0 1 7 0 1 1 0 38 0 7 0 6 5 7 6 1 0 38 9 1 4 0 5 4 5 1 0 37 0 2 2 3 1 0 36 0 3 3 14 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
22 6 2 2 0 21 1 1 2 37 1 4 7 54 38 2 6 4 53 1 5 6 5 30 0 3 0 2 1 3 2 1 0 38 8 1 0 0 1 7 0 1 1 0 38 9 1 4 6 5 4 1 0 35 0 7 0 6 5 7 6 1 0 38 9 1 4 4 5 1 0 36 0 5 4 5 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 520;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"371 429 LINE",
"313 429 OFFCURVE",
"240 483 OFFCURVE",
"172 483 CURVE SMOOTH",
"128 483 OFFCURVE",
"89 466 OFFCURVE",
"65 433 CURVE",
"80 378 LINE",
"92 396 OFFCURVE",
"131 414 OFFCURVE",
"167 414 CURVE SMOOTH",
"227 414 OFFCURVE",
"297 361 OFFCURVE",
"365 361 CURVE SMOOTH",
"406 361 OFFCURVE",
"446 376 OFFCURVE",
"469 407 CURVE",
"457 464 LINE",
"442 449 OFFCURVE",
"406 429 OFFCURVE",
"371 429 CURVE"
);
},
{
closed = 1;
nodes = (
"371 260 LINE",
"310 260 OFFCURVE",
"242 313 OFFCURVE",
"172 313 CURVE SMOOTH",
"128 313 OFFCURVE",
"89 298 OFFCURVE",
"65 263 CURVE",
"80 209 LINE",
"91 226 OFFCURVE",
"133 245 OFFCURVE",
"167 245 CURVE SMOOTH",
"222 245 OFFCURVE",
"302 191 OFFCURVE",
"365 191 CURVE SMOOTH",
"406 191 OFFCURVE",
"446 206 OFFCURVE",
"469 238 CURVE",
"457 295 LINE",
"443 279 OFFCURVE",
"405 260 OFFCURVE",
"371 260 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
29 28 1 0 52 50 43 41 38 36 28 55 29 55 24 22 15 13 10 8 0 27 1 27 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
20 5 2 0 3 19 6 2 1 2 48 33 2 4 7 47 34 2 5 6 4 30 0 3 0 2 1 3 2 1 0 38 8 1 0 0 1 7 0 1 1 0 38 9 1 4 6 5 4 1 0 35 0 7 0 6 5 7 6 1 0 38 9 1 4 4 5 1 0 36 0 5 4 5 1 0 33 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
20 5 2 0 3 19 6 2 1 2 48 33 2 4 7 47 34 2 5 6 4 30 8 1 0 0 1 7 0 1 1 0 38 0 7 0 6 5 7 6 1 0 38 9 1 4 0 5 4 5 1 0 37 0 2 2 3 1 0 36 0 3 3 14 2 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
20 5 2 0 3 19 6 2 1 2 48 33 2 4 7 47 34 2 5 6 4 30 0 3 0 2 1 3 2 1 0 38 8 1 0 0 1 7 0 1 1 0 38 9 1 4 6 5 4 1 0 35 0 7 0 6 5 7 6 1 0 38 9 1 4 4 5 1 0 36 0 5 4 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"388 264 LINE",
"324 264 OFFCURVE",
"240 336 OFFCURVE",
"172 336 CURVE SMOOTH",
"110 336 OFFCURVE",
"70 286 OFFCURVE",
"70 226 CURVE",
"80 226 LINE",
"83 283 OFFCURVE",
"116 326 OFFCURVE",
"172 326 CURVE SMOOTH",
"234 326 OFFCURVE",
"326 254 OFFCURVE",
"388 254 CURVE SMOOTH",
"452 254 OFFCURVE",
"490 304 OFFCURVE",
"490 364 CURVE",
"480 364 LINE",
"480 309 OFFCURVE",
"443 264 OFFCURVE",
"388 264 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
6 22 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
5 21 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 560;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"370 339 LINE",
"331 339 OFFCURVE",
"273 376 OFFCURVE",
"210 376 CURVE SMOOTH",
"106 376 OFFCURVE",
"45 305 OFFCURVE",
"45 193 CURVE",
"170 193 LINE",
"170 233 OFFCURVE",
"188 254 OFFCURVE",
"220 254 CURVE SMOOTH",
"256 254 OFFCURVE",
"334 216 OFFCURVE",
"380 216 CURVE SMOOTH",
"486 216 OFFCURVE",
"545 288 OFFCURVE",
"545 400 CURVE",
"420 400 LINE",
"420 360 OFFCURVE",
"402 339 OFFCURVE",
"370 339 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 24 22 18 17 15 13 10 8 4 3 0 27 1 27 7 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 1 52 0 4 2 4 53 6 1 0 3 2 0 1 0 35 0 5 0 3 2 5 3 1 0 38 6 1 0 0 2 1 0 36 0 2 0 2 1 0 33 6 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"388 307 LINE",
"338 307 OFFCURVE",
"268 359 OFFCURVE",
"202 359 CURVE SMOOTH",
"117 359 OFFCURVE",
"66 297 OFFCURVE",
"66 207 CURVE",
"138 207 LINE",
"139 255 OFFCURVE",
"164 285 OFFCURVE",
"208 285 CURVE SMOOTH",
"256 285 OFFCURVE",
"330 233 OFFCURVE",
"393 233 CURVE SMOOTH",
"480 233 OFFCURVE",
"529 295 OFFCURVE",
"529 384 CURVE",
"457 384 LINE",
"457 337 OFFCURVE",
"431 307 OFFCURVE",
"388 307 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 24 22 18 17 15 13 10 8 4 3 0 27 1 27 7 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 1 52 0 4 2 4 53 6 1 0 3 2 0 1 0 35 0 5 0 3 2 5 3 1 0 38 6 1 0 0 2 1 0 36 0 2 0 2 1 0 33 6 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
leftKerningGroup = emdash;
note = asciitilde;
rightKerningGroup = emdash;
unicode = 007E;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"477 330 LINE",
"477 180 LINE",
"488 180 LINE",
"488 340 LINE",
"87 340 LINE",
"87 330 LINE",
"87 330 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 3 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 4 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 559;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"373 281 LINE",
"373 141 LINE",
"504 141 LINE",
"504 392 LINE",
"49 392 LINE",
"49 281 LINE",
"49 281 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 2 1 41 0 0 2 2 0 0 0 35 0 0 0 2 0 0 36 0 2 0 2 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 53 0 0 2 2 0 0 0 35 0 0 0 2 0 0 36 0 2 0 2 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"428 302 LINE",
"428 158 LINE",
"503 158 LINE",
"503 370 LINE",
"73 370 LINE",
"73 302 LINE",
"73 302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 2 1 41 0 0 2 2 0 0 0 35 0 0 0 2 0 0 36 0 2 0 2 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 53 0 0 2 2 0 0 0 35 0 0 0 2 0 0 36 0 2 0 2 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
leftKerningGroup = emdash;
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"53 406 LINE SMOOTH",
"58 406 OFFCURVE",
"62 410 OFFCURVE",
"63 413 CURVE SMOOTH",
"203 666 LINE SMOOTH",
"207 673 OFFCURVE",
"210 679 OFFCURVE",
"212 686 CURVE",
"213 684 OFFCURVE",
"221 667 OFFCURVE",
"221 666 CURVE SMOOTH",
"361 413 LINE SMOOTH",
"364 408 OFFCURVE",
"367 406 OFFCURVE",
"371 406 CURVE SMOOTH",
"378 406 LINE",
"215 700 LINE",
"209 700 LINE",
"46 406 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 14 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
7 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 424;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"156 384 LINE SMOOTH",
"176 384 OFFCURVE",
"188 395 OFFCURVE",
"195 408 CURVE SMOOTH",
"255 527 LINE SMOOTH",
"267 548 OFFCURVE",
"275 567 OFFCURVE",
"282 586 CURVE",
"286 576 OFFCURVE",
"295 557 OFFCURVE",
"310 527 CURVE SMOOTH",
"372 408 LINE SMOOTH",
"380 395 OFFCURVE",
"392 384 OFFCURVE",
"409 384 CURVE SMOOTH",
"523 384 LINE",
"330 729 LINE",
"229 729 LINE",
"36 384 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 0 2 1 30 1 1 0 2 0 53 0 2 2 11 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 0 2 1 30 0 2 0 2 52 1 1 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"111 394 LINE SMOOTH",
"124 394 OFFCURVE",
"132 402 OFFCURVE",
"137 411 CURVE SMOOTH",
"234 587 LINE SMOOTH",
"241 601 OFFCURVE",
"247 615 OFFCURVE",
"252 630 CURVE",
"257 617 OFFCURVE",
"263 602 OFFCURVE",
"272 587 CURVE SMOOTH",
"370 411 LINE SMOOTH",
"375 402 OFFCURVE",
"383 394 OFFCURVE",
"394 394 CURVE SMOOTH",
"459 394 LINE",
"280 717 LINE",
"222 717 LINE",
"43 394 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
17 15 4 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
10 1 1 0 1 30 2 1 1 0 1 53 0 0 0 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
10 1 1 0 1 30 0 0 1 0 52 2 1 1 1 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
10 1 2 0 1 30 0 0 2 0 52 0 2 1 2 52 0 1 1 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"505 153 LINE",
"578.76 153 OFFCURVE",
"638 210.451 OFFCURVE",
"638 295 CURVE SMOOTH",
"638 381.484 OFFCURVE",
"577.983 437 OFFCURVE",
"505 437 CURVE SMOOTH",
"431.662 437 OFFCURVE",
"386.973 371.608 OFFCURVE",
"341 304 CURVE",
"295.134 371.45 OFFCURVE",
"250.48 437 OFFCURVE",
"178 437 CURVE SMOOTH",
"103.94 437 OFFCURVE",
"44 381.08 OFFCURVE",
"44 295 CURVE SMOOTH",
"44 211.238 OFFCURVE",
"103.61 153 OFFCURVE",
"178 153 CURVE SMOOTH",
"249.607 153 OFFCURVE",
"296.5 220.559 OFFCURVE",
"341 286 CURVE",
"385.577 220.445 OFFCURVE",
"432.539 153 OFFCURVE",
"505 153 CURVE"
);
},
{
closed = 1;
nodes = (
"178 163 LINE",
"108.432 163 OFFCURVE",
"57 215.403 OFFCURVE",
"57 295 CURVE SMOOTH",
"57 375.049 OFFCURVE",
"107.599 427 OFFCURVE",
"178 427 CURVE SMOOTH",
"246.649 427 OFFCURVE",
"290.27 360.78 OFFCURVE",
"335 295 CURVE",
"291.959 231.705 OFFCURVE",
"244.974 163 OFFCURVE",
"178 163 CURVE"
);
},
{
closed = 1;
nodes = (
"505 163 LINE",
"436.779 163 OFFCURVE",
"390.278 231.357 OFFCURVE",
"347 295 CURVE",
"391.957 361.113 OFFCURVE",
"435.116 427 OFFCURVE",
"505 427 CURVE SMOOTH",
"575.604 427 OFFCURVE",
"625 374.365 OFFCURVE",
"625 295 CURVE SMOOTH",
"625 215.664 OFFCURVE",
"575.132 163 OFFCURVE",
"505 163 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 15 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
25 15 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
65 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
60 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
20 1 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 680;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"499 107 LINE",
"594.308 107 OFFCURVE",
"672 189.143 OFFCURVE",
"672 296 CURVE SMOOTH",
"672 403.315 OFFCURVE",
"595.227 485 OFFCURVE",
"499 485 CURVE SMOOTH",
"428.246 485 OFFCURVE",
"382.655 450.241 OFFCURVE",
"345 401 CURVE",
"304.93 449.656 OFFCURVE",
"262.003 485 OFFCURVE",
"191 485 CURVE SMOOTH",
"94.454 485 OFFCURVE",
"17 402.842 OFFCURVE",
"17 296 CURVE SMOOTH",
"17 189.612 OFFCURVE",
"95.38 107 OFFCURVE",
"191 107 CURVE SMOOTH",
"260.356 107 OFFCURVE",
"307.053 142.211 OFFCURVE",
"345 191 CURVE",
"380.315 142.102 OFFCURVE",
"430.312 107 OFFCURVE",
"499 107 CURVE"
);
},
{
closed = 1;
nodes = (
"197 228 LINE",
"163.25 228 OFFCURVE",
"138 249.713 OFFCURVE",
"138 296 CURVE SMOOTH",
"138 342.287 OFFCURVE",
"163.25 364 OFFCURVE",
"197 364 CURVE SMOOTH",
"232.191 364 OFFCURVE",
"256.506 333.49 OFFCURVE",
"279 296 CURVE",
"256.663 261.254 OFFCURVE",
"231.58 228 OFFCURVE",
"197 228 CURVE"
);
},
{
closed = 1;
nodes = (
"493 228 LINE",
"458.42 228 OFFCURVE",
"433.337 261.254 OFFCURVE",
"411 296 CURVE",
"433.494 333.49 OFFCURVE",
"457.809 364 OFFCURVE",
"493 364 CURVE SMOOTH",
"526.04 364 OFFCURVE",
"551 342.349 OFFCURVE",
"551 296 CURVE SMOOTH",
"551 249.713 OFFCURVE",
"527.88 228 OFFCURVE",
"493 228 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
61 60 41 40 1 0 71 69 60 79 61 79 51 49 40 59 41 59 31 29 21 19 11 9 0 39 1 39 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
25 1 5 2 75 45 2 4 5 5 1 0 4 3 30 3 1 2 7 1 5 4 2 5 1 0 38 10 6 9 3 4 0 0 4 1 0 35 10 6 9 3 4 4 0 1 0 36 1 8 2 0 4 0 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
25 1 7 3 75 45 2 4 5 5 1 1 6 3 30 0 3 0 7 5 3 7 1 0 38 0 2 0 5 4 2 5 1 0 38 10 1 6 1 0 6 1 0 35 9 1 4 0 1 0 4 1 1 0 38 10 1 6 6 0 1 0 36 8 1 0 6 0 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"501 127 LINE",
"586.57 127 OFFCURVE",
"656 198.295 OFFCURVE",
"656 296 CURVE SMOOTH",
"656 393.326 OFFCURVE",
"587.012 464 OFFCURVE",
"501 464 CURVE SMOOTH",
"429.496 464 OFFCURVE",
"381.067 416.101 OFFCURVE",
"343 359 CURVE",
"301.908 416.529 OFFCURVE",
"257.866 464 OFFCURVE",
"184 464 CURVE SMOOTH",
"97.988 464 OFFCURVE",
"29 393.326 OFFCURVE",
"29 296 CURVE SMOOTH",
"29 198.295 OFFCURVE",
"98.43 127 OFFCURVE",
"184 127 CURVE SMOOTH",
"257.826 127 OFFCURVE",
"301.573 175.002 OFFCURVE",
"343 233 CURVE",
"381.367 175.45 OFFCURVE",
"429.524 127 OFFCURVE",
"501 127 CURVE"
);
},
{
closed = 1;
nodes = (
"188 200 LINE",
"137.068 200 OFFCURVE",
"100 235.251 OFFCURVE",
"100 296 CURVE SMOOTH",
"100 356.392 OFFCURVE",
"136.465 391 OFFCURVE",
"188 391 CURVE SMOOTH",
"237.837 391 OFFCURVE",
"268.231 345.355 OFFCURVE",
"302 296 CURVE",
"269.566 246.101 OFFCURVE",
"236.542 200 OFFCURVE",
"188 200 CURVE"
);
},
{
closed = 1;
nodes = (
"498 200 LINE",
"449.153 200 OFFCURVE",
"415.382 246.182 OFFCURVE",
"383 296 CURVE",
"416.711 345.27 OFFCURVE",
"447.834 391 OFFCURVE",
"498 391 CURVE SMOOTH",
"548.636 391 OFFCURVE",
"585 355.941 OFFCURVE",
"585 296 CURVE SMOOTH",
"585 235.711 OFFCURVE",
"548.051 200 OFFCURVE",
"498 200 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
61 60 41 40 1 0 71 69 60 79 61 79 51 49 40 59 41 59 31 29 21 19 11 9 0 39 1 39 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
75 45 25 5 4 4 5 1 30 3 1 2 7 1 5 4 2 5 1 0 38 10 6 9 3 4 0 0 4 1 0 35 10 6 9 3 4 4 0 1 0 36 1 8 2 0 4 0 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
75 45 25 5 4 4 5 1 30 0 3 0 7 5 3 7 1 0 38 0 2 0 5 4 2 5 1 0 38 10 1 6 1 0 6 1 0 35 9 1 4 0 1 0 4 1 1 0 38 10 1 6 6 0 1 0 36 8 1 0 6 0 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"73.98 -184 OFFCURVE",
"134 -125 OFFCURVE",
"149 -4 CURVE SMOOTH",
"216 541 LINE SMOOTH",
"228 642 OFFCURVE",
"284.521 699 OFFCURVE",
"362 699 CURVE SMOOTH",
"403 699 OFFCURVE",
"409 688 OFFCURVE",
"413 696 CURVE SMOOTH",
"414 698 LINE",
"402 704 OFFCURVE",
"387.667 708 OFFCURVE",
"361 708 CURVE SMOOTH",
"280.606 708 OFFCURVE",
"217 650 OFFCURVE",
"204 541 CURVE SMOOTH",
"137 -4 LINE SMOOTH",
"123 -119 OFFCURVE",
"70 -175 OFFCURVE",
"-19 -175 CURVE SMOOTH",
"-53 -175 OFFCURVE",
"-66 -164 OFFCURVE",
"-70 -171 CURVE SMOOTH",
"-72 -175 LINE",
"-56 -181 OFFCURVE",
"-40.333 -184 OFFCURVE",
"-19 -184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
8 29 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
12 29 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
35 1 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 372;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"166.414 -168 OFFCURVE",
"240 -100 OFFCURVE",
"257 36 CURVE SMOOTH",
"320 529 LINE SMOOTH",
"327 584 OFFCURVE",
"345.941 610 OFFCURVE",
"405 610 CURVE SMOOTH",
"428.426 610 OFFCURVE",
"435 627 OFFCURVE",
"437 645 CURVE SMOOTH",
"444 718 LINE",
"417 731 OFFCURVE",
"385 737 OFFCURVE",
"360 737 CURVE SMOOTH",
"247 737 OFFCURVE",
"187 663 OFFCURVE",
"173 549 CURVE SMOOTH",
"109 32 LINE SMOOTH",
"103.441 -31.928 OFFCURVE",
"83.363 -55 OFFCURVE",
"10 -55 CURVE SMOOTH",
"-20.695 -55 OFFCURVE",
"-26 -63 OFFCURVE",
"-29 -86 CURVE SMOOTH",
"-37 -149 LINE",
"-10.333 -163.667 OFFCURVE",
"21.667 -168 OFFCURVE",
"47 -168 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 33 26 24 15 13 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 1 0 28 1 2 3 2 30 0 1 0 3 0 1 3 50 0 0 0 17 31 0 3 3 2 1 0 36 0 2 2 16 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 1 0 28 1 2 3 2 30 0 1 0 3 0 1 3 50 0 3 0 2 3 2 1 0 37 0 0 0 17 0 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
8 1 1 0 28 1 2 3 2 30 0 0 1 0 52 0 1 3 1 52 0 3 2 2 3 1 0 35 0 3 3 2 1 0 36 0 2 3 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 425;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"122.405 -175 OFFCURVE",
"191.754 -110.588 OFFCURVE",
"207 19 CURVE SMOOTH",
"272 534 LINE SMOOTH",
"282.667 612.667 OFFCURVE",
"318.333 648 OFFCURVE",
"385 648 CURVE SMOOTH",
"412.582 648 OFFCURVE",
"422.883 651.414 OFFCURVE",
"426 667 CURVE",
"430 710 LINE",
"408.667 720.667 OFFCURVE",
"386.333 725 OFFCURVE",
"361 725 CURVE SMOOTH",
"263.667 725 OFFCURVE",
"201.667 662 OFFCURVE",
"187 546 CURVE SMOOTH",
"122 16 LINE SMOOTH",
"111.686 -69.094 OFFCURVE",
"76.806 -107 OFFCURVE",
"-4 -107 CURVE SMOOTH",
"-29.67 -107 OFFCURVE",
"-44.853 -104.117 OFFCURVE",
"-48 -123 CURVE SMOOTH",
"-53 -161 LINE",
"-33 -171.667 OFFCURVE",
"-7 -175 OFFCURVE",
"17 -175 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
31 28 22 20 13 11 4 2 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 1 1 0 24 1 2 3 2 30 0 1 1 0 1 0 36 0 0 0 17 31 0 3 3 2 1 0 36 0 2 2 16 2 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 1 0 24 1 2 3 2 30 0 3 0 2 3 2 1 0 37 0 1 1 0 1 0 36 0 0 0 17 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
6 1 1 0 24 1 2 3 2 30 0 0 0 1 3 0 1 1 0 38 0 3 2 2 3 1 0 35 0 3 3 2 1 0 36 0 2 3 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 400;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Omega;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"315 0 LINE",
"315 149 LINE",
"168.953 184.159 OFFCURVE",
"75 269.122 OFFCURVE",
"75 417 CURVE SMOOTH",
"75 591 OFFCURVE",
"202 698 OFFCURVE",
"381 698 CURVE SMOOTH",
"557 698 OFFCURVE",
"687 595 OFFCURVE",
"687 417 CURVE SMOOTH",
"687 269.457 OFFCURVE",
"593.505 183.629 OFFCURVE",
"447 149 CURVE",
"447 0 LINE",
"696 0 LINE SMOOTH",
"700 0 OFFCURVE",
"702 2 OFFCURVE",
"702 6 CURVE SMOOTH",
"702 12 LINE",
"458 12 LINE",
"458 143 LINE",
"595.465 170.493 OFFCURVE",
"699 267.459 OFFCURVE",
"699 417 CURVE SMOOTH",
"699 514.333 OFFCURVE",
"662.667 586.833 OFFCURVE",
"604 635.5 CURVE SMOOTH",
"545.333 684.167 OFFCURVE",
"466.333 708 OFFCURVE",
"381 708 CURVE SMOOTH",
"295.667 708 OFFCURVE",
"216.5 684.167 OFFCURVE",
"158.5 635.5 CURVE SMOOTH",
"100.5 586.833 OFFCURVE",
"63 514.333 OFFCURVE",
"63 417 CURVE SMOOTH",
"63 267.139 OFFCURVE",
"168.72 170.608 OFFCURVE",
"304 143 CURVE",
"304 12 LINE",
"60 12 LINE",
"60 6 LINE SMOOTH",
"60 2 OFFCURVE",
"62 0 OFFCURVE",
"66 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
16 3 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
22 3 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
49 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
43 3 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
38 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 762;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"340 0 LINE",
"340 272 LINE",
"258.132 283.292 OFFCURVE",
"201 337.531 OFFCURVE",
"201 437 CURVE SMOOTH",
"201 545 OFFCURVE",
"257.667 607 OFFCURVE",
"367 607 CURVE SMOOTH",
"476.333 607 OFFCURVE",
"533 545 OFFCURVE",
"533 437 CURVE SMOOTH",
"533 336.93 OFFCURVE",
"476.08 283.321 OFFCURVE",
"394 272 CURVE",
"394 0 LINE",
"649 0 LINE SMOOTH",
"683.667 0 OFFCURVE",
"705 21.667 OFFCURVE",
"705 51 CURVE SMOOTH",
"705 134 LINE",
"524 134 LINE",
"524 189 LINE",
"642.922 223.355 OFFCURVE",
"706 325.085 OFFCURVE",
"706 446 CURVE SMOOTH",
"706 522 OFFCURVE",
"676 593 OFFCURVE",
"615 649 CURVE SMOOTH",
"550 708 OFFCURVE",
"459 737 OFFCURVE",
"367 737 CURVE SMOOTH",
"275 737 OFFCURVE",
"184 708 OFFCURVE",
"119.5 649 CURVE SMOOTH",
"63 597 OFFCURVE",
"28 521 OFFCURVE",
"28 446 CURVE SMOOTH",
"28 325.085 OFFCURVE",
"91.078 223.355 OFFCURVE",
"210 189 CURVE",
"210 134 LINE",
"29 134 LINE",
"29 51 LINE SMOOTH",
"29 21.667 OFFCURVE",
"51.667 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 55 0 54 51 50 38 36 24 23 20 18 10 8 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
49 25 17 1 4 2 0 1 30 0 0 0 3 1 0 36 0 3 3 17 31 4 1 2 2 1 1 0 36 6 5 2 1 1 12 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
49 25 17 1 4 2 0 1 30 0 3 0 0 2 3 0 1 0 38 4 1 2 1 1 2 0 0 35 4 1 2 2 1 1 0 36 6 5 2 1 2 1 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
49 25 17 1 4 2 0 1 30 0 3 0 0 2 3 0 1 0 38 0 2 4 1 2 0 0 35 0 4 6 1 5 1 4 5 1 0 38 0 2 2 1 1 0 36 0 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 734;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"328 0 LINE",
"328 219 LINE",
"215.862 241.428 OFFCURVE",
"143 305.826 OFFCURVE",
"143 429 CURVE SMOOTH",
"143 568.313 OFFCURVE",
"236.045 646 OFFCURVE",
"373 646 CURVE SMOOTH",
"508.924 646 OFFCURVE",
"604 568.874 OFFCURVE",
"604 429 CURVE SMOOTH",
"604 306.657 OFFCURVE",
"529.083 240.675 OFFCURVE",
"418 219 CURVE",
"418 0 LINE",
"670 0 LINE SMOOTH",
"690 0 OFFCURVE",
"703 13.333 OFFCURVE",
"703 32 CURVE SMOOTH",
"703 82 LINE",
"493 82 LINE",
"493 169 LINE",
"621.088 198.354 OFFCURVE",
"703 300.036 OFFCURVE",
"703 434 CURVE SMOOTH",
"703 519.333 OFFCURVE",
"667.5 592.167 OFFCURVE",
"609.5 643.5 CURVE SMOOTH",
"551.5 694.833 OFFCURVE",
"469 725 OFFCURVE",
"373 725 CURVE SMOOTH",
"278.333 725 OFFCURVE",
"195.667 694.833 OFFCURVE",
"137 643.5 CURVE SMOOTH",
"78.333 592.167 OFFCURVE",
"44 519.333 OFFCURVE",
"44 434 CURVE SMOOTH",
"44 299.606 OFFCURVE",
"123.474 198.683 OFFCURVE",
"253 169 CURVE",
"253 82 LINE",
"43 82 LINE",
"43 32 LINE SMOOTH",
"43 13.333 OFFCURVE",
"56 0 OFFCURVE",
"76 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 55 0 54 51 50 40 38 28 27 24 22 12 10 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
49 29 21 1 4 2 0 1 30 0 0 0 3 1 0 36 0 3 3 17 31 4 1 2 2 1 1 0 36 6 5 2 1 1 12 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
49 29 21 1 4 2 0 1 30 0 3 0 0 2 3 0 1 0 38 4 1 2 2 1 1 0 36 6 5 2 1 1 15 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
49 29 21 1 4 2 0 1 30 0 3 0 0 2 3 0 1 0 38 4 1 2 1 1 2 0 0 35 4 1 2 2 1 1 0 36 6 5 2 1 2 1 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
49 29 21 1 4 2 0 1 30 0 3 0 0 2 3 0 1 0 38 0 2 4 1 2 0 0 35 0 4 6 1 5 1 4 5 1 0 38 0 2 2 1 1 0 36 0 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = Delta;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"604 0 LINE",
"312 700 LINE",
"302 700 LINE",
"10 0 LINE"
);
},
{
closed = 1;
nodes = (
"299 663 LINE SMOOTH",
"302 670 OFFCURVE",
"304 676 OFFCURVE",
"307 684 CURVE",
"310 676 OFFCURVE",
"312 670 OFFCURVE",
"315 663 CURVE SMOOTH",
"587 10 LINE",
"27 10 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 614;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"762 0 LINE",
"460 729 LINE",
"307 729 LINE",
"5 0 LINE"
);
},
{
closed = 1;
nodes = (
"356 477 LINE",
"365.333 499.667 OFFCURVE",
"374.667 528.667 OFFCURVE",
"384 562 CURVE",
"394 528 OFFCURVE",
"404 500 OFFCURVE",
"412 478 CURVE SMOOTH",
"541 129 LINE",
"227 129 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
9 1 2 0 1 30 0 0 0 11 31 0 2 2 1 0 2 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 1 2 0 1 30 0 0 2 0 52 0 2 1 1 2 0 0 35 0 2 2 1 0 2 36 0 1 2 1 0 2 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 767;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"689 0 LINE",
"392 717 LINE",
"304 717 LINE",
"7 0 LINE"
);
},
{
closed = 1;
nodes = (
"330 557 LINE SMOOTH",
"338 578 OFFCURVE",
"343 592 OFFCURVE",
"348 615 CURVE",
"354.667 592.333 OFFCURVE",
"360 576 OFFCURVE",
"367 558 CURVE SMOOTH",
"559 78 LINE",
"137 78 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
5 4 3 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
9 1 2 0 1 30 0 0 0 11 31 0 2 2 1 0 2 36 0 1 1 12 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
9 1 2 0 1 30 0 0 2 0 52 0 2 2 1 0 2 36 0 1 1 15 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 1 2 0 1 30 0 0 2 0 52 0 2 1 1 2 0 0 35 0 2 2 1 0 2 36 0 1 2 1 0 2 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 696;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = product;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"45 689 LINE",
"160 689 LINE",
"160 -180 LINE",
"172 -180 LINE",
"172 689 LINE",
"508 689 LINE",
"508 -180 LINE",
"520 -180 LINE",
"520 689 LINE",
"635 689 LINE",
"635 700 LINE",
"45 700 LINE",
"45 700 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
7 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 680;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"20 603 LINE",
"95 603 LINE",
"95 -165 LINE",
"255 -165 LINE",
"255 603 LINE",
"433 603 LINE",
"433 -165 LINE",
"593 -165 LINE",
"593 603 LINE",
"668 603 LINE",
"668 729 LINE",
"20 729 LINE",
"20 729 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 5 0 0 36 6 1 5 5 11 31 3 1 1 1 16 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 0 1 53 4 2 2 0 0 5 0 0 36 6 1 5 5 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 53 6 1 5 0 0 5 0 0 35 6 1 5 5 0 0 0 36 4 2 2 0 5 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 4 5 2 2 4 42 0 0 2 3 2 0 42 0 3 1 2 3 1 48 0 1 1 51 6 1 5 4 2 5 0 2 35 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"31 640 LINE",
"125 640 LINE",
"125 -172 LINE",
"217 -172 LINE",
"217 640 LINE",
"467 640 LINE",
"467 -172 LINE",
"559 -172 LINE",
"559 640 LINE",
"653 640 LINE",
"653 717 LINE",
"31 717 LINE",
"31 717 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 11 0 11 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 2 2 0 0 5 0 0 36 6 1 5 5 11 31 3 1 1 1 16 1 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 0 1 53 4 2 2 0 0 5 0 0 36 6 1 5 5 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 1 53 6 1 5 0 0 5 0 0 35 6 1 5 5 0 0 0 36 4 2 2 0 5 0 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 4 5 2 2 4 42 0 0 2 3 2 0 42 0 3 1 2 3 1 48 0 1 1 51 6 1 5 4 2 5 0 2 35 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"45 692 OFFCURVE",
"46 690 OFFCURVE",
"48 688 CURVE SMOOTH",
"402 260 LINE",
"47 -169 LINE SMOOTH",
"45.667 -170.333 OFFCURVE",
"45 -172 OFFCURVE",
"45 -174 CURVE SMOOTH",
"45 -180 LINE",
"635 -180 LINE",
"635 -169 LINE",
"64 -169 LINE",
"418 259 LINE",
"418 261 LINE",
"64 689 LINE",
"635 689 LINE",
"635 700 LINE",
"45 700 LINE",
"45 694 LINE",
"45 694 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 3 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
6 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 680;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"40 662.333 OFFCURVE",
"45.333 645.333 OFFCURVE",
"56 632 CURVE SMOOTH",
"338 284 LINE",
"56 -69 LINE SMOOTH",
"45.333 -82.333 OFFCURVE",
"40 -98.333 OFFCURVE",
"40 -113 CURVE SMOOTH",
"40 -165 LINE",
"648 -165 LINE",
"648 -40 LINE",
"277 -40 LINE",
"509 260 LINE",
"509 304 LINE",
"277 603 LINE",
"648 603 LINE",
"648 729 LINE",
"40 729 LINE",
"40 677 LINE",
"40 677 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 8 7 6 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
14 5 4 3 2 1 1 30 0 1 1 0 0 0 36 0 0 0 11 31 0 2 2 3 0 0 36 0 3 3 16 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
14 5 4 3 2 1 1 30 0 2 0 3 2 3 0 0 37 0 1 1 0 0 0 36 0 0 0 11 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
14 5 4 3 2 1 1 30 0 0 0 1 2 0 1 0 0 38 0 2 3 3 2 0 0 35 0 2 2 3 0 0 36 0 3 2 3 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 688;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"42 674.667 OFFCURVE",
"44 665.333 OFFCURVE",
"52 656 CURVE SMOOTH",
"366 274 LINE",
"52 -112 LINE SMOOTH",
"45.333 -120 OFFCURVE",
"42 -129.667 OFFCURVE",
"42 -139 CURVE SMOOTH",
"42 -172 LINE",
"642 -172 LINE",
"642 -95 LINE",
"180 -95 LINE",
"467 260 LINE",
"467 286 LINE",
"180 640 LINE",
"642 640 LINE",
"642 717 LINE",
"42 717 LINE",
"42 684 LINE",
"42 684 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 8 7 6 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
14 5 4 3 2 1 1 30 0 1 1 0 0 0 36 0 0 0 11 31 0 2 2 3 0 0 36 0 3 3 16 3 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
14 5 4 3 2 1 1 30 0 2 0 3 2 3 0 0 37 0 1 1 0 0 0 36 0 0 0 11 1 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
14 5 4 3 2 1 1 30 0 0 0 1 2 0 1 0 0 38 0 2 3 3 2 0 0 35 0 2 2 3 0 0 36 0 3 2 3 0 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"314 0 LINE",
"595 863 LINE",
"591 863 LINE SMOOTH",
"587 863 OFFCURVE",
"584 861 OFFCURVE",
"582 856 CURVE SMOOTH",
"314 34 LINE SMOOTH",
"311 25 OFFCURVE",
"310 19 OFFCURVE",
"309 16 CURVE",
"308 19 OFFCURVE",
"307 25 OFFCURVE",
"303 34 CURVE SMOOTH",
"175 359 LINE SMOOTH",
"173 363 OFFCURVE",
"171.667 366 OFFCURVE",
"165 366 CURVE SMOOTH",
"17 366 LINE",
"17 363 LINE SMOOTH",
"17 359 OFFCURVE",
"19.333 357 OFFCURVE",
"24 357 CURVE SMOOTH",
"164 357 LINE",
"305 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
7 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 552;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"368 0 LINE",
"641 851 LINE",
"538 851 LINE SMOOTH",
"518 851 OFFCURVE",
"502 839 OFFCURVE",
"497 824 CURVE SMOOTH",
"325 259 LINE SMOOTH",
"317 231 OFFCURVE",
"311 205.667 OFFCURVE",
"307 179 CURVE",
"301.667 213.667 OFFCURVE",
"296 235 OFFCURVE",
"285 278 CURVE SMOOTH",
"256 394 LINE SMOOTH",
"252 409 OFFCURVE",
"235.667 421 OFFCURVE",
"213 421 CURVE SMOOTH",
"29 421 LINE",
"29 373 LINE SMOOTH",
"29 331.99 OFFCURVE",
"54.507 312 OFFCURVE",
"87 312 CURVE SMOOTH",
"124 312 LINE",
"237 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 24 23 21 9 7 2 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
15 1 3 0 1 30 0 2 1 2 52 0 1 0 0 3 1 0 1 0 38 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
15 1 3 0 1 30 0 2 1 2 52 0 3 0 3 53 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"343 0 LINE",
"620 856 LINE",
"562 856 LINE SMOOTH",
"548.667 856 OFFCURVE",
"539 848 OFFCURVE",
"536 838 CURVE SMOOTH",
"320 162 LINE SMOOTH",
"316 149 OFFCURVE",
"311 129 OFFCURVE",
"307 106 CURVE",
"304.333 128.667 OFFCURVE",
"301 152 OFFCURVE",
"293 173 CURVE SMOOTH",
"218 379 LINE SMOOTH",
"215 388 OFFCURVE",
"205.667 397 OFFCURVE",
"191 397 CURVE SMOOTH",
"23 397 LINE",
"23 369 LINE SMOOTH",
"23 341 OFFCURVE",
"39.333 332 OFFCURVE",
"58 332 CURVE SMOOTH",
"143 332 LINE",
"268 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 22 21 19 7 5 2 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
13 1 3 0 1 30 0 2 1 2 52 0 1 0 0 3 1 0 1 0 38 0 3 3 12 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
13 1 3 0 1 30 0 2 1 2 52 0 1 0 0 3 1 0 1 0 38 0 3 3 15 3 32 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
13 1 3 0 1 30 0 2 1 2 52 0 3 0 3 53 0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = mu;
layers = (
{
components = (
{
name = u;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"87 -180 LINE",
"87 5 LINE SMOOTH",
"87 40 OFFCURVE",
"86 96 OFFCURVE",
"83 201 CURVE SMOOTH",
"75 490 LINE",
"75 -174 LINE SMOOTH",
"75 -178 OFFCURVE",
"77 -180 OFFCURVE",
"81 -180 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
28 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
15 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 9 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
6 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 560;
},
{
components = (
{
name = u;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"195 -165 LINE",
"195 -60 LINE SMOOTH",
"195 -30.667 OFFCURVE",
"192.667 6.333 OFFCURVE",
"182 37 CURVE SMOOTH",
"50 519 LINE",
"50 -103 LINE SMOOTH",
"50 -143 OFFCURVE",
"75.333 -165 OFFCURVE",
"118 -165 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 32 0 32 29 27 21 19 12 10 9 8 5 3 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 0 1 23 15 2 2 0 2 30 6 5 2 1 1 14 31 0 0 0 2 1 0 36 3 1 2 2 12 31 0 4 4 16 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
7 1 0 1 23 15 2 3 0 2 30 6 5 2 1 1 14 31 0 0 0 3 1 0 36 0 3 3 12 31 0 2 2 12 31 0 4 4 16 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 1 0 1 23 15 2 3 0 2 30 0 0 0 3 2 0 3 1 0 38 6 5 2 1 1 14 31 0 2 2 12 31 0 4 4 16 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
7 1 0 1 23 15 2 3 0 2 30 0 0 0 3 2 0 3 1 0 38 0 2 2 12 31 0 4 4 1 0 0 36 6 5 2 1 1 14 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 0 1 23 15 2 3 0 2 30 0 0 0 3 2 0 3 1 0 38 6 5 2 1 0 2 4 1 2 1 0 38 6 5 2 1 1 4 1 0 36 0 4 1 4 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
7 1 0 5 23 15 2 3 0 2 30 6 1 5 0 4 5 0 0 35 0 0 0 3 2 0 3 1 0 38 0 1 0 2 4 1 2 1 0 38 6 1 5 5 4 1 0 36 0 4 5 4 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 647;
},
{
components = (
{
name = u;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"146 -172 LINE",
"146 -32 LINE SMOOTH",
"146 -7 OFFCURVE",
"144 24 OFFCURVE",
"140 52 CURVE SMOOTH",
"62 507 LINE",
"62 -134 LINE SMOOTH",
"62 -158 OFFCURVE",
"77 -172 OFFCURVE",
"102 -172 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 29 0 29 26 24 18 16 12 10 9 8 5 3 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
14 7 2 0 1 20 1 2 0 2 30 6 5 2 1 1 14 31 0 0 0 2 1 0 36 3 1 2 2 12 31 0 4 4 16 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
14 7 2 0 1 20 1 2 0 2 30 0 0 0 2 1 0 36 3 1 2 2 12 31 0 4 4 1 0 0 36 6 5 2 1 1 14 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
14 7 2 0 1 20 1 3 0 2 30 0 0 0 3 1 0 36 0 3 3 12 31 0 2 2 12 31 0 4 4 1 0 0 36 6 5 2 1 1 14 4 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
14 7 2 0 1 20 1 3 0 2 30 0 4 1 4 1 0 34 0 0 0 3 1 0 36 0 3 3 15 31 6 5 2 1 1 2 1 0 36 0 2 2 15 2 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
14 7 2 0 1 20 1 3 0 2 30 0 0 0 3 2 0 3 1 0 38 6 5 2 1 0 2 4 1 2 1 0 38 6 5 2 1 1 4 1 0 36 0 4 1 4 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
14 7 2 0 5 20 1 3 0 2 30 6 1 5 0 4 5 0 0 35 0 0 0 3 2 0 3 1 0 38 0 1 0 2 4 1 2 1 0 38 6 1 5 5 4 1 0 36 0 4 5 4 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
leftKerningGroup = m;
note = mu;
rightKerningGroup = m;
rightMetricsKey = u;
unicode = 00B5;
},
{
glyphname = partialdiff;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"328 -5 OFFCURVE",
"401 44 OFFCURVE",
"446.5 128.5 CURVE SMOOTH",
"496 219 OFFCURVE",
"515 336 OFFCURVE",
"515 450 CURVE SMOOTH",
"515 604.637 OFFCURVE",
"462.263 710 OFFCURVE",
"344 710 CURVE SMOOTH",
"305.541 710 OFFCURVE",
"263.319 698.089 OFFCURVE",
"223 672 CURVE",
"225 669 LINE SMOOTH",
"226.333 667 OFFCURVE",
"227.667 666 OFFCURVE",
"229 666 CURVE SMOOTH",
"237.86 666 OFFCURVE",
"280 699 OFFCURVE",
"344 699 CURVE SMOOTH",
"455.944 699 OFFCURVE",
"503 598.597 OFFCURVE",
"503 451 CURVE SMOOTH",
"503 412.504 OFFCURVE",
"500.799 355.328 OFFCURVE",
"494 310 CURVE",
"473.914 410.431 OFFCURVE",
"401.297 458 OFFCURVE",
"322 458 CURVE SMOOTH",
"173.036 458 OFFCURVE",
"75 333.698 OFFCURVE",
"75 182 CURVE SMOOTH",
"75 69.491 OFFCURVE",
"139.39 -5 OFFCURVE",
"243 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148.516 5 OFFCURVE",
"87 74.368 OFFCURVE",
"87 183 CURVE SMOOTH",
"87 331.427 OFFCURVE",
"178.853 448 OFFCURVE",
"324 448 CURVE SMOOTH",
"422.112 448 OFFCURVE",
"477.254 372.156 OFFCURVE",
"489 287 CURVE",
"463.207 129.662 OFFCURVE",
"377.371 5 OFFCURVE",
"245 5 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
32 22 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
65 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 1 42 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 2 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
27 1 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
50 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"349.667 -8 OFFCURVE",
"428 37 OFFCURVE",
"480 117 CURVE SMOOTH",
"532 197 OFFCURVE",
"557 312.667 OFFCURVE",
"557 454 CURVE SMOOTH",
"557 621.234 OFFCURVE",
"467.855 735 OFFCURVE",
"333 735 CURVE SMOOTH",
"249.349 735 OFFCURVE",
"190.912 711.123 OFFCURVE",
"133 667 CURVE",
"167 609 LINE SMOOTH",
"179 590.333 OFFCURVE",
"190.333 585 OFFCURVE",
"201 585 CURVE SMOOTH",
"226.641 585 OFFCURVE",
"280.267 617 OFFCURVE",
"311 617 CURVE SMOOTH",
"380.086 617 OFFCURVE",
"418 554.658 OFFCURVE",
"418 453 CURVE SMOOTH",
"418 447 OFFCURVE",
"418 441 OFFCURVE",
"418 435 CURVE",
"388.667 468.333 OFFCURVE",
"347.333 487 OFFCURVE",
"286 487 CURVE SMOOTH",
"137.645 487 OFFCURVE",
"22 366.388 OFFCURVE",
"22 212 CURVE SMOOTH",
"22 79.128 OFFCURVE",
"115.969 -8 OFFCURVE",
"243 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"211.667 108 OFFCURVE",
"182 146 OFFCURVE",
"182 214 CURVE SMOOTH",
"182 305.94 OFFCURVE",
"218.143 371 OFFCURVE",
"302 371 CURVE SMOOTH",
"357.772 371 OFFCURVE",
"386.565 334.597 OFFCURVE",
"398 286 CURVE",
"377.009 169.383 OFFCURVE",
"329.096 108 OFFCURVE",
"261 108 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
44 43 54 52 43 60 44 60 40 38 35 33 26 24 16 14 6 4 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 3 0 28 1 6 2 48 1 5 6 3 30 0 4 3 2 3 4 2 50 0 2 0 6 5 2 6 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 7 1 5 5 1 1 0 36 0 1 1 18 1 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 1 3 0 28 1 6 2 48 1 5 6 3 30 0 4 3 2 3 4 2 50 0 0 0 3 4 0 3 1 0 38 0 2 0 6 5 2 6 1 0 38 7 1 5 1 1 5 1 0 35 7 1 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"341.667 -7 OFFCURVE",
"414.667 40.667 OFFCURVE",
"464 122 CURVE SMOOTH",
"513.333 203.333 OFFCURVE",
"537 317.333 OFFCURVE",
"537 452 CURVE SMOOTH",
"537 613.248 OFFCURVE",
"465.571 724 OFFCURVE",
"338 724 CURVE SMOOTH",
"267.811 724 OFFCURVE",
"229.203 704.882 OFFCURVE",
"174 669 CURVE",
"193 635 LINE SMOOTH",
"201 623 OFFCURVE",
"206 620 OFFCURVE",
"214 620 CURVE SMOOTH",
"230.983 620 OFFCURVE",
"294.122 653 OFFCURVE",
"326 653 CURVE SMOOTH",
"408.667 653 OFFCURVE",
"457 584 OFFCURVE",
"457 452 CURVE SMOOTH",
"457 434.667 OFFCURVE",
"456.333 412.333 OFFCURVE",
"455 387 CURVE",
"423 444.333 OFFCURVE",
"371.333 475 OFFCURVE",
"302 475 CURVE SMOOTH",
"152.252 475 OFFCURVE",
"46 352.543 OFFCURVE",
"46 199 CURVE SMOOTH",
"46 75.068 OFFCURVE",
"125.901 -7 OFFCURVE",
"243 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180.198 64 OFFCURVE",
"138 116.294 OFFCURVE",
"138 201 CURVE SMOOTH",
"138 316.577 OFFCURVE",
"200.203 404 OFFCURVE",
"312 404 CURVE SMOOTH",
"385.863 404 OFFCURVE",
"424.753 352.686 OFFCURVE",
"439 290 CURVE",
"414.62 148.597 OFFCURVE",
"352.117 64 OFFCURVE",
"253 64 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
44 43 54 52 43 62 44 62 40 38 35 33 26 24 16 14 6 4 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 1 3 0 48 28 2 5 6 2 30 0 4 3 2 3 4 2 50 0 2 0 6 5 2 6 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 7 1 5 5 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 3 0 48 28 2 5 6 2 30 0 4 3 2 3 4 2 50 0 0 0 3 4 0 3 1 0 38 0 2 0 6 5 2 6 1 0 38 7 1 5 5 1 1 0 36 0 1 1 21 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 1 3 0 48 28 2 5 6 2 30 0 4 3 2 3 4 2 50 0 0 0 3 4 0 3 1 0 38 0 2 0 6 5 2 6 1 0 38 7 1 5 1 1 5 1 0 35 7 1 5 5 1 1 0 36 0 1 5 1 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"328 532 LINE",
"328 644 OFFCURVE",
"272 708 OFFCURVE",
"188 708 CURVE SMOOTH",
"104 708 OFFCURVE",
"48 644 OFFCURVE",
"48 532 CURVE SMOOTH",
"48 421 OFFCURVE",
"104 357 OFFCURVE",
"188 357 CURVE SMOOTH",
"272 357 OFFCURVE",
"328 421 OFFCURVE",
"328 532 CURVE"
);
},
{
closed = 1;
nodes = (
"317 532 LINE",
"317 426 OFFCURVE",
"266 366 OFFCURVE",
"188 366 CURVE SMOOTH",
"111 366 OFFCURVE",
"59 425 OFFCURVE",
"59 532 CURVE SMOOTH",
"59 640 OFFCURVE",
"111 699 OFFCURVE",
"188 699 CURVE SMOOTH",
"266 699 OFFCURVE",
"317 640 OFFCURVE",
"317 532 CURVE"
);
},
{
closed = 1;
nodes = (
"123 0 LINE SMOOTH",
"127 0 OFFCURVE",
"130 1 OFFCURVE",
"131 4 CURVE",
"625 700 LINE",
"618 700 LINE SMOOTH",
"615 700 OFFCURVE",
"612 699 OFFCURVE",
"610 696 CURVE SMOOTH",
"116 0 LINE",
"116 0 LINE"
);
},
{
closed = 1;
nodes = (
"698 167 LINE",
"698 279 OFFCURVE",
"642 343 OFFCURVE",
"558 343 CURVE SMOOTH",
"474 343 OFFCURVE",
"418 279 OFFCURVE",
"418 167 CURVE SMOOTH",
"418 56 OFFCURVE",
"474 -8 OFFCURVE",
"558 -8 CURVE SMOOTH",
"642 -8 OFFCURVE",
"698 56 OFFCURVE",
"698 167 CURVE"
);
},
{
closed = 1;
nodes = (
"687 167 LINE",
"687 61 OFFCURVE",
"636 1 OFFCURVE",
"558 1 CURVE SMOOTH",
"481 1 OFFCURVE",
"429 60 OFFCURVE",
"429 167 CURVE SMOOTH",
"429 275 OFFCURVE",
"481 334 OFFCURVE",
"558 334 CURVE SMOOTH",
"636 334 OFFCURVE",
"687 275 OFFCURVE",
"687 167 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
30 3 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 3 20 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
78 3 58 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
48 3 68 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
43 10 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 10 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
63 1 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
83 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 746;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"379 552 LINE",
"379 661 OFFCURVE",
"307 736 OFFCURVE",
"204 736 CURVE SMOOTH",
"102 736 OFFCURVE",
"30 660 OFFCURVE",
"30 552 CURVE SMOOTH",
"30 447 OFFCURVE",
"102 373 OFFCURVE",
"204 373 CURVE SMOOTH",
"299 373 OFFCURVE",
"379 449 OFFCURVE",
"379 552 CURVE"
);
},
{
closed = 1;
nodes = (
"260 552 LINE",
"260 495 OFFCURVE",
"242 469 OFFCURVE",
"204 469 CURVE SMOOTH",
"167 469 OFFCURVE",
"150 495 OFFCURVE",
"150 552 CURVE SMOOTH",
"150 612 OFFCURVE",
"167 639 OFFCURVE",
"204 639 CURVE SMOOTH",
"242 639 OFFCURVE",
"260 613 OFFCURVE",
"260 552 CURVE"
);
},
{
closed = 1;
nodes = (
"175 0 LINE SMOOTH",
"196 0 OFFCURVE",
"212 10 OFFCURVE",
"221 22 CURVE SMOOTH",
"770 729 LINE",
"657 729 LINE SMOOTH",
"632 729 OFFCURVE",
"619 717 OFFCURVE",
"608 706 CURVE",
"59 0 LINE",
"59 0 LINE"
);
},
{
closed = 1;
nodes = (
"798 171 LINE",
"798 280 OFFCURVE",
"726 355 OFFCURVE",
"623 355 CURVE SMOOTH",
"521 355 OFFCURVE",
"449 279 OFFCURVE",
"449 171 CURVE SMOOTH",
"449 66 OFFCURVE",
"522 -9 OFFCURVE",
"623 -9 CURVE SMOOTH",
"718 -9 OFFCURVE",
"798 67 OFFCURVE",
"798 171 CURVE"
);
},
{
closed = 1;
nodes = (
"679 171 LINE",
"679 114 OFFCURVE",
"661 88 OFFCURVE",
"623 88 CURVE SMOOTH",
"586 88 OFFCURVE",
"569 114 OFFCURVE",
"569 171 CURVE SMOOTH",
"569 231 OFFCURVE",
"586 258 OFFCURVE",
"623 258 CURVE SMOOTH",
"662 258 OFFCURVE",
"679 231 OFFCURVE",
"679 171 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
86 84 76 74 66 64 56 54 49 47 44 42 36 34 26 24 16 14 6 4 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 9 9 5 1 2 36 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 5 5 12 31 0 9 9 6 1 2 36 0 6 6 18 6 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 4 4 11 31 0 2 2 1 1 0 36 0 1 1 17 31 0 5 5 12 31 0 9 9 6 1 2 36 0 6 6 18 6 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 4 1 2 1 4 2 50 0 5 9 6 9 5 6 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 9 5 6 9 1 0 35 0 9 9 6 1 2 36 0 6 9 6 1 2 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 828;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"358 544 LINE",
"358 654 OFFCURVE",
"292 724 OFFCURVE",
"199 724 CURVE SMOOTH",
"104 724 OFFCURVE",
"40 654 OFFCURVE",
"40 544 CURVE SMOOTH",
"40 436 OFFCURVE",
"104 366 OFFCURVE",
"199 366 CURVE SMOOTH",
"289 366 OFFCURVE",
"358 437 OFFCURVE",
"358 544 CURVE"
);
},
{
closed = 1;
nodes = (
"288 544 LINE",
"288 463 OFFCURVE",
"254 425 OFFCURVE",
"199 425 CURVE SMOOTH",
"144 425 OFFCURVE",
"110 463 OFFCURVE",
"110 544 CURVE SMOOTH",
"110 624 OFFCURVE",
"143 665 OFFCURVE",
"199 665 CURVE SMOOTH",
"254 665 OFFCURVE",
"288 624 OFFCURVE",
"288 544 CURVE"
);
},
{
closed = 1;
nodes = (
"153 0 LINE SMOOTH",
"166 0 OFFCURVE",
"175 6 OFFCURVE",
"182 15 CURVE SMOOTH",
"705 717 LINE",
"641 717 LINE SMOOTH",
"625 717 OFFCURVE",
"617 710 OFFCURVE",
"608 699 CURVE",
"87 0 LINE",
"87 0 LINE"
);
},
{
closed = 1;
nodes = (
"754 169 LINE",
"754 279 OFFCURVE",
"690 350 OFFCURVE",
"595 350 CURVE SMOOTH",
"501 350 OFFCURVE",
"437 279 OFFCURVE",
"437 169 CURVE SMOOTH",
"437 63 OFFCURVE",
"502 -9 OFFCURVE",
"595 -9 CURVE SMOOTH",
"684 -9 OFFCURVE",
"754 64 OFFCURVE",
"754 169 CURVE"
);
},
{
closed = 1;
nodes = (
"685 169 LINE",
"685 90 OFFCURVE",
"650 51 OFFCURVE",
"595 51 CURVE SMOOTH",
"539 51 OFFCURVE",
"507 89 OFFCURVE",
"507 169 CURVE SMOOTH",
"507 250 OFFCURVE",
"538 291 OFFCURVE",
"595 291 CURVE SMOOTH",
"651 291 OFFCURVE",
"685 249 OFFCURVE",
"685 169 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
86 84 76 74 66 64 56 54 49 47 44 42 36 34 26 24 16 14 6 4 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 9 9 5 1 0 36 6 1 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 5 5 12 31 0 9 9 6 1 0 36 0 6 6 18 6 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 4 4 11 31 0 2 2 1 1 0 36 0 1 1 17 31 0 5 5 12 31 0 9 9 6 1 0 36 0 6 6 18 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 1 2 1 4 2 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 5 5 15 31 0 9 9 6 1 0 36 0 6 6 21 6 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 4 1 2 1 4 2 50 0 5 9 6 9 5 6 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 0 7 0 8 9 7 8 1 0 38 0 9 5 6 9 1 0 35 0 9 9 6 1 0 36 0 6 9 6 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 794;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"328 532 LINE",
"328 644 OFFCURVE",
"272 708 OFFCURVE",
"188 708 CURVE SMOOTH",
"104 708 OFFCURVE",
"48 644 OFFCURVE",
"48 532 CURVE SMOOTH",
"48 421 OFFCURVE",
"104 357 OFFCURVE",
"188 357 CURVE SMOOTH",
"272 357 OFFCURVE",
"328 421 OFFCURVE",
"328 532 CURVE"
);
},
{
closed = 1;
nodes = (
"317 532 LINE",
"317 426 OFFCURVE",
"266 366 OFFCURVE",
"188 366 CURVE SMOOTH",
"111 366 OFFCURVE",
"59 425 OFFCURVE",
"59 532 CURVE SMOOTH",
"59 640 OFFCURVE",
"111 699 OFFCURVE",
"188 699 CURVE SMOOTH",
"266 699 OFFCURVE",
"317 640 OFFCURVE",
"317 532 CURVE"
);
},
{
closed = 1;
nodes = (
"123 0 LINE SMOOTH",
"127 0 OFFCURVE",
"130 1 OFFCURVE",
"131 4 CURVE",
"625 700 LINE",
"618 700 LINE SMOOTH",
"615 700 OFFCURVE",
"612 699 OFFCURVE",
"610 696 CURVE SMOOTH",
"116 0 LINE",
"116 0 LINE"
);
},
{
closed = 1;
nodes = (
"698 167 LINE",
"698 279 OFFCURVE",
"642 343 OFFCURVE",
"558 343 CURVE SMOOTH",
"474 343 OFFCURVE",
"418 279 OFFCURVE",
"418 167 CURVE SMOOTH",
"418 56 OFFCURVE",
"474 -8 OFFCURVE",
"558 -8 CURVE SMOOTH",
"642 -8 OFFCURVE",
"698 56 OFFCURVE",
"698 167 CURVE"
);
},
{
closed = 1;
nodes = (
"687 167 LINE",
"687 61 OFFCURVE",
"636 1 OFFCURVE",
"558 1 CURVE SMOOTH",
"481 1 OFFCURVE",
"429 60 OFFCURVE",
"429 167 CURVE SMOOTH",
"429 275 OFFCURVE",
"481 334 OFFCURVE",
"558 334 CURVE SMOOTH",
"636 334 OFFCURVE",
"687 275 OFFCURVE",
"687 167 CURVE"
);
},
{
closed = 1;
nodes = (
"1056 167 LINE",
"1056 279 OFFCURVE",
"1000 343 OFFCURVE",
"916 343 CURVE SMOOTH",
"832 343 OFFCURVE",
"776 279 OFFCURVE",
"776 167 CURVE SMOOTH",
"776 56 OFFCURVE",
"832 -8 OFFCURVE",
"916 -8 CURVE SMOOTH",
"1000 -8 OFFCURVE",
"1056 56 OFFCURVE",
"1056 167 CURVE"
);
},
{
closed = 1;
nodes = (
"1045 167 LINE",
"1045 61 OFFCURVE",
"994 1 OFFCURVE",
"916 1 CURVE SMOOTH",
"839 1 OFFCURVE",
"787 60 OFFCURVE",
"787 167 CURVE SMOOTH",
"787 275 OFFCURVE",
"839 334 OFFCURVE",
"916 334 CURVE SMOOTH",
"994 334 OFFCURVE",
"1045 275 OFFCURVE",
"1045 167 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
30 3 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 3 20 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
78 3 58 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
48 3 68 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
118 3 98 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
88 3 108 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
43 10 88 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 10 88 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
129 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
93 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
93 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
63 1 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
35 1 5 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
83 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
103 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
113 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
123 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1097;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"379 552 LINE",
"379 661 OFFCURVE",
"307 736 OFFCURVE",
"204 736 CURVE SMOOTH",
"102 736 OFFCURVE",
"30 660 OFFCURVE",
"30 552 CURVE SMOOTH",
"30 447 OFFCURVE",
"102 373 OFFCURVE",
"204 373 CURVE SMOOTH",
"299 373 OFFCURVE",
"379 449 OFFCURVE",
"379 552 CURVE"
);
},
{
closed = 1;
nodes = (
"260 552 LINE",
"260 495 OFFCURVE",
"242 469 OFFCURVE",
"204 469 CURVE SMOOTH",
"167 469 OFFCURVE",
"150 495 OFFCURVE",
"150 552 CURVE SMOOTH",
"150 612 OFFCURVE",
"167 639 OFFCURVE",
"204 639 CURVE SMOOTH",
"242 639 OFFCURVE",
"260 613 OFFCURVE",
"260 552 CURVE"
);
},
{
closed = 1;
nodes = (
"175 0 LINE SMOOTH",
"196 0 OFFCURVE",
"212 10 OFFCURVE",
"221 22 CURVE SMOOTH",
"770 729 LINE",
"657 729 LINE SMOOTH",
"632 729 OFFCURVE",
"619 717 OFFCURVE",
"608 706 CURVE",
"59 0 LINE",
"59 0 LINE"
);
},
{
closed = 1;
nodes = (
"798 171 LINE",
"798 280 OFFCURVE",
"726 355 OFFCURVE",
"623 355 CURVE SMOOTH",
"521 355 OFFCURVE",
"449 279 OFFCURVE",
"449 171 CURVE SMOOTH",
"449 66 OFFCURVE",
"522 -9 OFFCURVE",
"623 -9 CURVE SMOOTH",
"718 -9 OFFCURVE",
"798 67 OFFCURVE",
"798 171 CURVE"
);
},
{
closed = 1;
nodes = (
"679 171 LINE",
"679 114 OFFCURVE",
"661 88 OFFCURVE",
"623 88 CURVE SMOOTH",
"586 88 OFFCURVE",
"569 114 OFFCURVE",
"569 171 CURVE SMOOTH",
"569 231 OFFCURVE",
"586 258 OFFCURVE",
"623 258 CURVE SMOOTH",
"662 258 OFFCURVE",
"679 231 OFFCURVE",
"679 171 CURVE"
);
},
{
closed = 1;
nodes = (
"1172 171 LINE",
"1172 280 OFFCURVE",
"1100 355 OFFCURVE",
"997 355 CURVE SMOOTH",
"895 355 OFFCURVE",
"823 279 OFFCURVE",
"823 171 CURVE SMOOTH",
"823 66 OFFCURVE",
"896 -9 OFFCURVE",
"997 -9 CURVE SMOOTH",
"1092 -9 OFFCURVE",
"1172 67 OFFCURVE",
"1172 171 CURVE"
);
},
{
closed = 1;
nodes = (
"1053 171 LINE",
"1053 114 OFFCURVE",
"1035 88 OFFCURVE",
"997 88 CURVE SMOOTH",
"960 88 OFFCURVE",
"943 114 OFFCURVE",
"943 171 CURVE SMOOTH",
"943 231 OFFCURVE",
"960 258 OFFCURVE",
"997 258 CURVE SMOOTH",
"1036 258 OFFCURVE",
"1053 231 OFFCURVE",
"1053 171 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
126 124 116 114 106 104 96 94 86 84 76 74 66 64 56 54 49 47 44 42 36 34 26 24 16 14 6 4 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 13 1 9 9 5 1 2 36 10 6 2 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 5 5 12 31 13 1 9 9 6 1 2 36 10 1 6 6 18 6 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 4 4 11 31 0 2 2 1 1 0 36 0 1 1 17 31 0 5 5 12 31 13 1 9 9 6 1 2 36 10 1 6 6 18 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 4 1 2 1 4 2 50 0 5 9 6 9 5 6 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 13 1 9 5 6 9 1 0 35 13 1 9 9 6 1 2 36 10 1 6 9 6 1 2 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 89 values pushed */
0 4 1 2 1 4 2 50 0 5 13 10 13 5 10 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 0 11 0 12 8 11 12 1 0 38 0 7 0 8 9 7 8 1 0 38 0 9 13 6 9 1 0 35 0 13 0 10 6 13 10 1 0 38 0 9 9 6 1 2 36 0 6 9 6 1 2 33 10 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1191;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"358 544 LINE",
"358 654 OFFCURVE",
"292 724 OFFCURVE",
"199 724 CURVE SMOOTH",
"104 724 OFFCURVE",
"40 654 OFFCURVE",
"40 544 CURVE SMOOTH",
"40 436 OFFCURVE",
"104 366 OFFCURVE",
"199 366 CURVE SMOOTH",
"289 366 OFFCURVE",
"358 437 OFFCURVE",
"358 544 CURVE"
);
},
{
closed = 1;
nodes = (
"288 544 LINE",
"288 463 OFFCURVE",
"254 425 OFFCURVE",
"199 425 CURVE SMOOTH",
"144 425 OFFCURVE",
"110 463 OFFCURVE",
"110 544 CURVE SMOOTH",
"110 624 OFFCURVE",
"143 665 OFFCURVE",
"199 665 CURVE SMOOTH",
"254 665 OFFCURVE",
"288 624 OFFCURVE",
"288 544 CURVE"
);
},
{
closed = 1;
nodes = (
"153 0 LINE SMOOTH",
"166 0 OFFCURVE",
"175 6 OFFCURVE",
"182 15 CURVE SMOOTH",
"705 717 LINE",
"641 717 LINE SMOOTH",
"625 717 OFFCURVE",
"616 710 OFFCURVE",
"611 702 CURVE SMOOTH",
"87 0 LINE",
"87 0 LINE"
);
},
{
closed = 1;
nodes = (
"754 169 LINE",
"754 279 OFFCURVE",
"690 350 OFFCURVE",
"595 350 CURVE SMOOTH",
"501 350 OFFCURVE",
"437 279 OFFCURVE",
"437 169 CURVE SMOOTH",
"437 63 OFFCURVE",
"502 -9 OFFCURVE",
"595 -9 CURVE SMOOTH",
"684 -9 OFFCURVE",
"754 64 OFFCURVE",
"754 169 CURVE"
);
},
{
closed = 1;
nodes = (
"685 169 LINE",
"685 90 OFFCURVE",
"650 51 OFFCURVE",
"595 51 CURVE SMOOTH",
"539 51 OFFCURVE",
"507 89 OFFCURVE",
"507 169 CURVE SMOOTH",
"507 250 OFFCURVE",
"538 291 OFFCURVE",
"595 291 CURVE SMOOTH",
"651 291 OFFCURVE",
"685 249 OFFCURVE",
"685 169 CURVE"
);
},
{
closed = 1;
nodes = (
"1121 169 LINE",
"1121 280 OFFCURVE",
"1055 350 OFFCURVE",
"962 350 CURVE SMOOTH",
"867 350 OFFCURVE",
"803 279 OFFCURVE",
"803 169 CURVE SMOOTH",
"803 63 OFFCURVE",
"868 -9 OFFCURVE",
"962 -9 CURVE SMOOTH",
"1051 -9 OFFCURVE",
"1121 64 OFFCURVE",
"1121 169 CURVE"
);
},
{
closed = 1;
nodes = (
"1051 169 LINE",
"1051 89 OFFCURVE",
"1016 51 OFFCURVE",
"962 51 CURVE SMOOTH",
"907 51 OFFCURVE",
"873 90 OFFCURVE",
"873 169 CURVE SMOOTH",
"873 249 OFFCURVE",
"906 291 OFFCURVE",
"962 291 CURVE SMOOTH",
"1017 291 OFFCURVE",
"1051 250 OFFCURVE",
"1051 169 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
126 124 116 114 106 104 96 94 86 84 76 74 66 64 56 54 49 47 44 42 36 34 26 24 16 14 6 4 14 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 13 1 9 9 5 1 0 36 10 6 2 5 5 12 5 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 2 2 1 1 0 36 4 1 1 1 17 31 0 5 5 12 31 13 1 9 9 6 1 0 36 10 1 6 6 18 6 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 4 4 11 31 0 2 2 1 1 0 36 0 1 1 17 31 0 5 5 12 31 13 1 9 9 6 1 0 36 10 1 6 6 18 6 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 1 2 1 4 2 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 0 5 5 15 31 13 1 9 9 6 1 0 36 10 1 6 6 21 6 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 4 1 2 1 4 2 50 0 5 9 6 9 5 6 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 11 1 7 12 1 8 9 7 8 1 0 38 13 1 9 5 6 9 1 0 35 13 1 9 9 6 1 0 36 10 1 6 9 6 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 89 values pushed */
0 4 1 2 1 4 2 50 0 5 13 10 13 5 10 50 0 1 0 2 3 1 2 1 0 38 0 3 0 0 7 3 0 1 0 38 0 11 0 12 8 11 12 1 0 38 0 7 0 8 9 7 8 1 0 38 0 9 13 6 9 1 0 35 0 13 0 10 6 13 10 1 0 38 0 9 9 6 1 0 36 0 6 9 6 1 0 33 10 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 1155;
}
);
leftMetricsKey = percent;
note = perthousand;
rightMetricsKey = o;
unicode = 2030;
},
{
glyphname = largecircle;
layers = (
{
anchors = (
{
name = top;
position = "{-399, 729}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "94897BFB-0E6A-4235-ACF3-27F203EEBAA8";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"461.333 -7 OFFCURVE",
"525.167 12 OFFCURVE",
"580.5 44 CURVE SMOOTH",
"608.167 60 OFFCURVE",
"633.333 79.333 OFFCURVE",
"656 102 CURVE SMOOTH",
"701.333 147.333 OFFCURVE",
"734.667 203.167 OFFCURVE",
"752 266.5 CURVE SMOOTH",
"760.667 298.167 OFFCURVE",
"765 331 OFFCURVE",
"765 365 CURVE SMOOTH",
"765 433 OFFCURVE",
"747.167 497.167 OFFCURVE",
"714.5 552.5 CURVE SMOOTH",
"698.167 580.167 OFFCURVE",
"678.667 605.333 OFFCURVE",
"656 628 CURVE SMOOTH",
"610.667 673.333 OFFCURVE",
"554.833 705.5 OFFCURVE",
"491.5 723.5 CURVE SMOOTH",
"459.833 732.5 OFFCURVE",
"426.667 737 OFFCURVE",
"392 737 CURVE SMOOTH",
"324 737 OFFCURVE",
"259.833 718 OFFCURVE",
"204.5 686 CURVE SMOOTH",
"176.833 670 OFFCURVE",
"151.667 650.667 OFFCURVE",
"129 628 CURVE SMOOTH",
"83.667 582.667 OFFCURVE",
"51.5 526.833 OFFCURVE",
"33.5 463.5 CURVE SMOOTH",
"24.5 431.833 OFFCURVE",
"20 399 OFFCURVE",
"20 365 CURVE",
"20 365 LINE",
"20 295.667 OFFCURVE",
"39 232.833 OFFCURVE",
"71 177.5 CURVE SMOOTH",
"87 149.833 OFFCURVE",
"106.333 124.667 OFFCURVE",
"129 102 CURVE SMOOTH",
"174.333 56.667 OFFCURVE",
"230.167 24.5 OFFCURVE",
"293.5 6.5 CURVE SMOOTH",
"325.167 -2.5 OFFCURVE",
"358 -7 OFFCURVE",
"392 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"229.251 63 OFFCURVE",
"103 197.199 OFFCURVE",
"103 365 CURVE",
"103 365 LINE",
"103 533.108 OFFCURVE",
"229.894 669 OFFCURVE",
"392 669 CURVE SMOOTH",
"446.667 669 OFFCURVE",
"497.167 653.5 OFFCURVE",
"540.5 627.5 CURVE SMOOTH",
"562.167 614.5 OFFCURVE",
"581.833 598.833 OFFCURVE",
"599.5 580.5 CURVE SMOOTH",
"634.833 543.833 OFFCURVE",
"660.667 498 OFFCURVE",
"674 446 CURVE SMOOTH",
"680.667 420 OFFCURVE",
"684 393 OFFCURVE",
"684 365 CURVE SMOOTH",
"684 281 OFFCURVE",
"653.667 208.333 OFFCURVE",
"603 155 CURVE",
"541 283 LINE SMOOTH",
"530 306 OFFCURVE",
"517.667 320.333 OFFCURVE",
"499 331 CURVE",
"556.332 351.848 OFFCURVE",
"584 399.94 OFFCURVE",
"584 457 CURVE SMOOTH",
"584 549.448 OFFCURVE",
"517.093 591 OFFCURVE",
"393 591 CURVE SMOOTH",
"217 591 LINE",
"217 141 LINE",
"351 141 LINE",
"351 292 LINE",
"367 292 LINE SMOOTH",
"383 292 OFFCURVE",
"390.333 286.667 OFFCURVE",
"397 276 CURVE",
"443 160 LINE",
"450.333 147.333 OFFCURVE",
"463 141 OFFCURVE",
"481 141 CURVE SMOOTH",
"589 141 LINE",
"537 91.667 OFFCURVE",
"469.333 63 OFFCURVE",
"392 63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 493 LINE",
"351 493 LINE",
"393 493 LINE SMOOTH",
"443.518 493 OFFCURVE",
"452 478.777 OFFCURVE",
"452 440 CURVE SMOOTH",
"452 397.475 OFFCURVE",
"442.98 384 OFFCURVE",
"383 384 CURVE SMOOTH",
"351 384 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "CFCCFF66-AF19-449E-80CF-BE42E0981831";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"467 -7 OFFCURVE",
"529.5 11 OFFCURVE",
"583.5 43 CURVE SMOOTH",
"610.5 59 OFFCURVE",
"635.167 78.167 OFFCURVE",
"657.5 100.5 CURVE SMOOTH",
"702.167 145.167 OFFCURVE",
"734.667 199.5 OFFCURVE",
"752 261.5 CURVE SMOOTH",
"760.667 292.5 OFFCURVE",
"765 324.667 OFFCURVE",
"765 358 CURVE SMOOTH",
"765 426 OFFCURVE",
"747 488.333 OFFCURVE",
"715 543 CURVE SMOOTH",
"699 570.333 OFFCURVE",
"679.833 595 OFFCURVE",
"657.5 617 CURVE SMOOTH",
"612.833 661 OFFCURVE",
"558.5 693.667 OFFCURVE",
"496.5 711 CURVE SMOOTH",
"465.5 719.667 OFFCURVE",
"433 724 OFFCURVE",
"399 724 CURVE SMOOTH",
"332.333 724 OFFCURVE",
"269.5 706 OFFCURVE",
"215.5 674 CURVE SMOOTH",
"188.5 658 OFFCURVE",
"163.833 639 OFFCURVE",
"141.5 617 CURVE SMOOTH",
"96.833 573 OFFCURVE",
"64.333 517.5 OFFCURVE",
"47 455.5 CURVE SMOOTH",
"38.333 424.5 OFFCURVE",
"34 392 OFFCURVE",
"34 358 CURVE",
"34 358 LINE",
"34 291.333 OFFCURVE",
"52 228.5 OFFCURVE",
"84 174.5 CURVE SMOOTH",
"100 147.5 OFFCURVE",
"119.167 122.833 OFFCURVE",
"141.5 100.5 CURVE SMOOTH",
"186.167 55.833 OFFCURVE",
"240.5 23.333 OFFCURVE",
"302.5 6 CURVE SMOOTH",
"333.5 -2.667 OFFCURVE",
"365.667 -7 OFFCURVE",
"399 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340.333 38 OFFCURVE",
"285.667 54.167 OFFCURVE",
"239 81.5 CURVE SMOOTH",
"215.667 95.167 OFFCURVE",
"194.5 111.667 OFFCURVE",
"175.5 131 CURVE SMOOTH",
"137.5 169.667 OFFCURVE",
"109.667 218.333 OFFCURVE",
"95 273 CURVE SMOOTH",
"87.667 300.333 OFFCURVE",
"84 328.667 OFFCURVE",
"84 358 CURVE",
"84 358 LINE",
"84 447.333 OFFCURVE",
"118.833 528.5 OFFCURVE",
"175.5 586.5 CURVE SMOOTH",
"232.167 644.5 OFFCURVE",
"311 681 OFFCURVE",
"399 681 CURVE SMOOTH",
"457.667 681 OFFCURVE",
"513.333 665 OFFCURVE",
"560 637 CURVE SMOOTH",
"583.333 623 OFFCURVE",
"604.5 606.167 OFFCURVE",
"623.5 586.5 CURVE SMOOTH",
"661.5 547.167 OFFCURVE",
"689.167 499.833 OFFCURVE",
"704.5 444.5 CURVE SMOOTH",
"712.167 416.833 OFFCURVE",
"716 388 OFFCURVE",
"716 358 CURVE SMOOTH",
"716 268.667 OFFCURVE",
"680.167 189.5 OFFCURVE",
"623.5 131.5 CURVE SMOOTH",
"566.833 73.5 OFFCURVE",
"487 38 OFFCURVE",
"399 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327 136 LINE",
"327 313 LINE",
"367 313 LINE",
"367 313 LINE",
"384.333 313 OFFCURVE",
"391.667 308 OFFCURVE",
"397 300 CURVE SMOOTH",
"498 149 LINE SMOOTH",
"503.333 140.333 OFFCURVE",
"511.333 136 OFFCURVE",
"522 136 CURVE SMOOTH",
"596 136 LINE",
"482 303 LINE",
"475.333 316.333 OFFCURVE",
"466.667 326.333 OFFCURVE",
"456 333 CURVE",
"526.667 350.333 OFFCURVE",
"562 396.333 OFFCURVE",
"562 459 CURVE SMOOTH",
"562 540.333 OFFCURVE",
"507.667 582 OFFCURVE",
"393 582 CURVE SMOOTH",
"249 582 LINE",
"249 136 LINE"
);
},
{
closed = 1;
nodes = (
"327 522 LINE",
"327 522 LINE",
"393 522 LINE SMOOTH",
"458.844 522 OFFCURVE",
"485 500.772 OFFCURVE",
"485 449 CURVE SMOOTH",
"485 395.816 OFFCURVE",
"454.939 370 OFFCURVE",
"385 370 CURVE SMOOTH",
"327 370 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 798;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "E1544E44-60E9-4EA8-97F2-28BD3DA536FF";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"505.667 -7 OFFCURVE",
"594.833 32.833 OFFCURVE",
"659.5 97.5 CURVE SMOOTH",
"724.167 162.167 OFFCURVE",
"764 251.333 OFFCURVE",
"764 350 CURVE SMOOTH",
"764 448.667 OFFCURVE",
"724.167 537.833 OFFCURVE",
"659.5 602.5 CURVE SMOOTH",
"594.833 667.167 OFFCURVE",
"505.667 707 OFFCURVE",
"407 707 CURVE SMOOTH",
"308.333 707 OFFCURVE",
"219.167 667.167 OFFCURVE",
"154.5 602.5 CURVE SMOOTH",
"89.833 537.833 OFFCURVE",
"50 448.667 OFFCURVE",
"50 350 CURVE",
"50 350 LINE",
"50 251.333 OFFCURVE",
"89.833 162.167 OFFCURVE",
"154.5 97.5 CURVE SMOOTH",
"219.167 32.833 OFFCURVE",
"308.333 -7 OFFCURVE",
"407 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312.333 5 OFFCURVE",
"225.667 43.333 OFFCURVE",
"163 106 CURVE SMOOTH",
"100.333 168.667 OFFCURVE",
"62 255.333 OFFCURVE",
"62 350 CURVE",
"62 350 LINE",
"62 414 OFFCURVE",
"79.5 473.167 OFFCURVE",
"109.5 524.5 CURVE SMOOTH",
"124.5 550.167 OFFCURVE",
"142.5 573.5 OFFCURVE",
"163.5 594.5 CURVE SMOOTH",
"205.5 636.5 OFFCURVE",
"256.333 668 OFFCURVE",
"315 684 CURVE SMOOTH",
"344.333 692 OFFCURVE",
"375 696 OFFCURVE",
"407 696 CURVE SMOOTH",
"471 696 OFFCURVE",
"530.167 679.667 OFFCURVE",
"581.5 649 CURVE SMOOTH",
"607.167 633.667 OFFCURVE",
"630.5 615.5 OFFCURVE",
"651.5 594.5 CURVE SMOOTH",
"693.5 552.5 OFFCURVE",
"725 500.667 OFFCURVE",
"741 442 CURVE SMOOTH",
"749 412.667 OFFCURVE",
"753 382 OFFCURVE",
"753 350 CURVE SMOOTH",
"753 286 OFFCURVE",
"736.667 226.667 OFFCURVE",
"706 176 CURVE SMOOTH",
"690.667 150.667 OFFCURVE",
"672.5 127.5 OFFCURVE",
"651.5 106.5 CURVE SMOOTH",
"609.5 64.5 OFFCURVE",
"557.667 34.167 OFFCURVE",
"499 17.5 CURVE SMOOTH",
"469.667 9.167 OFFCURVE",
"439 5 OFFCURVE",
"407 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 130 LINE",
"299 342 LINE",
"367 342 LINE",
"367 342 LINE",
"387 342 OFFCURVE",
"391.667 337.667 OFFCURVE",
"397 331 CURVE SMOOTH",
"562 134 LINE SMOOTH",
"566 130 OFFCURVE",
"567.333 130 OFFCURVE",
"570 130 CURVE SMOOTH",
"580 130 LINE",
"413 329 LINE SMOOTH",
"407.667 335.667 OFFCURVE",
"403.667 339.333 OFFCURVE",
"397 342 CURVE",
"478.425 347.253 OFFCURVE",
"536 387.53 OFFCURVE",
"536 460 CURVE SMOOTH",
"536 536 OFFCURVE",
"485 570 OFFCURVE",
"393 570 CURVE SMOOTH",
"287 570 LINE",
"287 130 LINE"
);
},
{
closed = 1;
nodes = (
"299 560 LINE",
"299 560 LINE",
"393 560 LINE SMOOTH",
"481 560 OFFCURVE",
"524 530.667 OFFCURVE",
"524 460 CURVE SMOOTH",
"524 390.667 OFFCURVE",
"473.667 352 OFFCURVE",
"387 352 CURVE SMOOTH",
"299 352 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
},
{
anchors = (
{
name = bottom;
position = "{190, 0}";
},
{
name = top;
position = "{-353, 455}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "74C87340-D7D7-44E6-A35D-4149943E50DF";
name = "Feb 19 23, 13:39";
paths = (
{
closed = 1;
nodes = (
"237 140 LINE",
"237 190 LINE SMOOTH",
"237 205 OFFCURVE",
"229 212 OFFCURVE",
"209 217 CURVE SMOOTH",
"189 222 LINE",
"189 301 LINE",
"210 301 LINE SMOOTH",
"229 301 OFFCURVE",
"234 295 OFFCURVE",
"240 284 CURVE SMOOTH",
"302 162 LINE SMOOTH",
"310 146 OFFCURVE",
"327 140 OFFCURVE",
"345 140 CURVE SMOOTH",
"448 140 LINE",
"448 190 LINE SMOOTH",
"448 205 OFFCURVE",
"439 213 OFFCURVE",
"420 217 CURVE SMOOTH",
"405 220 LINE",
"368 291 LINE SMOOTH",
"359 308 OFFCURVE",
"345 319 OFFCURVE",
"328 327 CURVE",
"384 353 OFFCURVE",
"412 401 OFFCURVE",
"412 457 CURVE SMOOTH",
"412 554 OFFCURVE",
"333 595 OFFCURVE",
"224 595 CURVE SMOOTH",
"22 595 LINE",
"22 544 LINE SMOOTH",
"22 528 OFFCURVE",
"33 522 OFFCURVE",
"50 518 CURVE SMOOTH",
"70 513 LINE",
"70 222 LINE",
"50 217 LINE SMOOTH",
"33 213 OFFCURVE",
"22 206 OFFCURVE",
"22 190 CURVE SMOOTH",
"22 140 LINE"
);
},
{
closed = 1;
nodes = (
"189 505 LINE",
"224 505 LINE SMOOTH",
"273 505 OFFCURVE",
"295 483 OFFCURVE",
"295 448 CURVE SMOOTH",
"295 410 OFFCURVE",
"274 383 OFFCURVE",
"225 383 CURVE SMOOTH",
"189 383 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 417;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"595 -7 OFFCURVE",
"765 156 OFFCURVE",
"765 365 CURVE SMOOTH",
"765 571 OFFCURVE",
"597 737 OFFCURVE",
"392 737 CURVE SMOOTH",
"187 737 OFFCURVE",
"20 569 OFFCURVE",
"20 365 CURVE SMOOTH",
"20 161 OFFCURVE",
"188 -7 OFFCURVE",
"392 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"229.251 63 OFFCURVE",
"103 197.199 OFFCURVE",
"103 365 CURVE SMOOTH",
"103 533.108 OFFCURVE",
"229.894 669 OFFCURVE",
"392 669 CURVE SMOOTH",
"554 669 OFFCURVE",
"684 535 OFFCURVE",
"684 365 CURVE SMOOTH",
"684 194 OFFCURVE",
"554 63 OFFCURVE",
"392 63 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
anchors = (
{
name = bottom;
position = "{195, 0}";
},
{
name = top;
position = "{26, 447}";
}
);
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "080491C8-2139-4BE5-9F7A-8A09A8B259CB";
name = "Feb 19 23, 13:39";
paths = (
{
closed = 1;
nodes = (
"174 0 LINE",
"174 33 LINE SMOOTH",
"174 43 OFFCURVE",
"169 48 OFFCURVE",
"159 50 CURVE SMOOTH",
"129 56 LINE",
"129 178 LINE",
"167 178 LINE SMOOTH",
"181 178 OFFCURVE",
"189 176 OFFCURVE",
"197 164 CURVE SMOOTH",
"297 16 LINE SMOOTH",
"303 6 OFFCURVE",
"312 0 OFFCURVE",
"326 0 CURVE SMOOTH",
"402 0 LINE",
"402 33 LINE SMOOTH",
"402 41 OFFCURVE",
"398 48 OFFCURVE",
"387 50 CURVE SMOOTH",
"358 56 LINE",
"279 169 LINE SMOOTH",
"271 180 OFFCURVE",
"264 187 OFFCURVE",
"253 193 CURVE",
"315 211 OFFCURVE",
"355 256 OFFCURVE",
"355 320 CURVE SMOOTH",
"355 406 OFFCURVE",
"291 447 OFFCURVE",
"185 447 CURVE SMOOTH",
"5 447 LINE",
"5 415 LINE SMOOTH",
"5 405 OFFCURVE",
"11 400 OFFCURVE",
"20 398 CURVE SMOOTH",
"51 391 LINE",
"51 56 LINE",
"20 50 LINE SMOOTH",
"9 48 OFFCURVE",
"5 41 OFFCURVE",
"5 33 CURVE SMOOTH",
"5 0 LINE"
);
},
{
closed = 1;
nodes = (
"129 388 LINE",
"185 388 LINE SMOOTH",
"248 388 OFFCURVE",
"280 362 OFFCURVE",
"280 314 CURVE SMOOTH",
"280 264 OFFCURVE",
"245 233 OFFCURVE",
"183 233 CURVE SMOOTH",
"129 233 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 404;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"600 -7 OFFCURVE",
"765 157 OFFCURVE",
"765 358 CURVE SMOOTH",
"765 557 OFFCURVE",
"604 724 OFFCURVE",
"399 724 CURVE SMOOTH",
"198 724 OFFCURVE",
"34 559 OFFCURVE",
"34 358 CURVE SMOOTH",
"34 158 OFFCURVE",
"199 -7 OFFCURVE",
"399 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"226 38 OFFCURVE",
"84 178 OFFCURVE",
"84 358 CURVE SMOOTH",
"84 536 OFFCURVE",
"223 681 OFFCURVE",
"399 681 CURVE SMOOTH",
"577 681 OFFCURVE",
"716 535 OFFCURVE",
"716 358 CURVE SMOOTH",
"716 185 OFFCURVE",
"579 38 OFFCURVE",
"399 38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 799;
},
{
anchors = (
{
name = bottom;
position = "{198, 0}";
},
{
name = top;
position = "{198, 435}";
}
);
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "D008BAB7-7B4C-4B45-90C3-A03ACAB665DA";
name = "Feb 19 23, 13:39";
paths = (
{
closed = 1;
nodes = (
"147 0 LINE",
"147 5 LINE SMOOTH",
"147 7 OFFCURVE",
"144 9 OFFCURVE",
"142 9 CURVE SMOOTH",
"96 11 LINE",
"96 207 LINE",
"162 207 LINE SMOOTH",
"175 207 OFFCURVE",
"184 206 OFFCURVE",
"192 196 CURVE SMOOTH",
"350 5 LINE SMOOTH",
"353 1 OFFCURVE",
"356 0 OFFCURVE",
"360 0 CURVE SMOOTH",
"413 0 LINE",
"413 5 LINE SMOOTH",
"413 7 OFFCURVE",
"411 9 OFFCURVE",
"409 9 CURVE SMOOTH",
"360 11 LINE",
"203 199 LINE SMOOTH",
"200 203 OFFCURVE",
"196 206 OFFCURVE",
"192 208 CURVE",
"272 211 OFFCURVE",
"330 255 OFFCURVE",
"330 325 CURVE SMOOTH",
"330 400 OFFCURVE",
"279 435 OFFCURVE",
"187 435 CURVE SMOOTH",
"34 435 LINE",
"34 430 LINE SMOOTH",
"34 428 OFFCURVE",
"36 426 OFFCURVE",
"39 426 CURVE SMOOTH",
"84 424 LINE",
"84 11 LINE",
"39 9 LINE SMOOTH",
"37 9 OFFCURVE",
"34 7 OFFCURVE",
"34 5 CURVE SMOOTH",
"34 0 LINE"
);
},
{
closed = 1;
nodes = (
"96 425 LINE",
"187 425 LINE SMOOTH",
"272 425 OFFCURVE",
"318 394 OFFCURVE",
"318 325 CURVE SMOOTH",
"318 257 OFFCURVE",
"264 217 OFFCURVE",
"182 217 CURVE SMOOTH",
"96 217 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 385;
},
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"605 -7 OFFCURVE",
"765 153 OFFCURVE",
"765 350 CURVE SMOOTH",
"765 547 OFFCURVE",
"605 707 OFFCURVE",
"408 707 CURVE SMOOTH",
"211 707 OFFCURVE",
"51 547 OFFCURVE",
"51 350 CURVE SMOOTH",
"51 153 OFFCURVE",
"211 -7 OFFCURVE",
"408 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 5 OFFCURVE",
"62 160 OFFCURVE",
"62 351 CURVE SMOOTH",
"62 541 OFFCURVE",
"217 696 OFFCURVE",
"408 696 CURVE SMOOTH",
"598 696 OFFCURVE",
"753 541 OFFCURVE",
"753 351 CURVE SMOOTH",
"753 160 OFFCURVE",
"598 5 OFFCURVE",
"408 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
}
);
leftKerningGroup = O;
note = registered;
rightKerningGroup = O;
unicode = 25EF;
},
{
glyphname = lozenge;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"294 -92 LINE",
"500 329 LINE",
"294 750 LINE",
"286 750 LINE",
"80 329 LINE",
"286 -92 LINE"
);
},
{
closed = 1;
nodes = (
"288.667 -72.333 OFFCURVE",
"286.333 -65.333 OFFCURVE",
"283 -58 CURVE SMOOTH",
"93 329 LINE",
"283 716 LINE SMOOTH",
"286.333 723.333 OFFCURVE",
"288.667 730.333 OFFCURVE",
"290 737 CURVE",
"291.333 730.333 OFFCURVE",
"293.667 723.333 OFFCURVE",
"297 716 CURVE SMOOTH",
"487 329 LINE",
"297 -58 LINE SMOOTH",
"293.667 -65.333 OFFCURVE",
"291.333 -72.333 OFFCURVE",
"290 -79 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 9 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
9 1 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 1 15 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 580;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"344 -35 LINE",
"530 367 LINE",
"344 769 LINE",
"236 769 LINE",
"50 367 LINE",
"236 -35 LINE"
);
},
{
closed = 1;
nodes = (
"284.667 112.333 OFFCURVE",
"279.333 129 OFFCURVE",
"270 149 CURVE SMOOTH",
"176 367 LINE",
"270 586 LINE SMOOTH",
"278 606 OFFCURVE",
"284.667 623 OFFCURVE",
"290 639 CURVE",
"295.333 622.333 OFFCURVE",
"302 604.667 OFFCURVE",
"310 586 CURVE SMOOTH",
"407 367 LINE",
"310 149 LINE SMOOTH",
"300.667 129 OFFCURVE",
"295.333 112.333 OFFCURVE",
"290 95 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
5 4 2 1 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
17 14 10 6 3 0 6 1 0 1 30 0 1 1 0 0 0 36 0 0 0 13 1 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
17 14 10 6 3 0 6 1 0 1 30 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"321 -60 LINE",
"516 351 LINE",
"321 761 LINE",
"259 761 LINE",
"64 351 LINE",
"259 -60 LINE"
);
},
{
closed = 1;
nodes = (
"288 29 OFFCURVE",
"284 44 OFFCURVE",
"276 60 CURVE SMOOTH",
"138 351 LINE",
"276 642 LINE SMOOTH",
"283 656 OFFCURVE",
"287 669 OFFCURVE",
"290 681 CURVE",
"293.333 669 OFFCURVE",
"297 656 OFFCURVE",
"304 642 CURVE SMOOTH",
"444 351 LINE",
"304 60 LINE SMOOTH",
"296 44 OFFCURVE",
"292 28 OFFCURVE",
"290 21 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
5 4 2 1 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 34 values pushed */
17 14 10 6 3 0 6 1 0 1 30 0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = at;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"527 -118 OFFCURVE",
"615 -93 OFFCURVE",
"691 -41 CURVE",
"688 -36 LINE SMOOTH",
"687 -34 OFFCURVE",
"686 -33 OFFCURVE",
"683 -33 CURVE SMOOTH",
"682 -33 OFFCURVE",
"680 -33 OFFCURVE",
"679 -34 CURVE SMOOTH",
"603 -85 OFFCURVE",
"519 -107 OFFCURVE",
"422 -107 CURVE SMOOTH",
"323 -107 OFFCURVE",
"231 -75 OFFCURVE",
"164 -12 CURVE SMOOTH",
"96 52 OFFCURVE",
"54 145 OFFCURVE",
"54 266 CURVE SMOOTH",
"54 368 OFFCURVE",
"91 468 OFFCURVE",
"161 539 CURVE SMOOTH",
"225 603 OFFCURVE",
"311 643 OFFCURVE",
"407 643 CURVE SMOOTH",
"492 643 OFFCURVE",
"571 619 OFFCURVE",
"631 568 CURVE SMOOTH",
"690 517 OFFCURVE",
"727 440 OFFCURVE",
"727 335 CURVE SMOOTH",
"727 204 OFFCURVE",
"658 105 OFFCURVE",
"564 105 CURVE SMOOTH",
"520 105 OFFCURVE",
"489 126 OFFCURVE",
"489 186 CURVE SMOOTH",
"489 207 OFFCURVE",
"493 234 OFFCURVE",
"502 269 CURVE SMOOTH",
"546 437 LINE",
"526 448 OFFCURVE",
"496 452 OFFCURVE",
"468 452 CURVE SMOOTH",
"338 452 OFFCURVE",
"233 342 OFFCURVE",
"233 215 CURVE SMOOTH",
"233 151 OFFCURVE",
"266 98 OFFCURVE",
"335 98 CURVE SMOOTH",
"395 98 OFFCURVE",
"446 132 OFFCURVE",
"481 209 CURVE",
"471 142 OFFCURVE",
"493 95 OFFCURVE",
"563 95 CURVE SMOOTH",
"665 95 OFFCURVE",
"738 199 OFFCURVE",
"738 335 CURVE SMOOTH",
"738 407 OFFCURVE",
"720 466 OFFCURVE",
"691 514 CURVE SMOOTH",
"634 606 OFFCURVE",
"522 653 OFFCURVE",
"407 653 CURVE SMOOTH",
"308 653 OFFCURVE",
"218 613 OFFCURVE",
"151 545 CURVE SMOOTH",
"84 477 OFFCURVE",
"43 379 OFFCURVE",
"43 266 CURVE SMOOTH",
"43 142 OFFCURVE",
"86 46 OFFCURVE",
"155 -19 CURVE SMOOTH",
"223 -84 OFFCURVE",
"318 -118 OFFCURVE",
"422 -118 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"277 108 OFFCURVE",
"245 155 OFFCURVE",
"245 215 CURVE SMOOTH",
"245 333 OFFCURVE",
"342 442 OFFCURVE",
"468 442 CURVE SMOOTH",
"497 442 OFFCURVE",
"513 438 OFFCURVE",
"533 433 CURVE",
"491 271 LINE SMOOTH",
"461 156 OFFCURVE",
"406 108 OFFCURVE",
"337 108 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
50 3 71 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
104 3 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
28 3 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
83 3 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
110 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
55 1 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
76 1 43 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
21 1 97 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
33 1 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
88 1 9 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 781;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"560 -121 OFFCURVE",
"659 -92 OFFCURVE",
"730 -44 CURVE",
"709 10 LINE SMOOTH",
"704 23 OFFCURVE",
"696 29 OFFCURVE",
"685 29 CURVE SMOOTH",
"678 29 OFFCURVE",
"671 27 OFFCURVE",
"664 23 CURVE SMOOTH",
"618 -5 OFFCURVE",
"539 -25 OFFCURVE",
"447 -25 CURVE SMOOTH",
"356 -25 OFFCURVE",
"275 3 OFFCURVE",
"219 57 CURVE SMOOTH",
"162 111 OFFCURVE",
"127 191 OFFCURVE",
"127 298 CURVE SMOOTH",
"127 385 OFFCURVE",
"160 464 OFFCURVE",
"215 519 CURVE SMOOTH",
"267 572 OFFCURVE",
"338 604 OFFCURVE",
"421 604 CURVE SMOOTH",
"519 604 OFFCURVE",
"596 570 OFFCURVE",
"640 505 CURVE SMOOTH",
"667 465 OFFCURVE",
"682 413 OFFCURVE",
"682 351 CURVE SMOOTH",
"682 265 OFFCURVE",
"649 183 OFFCURVE",
"596 183 CURVE SMOOTH",
"571 183 OFFCURVE",
"555 194 OFFCURVE",
"555 227 CURVE SMOOTH",
"555 239 OFFCURVE",
"557 255 OFFCURVE",
"562 274 CURVE SMOOTH",
"611 464 LINE",
"576 479 OFFCURVE",
"530 489 OFFCURVE",
"480 489 CURVE SMOOTH",
"327 489 OFFCURVE",
"209 387 OFFCURVE",
"209 242 CURVE SMOOTH",
"209 154 OFFCURVE",
"255 92 OFFCURVE",
"340 92 CURVE SMOOTH",
"391 92 OFFCURVE",
"433 109 OFFCURVE",
"473 153 CURVE",
"488 110 OFFCURVE",
"531 91 OFFCURVE",
"573 91 CURVE SMOOTH",
"703 91 OFFCURVE",
"792 211 OFFCURVE",
"792 351 CURVE SMOOTH",
"792 422 OFFCURVE",
"772 484 OFFCURVE",
"739 536 CURVE SMOOTH",
"672 640 OFFCURVE",
"548 700 OFFCURVE",
"421 700 CURVE SMOOTH",
"344 700 OFFCURVE",
"273 679 OFFCURVE",
"213 643 CURVE SMOOTH",
"93 569 OFFCURVE",
"15 437 OFFCURVE",
"15 298 CURVE SMOOTH",
"15 170 OFFCURVE",
"61 65 OFFCURVE",
"138 -8 CURVE SMOOTH",
"214 -81 OFFCURVE",
"322 -121 OFFCURVE",
"447 -121 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"344 187 OFFCURVE",
"328 206 OFFCURVE",
"328 246 CURVE SMOOTH",
"328 325 OFFCURVE",
"386 396 OFFCURVE",
"454 396 CURVE SMOOTH",
"462 396 OFFCURVE",
"470 395 OFFCURVE",
"478 394 CURVE",
"443 258 LINE SMOOTH",
"431 210 OFFCURVE",
"405 187 OFFCURVE",
"371 187 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
91 90 1 0 99 97 90 105 91 105 79 77 67 65 59 57 52 50 42 40 32 30 21 19 9 7 0 89 1 89 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
25 1 10 2 96 1 3 10 5 1 0 3 61 1 7 5 4 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 3 2 10 1 0 38 12 9 2 3 1 11 2 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 90 values pushed */
25 1 10 2 96 1 9 10 5 1 0 3 61 1 7 5 4 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 9 2 10 1 0 38 12 1 9 3 0 9 1 0 35 0 3 1 11 2 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 91 values pushed */
25 1 10 2 96 1 9 10 5 1 1 3 61 1 7 5 4 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 9 2 10 1 0 38 12 1 9 0 1 0 9 1 1 0 38 0 3 11 1 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 807;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"553 -120 OFFCURVE",
"643 -91 OFFCURVE",
"714 -43 CURVE",
"702 -10 LINE SMOOTH",
"699 -1 OFFCURVE",
"693 3 OFFCURVE",
"686 3 CURVE SMOOTH",
"682 3 OFFCURVE",
"678 1 OFFCURVE",
"673 -2 CURVE SMOOTH",
"616 -37 OFFCURVE",
"539 -61 OFFCURVE",
"438 -61 CURVE SMOOTH",
"342 -61 OFFCURVE",
"258 -32 OFFCURVE",
"196 27 CURVE SMOOTH",
"134 86 OFFCURVE",
"96 171 OFFCURVE",
"96 284 CURVE SMOOTH",
"96 381 OFFCURVE",
"132 465 OFFCURVE",
"190 525 CURVE SMOOTH",
"248 585 OFFCURVE",
"328 621 OFFCURVE",
"417 621 CURVE SMOOTH",
"498 621 OFFCURVE",
"570 598 OFFCURVE",
"622 552 CURVE SMOOTH",
"674 506 OFFCURVE",
"705 436 OFFCURVE",
"705 344 CURVE SMOOTH",
"705 238 OFFCURVE",
"655 150 OFFCURVE",
"584 150 CURVE SMOOTH",
"548 150 OFFCURVE",
"527 165 OFFCURVE",
"527 210 CURVE SMOOTH",
"527 226 OFFCURVE",
"530 247 OFFCURVE",
"537 272 CURVE SMOOTH",
"583 452 LINE",
"554 465 OFFCURVE",
"521 473 OFFCURVE",
"477 473 CURVE SMOOTH",
"321 473 OFFCURVE",
"222 354 OFFCURVE",
"222 230 CURVE SMOOTH",
"222 152 OFFCURVE",
"262 94 OFFCURVE",
"340 94 CURVE SMOOTH",
"392 94 OFFCURVE",
"437 115 OFFCURVE",
"476 170 CURVE",
"485 118 OFFCURVE",
"519 93 OFFCURVE",
"571 93 CURVE SMOOTH",
"688 93 OFFCURVE",
"769 206 OFFCURVE",
"769 344 CURVE SMOOTH",
"769 439 OFFCURVE",
"736 527 OFFCURVE",
"662 592 CURVE SMOOTH",
"596 650 OFFCURVE",
"507 680 OFFCURVE",
"417 680 CURVE SMOOTH",
"318 680 OFFCURVE",
"215 639 OFFCURVE",
"143 564 CURVE SMOOTH",
"71 488 OFFCURVE",
"30 388 OFFCURVE",
"30 284 CURVE SMOOTH",
"30 157 OFFCURVE",
"75 56 OFFCURVE",
"148 -13 CURVE SMOOTH",
"220 -82 OFFCURVE",
"322 -120 OFFCURVE",
"438 -120 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"314 153 OFFCURVE",
"292 185 OFFCURVE",
"292 233 CURVE SMOOTH",
"292 326 OFFCURVE",
"366 416 OFFCURVE",
"463 416 CURVE SMOOTH",
"478 416 OFFCURVE",
"492 414 OFFCURVE",
"505 411 CURVE",
"467 264 LINE SMOOTH",
"448 186 OFFCURVE",
"406 153 OFFCURVE",
"358 153 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
83 82 1 0 91 89 82 97 83 97 71 69 59 57 53 51 48 46 38 36 28 26 17 15 7 5 0 81 1 81 13 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
67 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
19 1 10 2 88 3 2 3 10 55 1 5 6 3 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 3 2 10 1 0 38 12 9 2 3 1 11 2 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
199 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
19 1 10 2 88 3 2 9 10 55 1 5 6 3 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 9 2 10 1 0 38 12 1 9 3 0 9 1 0 35 0 3 1 11 2 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 88 values pushed */
19 1 10 2 88 3 2 9 10 55 1 5 6 3 30 0 6 0 5 0 6 5 50 0 8 0 4 2 8 4 1 0 38 0 2 0 10 9 2 10 1 0 38 12 1 9 0 1 0 9 1 1 0 38 0 3 11 1 0 6 3 0 1 0 38 0 5 7 7 5 1 0 35 0 5 5 7 1 0 36 0 7 5 7 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
leftKerningGroup = O;
leftMetricsKey = O;
note = at;
rightKerningGroup = O;
rightMetricsKey = O;
unicode = 0040;
},
{
glyphname = ampersand;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"345 -8 OFFCURVE",
"433 52 OFFCURVE",
"491 132 CURVE",
"621 5 LINE SMOOTH",
"628 0 OFFCURVE",
"631 0 OFFCURVE",
"636 0 CURVE SMOOTH",
"644 0 LINE",
"497 141 LINE",
"537 198 OFFCURVE",
"558 262 OFFCURVE",
"559 311 CURVE",
"555 311 LINE SMOOTH",
"550 311 OFFCURVE",
"549 308 OFFCURVE",
"548 303 CURVE",
"543 255 OFFCURVE",
"524 199 OFFCURVE",
"489 148 CURVE",
"251 376 LINE SMOOTH",
"186 439 OFFCURVE",
"152 494 OFFCURVE",
"152 555 CURVE SMOOTH",
"152 640 OFFCURVE",
"217 698 OFFCURVE",
"307 698 CURVE SMOOTH",
"391 698 OFFCURVE",
"445 632 OFFCURVE",
"448 584 CURVE SMOOTH",
"449 576 OFFCURVE",
"453 576 OFFCURVE",
"456 576 CURVE SMOOTH",
"459 576 LINE",
"459 648 OFFCURVE",
"383 708 OFFCURVE",
"307 708 CURVE SMOOTH",
"211 708 OFFCURVE",
"140 645 OFFCURVE",
"140 555 CURVE SMOOTH",
"140 492 OFFCURVE",
"172 442 OFFCURVE",
"223 389 CURVE",
"122 354 OFFCURVE",
"41 274 OFFCURVE",
"41 172 CURVE SMOOTH",
"41 61 OFFCURVE",
"135 -8 OFFCURVE",
"235 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148 2 OFFCURVE",
"53 64 OFFCURVE",
"53 172 CURVE",
"53 172 LINE",
"53 267 OFFCURVE",
"131 350 OFFCURVE",
"231 381 CURVE",
"483 139 LINE",
"430 62 OFFCURVE",
"341 2 OFFCURVE",
"235 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 666;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"336 -8 OFFCURVE",
"411 17 OFFCURVE",
"475 61 CURVE",
"506 28 LINE SMOOTH",
"526 7 OFFCURVE",
"543 0 OFFCURVE",
"573 0 CURVE SMOOTH",
"726 0 LINE",
"573 161 LINE",
"621 232 OFFCURVE",
"648 316 OFFCURVE",
"648 413 CURVE",
"550 413 LINE SMOOTH",
"533 413 OFFCURVE",
"520 402 OFFCURVE",
"519 383 CURVE SMOOTH",
"515 336 OFFCURVE",
"505 293 OFFCURVE",
"486 253 CURVE",
"306 443 LINE SMOOTH",
"272 479 OFFCURVE",
"258 509 OFFCURVE",
"258 546 CURVE SMOOTH",
"258 587 OFFCURVE",
"284 623 OFFCURVE",
"328 623 CURVE SMOOTH",
"361 623 OFFCURVE",
"380 605 OFFCURVE",
"395 570 CURVE SMOOTH",
"402 555 OFFCURVE",
"413 545 OFFCURVE",
"426 548 CURVE SMOOTH",
"534 569 LINE",
"525 662 OFFCURVE",
"449 737 OFFCURVE",
"328 737 CURVE",
"199 737 OFFCURVE",
"114 654 OFFCURVE",
"114 545 CURVE SMOOTH",
"114 501 OFFCURVE",
"127 454 OFFCURVE",
"159 405 CURVE",
"78 366 OFFCURVE",
"19 292 OFFCURVE",
"19 206 CURVE SMOOTH",
"19 78 OFFCURVE",
"132 -8 OFFCURVE",
"251 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"218 112 OFFCURVE",
"177 155 OFFCURVE",
"177 218 CURVE",
"177 218 LINE",
"177 257 OFFCURVE",
"191 292 OFFCURVE",
"228 323 CURVE",
"395 145 LINE",
"362 124 OFFCURVE",
"324 112 OFFCURVE",
"279 112 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 70 68 47 45 38 36 32 30 15 13 10 8 0 63 1 63 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
73 72 56 35 25 5 6 3 43 1 4 6 2 30 0 1 2 3 2 1 3 50 0 2 2 0 1 0 36 7 1 0 0 17 31 0 3 3 4 1 0 36 5 1 4 4 12 31 0 6 6 4 1 0 36 5 1 4 4 12 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
73 72 56 35 25 5 6 3 43 1 4 6 2 30 0 1 2 3 2 1 3 50 0 2 2 0 1 0 36 7 1 0 0 17 31 0 3 3 4 1 0 36 0 4 4 12 31 0 6 6 5 1 0 36 0 5 5 18 5 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
73 72 56 35 25 5 6 3 43 1 4 6 2 30 0 1 2 3 2 1 3 50 7 1 0 0 2 1 0 2 1 0 38 0 6 4 5 6 1 0 35 0 3 0 4 5 3 4 1 0 38 0 6 6 5 1 0 36 0 5 6 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 746;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"346 -8 OFFCURVE",
"429 30 OFFCURVE",
"492 91 CURVE",
"564 18 LINE SMOOTH",
"579 3 OFFCURVE",
"588 0 OFFCURVE",
"607 0 CURVE SMOOTH",
"693 0 LINE",
"543 152 LINE",
"587 217 OFFCURVE",
"611 293 OFFCURVE",
"612 369 CURVE",
"557 369 LINE SMOOTH",
"545 369 OFFCURVE",
"538 361 OFFCURVE",
"537 349 CURVE SMOOTH",
"532 300 OFFCURVE",
"517 249 OFFCURVE",
"492 205 CURVE",
"286 414 LINE SMOOTH",
"241 459 OFFCURVE",
"214 504 OFFCURVE",
"214 550 CURVE SMOOTH",
"214 611 OFFCURVE",
"259 655 OFFCURVE",
"323 655 CURVE SMOOTH",
"378 655 OFFCURVE",
"415 616 OFFCURVE",
"424 576 CURVE SMOOTH",
"428 564 OFFCURVE",
"436 558 OFFCURVE",
"445 560 CURVE SMOOTH",
"505 572 LINE",
"499 655 OFFCURVE",
"423 725 OFFCURVE",
"323 725 CURVE",
"207 725 OFFCURVE",
"131 650 OFFCURVE",
"131 549 CURVE SMOOTH",
"131 497 OFFCURVE",
"150 450 OFFCURVE",
"190 399 CURVE",
"101 360 OFFCURVE",
"34 285 OFFCURVE",
"34 191 CURVE SMOOTH",
"34 71 OFFCURVE",
"138 -8 OFFCURVE",
"249 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"191 65 OFFCURVE",
"125 115 OFFCURVE",
"125 198 CURVE",
"125 198 LINE",
"125 261 OFFCURVE",
"160 316 OFFCURVE",
"231 353 CURVE",
"443 140 LINE",
"398 95 OFFCURVE",
"339 65 OFFCURVE",
"264 65 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
1 0 70 68 47 45 40 38 34 32 17 15 9 7 0 63 1 63 8 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
5 1 1 2 56 1 3 1 73 72 43 37 27 5 6 3 3 30 0 1 2 3 2 1 3 50 0 2 2 0 1 0 36 7 1 0 0 17 31 0 3 3 4 1 0 36 5 1 4 4 12 31 0 6 6 4 1 0 36 5 1 4 4 12 4 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
5 1 1 2 56 1 3 1 73 72 43 37 27 5 6 3 3 30 0 1 2 3 2 1 3 50 0 2 2 0 1 0 36 7 1 0 0 17 31 0 3 3 4 1 0 36 0 4 4 12 31 0 6 6 5 1 0 36 0 5 5 18 5 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
5 1 1 2 56 1 3 1 73 72 43 37 27 5 6 3 3 30 0 1 2 3 2 1 3 50 7 1 0 0 2 1 0 2 1 0 38 0 3 3 4 1 0 36 0 4 4 15 31 0 6 6 5 1 0 36 0 5 5 21 5 32 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
5 1 1 2 56 1 3 1 73 72 43 37 27 5 6 3 3 30 0 1 2 3 2 1 3 50 7 1 0 0 2 1 0 2 1 0 38 0 6 4 5 6 1 0 35 0 3 0 4 5 3 4 1 0 38 0 6 6 5 1 0 36 0 5 6 5 1 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
leftMetricsKey = c;
note = ampersand;
rightMetricsKey = n;
unicode = 0026;
},
{
glyphname = paragraph;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"262 -90 LINE",
"262 689 LINE",
"448 689 LINE",
"448 -90 LINE",
"460 -90 LINE",
"460 689 LINE",
"575 689 LINE",
"575 700 LINE",
"250 700 LINE SMOOTH",
"120.816 700 OFFCURVE",
"32 643.99 OFFCURVE",
"32 538 CURVE SMOOTH",
"32 433.876 OFFCURVE",
"121.479 366 OFFCURVE",
"250 366 CURVE",
"250 -90 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
6 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 672;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"400 -108 LINE",
"400 603 LINE",
"498 603 LINE",
"498 -108 LINE",
"633 -108 LINE",
"633 603 LINE",
"738 603 LINE",
"738 729 LINE",
"265 729 LINE",
"128 729 OFFCURVE",
"34 641 OFFCURVE",
"34 514 CURVE SMOOTH",
"34 396 OFFCURVE",
"131 303 OFFCURVE",
"265 303 CURVE",
"265 -108 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 19 0 18 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 1 0 4 1 50 3 1 1 1 51 2 1 0 0 5 1 0 36 6 1 5 5 11 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 1 0 4 1 50 3 1 1 1 51 6 1 5 0 0 5 1 0 35 6 1 5 5 0 0 0 36 2 1 0 5 0 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 5 0 0 2 42 0 4 0 3 0 4 3 50 0 3 1 0 3 1 48 0 1 1 51 6 1 5 2 0 5 1 2 35 6 1 5 5 0 0 0 36 0 0 5 0 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 817;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"338 -101 LINE",
"338 640 LINE",
"476 640 LINE",
"476 -101 LINE",
"555 -101 LINE",
"555 640 LINE",
"664 640 LINE",
"664 717 LINE",
"259 717 LINE",
"126 717 OFFCURVE",
"34 643 OFFCURVE",
"34 525 CURVE SMOOTH",
"34 413 OFFCURVE",
"127 330 OFFCURVE",
"259 330 CURVE",
"259 -101 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 0 0 19 0 18 10 9 8 7 6 5 4 3 2 1 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 1 0 4 1 50 3 1 1 1 51 2 1 0 0 5 1 0 36 6 1 5 5 11 0 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 1 0 4 1 50 3 1 1 1 51 6 1 5 0 0 5 1 0 35 6 1 5 5 0 0 0 36 2 1 0 5 0 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 0 2 4 2 0 42 0 4 3 2 4 3 48 0 3 1 2 3 1 48 0 1 1 51 6 1 5 2 2 5 1 0 35 6 1 5 5 2 0 0 36 0 2 5 2 0 0 33 7 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = paragraph;
rightMetricsKey = bracketright;
unicode = 00B6;
},
{
glyphname = section;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"319 -68 OFFCURVE",
"376 -6 OFFCURVE",
"376 73 CURVE SMOOTH",
"376 125 OFFCURVE",
"351 152 OFFCURVE",
"315 178 CURVE",
"364 202 OFFCURVE",
"396 241 OFFCURVE",
"396 298 CURVE SMOOTH",
"396 382 OFFCURVE",
"325 417 OFFCURVE",
"247 452 CURVE SMOOTH",
"180 482 OFFCURVE",
"99 512 OFFCURVE",
"99 584 CURVE SMOOTH",
"99 647 OFFCURVE",
"160 698 OFFCURVE",
"243 698 CURVE SMOOTH",
"307 698 OFFCURVE",
"350 667 OFFCURVE",
"366 654 CURVE",
"368 653 OFFCURVE",
"370 655 OFFCURVE",
"371 657 CURVE SMOOTH",
"372 659 LINE",
"335 695 OFFCURVE",
"287 708 OFFCURVE",
"243 708 CURVE SMOOTH",
"154 708 OFFCURVE",
"88 654 OFFCURVE",
"88 584 CURVE SMOOTH",
"88 539 OFFCURVE",
"115 507 OFFCURVE",
"154 484 CURVE",
"85 458 OFFCURVE",
"51 418 OFFCURVE",
"51 365 CURVE SMOOTH",
"51 287 OFFCURVE",
"126 254 OFFCURVE",
"210 218 CURVE SMOOTH",
"294 182 OFFCURVE",
"365 152 OFFCURVE",
"365 71 CURVE SMOOTH",
"365 -1 OFFCURVE",
"309 -58 OFFCURVE",
"215 -58 CURVE SMOOTH",
"162 -58 OFFCURVE",
"118 -40 OFFCURVE",
"78 -6 CURVE SMOOTH",
"75 -3 OFFCURVE",
"72 -4 OFFCURVE",
"70 -6 CURVE SMOOTH",
"67 -9 LINE",
"104 -44 OFFCURVE",
"148 -68 OFFCURVE",
"214 -68 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 206 OFFCURVE",
"183 243 OFFCURVE",
"148 260 CURVE SMOOTH",
"100 284 OFFCURVE",
"62 316 OFFCURVE",
"62 367 CURVE SMOOTH",
"62 412 OFFCURVE",
"92 450 OFFCURVE",
"163 478 CURVE",
"195 460 OFFCURVE",
"281 424 OFFCURVE",
"308 410 CURVE SMOOTH",
"347 390 OFFCURVE",
"385 351 OFFCURVE",
"385 295 CURVE SMOOTH",
"385 247 OFFCURVE",
"358 208 OFFCURVE",
"305 184 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
79 3 64 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
16 3 74 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
25 3 89 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
31 3 55 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
28 64 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
69 64 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 36 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
3 2 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
45 2 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 436;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"355 -59 OFFCURVE",
"439 8 OFFCURVE",
"439 118 CURVE SMOOTH",
"439 164 OFFCURVE",
"420 195 OFFCURVE",
"391 219 CURVE",
"446 247 OFFCURVE",
"469 295 OFFCURVE",
"469 347 CURVE SMOOTH",
"469 423 OFFCURVE",
"404 466 OFFCURVE",
"335 496 CURVE SMOOTH",
"273 522 OFFCURVE",
"199 544 OFFCURVE",
"199 579 CURVE SMOOTH",
"199 607 OFFCURVE",
"222 627 OFFCURVE",
"270 627 CURVE SMOOTH",
"319 627 OFFCURVE",
"351 597 OFFCURVE",
"381 597 CURVE SMOOTH",
"396 597 OFFCURVE",
"403 602 OFFCURVE",
"411 614 CURVE SMOOTH",
"446 669 LINE",
"408 707 OFFCURVE",
"343 736 OFFCURVE",
"267 736 CURVE SMOOTH",
"141 736 OFFCURVE",
"62 667 OFFCURVE",
"62 572 CURVE SMOOTH",
"62 525 OFFCURVE",
"78 489 OFFCURVE",
"111 459 CURVE",
"56 433 OFFCURVE",
"32 388 OFFCURVE",
"32 338 CURVE SMOOTH",
"32 252 OFFCURVE",
"96 212 OFFCURVE",
"169 184 CURVE SMOOTH",
"229 160 OFFCURVE",
"304 144 OFFCURVE",
"304 93 CURVE SMOOTH",
"304 62 OFFCURVE",
"279 46 OFFCURVE",
"235 46 CURVE SMOOTH",
"186 46 OFFCURVE",
"143 84 OFFCURVE",
"110 84 CURVE SMOOTH",
"92 84 OFFCURVE",
"81 77 OFFCURVE",
"71 63 CURVE SMOOTH",
"35 6 LINE",
"76 -32 OFFCURVE",
"155 -59 OFFCURVE",
"221 -59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 278 OFFCURVE",
"253 288 OFFCURVE",
"228 300 CURVE SMOOTH",
"195 316 OFFCURVE",
"169 335 OFFCURVE",
"169 362 CURVE SMOOTH",
"169 383 OFFCURVE",
"178 395 OFFCURVE",
"196 408 CURVE",
"226 394 OFFCURVE",
"261 381 OFFCURVE",
"287 368 CURVE SMOOTH",
"314 354 OFFCURVE",
"334 337 OFFCURVE",
"334 313 CURVE SMOOTH",
"334 294 OFFCURVE",
"326 277 OFFCURVE",
"308 267 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
69 67 46 44 41 39 32 30 9 7 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
73 1 1 5 87 79 60 23 4 3 0 36 1 2 4 3 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 4 0 2 4 2 1 0 37 0 1 1 5 1 0 36 0 5 5 17 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
73 1 1 5 87 79 60 23 4 3 0 36 1 2 4 3 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 517;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"342 -63 OFFCURVE",
"416 2 OFFCURVE",
"416 101 CURVE SMOOTH",
"416 149 OFFCURVE",
"390 180 OFFCURVE",
"361 203 CURVE",
"417 228 OFFCURVE",
"442 272 OFFCURVE",
"442 326 CURVE SMOOTH",
"442 405 OFFCURVE",
"371 446 OFFCURVE",
"301 477 CURVE SMOOTH",
"237 504 OFFCURVE",
"159 530 OFFCURVE",
"159 581 CURVE SMOOTH",
"159 624 OFFCURVE",
"202 658 OFFCURVE",
"262 658 CURVE SMOOTH",
"300 658 OFFCURVE",
"364 622 OFFCURVE",
"380 622 CURVE SMOOTH",
"389 622 OFFCURVE",
"395 626 OFFCURVE",
"399 633 CURVE SMOOTH",
"419 665 LINE",
"383 700 OFFCURVE",
"330 724 OFFCURVE",
"260 724 CURVE SMOOTH",
"152 724 OFFCURVE",
"80 661 OFFCURVE",
"80 577 CURVE SMOOTH",
"80 528 OFFCURVE",
"103 494 OFFCURVE",
"137 468 CURVE",
"74 445 OFFCURVE",
"47 401 OFFCURVE",
"47 349 CURVE SMOOTH",
"47 268 OFFCURVE",
"117 229 OFFCURVE",
"193 199 CURVE SMOOTH",
"263 171 OFFCURVE",
"338 147 OFFCURVE",
"338 86 CURVE SMOOTH",
"338 34 OFFCURVE",
"297 1 OFFCURVE",
"233 1 CURVE SMOOTH",
"185 1 OFFCURVE",
"122 47 OFFCURVE",
"101 47 CURVE SMOOTH",
"89 47 OFFCURVE",
"82 42 OFFCURVE",
"77 33 CURVE SMOOTH",
"56 -1 LINE",
"96 -37 OFFCURVE",
"154 -63 OFFCURVE",
"225 -63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 248 OFFCURVE",
"244 260 OFFCURVE",
"208 278 CURVE SMOOTH",
"162 300 OFFCURVE",
"126 324 OFFCURVE",
"126 363 CURVE SMOOTH",
"126 395 OFFCURVE",
"142 419 OFFCURVE",
"186 439 CURVE",
"210 427 OFFCURVE",
"280 398 OFFCURVE",
"306 385 CURVE SMOOTH",
"341 365 OFFCURVE",
"364 339 OFFCURVE",
"364 306 CURVE SMOOTH",
"364 275 OFFCURVE",
"349 249 OFFCURVE",
"313 232 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
70 68 45 43 40 38 33 31 8 6 3 1 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
72 1 1 5 88 78 61 24 4 3 0 35 1 2 4 3 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 4 0 2 4 2 1 0 37 0 1 1 5 1 0 36 0 5 5 17 1 32 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
72 1 1 5 88 78 61 24 4 3 0 35 1 2 4 3 30 0 0 1 3 1 0 3 50 0 3 4 1 3 4 48 0 5 0 1 0 5 1 1 0 38 0 4 2 2 4 1 0 35 0 4 4 2 1 0 36 0 2 4 2 1 0 33 7 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 481;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "3D64635F-83CE-40A7-9700-0B941AD535D2";
name = "Feb 19 23, 13:11";
paths = (
{
closed = 1;
nodes = (
"343.2 -68 OFFCURVE",
"405 -6.646 OFFCURVE",
"405 77 CURVE SMOOTH",
"405 122.333 OFFCURVE",
"380 152.667 OFFCURVE",
"344 178 CURVE",
"393.333 202 OFFCURVE",
"425 242 OFFCURVE",
"425 298 CURVE SMOOTH",
"425 381.224 OFFCURVE",
"353.925 417.158 OFFCURVE",
"277 451.5 CURVE SMOOTH",
"204.577 483.832 OFFCURVE",
"128 513.631 OFFCURVE",
"128 584 CURVE SMOOTH",
"128 647.014 OFFCURVE",
"190.598 698 OFFCURVE",
"268 698 CURVE SMOOTH",
"338 698 OFFCURVE",
"379 667 OFFCURVE",
"395 654 CURVE SMOOTH",
"397 653 OFFCURVE",
"399 655 OFFCURVE",
"400 657 CURVE SMOOTH",
"401 659 LINE",
"363.667 695 OFFCURVE",
"318 708 OFFCURVE",
"268 708 CURVE SMOOTH",
"183.91 708 OFFCURVE",
"117 653.616 OFFCURVE",
"117 584 CURVE SMOOTH",
"117 537.959 OFFCURVE",
"144.417 507.15 OFFCURVE",
"183 484 CURVE",
"113.689 457.71 OFFCURVE",
"80 417.83 OFFCURVE",
"80 364 CURVE SMOOTH",
"80 287.253 OFFCURVE",
"158.694 251.892 OFFCURVE",
"237.5 218.5 CURVE SMOOTH",
"315.136 185.603 OFFCURVE",
"394 151.884 OFFCURVE",
"394 76 CURVE SMOOTH",
"394 -2.467 OFFCURVE",
"338.016 -58 OFFCURVE",
"245 -58 CURVE SMOOTH",
"189.366 -58 OFFCURVE",
"117.725 -3 OFFCURVE",
"105 -3 CURVE SMOOTH",
"103.667 -3 OFFCURVE",
"102.667 -3.333 OFFCURVE",
"102 -4 CURVE SMOOTH",
"101.333 -4.667 OFFCURVE",
"100.333 -5.333 OFFCURVE",
"99 -6 CURVE",
"96 -9 LINE",
"137.281 -47.529 OFFCURVE",
"179.373 -68 OFFCURVE",
"245 -68 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"300.354 205.943 OFFCURVE",
"208.021 244.489 OFFCURVE",
"178 259.5 CURVE SMOOTH",
"130.499 283.251 OFFCURVE",
"91 316.159 OFFCURVE",
"91 364 CURVE SMOOTH",
"91 412 OFFCURVE",
"118.667 448.667 OFFCURVE",
"192 478 CURVE",
"224 460 OFFCURVE",
"310 424 OFFCURVE",
"337 410 CURVE SMOOTH",
"381 385 OFFCURVE",
"414 349 OFFCURVE",
"414 297 CURVE SMOOTH",
"414 249 OFFCURVE",
"391.333 210.667 OFFCURVE",
"334 184 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
79 3 64 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
16 3 74 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
25 3 89 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
31 3 55 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
28 64 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
69 64 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 36 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
3 2 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
45 2 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
visible = 1;
width = 499;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
layers = (
{
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -8, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"199 285 OFFCURVE",
"219 229 OFFCURVE",
"256 189 CURVE SMOOTH",
"293 149 OFFCURVE",
"344 128 OFFCURVE",
"404 128 CURVE SMOOTH",
"468 128 OFFCURVE",
"517 151 OFFCURVE",
"556 189 CURVE",
"551 193 LINE SMOOTH",
"550 194 OFFCURVE",
"550 195 OFFCURVE",
"549 195 CURVE SMOOTH",
"547 195 OFFCURVE",
"546 194 OFFCURVE",
"545 193 CURVE SMOOTH",
"514 162 OFFCURVE",
"471 138 OFFCURVE",
"405 138 CURVE SMOOTH",
"284 138 OFFCURVE",
"211 228 OFFCURVE",
"211 350 CURVE SMOOTH",
"211 475 OFFCURVE",
"285 563 OFFCURVE",
"414 563 CURVE SMOOTH",
"468 563 OFFCURVE",
"516 547 OFFCURVE",
"541 530 CURVE",
"543 474 LINE SMOOTH",
"543 472 OFFCURVE",
"545 469 OFFCURVE",
"547 469 CURVE SMOOTH",
"553 469 LINE",
"553 534 LINE",
"527 556 OFFCURVE",
"470 573 OFFCURVE",
"411 573 CURVE SMOOTH",
"345 573 OFFCURVE",
"294 551 OFFCURVE",
"257 512 CURVE SMOOTH",
"220 472 OFFCURVE",
"199 416 OFFCURVE",
"199 350 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
68 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
38 3 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
58 3 80 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
20 1 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
25 2 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
73 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
87 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 800;
},
{
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"182 307 OFFCURVE",
"201 252 OFFCURVE",
"239 212 CURVE SMOOTH",
"272 178 OFFCURVE",
"322 155 OFFCURVE",
"389 155 CURVE SMOOTH",
"454 155 OFFCURVE",
"507 177 OFFCURVE",
"540 223 CURVE",
"490 275 LINE SMOOTH",
"485 280 OFFCURVE",
"480 283 OFFCURVE",
"474 283 CURVE SMOOTH",
"466 283 OFFCURVE",
"458 278 OFFCURVE",
"453 274 CURVE SMOOTH",
"435 260 OFFCURVE",
"419 257 OFFCURVE",
"400 257 CURVE SMOOTH",
"343 257 OFFCURVE",
"309 301 OFFCURVE",
"309 366 CURVE SMOOTH",
"309 432 OFFCURVE",
"345 474 OFFCURVE",
"410 474 CURVE SMOOTH",
"418 474 OFFCURVE",
"440 474 OFFCURVE",
"460 471 CURVE",
"466 452 LINE SMOOTH",
"471 435 OFFCURVE",
"477 425 OFFCURVE",
"494 425 CURVE SMOOTH",
"535 425 LINE",
"535 546 LINE",
"502 560 OFFCURVE",
"460 578 OFFCURVE",
"404 578 CURVE SMOOTH",
"341 578 OFFCURVE",
"284 555 OFFCURVE",
"244 517 CURVE SMOOTH",
"203 478 OFFCURVE",
"182 426 OFFCURVE",
"182 364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
1 0 88 86 76 74 64 62 50 48 38 36 30 28 25 23 18 16 8 6 0 41 1 41 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
20 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 10 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 18 7 32 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
20 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 10 1 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 7 7 8 1 0 35 0 8 8 7 1 0 36 0 7 8 7 1 0 33 9 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 775;
},
{
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -4, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"180 297 OFFCURVE",
"200 239 OFFCURVE",
"236 199 CURVE SMOOTH",
"275 156 OFFCURVE",
"327 132 OFFCURVE",
"398 132 CURVE SMOOTH",
"470 132 OFFCURVE",
"523 159 OFFCURVE",
"557 201 CURVE",
"527 234 LINE SMOOTH",
"524 238 OFFCURVE",
"518 239 OFFCURVE",
"516 239 CURVE SMOOTH",
"512 239 OFFCURVE",
"507 237 OFFCURVE",
"503 233 CURVE SMOOTH",
"474 207 OFFCURVE",
"441 197 OFFCURVE",
"407 197 CURVE SMOOTH",
"311 197 OFFCURVE",
"259 267 OFFCURVE",
"259 360 CURVE SMOOTH",
"259 458 OFFCURVE",
"317 524 OFFCURVE",
"412 524 CURVE SMOOTH",
"439 524 OFFCURVE",
"468 518 OFFCURVE",
"494 510 CURVE",
"502 464 LINE SMOOTH",
"504 453 OFFCURVE",
"509 448 OFFCURVE",
"519 448 CURVE SMOOTH",
"550 448 LINE",
"550 555 LINE",
"501 576 OFFCURVE",
"457 590 OFFCURVE",
"407 590 CURVE SMOOTH",
"346 590 OFFCURVE",
"289 570 OFFCURVE",
"244 525 CURVE SMOOTH",
"202 483 OFFCURVE",
"180 428 OFFCURVE",
"180 359 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
95 93 83 81 69 67 55 53 43 41 33 31 28 26 21 19 11 9 4 2 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 18 7 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 21 7 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 8 7 1 0 36 0 7 7 21 7 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 7 7 8 1 0 35 0 8 8 7 1 0 36 0 7 8 7 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "26E58D9E-C416-4E7D-A749-26BDB3DC9FA9";
name = "Feb 19 23, 13:46";
paths = (
{
closed = 1;
nodes = (
"469.333 132 OFFCURVE",
"528 158.667 OFFCURVE",
"564 208 CURVE",
"513 261 LINE SMOOTH",
"507.667 266.333 OFFCURVE",
"500 271 OFFCURVE",
"492 271 CURVE",
"492 271 LINE",
"472.799 271 OFFCURVE",
"437.698 243 OFFCURVE",
"400 243 CURVE SMOOTH",
"344.076 243 OFFCURVE",
"309 291.741 OFFCURVE",
"309 366 CURVE SMOOTH",
"309 442 OFFCURVE",
"344.333 490 OFFCURVE",
"411 490 CURVE SMOOTH",
"448.206 490 OFFCURVE",
"481.158 461 OFFCURVE",
"502 461 CURVE SMOOTH",
"515.333 461 OFFCURVE",
"522.667 469.667 OFFCURVE",
"528 475 CURVE",
"569 530 LINE",
"535.667 570 OFFCURVE",
"480.333 600 OFFCURVE",
"403 600 CURVE SMOOTH",
"273 600 OFFCURVE",
"172 500.117 OFFCURVE",
"172 366 CURVE SMOOTH",
"172 235.201 OFFCURVE",
"259.426 132 OFFCURVE",
"392 132 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"103 365 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
1 0 88 86 76 74 64 62 50 48 38 36 30 28 25 23 18 16 8 6 0 41 1 41 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
20 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 10 1 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 18 7 32 9 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
20 1 4 2 4 1 1 5 2 30 0 3 4 0 4 3 0 50 10 1 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 7 7 8 1 0 35 0 8 8 7 1 0 36 0 7 8 7 1 0 33 9 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "1125566C-7B5D-404C-9EB6-F9321A48F32B";
name = "Feb 19 23, 13:46";
paths = (
{
closed = 1;
nodes = (
"467 -7 OFFCURVE",
"529.5 11 OFFCURVE",
"583.5 43 CURVE SMOOTH",
"610.5 59 OFFCURVE",
"635.167 78.167 OFFCURVE",
"657.5 100.5 CURVE SMOOTH",
"702.167 145.167 OFFCURVE",
"734.667 199.5 OFFCURVE",
"752 261.5 CURVE SMOOTH",
"760.667 292.5 OFFCURVE",
"765 324.667 OFFCURVE",
"765 358 CURVE SMOOTH",
"765 426 OFFCURVE",
"747 488.333 OFFCURVE",
"715 543 CURVE SMOOTH",
"699 570.333 OFFCURVE",
"679.833 595 OFFCURVE",
"657.5 617 CURVE SMOOTH",
"612.833 661 OFFCURVE",
"558.5 693.667 OFFCURVE",
"496.5 711 CURVE SMOOTH",
"465.5 719.667 OFFCURVE",
"433 724 OFFCURVE",
"399 724 CURVE SMOOTH",
"332.333 724 OFFCURVE",
"269.5 706 OFFCURVE",
"215.5 674 CURVE SMOOTH",
"188.5 658 OFFCURVE",
"163.833 639 OFFCURVE",
"141.5 617 CURVE SMOOTH",
"96.833 573 OFFCURVE",
"64.333 517.5 OFFCURVE",
"47 455.5 CURVE SMOOTH",
"38.333 424.5 OFFCURVE",
"34 392 OFFCURVE",
"34 358 CURVE",
"34 358 LINE",
"34 291.333 OFFCURVE",
"52 228.5 OFFCURVE",
"84 174.5 CURVE SMOOTH",
"100 147.5 OFFCURVE",
"119.167 122.833 OFFCURVE",
"141.5 100.5 CURVE SMOOTH",
"186.167 55.833 OFFCURVE",
"240.5 23.333 OFFCURVE",
"302.5 6 CURVE SMOOTH",
"333.5 -2.667 OFFCURVE",
"365.667 -7 OFFCURVE",
"399 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"478.333 130 OFFCURVE",
"532.333 156 OFFCURVE",
"571 200 CURVE",
"540 232 LINE SMOOTH",
"536 236 OFFCURVE",
"534.667 238 OFFCURVE",
"528 238 CURVE SMOOTH",
"526 238 OFFCURVE",
"524 237.333 OFFCURVE",
"522 236 CURVE SMOOTH",
"520 234.667 OFFCURVE",
"517.667 233.333 OFFCURVE",
"515 232 CURVE",
"515 232 LINE",
"475.31 208.186 OFFCURVE",
"462.912 198 OFFCURVE",
"406 198 CURVE SMOOTH",
"319.709 198 OFFCURVE",
"262 259.23 OFFCURVE",
"262 359 CURVE SMOOTH",
"262 459.543 OFFCURVE",
"321.124 521 OFFCURVE",
"415 521 CURVE SMOOTH",
"456.014 521 OFFCURVE",
"515.507 485 OFFCURVE",
"530 485 CURVE SMOOTH",
"538 485 OFFCURVE",
"543 490 OFFCURVE",
"546 494 CURVE SMOOTH",
"569 527 LINE",
"531.667 563 OFFCURVE",
"483 588 OFFCURVE",
"411 588 CURVE SMOOTH",
"278.698 588 OFFCURVE",
"183 494.491 OFFCURVE",
"183 359 CURVE SMOOTH",
"183 226.442 OFFCURVE",
"269.955 130 OFFCURVE",
"401 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340.333 38 OFFCURVE",
"285.667 54.167 OFFCURVE",
"239 81.5 CURVE SMOOTH",
"215.667 95.167 OFFCURVE",
"194.5 111.667 OFFCURVE",
"175.5 131 CURVE SMOOTH",
"137.5 169.667 OFFCURVE",
"109.667 218.333 OFFCURVE",
"95 273 CURVE SMOOTH",
"87.667 300.333 OFFCURVE",
"84 328.667 OFFCURVE",
"84 358 CURVE",
"84 358 LINE",
"84 447.333 OFFCURVE",
"118.833 528.5 OFFCURVE",
"175.5 586.5 CURVE SMOOTH",
"232.167 644.5 OFFCURVE",
"311 681 OFFCURVE",
"399 681 CURVE SMOOTH",
"457.667 681 OFFCURVE",
"513.333 665 OFFCURVE",
"560 637 CURVE SMOOTH",
"583.333 623 OFFCURVE",
"604.5 606.167 OFFCURVE",
"623.5 586.5 CURVE SMOOTH",
"661.5 547.167 OFFCURVE",
"689.167 499.833 OFFCURVE",
"704.5 444.5 CURVE SMOOTH",
"712.167 416.833 OFFCURVE",
"716 388 OFFCURVE",
"716 358 CURVE SMOOTH",
"716 268.667 OFFCURVE",
"680.167 189.5 OFFCURVE",
"623.5 131.5 CURVE SMOOTH",
"566.833 73.5 OFFCURVE",
"487 38 OFFCURVE",
"399 38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
95 93 83 81 69 67 55 53 43 41 33 31 28 26 21 19 11 9 4 2 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 18 7 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 9 9 6 1 0 36 0 6 6 17 31 0 8 8 7 1 0 36 0 7 7 21 7 32 9 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 8 7 1 0 36 0 7 7 21 7 32 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
23 1 4 2 7 1 5 0 2 30 0 3 4 0 4 3 0 50 0 0 5 4 0 5 48 0 6 0 9 2 6 9 1 0 38 0 2 0 4 3 2 4 1 0 38 0 5 0 1 8 5 1 1 0 38 0 8 7 7 8 1 0 35 0 8 8 7 1 0 36 0 7 8 7 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 798;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "A4A43B17-7D74-4AAF-B566-E840010CA357";
name = "Feb 19 23, 13:46";
paths = (
{
closed = 1;
nodes = (
"505.667 -7 OFFCURVE",
"594.833 32.833 OFFCURVE",
"659.5 97.5 CURVE SMOOTH",
"724.167 162.167 OFFCURVE",
"764 251.333 OFFCURVE",
"764 350 CURVE SMOOTH",
"764 448.667 OFFCURVE",
"724.167 537.833 OFFCURVE",
"659.5 602.5 CURVE SMOOTH",
"594.833 667.167 OFFCURVE",
"505.667 707 OFFCURVE",
"407 707 CURVE SMOOTH",
"308.333 707 OFFCURVE",
"219.167 667.167 OFFCURVE",
"154.5 602.5 CURVE SMOOTH",
"89.833 537.833 OFFCURVE",
"50 448.667 OFFCURVE",
"50 350 CURVE",
"50 350 LINE",
"50 251.333 OFFCURVE",
"89.833 162.167 OFFCURVE",
"154.5 97.5 CURVE SMOOTH",
"219.167 32.833 OFFCURVE",
"308.333 -7 OFFCURVE",
"407 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"485.382 128 OFFCURVE",
"535.391 151.072 OFFCURVE",
"578 188 CURVE",
"576 190 LINE SMOOTH",
"574 192 OFFCURVE",
"572.333 193 OFFCURVE",
"571 193 CURVE SMOOTH",
"569.667 193 OFFCURVE",
"568.667 192.667 OFFCURVE",
"568 192 CURVE",
"568 192 LINE",
"525.611 155.263 OFFCURVE",
"482.708 138 OFFCURVE",
"412 138 CURVE SMOOTH",
"292.075 138 OFFCURVE",
"207 220.608 OFFCURVE",
"207 350 CURVE SMOOTH",
"207 480.997 OFFCURVE",
"292.669 563 OFFCURVE",
"419 563 CURVE SMOOTH",
"478.151 563 OFFCURVE",
"552.207 517 OFFCURVE",
"563 517 CURVE SMOOTH",
"565 517 OFFCURVE",
"566.333 517.667 OFFCURVE",
"567 519 CURVE SMOOTH",
"569 522 LINE",
"525.418 557.411 OFFCURVE",
"482.942 573 OFFCURVE",
"419 573 CURVE SMOOTH",
"286.971 573 OFFCURVE",
"195 483.156 OFFCURVE",
"195 350 CURVE SMOOTH",
"195 215.413 OFFCURVE",
"285.315 128 OFFCURVE",
"412 128 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312.333 5 OFFCURVE",
"225.667 43.333 OFFCURVE",
"163 106 CURVE SMOOTH",
"100.333 168.667 OFFCURVE",
"62 255.333 OFFCURVE",
"62 350 CURVE",
"62 350 LINE",
"62 414 OFFCURVE",
"79.5 473.167 OFFCURVE",
"109.5 524.5 CURVE SMOOTH",
"124.5 550.167 OFFCURVE",
"142.5 573.5 OFFCURVE",
"163.5 594.5 CURVE SMOOTH",
"205.5 636.5 OFFCURVE",
"256.333 668 OFFCURVE",
"315 684 CURVE SMOOTH",
"344.333 692 OFFCURVE",
"375 696 OFFCURVE",
"407 696 CURVE SMOOTH",
"471 696 OFFCURVE",
"530.167 679.667 OFFCURVE",
"581.5 649 CURVE SMOOTH",
"607.167 633.667 OFFCURVE",
"630.5 615.5 OFFCURVE",
"651.5 594.5 CURVE SMOOTH",
"693.5 552.5 OFFCURVE",
"725 500.667 OFFCURVE",
"741 442 CURVE SMOOTH",
"749 412.667 OFFCURVE",
"753 382 OFFCURVE",
"753 350 CURVE SMOOTH",
"753 286 OFFCURVE",
"736.667 226.667 OFFCURVE",
"706 176 CURVE SMOOTH",
"690.667 150.667 OFFCURVE",
"672.5 127.5 OFFCURVE",
"651.5 106.5 CURVE SMOOTH",
"609.5 64.5 OFFCURVE",
"557.667 34.167 OFFCURVE",
"499 17.5 CURVE SMOOTH",
"469.667 9.167 OFFCURVE",
"439 5 OFFCURVE",
"407 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
68 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
38 3 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
58 3 80 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
43 1 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
20 1 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
25 2 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
73 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
87 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
}
);
leftKerningGroup = O;
leftMetricsKey = O;
note = copyright;
rightKerningGroup = O;
rightMetricsKey = O;
unicode = 00A9;
},
{
glyphname = registered;
layers = (
{
anchors = (
{
name = bottom;
position = "{393, 0}";
},
{
name = top;
position = "{393, 435}";
}
);
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -8, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"342 140 LINE",
"342 145 LINE SMOOTH",
"342 147 OFFCURVE",
"339 149 OFFCURVE",
"337 149 CURVE SMOOTH",
"291 151 LINE",
"291 347 LINE",
"357 347 LINE SMOOTH",
"370 347 OFFCURVE",
"379 346 OFFCURVE",
"387 336 CURVE SMOOTH",
"545 145 LINE SMOOTH",
"548 141 OFFCURVE",
"551 140 OFFCURVE",
"555 140 CURVE SMOOTH",
"608 140 LINE",
"608 145 LINE SMOOTH",
"608 147 OFFCURVE",
"606 149 OFFCURVE",
"604 149 CURVE SMOOTH",
"555 151 LINE",
"398 339 LINE SMOOTH",
"395 343 OFFCURVE",
"391 346 OFFCURVE",
"387 348 CURVE",
"467 351 OFFCURVE",
"525 395 OFFCURVE",
"525 465 CURVE SMOOTH",
"525 540 OFFCURVE",
"474 575 OFFCURVE",
"382 575 CURVE SMOOTH",
"229 575 LINE",
"229 570 LINE SMOOTH",
"229 568 OFFCURVE",
"231 566 OFFCURVE",
"234 566 CURVE SMOOTH",
"279 564 LINE",
"279 151 LINE",
"234 149 LINE SMOOTH",
"232 149 OFFCURVE",
"229 147 OFFCURVE",
"229 145 CURVE SMOOTH",
"229 140 LINE"
);
},
{
closed = 1;
nodes = (
"291 565 LINE",
"382 565 LINE SMOOTH",
"467 565 OFFCURVE",
"513 534 OFFCURVE",
"513 465 CURVE SMOOTH",
"513 397 OFFCURVE",
"459 357 OFFCURVE",
"377 357 CURVE SMOOTH",
"291 357 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 800;
},
{
anchors = (
{
name = bottom;
position = "{369, 0}";
},
{
name = top;
position = "{-150, 410}";
}
);
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"397 166 LINE",
"397 213 LINE SMOOTH",
"397 228 OFFCURVE",
"387 234 OFFCURVE",
"370 238 CURVE SMOOTH",
"353 242 LINE",
"353 309 LINE",
"370 309 LINE SMOOTH",
"387 309 OFFCURVE",
"392 304 OFFCURVE",
"397 293 CURVE SMOOTH",
"449 186 LINE SMOOTH",
"456 171 OFFCURVE",
"474 166 OFFCURVE",
"489 166 CURVE SMOOTH",
"585 166 LINE",
"585 213 LINE SMOOTH",
"585 226 OFFCURVE",
"576 234 OFFCURVE",
"558 238 CURVE SMOOTH",
"546 241 LINE",
"517 300 LINE SMOOTH",
"509 316 OFFCURVE",
"496 326 OFFCURVE",
"480 333 CURVE",
"530 358 OFFCURVE",
"554 401 OFFCURVE",
"554 451 CURVE SMOOTH",
"554 539 OFFCURVE",
"481 576 OFFCURVE",
"383 576 CURVE SMOOTH",
"199 576 LINE",
"199 528 LINE SMOOTH",
"199 513 OFFCURVE",
"209 508 OFFCURVE",
"225 504 CURVE SMOOTH",
"242 500 LINE",
"242 242 LINE",
"225 238 LINE SMOOTH",
"209 234 OFFCURVE",
"199 228 OFFCURVE",
"199 213 CURVE SMOOTH",
"199 166 LINE"
);
},
{
closed = 1;
nodes = (
"353 492 LINE",
"383 492 LINE SMOOTH",
"425 492 OFFCURVE",
"444 472 OFFCURVE",
"444 442 CURVE SMOOTH",
"444 409 OFFCURVE",
"426 386 OFFCURVE",
"384 386 CURVE SMOOTH",
"353 386 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 775;
},
{
anchors = (
{
name = bottom;
position = "{394, 0}";
},
{
name = top;
position = "{225, 447}";
}
);
components = (
{
name = largecircle;
transform = "{1, 0, 0, 1, -4, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"371 138 LINE",
"371 171 LINE SMOOTH",
"371 181 OFFCURVE",
"366 186 OFFCURVE",
"356 188 CURVE SMOOTH",
"326 194 LINE",
"326 316 LINE",
"364 316 LINE SMOOTH",
"378 316 OFFCURVE",
"386 314 OFFCURVE",
"394 302 CURVE SMOOTH",
"494 154 LINE SMOOTH",
"500 144 OFFCURVE",
"509 138 OFFCURVE",
"523 138 CURVE SMOOTH",
"599 138 LINE",
"599 171 LINE SMOOTH",
"599 179 OFFCURVE",
"595 186 OFFCURVE",
"584 188 CURVE SMOOTH",
"555 194 LINE",
"476 307 LINE SMOOTH",
"468 318 OFFCURVE",
"461 325 OFFCURVE",
"450 331 CURVE",
"512 349 OFFCURVE",
"552 394 OFFCURVE",
"552 458 CURVE SMOOTH",
"552 544 OFFCURVE",
"488 585 OFFCURVE",
"382 585 CURVE SMOOTH",
"202 585 LINE",
"202 553 LINE SMOOTH",
"202 543 OFFCURVE",
"208 538 OFFCURVE",
"217 536 CURVE SMOOTH",
"248 529 LINE",
"248 194 LINE",
"217 188 LINE SMOOTH",
"206 186 OFFCURVE",
"202 179 OFFCURVE",
"202 171 CURVE SMOOTH",
"202 138 LINE"
);
},
{
closed = 1;
nodes = (
"326 526 LINE",
"382 526 LINE SMOOTH",
"445 526 OFFCURVE",
"477 500 OFFCURVE",
"477 452 CURVE SMOOTH",
"477 402 OFFCURVE",
"442 371 OFFCURVE",
"380 371 CURVE SMOOTH",
"326 371 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
anchors = (
{
name = top;
position = "{-399, 729}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "94897BFB-0E6A-4235-ACF3-27F203EEBAA8";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"461.333 -7 OFFCURVE",
"525.167 12 OFFCURVE",
"580.5 44 CURVE SMOOTH",
"608.167 60 OFFCURVE",
"633.333 79.333 OFFCURVE",
"656 102 CURVE SMOOTH",
"701.333 147.333 OFFCURVE",
"734.667 203.167 OFFCURVE",
"752 266.5 CURVE SMOOTH",
"760.667 298.167 OFFCURVE",
"765 331 OFFCURVE",
"765 365 CURVE SMOOTH",
"765 433 OFFCURVE",
"747.167 497.167 OFFCURVE",
"714.5 552.5 CURVE SMOOTH",
"698.167 580.167 OFFCURVE",
"678.667 605.333 OFFCURVE",
"656 628 CURVE SMOOTH",
"610.667 673.333 OFFCURVE",
"554.833 705.5 OFFCURVE",
"491.5 723.5 CURVE SMOOTH",
"459.833 732.5 OFFCURVE",
"426.667 737 OFFCURVE",
"392 737 CURVE SMOOTH",
"324 737 OFFCURVE",
"259.833 718 OFFCURVE",
"204.5 686 CURVE SMOOTH",
"176.833 670 OFFCURVE",
"151.667 650.667 OFFCURVE",
"129 628 CURVE SMOOTH",
"83.667 582.667 OFFCURVE",
"51.5 526.833 OFFCURVE",
"33.5 463.5 CURVE SMOOTH",
"24.5 431.833 OFFCURVE",
"20 399 OFFCURVE",
"20 365 CURVE",
"20 365 LINE",
"20 295.667 OFFCURVE",
"39 232.833 OFFCURVE",
"71 177.5 CURVE SMOOTH",
"87 149.833 OFFCURVE",
"106.333 124.667 OFFCURVE",
"129 102 CURVE SMOOTH",
"174.333 56.667 OFFCURVE",
"230.167 24.5 OFFCURVE",
"293.5 6.5 CURVE SMOOTH",
"325.167 -2.5 OFFCURVE",
"358 -7 OFFCURVE",
"392 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"229.251 63 OFFCURVE",
"103 197.199 OFFCURVE",
"103 365 CURVE",
"103 365 LINE",
"103 533.108 OFFCURVE",
"229.894 669 OFFCURVE",
"392 669 CURVE SMOOTH",
"446.667 669 OFFCURVE",
"497.167 653.5 OFFCURVE",
"540.5 627.5 CURVE SMOOTH",
"562.167 614.5 OFFCURVE",
"581.833 598.833 OFFCURVE",
"599.5 580.5 CURVE SMOOTH",
"634.833 543.833 OFFCURVE",
"660.667 498 OFFCURVE",
"674 446 CURVE SMOOTH",
"680.667 420 OFFCURVE",
"684 393 OFFCURVE",
"684 365 CURVE SMOOTH",
"684 281 OFFCURVE",
"653.667 208.333 OFFCURVE",
"603 155 CURVE",
"541 283 LINE SMOOTH",
"530 306 OFFCURVE",
"517.667 320.333 OFFCURVE",
"499 331 CURVE",
"556.332 351.848 OFFCURVE",
"584 399.94 OFFCURVE",
"584 457 CURVE SMOOTH",
"584 549.448 OFFCURVE",
"517.093 591 OFFCURVE",
"393 591 CURVE SMOOTH",
"217 591 LINE",
"217 141 LINE",
"351 141 LINE",
"351 292 LINE",
"367 292 LINE SMOOTH",
"383 292 OFFCURVE",
"390.333 286.667 OFFCURVE",
"397 276 CURVE",
"443 160 LINE",
"450.333 147.333 OFFCURVE",
"463 141 OFFCURVE",
"481 141 CURVE SMOOTH",
"589 141 LINE",
"537 91.667 OFFCURVE",
"469.333 63 OFFCURVE",
"392 63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 493 LINE",
"351 493 LINE",
"393 493 LINE SMOOTH",
"443.518 493 OFFCURVE",
"452 478.777 OFFCURVE",
"452 440 CURVE SMOOTH",
"452 397.475 OFFCURVE",
"442.98 384 OFFCURVE",
"383 384 CURVE SMOOTH",
"351 384 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "CFCCFF66-AF19-449E-80CF-BE42E0981831";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"467 -7 OFFCURVE",
"529.5 11 OFFCURVE",
"583.5 43 CURVE SMOOTH",
"610.5 59 OFFCURVE",
"635.167 78.167 OFFCURVE",
"657.5 100.5 CURVE SMOOTH",
"702.167 145.167 OFFCURVE",
"734.667 199.5 OFFCURVE",
"752 261.5 CURVE SMOOTH",
"760.667 292.5 OFFCURVE",
"765 324.667 OFFCURVE",
"765 358 CURVE SMOOTH",
"765 426 OFFCURVE",
"747 488.333 OFFCURVE",
"715 543 CURVE SMOOTH",
"699 570.333 OFFCURVE",
"679.833 595 OFFCURVE",
"657.5 617 CURVE SMOOTH",
"612.833 661 OFFCURVE",
"558.5 693.667 OFFCURVE",
"496.5 711 CURVE SMOOTH",
"465.5 719.667 OFFCURVE",
"433 724 OFFCURVE",
"399 724 CURVE SMOOTH",
"332.333 724 OFFCURVE",
"269.5 706 OFFCURVE",
"215.5 674 CURVE SMOOTH",
"188.5 658 OFFCURVE",
"163.833 639 OFFCURVE",
"141.5 617 CURVE SMOOTH",
"96.833 573 OFFCURVE",
"64.333 517.5 OFFCURVE",
"47 455.5 CURVE SMOOTH",
"38.333 424.5 OFFCURVE",
"34 392 OFFCURVE",
"34 358 CURVE",
"34 358 LINE",
"34 291.333 OFFCURVE",
"52 228.5 OFFCURVE",
"84 174.5 CURVE SMOOTH",
"100 147.5 OFFCURVE",
"119.167 122.833 OFFCURVE",
"141.5 100.5 CURVE SMOOTH",
"186.167 55.833 OFFCURVE",
"240.5 23.333 OFFCURVE",
"302.5 6 CURVE SMOOTH",
"333.5 -2.667 OFFCURVE",
"365.667 -7 OFFCURVE",
"399 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340.333 38 OFFCURVE",
"285.667 54.167 OFFCURVE",
"239 81.5 CURVE SMOOTH",
"215.667 95.167 OFFCURVE",
"194.5 111.667 OFFCURVE",
"175.5 131 CURVE SMOOTH",
"137.5 169.667 OFFCURVE",
"109.667 218.333 OFFCURVE",
"95 273 CURVE SMOOTH",
"87.667 300.333 OFFCURVE",
"84 328.667 OFFCURVE",
"84 358 CURVE",
"84 358 LINE",
"84 447.333 OFFCURVE",
"118.833 528.5 OFFCURVE",
"175.5 586.5 CURVE SMOOTH",
"232.167 644.5 OFFCURVE",
"311 681 OFFCURVE",
"399 681 CURVE SMOOTH",
"457.667 681 OFFCURVE",
"513.333 665 OFFCURVE",
"560 637 CURVE SMOOTH",
"583.333 623 OFFCURVE",
"604.5 606.167 OFFCURVE",
"623.5 586.5 CURVE SMOOTH",
"661.5 547.167 OFFCURVE",
"689.167 499.833 OFFCURVE",
"704.5 444.5 CURVE SMOOTH",
"712.167 416.833 OFFCURVE",
"716 388 OFFCURVE",
"716 358 CURVE SMOOTH",
"716 268.667 OFFCURVE",
"680.167 189.5 OFFCURVE",
"623.5 131.5 CURVE SMOOTH",
"566.833 73.5 OFFCURVE",
"487 38 OFFCURVE",
"399 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327 136 LINE",
"327 313 LINE",
"367 313 LINE",
"367 313 LINE",
"384.333 313 OFFCURVE",
"391.667 308 OFFCURVE",
"397 300 CURVE SMOOTH",
"498 149 LINE SMOOTH",
"503.333 140.333 OFFCURVE",
"511.333 136 OFFCURVE",
"522 136 CURVE SMOOTH",
"596 136 LINE",
"482 303 LINE",
"475.333 316.333 OFFCURVE",
"466.667 326.333 OFFCURVE",
"456 333 CURVE",
"526.667 350.333 OFFCURVE",
"562 396.333 OFFCURVE",
"562 459 CURVE SMOOTH",
"562 540.333 OFFCURVE",
"507.667 582 OFFCURVE",
"393 582 CURVE SMOOTH",
"249 582 LINE",
"249 136 LINE"
);
},
{
closed = 1;
nodes = (
"327 522 LINE",
"327 522 LINE",
"393 522 LINE SMOOTH",
"458.844 522 OFFCURVE",
"485 500.772 OFFCURVE",
"485 449 CURVE SMOOTH",
"485 395.816 OFFCURVE",
"454.939 370 OFFCURVE",
"385 370 CURVE SMOOTH",
"327 370 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 798;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "E1544E44-60E9-4EA8-97F2-28BD3DA536FF";
name = "Feb 19 23, 13:15";
paths = (
{
closed = 1;
nodes = (
"505.667 -7 OFFCURVE",
"594.833 32.833 OFFCURVE",
"659.5 97.5 CURVE SMOOTH",
"724.167 162.167 OFFCURVE",
"764 251.333 OFFCURVE",
"764 350 CURVE SMOOTH",
"764 448.667 OFFCURVE",
"724.167 537.833 OFFCURVE",
"659.5 602.5 CURVE SMOOTH",
"594.833 667.167 OFFCURVE",
"505.667 707 OFFCURVE",
"407 707 CURVE SMOOTH",
"308.333 707 OFFCURVE",
"219.167 667.167 OFFCURVE",
"154.5 602.5 CURVE SMOOTH",
"89.833 537.833 OFFCURVE",
"50 448.667 OFFCURVE",
"50 350 CURVE",
"50 350 LINE",
"50 251.333 OFFCURVE",
"89.833 162.167 OFFCURVE",
"154.5 97.5 CURVE SMOOTH",
"219.167 32.833 OFFCURVE",
"308.333 -7 OFFCURVE",
"407 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312.333 5 OFFCURVE",
"225.667 43.333 OFFCURVE",
"163 106 CURVE SMOOTH",
"100.333 168.667 OFFCURVE",
"62 255.333 OFFCURVE",
"62 350 CURVE",
"62 350 LINE",
"62 414 OFFCURVE",
"79.5 473.167 OFFCURVE",
"109.5 524.5 CURVE SMOOTH",
"124.5 550.167 OFFCURVE",
"142.5 573.5 OFFCURVE",
"163.5 594.5 CURVE SMOOTH",
"205.5 636.5 OFFCURVE",
"256.333 668 OFFCURVE",
"315 684 CURVE SMOOTH",
"344.333 692 OFFCURVE",
"375 696 OFFCURVE",
"407 696 CURVE SMOOTH",
"471 696 OFFCURVE",
"530.167 679.667 OFFCURVE",
"581.5 649 CURVE SMOOTH",
"607.167 633.667 OFFCURVE",
"630.5 615.5 OFFCURVE",
"651.5 594.5 CURVE SMOOTH",
"693.5 552.5 OFFCURVE",
"725 500.667 OFFCURVE",
"741 442 CURVE SMOOTH",
"749 412.667 OFFCURVE",
"753 382 OFFCURVE",
"753 350 CURVE SMOOTH",
"753 286 OFFCURVE",
"736.667 226.667 OFFCURVE",
"706 176 CURVE SMOOTH",
"690.667 150.667 OFFCURVE",
"672.5 127.5 OFFCURVE",
"651.5 106.5 CURVE SMOOTH",
"609.5 64.5 OFFCURVE",
"557.667 34.167 OFFCURVE",
"499 17.5 CURVE SMOOTH",
"469.667 9.167 OFFCURVE",
"439 5 OFFCURVE",
"407 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 130 LINE",
"299 342 LINE",
"367 342 LINE",
"367 342 LINE",
"387 342 OFFCURVE",
"391.667 337.667 OFFCURVE",
"397 331 CURVE SMOOTH",
"562 134 LINE SMOOTH",
"566 130 OFFCURVE",
"567.333 130 OFFCURVE",
"570 130 CURVE SMOOTH",
"580 130 LINE",
"413 329 LINE SMOOTH",
"407.667 335.667 OFFCURVE",
"403.667 339.333 OFFCURVE",
"397 342 CURVE",
"478.425 347.253 OFFCURVE",
"536 387.53 OFFCURVE",
"536 460 CURVE SMOOTH",
"536 536 OFFCURVE",
"485 570 OFFCURVE",
"393 570 CURVE SMOOTH",
"287 570 LINE",
"287 130 LINE"
);
},
{
closed = 1;
nodes = (
"299 560 LINE",
"299 560 LINE",
"393 560 LINE SMOOTH",
"481 560 OFFCURVE",
"524 530.667 OFFCURVE",
"524 460 CURVE SMOOTH",
"524 390.667 OFFCURVE",
"473.667 352 OFFCURVE",
"387 352 CURVE SMOOTH",
"299 352 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "7C297BD0-7D20-4BCA-A810-F199A5D541D6";
name = CIrcle;
paths = (
{
closed = 1;
nodes = (
"605 -7 OFFCURVE",
"765 153 OFFCURVE",
"765 350 CURVE SMOOTH",
"765 547 OFFCURVE",
"605 707 OFFCURVE",
"408 707 CURVE SMOOTH",
"211 707 OFFCURVE",
"51 547 OFFCURVE",
"51 350 CURVE SMOOTH",
"51 153 OFFCURVE",
"211 -7 OFFCURVE",
"408 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 5 OFFCURVE",
"62 160 OFFCURVE",
"62 351 CURVE SMOOTH",
"62 541 OFFCURVE",
"217 696 OFFCURVE",
"408 696 CURVE SMOOTH",
"598 696 OFFCURVE",
"753 541 OFFCURVE",
"753 351 CURVE SMOOTH",
"753 160 OFFCURVE",
"598 5 OFFCURVE",
"408 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
47 3 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
53 3 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
10 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
58 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
62 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
50 1 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
71 1 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 814;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "A61987D8-C264-4F3D-86B5-116F4E798BA0";
name = Circle;
paths = (
{
closed = 1;
nodes = (
"600 -7 OFFCURVE",
"765 157 OFFCURVE",
"765 358 CURVE SMOOTH",
"765 557 OFFCURVE",
"604 724 OFFCURVE",
"399 724 CURVE SMOOTH",
"198 724 OFFCURVE",
"34 559 OFFCURVE",
"34 358 CURVE SMOOTH",
"34 158 OFFCURVE",
"199 -7 OFFCURVE",
"399 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"226 38 OFFCURVE",
"84 178 OFFCURVE",
"84 358 CURVE SMOOTH",
"84 536 OFFCURVE",
"223 681 OFFCURVE",
"399 681 CURVE SMOOTH",
"577 681 OFFCURVE",
"716 535 OFFCURVE",
"716 358 CURVE SMOOTH",
"716 185 OFFCURVE",
"579 38 OFFCURVE",
"399 38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
52 52 86 84 76 74 52 73 52 72 68 66 57 55 54 53 48 46 36 34 22 20 8 6 11 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 3 3 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 21 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
108 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 2 1 1 0 36 0 1 1 21 1 32 7 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
62 1 7 8 1 30 6 1 4 7 2 7 4 2 50 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 4 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
62 1 7 8 1 30 0 6 7 4 7 6 4 50 0 4 2 7 4 2 48 0 0 0 3 5 0 3 1 0 38 0 5 0 9 8 5 9 1 0 38 0 8 10 1 7 6 8 7 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 798;
},
{
anchors = (
{
name = top;
position = "{-399, 729}";
}
);
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "7CE01E3B-88EF-4835-840D-373AAFE8FF90";
name = Circle;
paths = (
{
closed = 1;
nodes = (
"595 -7 OFFCURVE",
"765 156 OFFCURVE",
"765 365 CURVE SMOOTH",
"765 571 OFFCURVE",
"597 737 OFFCURVE",
"392 737 CURVE SMOOTH",
"187 737 OFFCURVE",
"20 569 OFFCURVE",
"20 365 CURVE SMOOTH",
"20 161 OFFCURVE",
"188 -7 OFFCURVE",
"392 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"229.251 63 OFFCURVE",
"103 197.199 OFFCURVE",
"103 365 CURVE SMOOTH",
"103 533.108 OFFCURVE",
"229.894 669 OFFCURVE",
"392 669 CURVE SMOOTH",
"554 669 OFFCURVE",
"684 535 OFFCURVE",
"684 365 CURVE SMOOTH",
"684 194 OFFCURVE",
"554 63 OFFCURVE",
"392 63 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
89 87 79 77 73 71 49 47 46 45 44 42 38 36 34 32 22 20 8 6 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 7 7 0 1 0 36 0 0 0 17 31 0 2 2 1 1 0 36 0 1 1 18 1 32 8 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
58 1 4 8 62 1 3 4 2 30 5 1 3 4 2 4 3 2 50 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 3 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 8 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
58 1 4 8 62 1 5 4 2 30 0 5 4 3 4 5 3 50 0 3 2 4 3 2 48 0 0 0 7 6 0 7 1 0 38 0 6 0 9 8 6 9 1 0 38 0 8 0 4 5 8 4 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 785;
}
);
leftKerningGroup = O;
leftMetricsKey = O;
note = registered;
rightKerningGroup = O;
rightMetricsKey = O;
unicode = 00AE;
},
{
glyphname = trademark;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"171 417 LINE",
"171 730 LINE",
"290 730 LINE",
"290 740 LINE",
"40 740 LINE",
"40 730 LINE",
"160 730 LINE",
"160 417 LINE"
);
},
{
closed = 1;
nodes = (
"163 417 LINE",
"162 427 LINE",
"127 425 LINE SMOOTH",
"125 425 OFFCURVE",
"123 424 OFFCURVE",
"123 422 CURVE SMOOTH",
"123 417 LINE"
);
},
{
closed = 1;
nodes = (
"208 417 LINE",
"208 422 LINE SMOOTH",
"208 424 OFFCURVE",
"206 425 OFFCURVE",
"204 425 CURVE SMOOTH",
"169 427 LINE",
"168 417 LINE"
);
},
{
closed = 1;
nodes = (
"281 691 LINE SMOOTH",
"281 689 OFFCURVE",
"283 687 OFFCURVE",
"284 687 CURVE SMOOTH",
"290 687 LINE",
"290 730 LINE",
"279 734 LINE",
"279 734 LINE"
);
},
{
closed = 1;
nodes = (
"40 730 LINE",
"40 687 LINE",
"45 687 LINE SMOOTH",
"47 687 OFFCURVE",
"49 689 OFFCURVE",
"49 691 CURVE SMOOTH",
"51 734 LINE"
);
},
{
closed = 1;
nodes = (
"366 417 LINE",
"366 716 LINE SMOOTH",
"366 718 OFFCURVE",
"366 720 OFFCURVE",
"366 723 CURVE",
"507 482 LINE SMOOTH",
"509 480 OFFCURVE",
"510 479 OFFCURVE",
"512 479 CURVE SMOOTH",
"515 479 LINE SMOOTH",
"517 479 OFFCURVE",
"519 480 OFFCURVE",
"520 482 CURVE SMOOTH",
"657 722 LINE SMOOTH",
"656 720 OFFCURVE",
"656 718 OFFCURVE",
"656 716 CURVE SMOOTH",
"656 417 LINE",
"666 417 LINE",
"666 740 LINE",
"660 740 LINE SMOOTH",
"657 740 OFFCURVE",
"657 740 OFFCURVE",
"655 737 CURVE SMOOTH",
"517 497 LINE SMOOTH",
"516 495 OFFCURVE",
"515 493 OFFCURVE",
"514 490 CURVE",
"512 492 OFFCURVE",
"511 495 OFFCURVE",
"510 497 CURVE SMOOTH",
"368 737 LINE SMOOTH",
"366 740 OFFCURVE",
"365 740 OFFCURVE",
"363 740 CURVE SMOOTH",
"357 740 LINE",
"357 417 LINE"
);
},
{
closed = 1;
nodes = (
"360 417 LINE",
"359 427 LINE",
"324 425 LINE SMOOTH",
"322 425 OFFCURVE",
"320 424 OFFCURVE",
"320 422 CURVE SMOOTH",
"320 417 LINE"
);
},
{
closed = 1;
nodes = (
"404 417 LINE",
"404 422 LINE SMOOTH",
"404 424 OFFCURVE",
"402 425 OFFCURVE",
"400 425 CURVE SMOOTH",
"365 427 LINE",
"364 417 LINE"
);
},
{
closed = 1;
nodes = (
"320 740 LINE",
"320 735 LINE SMOOTH",
"320 734 OFFCURVE",
"322 732 OFFCURVE",
"324 732 CURVE SMOOTH",
"359 730 LINE",
"360 740 LINE"
);
},
{
closed = 1;
nodes = (
"659 417 LINE",
"658 427 LINE",
"622 425 LINE SMOOTH",
"620 425 OFFCURVE",
"619 423 OFFCURVE",
"619 422 CURVE SMOOTH",
"619 417 LINE"
);
},
{
closed = 1;
nodes = (
"703 417 LINE",
"703 422 LINE SMOOTH",
"703 424 OFFCURVE",
"701 425 OFFCURVE",
"699 425 CURVE SMOOTH",
"664 427 LINE",
"663 417 LINE"
);
},
{
closed = 1;
nodes = (
"663 740 LINE",
"664 730 LINE",
"699 732 LINE SMOOTH",
"701 732 OFFCURVE",
"703 734 OFFCURVE",
"703 735 CURVE SMOOTH",
"703 740 LINE"
);
}
);
userData = {
RMXScaler = {
height = 46;
weight = -1;
width = 46;
};
assembly = "PUSHW[ ]	/* 4 values pushed */
29 3 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 3 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 4 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
0 30 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
16 19 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 743;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"216 417 LINE",
"216 692 LINE",
"307 692 LINE",
"307 770 LINE",
"25 770 LINE",
"25 692 LINE",
"116 692 LINE",
"116 417 LINE"
);
},
{
closed = 1;
nodes = (
"126 417 LINE",
"118 485 LINE",
"103 481 LINE SMOOTH",
"86 477 OFFCURVE",
"79 471 OFFCURVE",
"79 459 CURVE SMOOTH",
"79 417 LINE"
);
},
{
closed = 1;
nodes = (
"253 417 LINE",
"253 459 LINE SMOOTH",
"253 471 OFFCURVE",
"246 477 OFFCURVE",
"230 481 CURVE SMOOTH",
"214 485 LINE",
"206 417 LINE"
);
},
{
closed = 1;
nodes = (
"254 675 LINE SMOOTH",
"257 663 OFFCURVE",
"262 652 OFFCURVE",
"276 652 CURVE SMOOTH",
"307 652 LINE",
"307 692 LINE",
"246 703 LINE",
"246 703 LINE"
);
},
{
closed = 1;
nodes = (
"25 692 LINE",
"25 652 LINE",
"56 652 LINE SMOOTH",
"71 652 OFFCURVE",
"76 663 OFFCURVE",
"79 675 CURVE SMOOTH",
"86 703 LINE"
);
},
{
closed = 1;
nodes = (
"453 417 LINE",
"453 590 LINE SMOOTH",
"453 601 OFFCURVE",
"452 614 OFFCURVE",
"451 628 CURVE",
"530 466 LINE SMOOTH",
"537 452 OFFCURVE",
"550 446 OFFCURVE",
"564 446 CURVE SMOOTH",
"577 446 LINE SMOOTH",
"592 446 OFFCURVE",
"605 452 OFFCURVE",
"612 466 CURVE SMOOTH",
"691 627 LINE",
"690 616 OFFCURVE",
"689 603 OFFCURVE",
"689 590 CURVE SMOOTH",
"689 417 LINE",
"777 417 LINE",
"777 770 LINE",
"701 770 LINE SMOOTH",
"684 770 OFFCURVE",
"675 770 OFFCURVE",
"668 755 CURVE SMOOTH",
"592 598 LINE SMOOTH",
"584 581 OFFCURVE",
"580 570 OFFCURVE",
"571 550 CURVE",
"564 566 OFFCURVE",
"555 585 OFFCURVE",
"549 596 CURVE",
"474 755 LINE SMOOTH",
"467 770 OFFCURVE",
"460 770 OFFCURVE",
"442 770 CURVE SMOOTH",
"365 770 LINE",
"365 417 LINE"
);
},
{
closed = 1;
nodes = (
"375 417 LINE",
"367 485 LINE",
"351 481 LINE SMOOTH",
"335 477 OFFCURVE",
"328 471 OFFCURVE",
"328 459 CURVE SMOOTH",
"328 417 LINE"
);
},
{
closed = 1;
nodes = (
"490 417 LINE",
"490 459 LINE SMOOTH",
"490 473 OFFCURVE",
"479 478 OFFCURVE",
"466 481 CURVE SMOOTH",
"451 485 LINE",
"443 417 LINE"
);
},
{
closed = 1;
nodes = (
"328 770 LINE",
"328 728 LINE SMOOTH",
"328 714 OFFCURVE",
"339 709 OFFCURVE",
"351 706 CURVE SMOOTH",
"367 702 LINE",
"375 770 LINE"
);
},
{
closed = 1;
nodes = (
"699 417 LINE",
"691 485 LINE",
"676 481 LINE SMOOTH",
"660 477 OFFCURVE",
"653 471 OFFCURVE",
"653 459 CURVE SMOOTH",
"653 417 LINE"
);
},
{
closed = 1;
nodes = (
"814 417 LINE",
"814 459 LINE SMOOTH",
"814 471 OFFCURVE",
"807 477 OFFCURVE",
"791 481 CURVE SMOOTH",
"776 485 LINE",
"768 417 LINE"
);
},
{
closed = 1;
nodes = (
"768 770 LINE",
"776 702 LINE",
"791 706 LINE SMOOTH",
"807 710 OFFCURVE",
"814 716 OFFCURVE",
"814 728 CURVE SMOOTH",
"814 770 LINE"
);
}
);
userData = {
RMXScaler = {
height = 48;
weight = -70;
width = 48;
};
assembly = "NPUSHB[ ]	/* 24 values pushed */
34 34 34 41 34 41 40 39 38 37 36 35 29 27 26 25 20 17 12 11 10 8 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
24 23 14 13 2 5 2 5 1 30 0 2 5 1 5 2 1 50 7 1 5 5 0 1 0 36 9 8 4 3 0 0 11 31 6 3 2 1 1 0 1 0 36 9 8 4 3 0 0 11 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
24 23 14 13 2 5 2 5 1 30 0 2 5 1 5 2 1 50 9 8 4 3 0 7 1 5 2 0 5 0 0 38 9 8 4 3 0 0 1 0 0 36 6 3 2 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
24 23 14 13 2 5 2 5 1 30 0 7 8 5 5 7 42 0 2 5 6 5 2 6 50 0 6 3 5 6 3 48 0 0 4 1 0 1 0 35 9 1 8 0 5 2 8 5 0 0 38 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 839;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"200 417 LINE",
"200 706 LINE",
"303 706 LINE",
"303 757 LINE",
"35 757 LINE",
"35 706 LINE",
"138 706 LINE",
"138 417 LINE"
);
},
{
closed = 1;
nodes = (
"150 417 LINE",
"144 463 LINE",
"116 457 LINE SMOOTH",
"107 455 OFFCURVE",
"103 451 OFFCURVE",
"103 443 CURVE SMOOTH",
"103 417 LINE"
);
},
{
closed = 1;
nodes = (
"235 417 LINE",
"235 443 LINE SMOOTH",
"235 450 OFFCURVE",
"232 455 OFFCURVE",
"223 457 CURVE SMOOTH",
"195 463 LINE",
"189 417 LINE"
);
},
{
closed = 1;
nodes = (
"265 677 LINE SMOOTH",
"266 669 OFFCURVE",
"271 664 OFFCURVE",
"279 664 CURVE SMOOTH",
"303 664 LINE",
"303 706 LINE",
"258 717 LINE",
"258 717 LINE"
);
},
{
closed = 1;
nodes = (
"35 706 LINE",
"35 664 LINE",
"59 664 LINE SMOOTH",
"66 664 OFFCURVE",
"72 669 OFFCURVE",
"73 677 CURVE SMOOTH",
"80 717 LINE"
);
},
{
closed = 1;
nodes = (
"420 417 LINE",
"420 639 LINE SMOOTH",
"420 647 OFFCURVE",
"420 657 OFFCURVE",
"418 666 CURVE",
"523 473 LINE SMOOTH",
"528 464 OFFCURVE",
"535 459 OFFCURVE",
"545 459 CURVE SMOOTH",
"554 459 LINE SMOOTH",
"564 459 OFFCURVE",
"571 464 OFFCURVE",
"576 473 CURVE SMOOTH",
"679 666 LINE",
"678 656 OFFCURVE",
"678 647 OFFCURVE",
"678 639 CURVE SMOOTH",
"678 417 LINE",
"733 417 LINE",
"733 757 LINE",
"686 757 LINE SMOOTH",
"673 757 OFFCURVE",
"670 756 OFFCURVE",
"665 747 CURVE SMOOTH",
"564 557 LINE SMOOTH",
"558 545 OFFCURVE",
"554 537 OFFCURVE",
"550 525 CURVE",
"545 536 OFFCURVE",
"541 546 OFFCURVE",
"536 556 CURVE",
"433 747 LINE SMOOTH",
"428 756 OFFCURVE",
"424 757 OFFCURVE",
"412 757 CURVE SMOOTH",
"365 757 LINE",
"365 417 LINE"
);
},
{
closed = 1;
nodes = (
"377 417 LINE",
"371 463 LINE",
"343 457 LINE SMOOTH",
"334 455 OFFCURVE",
"330 451 OFFCURVE",
"330 443 CURVE SMOOTH",
"330 417 LINE"
);
},
{
closed = 1;
nodes = (
"458 417 LINE",
"458 443 LINE SMOOTH",
"458 451 OFFCURVE",
"453 455 OFFCURVE",
"445 457 CURVE SMOOTH",
"417 463 LINE",
"411 417 LINE"
);
},
{
closed = 1;
nodes = (
"330 757 LINE",
"330 730 LINE SMOOTH",
"330 721 OFFCURVE",
"335 719 OFFCURVE",
"343 717 CURVE SMOOTH",
"371 711 LINE",
"377 757 LINE"
);
},
{
closed = 1;
nodes = (
"687 417 LINE",
"681 463 LINE",
"653 457 LINE SMOOTH",
"645 455 OFFCURVE",
"640 452 OFFCURVE",
"640 443 CURVE SMOOTH",
"640 417 LINE"
);
},
{
closed = 1;
nodes = (
"768 417 LINE",
"768 443 LINE SMOOTH",
"768 451 OFFCURVE",
"764 455 OFFCURVE",
"755 457 CURVE SMOOTH",
"727 463 LINE",
"721 417 LINE"
);
},
{
closed = 1;
nodes = (
"721 757 LINE",
"727 711 LINE",
"755 717 LINE SMOOTH",
"764 719 OFFCURVE",
"768 723 OFFCURVE",
"768 730 CURVE SMOOTH",
"768 757 LINE"
);
}
);
userData = {
RMXScaler = {
height = 47;
weight = -35;
width = 47;
};
assembly = "NPUSHB[ ]	/* 24 values pushed */
31 31 31 38 31 38 37 36 35 34 33 32 28 26 25 24 20 17 13 12 11 9 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
23 22 15 14 3 5 2 5 1 30 0 2 5 1 5 2 1 50 7 1 5 5 0 1 0 36 9 8 4 3 0 0 11 31 6 3 2 1 1 0 1 0 36 9 8 4 3 0 0 11 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
23 22 15 14 3 5 2 5 1 30 0 2 5 1 5 2 1 50 9 8 4 3 0 7 1 5 2 0 5 0 0 38 9 8 4 3 0 0 1 0 0 36 6 3 2 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
23 22 15 14 3 5 2 5 1 30 0 7 8 5 5 7 42 0 2 5 6 5 2 6 50 0 6 3 5 6 3 48 0 0 4 1 0 1 0 35 9 1 8 0 5 2 8 5 0 0 38 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 803;
},
{
associatedMasterId = "BF33A826-8254-4501-9165-758AB68FE84B";
layerId = "30DBE51E-F567-41ED-8881-26483FEFE79A";
name = "Feb 19 23, 16:10";
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
31 31 31 38 31 38 37 36 35 34 33 32 28 26 25 24 20 17 13 12 11 9 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
23 22 15 14 3 5 2 5 1 30 0 2 5 1 5 2 1 50 7 1 5 5 0 1 0 36 9 8 4 3 0 0 11 31 6 3 2 1 1 0 1 0 36 9 8 4 3 0 0 11 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
23 22 15 14 3 5 2 5 1 30 0 2 5 1 5 2 1 50 9 8 4 3 0 7 1 5 2 0 5 0 0 38 9 8 4 3 0 0 1 0 0 36 6 3 2 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
23 22 15 14 3 5 2 5 1 30 0 7 8 5 5 7 42 0 2 5 6 5 2 6 50 0 6 3 5 6 3 48 0 0 4 1 0 1 0 35 9 1 8 0 5 2 8 5 0 0 38 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
associatedMasterId = "2C516476-8145-48E3-8501-3D313ADE77C9";
layerId = "A3E0CBE4-E7A1-416D-9984-F6DB92834351";
name = "Feb 19 23, 16:10";
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
34 34 34 41 34 41 40 39 38 37 36 35 29 27 26 25 20 17 12 11 10 8 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
24 23 14 13 2 5 2 5 1 30 0 2 5 1 5 2 1 50 7 1 5 5 0 1 0 36 9 8 4 3 0 0 11 31 6 3 2 1 1 0 1 0 36 9 8 4 3 0 0 11 1 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
24 23 14 13 2 5 2 5 1 30 0 2 5 1 5 2 1 50 9 8 4 3 0 7 1 5 2 0 5 0 0 38 9 8 4 3 0 0 1 0 0 36 6 3 2 1 0 1 0 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
24 23 14 13 2 5 2 5 1 30 0 7 8 5 5 7 42 0 2 5 6 5 2 6 50 0 6 3 5 6 3 48 0 0 4 1 0 1 0 35 9 1 8 0 5 2 8 5 0 0 38 0 4 0 3 1 4 3 0 0 38 0 0 0 1 0 0 36 0 1 0 1 0 0 33 9 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
associatedMasterId = "A1468767-BE48-4A45-9F09-053256197B3B";
layerId = "A817F2D0-6B41-482C-B2F1-F3DE80423215";
name = "Feb 19 23, 16:10";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
29 3 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
18 3 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 4 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
0 30 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
16 19 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
27 1 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = trademark;
unicode = 2122;
userData = {
RMXScaler = {
source = T;
};
};
},
{
glyphname = degree;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"29 570 LINE",
"29 493 OFFCURVE",
"92 431 OFFCURVE",
"169 431 CURVE SMOOTH",
"246 431 OFFCURVE",
"309 493 OFFCURVE",
"309 570 CURVE SMOOTH",
"309 648 OFFCURVE",
"246 708 OFFCURVE",
"169 708 CURVE SMOOTH",
"92 708 OFFCURVE",
"29 648 OFFCURVE",
"29 570 CURVE"
);
},
{
closed = 1;
nodes = (
"41 570 LINE",
"41 641 OFFCURVE",
"98 698 OFFCURVE",
"169 698 CURVE SMOOTH",
"241 698 OFFCURVE",
"297 642 OFFCURVE",
"297 570 CURVE SMOOTH",
"297 499 OFFCURVE",
"240 442 OFFCURVE",
"169 442 CURVE SMOOTH",
"99 442 OFFCURVE",
"41 500 OFFCURVE",
"41 570 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
25 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 338;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"13 560 LINE",
"13 462 OFFCURVE",
"94 383 OFFCURVE",
"195 383 CURVE SMOOTH",
"298 383 OFFCURVE",
"378 462 OFFCURVE",
"378 560 CURVE SMOOTH",
"378 659 OFFCURVE",
"298 738 OFFCURVE",
"195 738 CURVE SMOOTH",
"93 738 OFFCURVE",
"13 659 OFFCURVE",
"13 560 CURVE"
);
},
{
closed = 1;
nodes = (
"120 559 LINE",
"120 604 OFFCURVE",
"151 639 OFFCURVE",
"195 639 CURVE SMOOTH",
"239 639 OFFCURVE",
"270 604 OFFCURVE",
"270 559 CURVE SMOOTH",
"270 515 OFFCURVE",
"239 480 OFFCURVE",
"195 480 CURVE SMOOTH",
"152 480 OFFCURVE",
"120 514 OFFCURVE",
"120 559 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 0 0 0 17 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"24 564 LINE",
"24 475 OFFCURVE",
"96 404 OFFCURVE",
"187 404 CURVE SMOOTH",
"278 404 OFFCURVE",
"350 475 OFFCURVE",
"350 564 CURVE SMOOTH",
"350 654 OFFCURVE",
"279 725 OFFCURVE",
"187 725 CURVE SMOOTH",
"95 725 OFFCURVE",
"24 654 OFFCURVE",
"24 564 CURVE"
);
},
{
closed = 1;
nodes = (
"88 564 LINE",
"88 620 OFFCURVE",
"131 665 OFFCURVE",
"187 665 CURVE SMOOTH",
"243 665 OFFCURVE",
"286 620 OFFCURVE",
"286 564 CURVE SMOOTH",
"286 507 OFFCURVE",
"243 464 OFFCURVE",
"187 464 CURVE SMOOTH",
"131 464 OFFCURVE",
"88 507 OFFCURVE",
"88 564 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 0 0 0 17 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
leftKerningGroup = quotedbl;
note = degree;
rightKerningGroup = quotedbl;
unicode = 00B0;
},
{
glyphname = bar;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"105 -180 LINE",
"105 751 LINE",
"95 751 LINE",
"95 -180 LINE",
"95 -180 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 4 0 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"196 -165 LINE",
"196 779 LINE",
"76 779 LINE",
"76 -165 LINE",
"76 -165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 0 0 36 0 1 1 16 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"155 -172 LINE",
"155 767 LINE",
"86 767 LINE",
"86 -172 LINE",
"86 -172 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 0 0 36 0 1 1 16 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"107 370 LINE",
"107 751 LINE",
"97 751 LINE",
"97 370 LINE",
"97 370 LINE"
);
},
{
closed = 1;
nodes = (
"107 -180 LINE",
"107 201 LINE",
"97 201 LINE",
"97 -180 LINE",
"97 -180 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 4 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 204;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"198 369 LINE",
"198 779 LINE",
"78 779 LINE",
"78 369 LINE",
"78 369 LINE"
);
},
{
closed = 1;
nodes = (
"198 -165 LINE",
"198 245 LINE",
"78 245 LINE",
"78 -165 LINE",
"78 -165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 6 5 4 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 0 0 38 0 2 2 3 0 0 36 0 3 3 16 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 2 0 1 0 0 38 0 2 3 3 2 0 0 35 0 2 2 3 0 0 36 0 3 2 3 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 276;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"156 370 LINE",
"156 767 LINE",
"87 767 LINE",
"87 370 LINE",
"87 370 LINE"
);
},
{
closed = 1;
nodes = (
"156 -172 LINE",
"156 226 LINE",
"87 226 LINE",
"87 -172 LINE",
"87 -172 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 6 5 4 3 2 1 0 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 0 0 38 0 2 2 3 0 0 36 0 3 3 16 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 2 0 1 0 0 38 0 2 3 3 2 0 0 35 0 2 2 3 0 0 36 0 3 2 3 0 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = dagger;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"238 -183 OFFCURVE",
"240 -182 OFFCURVE",
"241 -181 CURVE",
"239 179 LINE",
"239 461 LINE",
"424 461 LINE",
"424 465 LINE SMOOTH",
"424 469 OFFCURVE",
"421 472 OFFCURVE",
"417 472 CURVE SMOOTH",
"358 471 OFFCURVE",
"298 470 OFFCURVE",
"239 469 CURVE",
"241 708 LINE",
"240 709 OFFCURVE",
"238 710 OFFCURVE",
"234 710 CURVE SMOOTH",
"231 710 OFFCURVE",
"230 709 OFFCURVE",
"227 708 CURVE",
"229 469 LINE",
"170 470 OFFCURVE",
"110 471 OFFCURVE",
"51 472 CURVE SMOOTH",
"47 472 OFFCURVE",
"44 469 OFFCURVE",
"44 465 CURVE SMOOTH",
"44 461 LINE",
"229 461 LINE",
"229 179 LINE",
"227 -181 LINE",
"230 -182 OFFCURVE",
"231 -183 OFFCURVE",
"234 -183 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 4 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
13 1 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 468;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"330 -177 OFFCURVE",
"358 -170 OFFCURVE",
"379 -157 CURVE",
"359 253 LINE",
"359 405 LINE",
"565 405 LINE",
"565 455 LINE SMOOTH",
"565 490 OFFCURVE",
"540 519 OFFCURVE",
"493 519 CURVE SMOOTH",
"459 519 OFFCURVE",
"399 503 OFFCURVE",
"359 494 CURVE",
"379 739 LINE",
"358 751 OFFCURVE",
"330 758 OFFCURVE",
"299 758 CURVE SMOOTH",
"270 758 OFFCURVE",
"242 751 OFFCURVE",
"219 739 CURVE",
"239 494 LINE",
"201 502 OFFCURVE",
"138 519 OFFCURVE",
"105 519 CURVE SMOOTH",
"60 519 OFFCURVE",
"33 490 OFFCURVE",
"33 455 CURVE SMOOTH",
"33 405 LINE",
"239 405 LINE",
"239 253 LINE",
"219 -157 LINE",
"242 -170 OFFCURVE",
"270 -177 OFFCURVE",
"299 -177 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
41 40 36 34 30 29 24 22 15 13 6 4 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
17 11 2 0 1 18 10 2 3 0 38 32 2 4 3 3 30 0 1 1 19 31 5 1 3 3 0 1 0 36 2 1 0 0 14 31 0 4 4 22 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
17 11 2 0 1 18 10 2 3 0 38 32 2 4 3 3 30 5 1 3 3 0 1 0 36 2 1 0 0 14 31 0 4 4 1 1 0 36 0 1 1 19 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
17 11 2 0 1 18 10 2 3 0 38 32 2 4 3 3 30 0 1 0 4 1 4 1 0 37 5 1 3 3 0 1 0 36 2 1 0 0 14 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
17 11 2 0 1 18 10 2 3 0 38 32 2 4 3 3 30 0 1 0 4 1 1 0 35 2 1 0 5 1 3 4 0 3 0 0 38 0 1 1 4 1 0 36 0 4 1 4 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
17 11 2 0 1 18 10 2 5 2 38 32 2 4 3 3 30 0 1 0 4 1 1 0 35 0 0 0 5 3 0 5 0 0 38 0 2 0 3 4 2 3 0 0 38 0 1 1 4 1 0 36 0 4 1 4 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"289 -179 OFFCURVE",
"304 -175 OFFCURVE",
"317 -168 CURVE",
"305 221 LINE",
"305 429 LINE",
"501 429 LINE",
"501 459 LINE SMOOTH",
"501 480 OFFCURVE",
"489 499 OFFCURVE",
"459 499 CURVE SMOOTH",
"408 499 OFFCURVE",
"356 488 OFFCURVE",
"305 482 CURVE",
"317 726 LINE",
"304 733 OFFCURVE",
"289 737 OFFCURVE",
"270 737 CURVE SMOOTH",
"253 737 OFFCURVE",
"237 733 OFFCURVE",
"224 726 CURVE",
"236 482 LINE",
"184 488 OFFCURVE",
"133 499 OFFCURVE",
"81 499 CURVE SMOOTH",
"58 499 OFFCURVE",
"39 480 OFFCURVE",
"39 459 CURVE SMOOTH",
"39 429 LINE",
"236 429 LINE",
"236 221 LINE",
"224 -168 LINE",
"237 -175 OFFCURVE",
"253 -179 OFFCURVE",
"270 -179 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
31 30 27 25 22 21 18 16 12 10 4 2 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
61 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
13 9 2 0 1 14 8 2 3 0 28 24 2 4 3 3 30 0 1 1 13 31 5 1 3 3 0 1 0 36 2 1 0 0 14 31 0 4 4 22 4 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
13 9 2 0 1 14 8 2 3 0 28 24 2 4 3 3 30 2 1 0 5 1 3 4 0 3 0 0 38 0 1 1 13 31 0 4 4 22 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
124 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
13 9 2 0 1 14 8 2 3 0 28 24 2 4 3 3 30 2 1 0 5 1 3 4 0 3 0 0 38 0 4 4 1 1 0 36 0 1 1 13 4 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
13 9 2 0 1 14 8 2 3 0 28 24 2 4 3 3 30 0 1 0 4 1 1 0 35 2 1 0 5 1 3 4 0 3 0 0 38 0 1 1 4 1 0 36 0 4 1 4 1 0 33 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
13 9 2 0 1 14 8 2 3 2 28 24 2 4 3 3 30 0 1 0 4 1 1 0 35 0 0 2 3 0 1 0 35 0 2 5 1 3 4 2 3 0 0 38 0 1 1 4 1 0 36 0 4 1 4 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
13 9 2 0 1 14 8 2 5 2 28 24 2 4 3 3 30 0 1 0 4 1 1 0 35 0 0 0 5 3 0 5 0 0 38 0 2 0 3 4 2 3 0 0 38 0 1 1 4 1 0 36 0 4 1 4 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
layers = (
{
components = (
{
name = dagger;
transform = "{1, 0, 0, 1, 4, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"168 56 OFFCURVE",
"228 57 OFFCURVE",
"287 58 CURVE",
"297 58 LINE",
"356 57 OFFCURVE",
"416 56 OFFCURVE",
"475 55 CURVE SMOOTH",
"479 55 OFFCURVE",
"482 59 OFFCURVE",
"482 62 CURVE SMOOTH",
"482 66 LINE",
"102 66 LINE",
"102 62 LINE SMOOTH",
"102 59 OFFCURVE",
"105 55 OFFCURVE",
"109 55 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 4 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
20 1 24 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
13 1 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 530;
},
{
components = (
{
name = dagger;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"159 63 OFFCURVE",
"206 79 OFFCURVE",
"253 87 CURVE",
"373 87 LINE",
"422 79 OFFCURVE",
"467 63 OFFCURVE",
"507 63 CURVE SMOOTH",
"555 63 OFFCURVE",
"579 90 OFFCURVE",
"579 127 CURVE SMOOTH",
"579 177 LINE",
"47 177 LINE",
"47 127 LINE SMOOTH",
"47 90 OFFCURVE",
"73 63 OFFCURVE",
"119 63 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
61 59 52 50 43 41 36 35 34 33 28 26 19 17 10 8 3 2 1 0 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
21 15 2 2 3 22 14 2 1 2 55 47 2 7 0 54 48 2 8 7 4 30 6 1 0 9 1 7 8 0 7 1 0 38 0 3 3 19 31 5 1 1 1 2 1 0 36 4 1 2 2 14 31 0 8 8 22 8 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
83 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
21 15 2 2 3 22 14 2 1 2 55 47 2 7 0 54 48 2 8 7 4 30 6 1 0 9 1 7 8 0 7 1 0 38 5 1 1 1 2 1 0 36 4 1 2 2 14 31 0 8 8 3 1 0 36 0 3 3 19 8 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
21 15 2 2 3 22 14 2 1 2 55 47 2 7 0 54 48 2 8 7 4 30 6 1 0 9 1 7 8 0 7 1 0 38 0 3 0 8 3 8 1 0 37 5 1 1 1 2 1 0 36 4 1 2 2 14 1 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
21 15 2 2 3 22 14 2 1 2 55 47 2 7 0 54 48 2 8 7 4 30 0 3 2 8 3 1 0 35 4 1 2 5 1 1 0 2 1 0 0 38 6 1 0 9 1 7 8 0 7 1 0 38 0 3 3 8 1 0 36 0 8 3 8 1 0 33 6 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
21 15 2 2 3 22 14 2 5 4 55 47 2 9 6 54 48 2 8 7 4 30 0 3 2 8 3 1 0 35 0 4 0 5 1 4 5 0 0 38 0 2 0 1 0 2 1 0 0 38 0 0 0 9 7 0 9 1 0 38 0 6 0 7 8 6 7 1 0 38 0 3 3 8 1 0 36 0 8 3 8 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
components = (
{
name = dagger;
transform = "{1, 0, 0, 1, 2, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"149 60 OFFCURVE",
"211 72 OFFCURVE",
"258 76 CURVE",
"327 76 LINE",
"374 72 OFFCURVE",
"438 60 OFFCURVE",
"481 60 CURVE SMOOTH",
"510 60 OFFCURVE",
"523 79 OFFCURVE",
"523 99 CURVE SMOOTH",
"523 129 LINE",
"61 129 LINE",
"61 99 LINE SMOOTH",
"61 79 OFFCURVE",
"75 60 OFFCURVE",
"103 60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
47 46 45 44 41 39 35 33 29 27 24 23 22 21 18 16 12 10 4 2 10 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
61 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 9 2 0 1 14 8 2 3 0 37 31 2 5 4 36 32 2 6 5 4 30 8 1 4 7 1 5 6 4 5 1 0 38 0 1 1 13 31 9 1 3 3 0 1 0 36 2 1 0 0 14 31 0 6 6 22 6 32 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 9 2 0 1 14 8 2 3 0 37 31 2 5 4 36 32 2 6 5 4 30 2 1 0 9 1 3 4 0 3 0 0 38 8 1 4 7 1 5 6 4 5 1 0 38 0 1 1 13 31 0 6 6 22 6 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
124 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
13 9 2 0 1 14 8 2 3 0 37 31 2 5 4 36 32 2 6 5 4 30 2 1 0 9 1 3 4 0 3 0 0 38 8 1 4 7 1 5 6 4 5 1 0 38 0 6 6 1 1 0 36 0 1 1 13 6 32 5 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
78 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
13 9 2 0 1 14 8 2 3 0 37 31 2 5 4 36 32 2 6 5 4 30 0 1 0 6 1 1 0 35 2 1 0 9 1 3 4 0 3 0 0 38 8 1 4 7 1 5 6 4 5 1 0 38 0 1 1 6 1 0 36 0 6 1 6 1 0 33 6 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
1000 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
13 9 2 0 1 14 8 2 3 2 37 31 2 5 4 36 32 2 6 5 4 30 0 1 0 6 1 1 0 35 0 0 2 3 0 1 0 35 0 2 9 1 3 4 2 3 0 0 38 8 1 4 7 1 5 6 4 5 1 0 38 0 1 1 6 1 0 36 0 6 1 6 1 0 33 7 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
13 9 2 0 1 14 8 2 9 2 37 31 2 7 8 36 32 2 6 5 4 30 0 1 0 6 1 1 0 35 0 0 0 9 3 0 9 0 0 38 0 2 0 3 4 2 3 0 0 38 0 8 0 7 5 8 7 1 0 38 0 4 0 5 6 4 5 1 0 38 0 1 1 6 1 0 36 0 6 1 6 1 0 33 8 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = uni2669;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"1 -180 LINE",
"1 720 LINE",
"-1 720 LINE",
"-1 -180 LINE",
"-1 -180 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"1 -165 LINE",
"1 749 LINE",
"-1 749 LINE",
"-1 -165 LINE",
"-1 -165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 13 31 0 1 1 16 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 0 1 53 0 0 0 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 52 0 1 1 43 2 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"1 -172 LINE",
"1 737 LINE",
"-1 737 LINE",
"-1 -172 LINE",
"-1 -172 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 13 31 0 1 1 16 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
141 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 0 1 53 0 0 0 13 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 52 0 1 1 43 2 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni2669;
unicode = 2669;
},
{
glyphname = apostrophemod;
layers = (
{
components = (
{
name = quoteright;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 198;
},
{
components = (
{
name = quoteright;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 256;
},
{
components = (
{
name = quoteright;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 279;
}
);
leftMetricsKey = quoteright;
rightMetricsKey = quoteright;
unicode = 02BC;
},
{
glyphname = uni02C9;
layers = (
{
components = (
{
alignment = -1;
name = macron;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
components = (
{
alignment = -1;
name = macron;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
components = (
{
alignment = -1;
name = macron;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
note = uni02C9;
unicode = 02C9;
},
{
glyphname = dieresiscomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 637}";
}
);
components = (
{
alignment = -1;
name = dieresis;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = top;
position = "{195, 711}";
}
);
components = (
{
alignment = -1;
name = dieresis;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 374;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 658}";
}
);
components = (
{
alignment = -1;
name = dieresis;
transform = "{1, 0, 0, 1, -44, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0308;
},
{
glyphname = dotaccentcomb;
layers = (
{
anchors = (
{
name = _top;
position = "{38, 490}";
},
{
name = _top_;
position = "{38, 700}";
}
);
components = (
{
alignment = -1;
name = dotaccent;
transform = "{1, 0, 0, 1, -33, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 76;
},
{
anchors = (
{
name = _top;
position = "{104, 519}";
},
{
name = _top_;
position = "{104, 749}";
}
);
components = (
{
alignment = -1;
name = dotaccent;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 207;
},
{
anchors = (
{
name = _top;
position = "{85, 507}";
},
{
name = _top_;
position = "{85, 717}";
}
);
components = (
{
alignment = -1;
name = dotaccent;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 167;
}
);
unicode = 0307;
},
{
glyphname = gravecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{161, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = grave;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{221, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
alignment = -1;
name = grave;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{187, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = grave;
transform = "{1, 0, 0, 1, -20, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0300;
},
{
glyphname = gravecomb_macroncomb;
layers = (
{
anchors = (
{
name = _top;
position = "{195, 490}";
},
{
name = top;
position = "{195, 708}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"379 579 LINE",
"379 589 LINE",
"119 589 LINE",
"44 697 LINE SMOOTH",
"38.667 706.333 OFFCURVE",
"35 708 OFFCURVE",
"23 708 CURVE SMOOTH",
"10 708 LINE",
"111 583 LINE SMOOTH",
"113 580.333 OFFCURVE",
"115.667 579 OFFCURVE",
"119 579 CURVE"
);
}
);
width = 389;
},
{
anchors = (
{
name = _top;
position = "{226, 507}";
},
{
name = top;
position = "{226, 725}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"441 582 LINE",
"441 641 LINE",
"172 641 LINE",
"134 703 LINE SMOOTH",
"124.667 717.667 OFFCURVE",
"116.667 725 OFFCURVE",
"94 725 CURVE SMOOTH",
"10 725 LINE",
"127 596 LINE SMOOTH",
"136.333 585.333 OFFCURVE",
"143.667 582 OFFCURVE",
"157 582 CURVE"
);
}
);
width = 451;
},
{
anchors = (
{
name = _top;
position = "{253, 519}";
},
{
name = top;
position = "{253, 737}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"495 584 LINE",
"495 679 LINE",
"226 679 LINE",
"210 707 LINE SMOOTH",
"199.333 725.667 OFFCURVE",
"187 737 OFFCURVE",
"155 737 CURVE SMOOTH",
"10 737 LINE",
"140 605 LINE SMOOTH",
"154.667 591.667 OFFCURVE",
"165 585.333 OFFCURVE",
"185 584 CURVE"
);
}
);
width = 505;
}
);
},
{
glyphname = acutecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{126, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = acute;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{129, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
alignment = -1;
name = acute;
transform = "{1, 0, 0, 1, 14, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{131, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = acute;
transform = "{1, 0, 0, 1, 51, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0301;
},
{
glyphname = acutecomb_macroncomb;
layers = (
{
anchors = (
{
name = _top;
position = "{192, 490}";
},
{
name = top;
position = "{192, 708}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"17 579 LINE SMOOTH",
"20.333 579 OFFCURVE",
"23 580.333 OFFCURVE",
"25 583 CURVE SMOOTH",
"118 698 LINE",
"374 698 LINE",
"374 708 LINE",
"113 708 LINE SMOOTH",
"101 708 OFFCURVE",
"97.333 706.333 OFFCURVE",
"92 697 CURVE",
"10 579 LINE"
);
}
);
width = 384;
},
{
anchors = (
{
name = _top;
position = "{211, 507}";
},
{
name = top;
position = "{211, 725}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"63 582 LINE SMOOTH",
"76.333 582 OFFCURVE",
"84.667 585.333 OFFCURVE",
"94 596 CURVE SMOOTH",
"157 666 LINE",
"411 666 LINE",
"411 725 LINE",
"123 725 LINE SMOOTH",
"101.667 725 OFFCURVE",
"93.333 717.667 OFFCURVE",
"84 703 CURVE SMOOTH",
"10 582 LINE"
);
}
);
width = 421;
},
{
anchors = (
{
name = _top;
position = "{227, 519}";
},
{
name = top;
position = "{227, 737}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"103 584 LINE SMOOTH",
"127 584 OFFCURVE",
"138.333 590.333 OFFCURVE",
"153 605 CURVE SMOOTH",
"189 642 LINE",
"444 642 LINE",
"444 737 LINE",
"133 737 LINE SMOOTH",
"102.333 737 OFFCURVE",
"90 725.667 OFFCURVE",
"78 707 CURVE SMOOTH",
"10 584 LINE"
);
}
);
width = 454;
}
);
},
{
glyphname = hungarumlautcomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = hungarumlaut;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
alignment = -1;
name = hungarumlaut;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = hungarumlaut;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 030B;
},
{
glyphname = circumflexcomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = circumflex;
transform = "{1, 0, 0, 1, -20, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = _top_;
position = "{195, 729}";
}
);
components = (
{
alignment = -1;
name = circumflex;
transform = "{1, 0, 0, 1, -34, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 390;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = circumflex;
transform = "{1, 0, 0, 1, -39, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = caron;
transform = "{1, 0, 0, 1, -20, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = _top_;
position = "{195, 729}";
}
);
components = (
{
alignment = -1;
name = caron;
transform = "{1, 0, 0, 1, -34, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 390;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = caron;
transform = "{1, 0, 0, 1, -39, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = breve;
transform = "{1, 0, 0, 1, -15, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
alignment = -1;
name = breve;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = breve;
transform = "{1, 0, 0, 1, -23, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
alignment = -1;
name = ring;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
alignment = -1;
name = ring;
transform = "{1, 0, 0, 1, 22, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
alignment = -1;
name = ring;
transform = "{1, 0, 0, 1, 13, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 307;
}
);
unicode = 030A;
},
{
glyphname = tildecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 657}";
}
);
components = (
{
alignment = -1;
name = tilde;
transform = "{1, 0, 0, 1, -25, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{178, 519}";
},
{
name = top;
position = "{178, 729}";
}
);
components = (
{
alignment = -1;
name = tilde;
transform = "{1, 0, 0, 1, -20, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 355;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 692}";
}
);
components = (
{
alignment = -1;
name = tilde;
transform = "{1, 0, 0, 1, -32, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0303;
},
{
glyphname = macroncomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = center;
position = "{140, 640}";
},
{
name = top;
position = "{140, 645}";
}
);
components = (
{
alignment = -1;
name = macron;
transform = "{1, 0, 0, 1, -40, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = center;
position = "{165, 648}";
},
{
name = top;
position = "{165, 696}";
}
);
components = (
{
alignment = -1;
name = macron;
transform = "{1, 0, 0, 1, -15, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{147, 507}";
},
{
name = center;
position = "{149, 644}";
},
{
name = top;
position = "{147, 674}";
}
);
components = (
{
alignment = -1;
name = macron;
transform = "{1, 0, 0, 1, -33, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 301;
}
);
unicode = 0304;
},
{
glyphname = macroncomb_gravecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{190, 490}";
},
{
name = top;
position = "{190, 708}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"370 579 LINE",
"288 697 LINE SMOOTH",
"282.667 705 OFFCURVE",
"279.333 708 OFFCURVE",
"270 708 CURVE SMOOTH",
"10 708 LINE",
"10 698 LINE",
"262 698 LINE",
"355 583 LINE SMOOTH",
"357 580.333 OFFCURVE",
"359.667 579 OFFCURVE",
"363 579 CURVE SMOOTH"
);
}
);
width = 380;
},
{
anchors = (
{
name = _top;
position = "{211, 507}";
},
{
name = top;
position = "{211, 725}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"412 582 LINE",
"337 703 LINE SMOOTH",
"327.667 717.667 OFFCURVE",
"319.667 725 OFFCURVE",
"297 725 CURVE SMOOTH",
"10 725 LINE",
"10 666 LINE",
"266 666 LINE",
"330 596 LINE SMOOTH",
"339.333 585.333 OFFCURVE",
"346.667 582 OFFCURVE",
"360 582 CURVE SMOOTH"
);
}
);
width = 422;
},
{
anchors = (
{
name = _top;
position = "{229, 519}";
},
{
name = top;
position = "{229, 737}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"447 584 LINE",
"379 707 LINE SMOOTH",
"367 725.667 OFFCURVE",
"354.667 737 OFFCURVE",
"324 737 CURVE SMOOTH",
"10 737 LINE",
"10 642 LINE",
"273 642 LINE",
"309 605 LINE SMOOTH",
"323.667 590.333 OFFCURVE",
"335 584 OFFCURVE",
"359 584 CURVE SMOOTH"
);
}
);
width = 457;
}
);
},
{
glyphname = macroncomb_acutecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{194, 490}";
},
{
name = top;
position = "{194, 708}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"270 579 LINE SMOOTH",
"272.667 579.667 OFFCURVE",
"274.667 581 OFFCURVE",
"276 583 CURVE SMOOTH",
"377 708 LINE",
"364 708 LINE SMOOTH",
"353.333 708 OFFCURVE",
"349.667 706.333 OFFCURVE",
"343 697 CURVE SMOOTH",
"268 589 LINE",
"10 589 LINE",
"10 579 LINE"
);
}
);
width = 387;
},
{
anchors = (
{
name = _top;
position = "{229, 507}";
},
{
name = top;
position = "{229, 725}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"299 582 LINE SMOOTH",
"312.333 582 OFFCURVE",
"320.667 585.333 OFFCURVE",
"330 596 CURVE SMOOTH",
"447 725 LINE",
"359 725 LINE SMOOTH",
"337.667 725 OFFCURVE",
"329.333 717.667 OFFCURVE",
"320 703 CURVE SMOOTH",
"282 641 LINE",
"10 641 LINE",
"10 582 LINE"
);
}
);
width = 457;
},
{
anchors = (
{
name = _top;
position = "{258, 519}";
},
{
name = top;
position = "{258, 737}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"325 584 LINE SMOOTH",
"347.667 584 OFFCURVE",
"359 590.333 OFFCURVE",
"375 605 CURVE SMOOTH",
"505 737 LINE",
"355 737 LINE SMOOTH",
"323 737 OFFCURVE",
"310.667 725.667 OFFCURVE",
"300 707 CURVE SMOOTH",
"284 679 LINE",
"10 679 LINE",
"10 584 LINE"
);
}
);
width = 515;
}
);
},
{
glyphname = hookabovecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{199, 490}";
},
{
name = top;
position = "{199, 697}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"200 560 LINE",
"202 599 LINE",
"242 608.333 OFFCURVE",
"255 625.333 OFFCURVE",
"255 648 CURVE SMOOTH",
"255 674.667 OFFCURVE",
"237.333 697 OFFCURVE",
"196 697 CURVE SMOOTH",
"176 697 OFFCURVE",
"159 691.333 OFFCURVE",
"143 678 CURVE",
"146 674 LINE SMOOTH",
"147 672 OFFCURVE",
"148.333 672 OFFCURVE",
"149 672 CURVE SMOOTH",
"152.996 672 OFFCURVE",
"176.443 688 OFFCURVE",
"195 688 CURVE SMOOTH",
"228.674 688 OFFCURVE",
"245 668.527 OFFCURVE",
"245 648 CURVE SMOOTH",
"245 626.667 OFFCURVE",
"229.333 610.333 OFFCURVE",
"192 605 CURVE",
"192 560 LINE"
);
}
);
width = 398;
},
{
anchors = (
{
name = _top;
position = "{196, 507}";
},
{
name = top;
position = "{196, 734}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"218 560 LINE",
"226 601 LINE",
"260.667 614.333 OFFCURVE",
"285 639 OFFCURVE",
"285 671 CURVE SMOOTH",
"285 711.441 OFFCURVE",
"251.118 734 OFFCURVE",
"196 734 CURVE SMOOTH",
"160 734 OFFCURVE",
"127 725 OFFCURVE",
"107 709 CURVE",
"124 685 LINE",
"126.667 679.667 OFFCURVE",
"129.667 677 OFFCURVE",
"135 677 CURVE SMOOTH",
"144.785 677 OFFCURVE",
"167.063 691 OFFCURVE",
"185 691 CURVE SMOOTH",
"211.667 691 OFFCURVE",
"221 676.667 OFFCURVE",
"221 662 CURVE SMOOTH",
"221 644.667 OFFCURVE",
"210 631.333 OFFCURVE",
"174 626 CURVE",
"174 560 LINE"
);
}
);
width = 392;
},
{
anchors = (
{
name = _top;
position = "{193, 519}";
},
{
name = top;
position = "{193, 763}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"233 560 LINE",
"247 606 LINE",
"281.001 624.308 OFFCURVE",
"310 652.029 OFFCURVE",
"310 689 CURVE SMOOTH",
"310 731.667 OFFCURVE",
"273.333 763 OFFCURVE",
"196 763 CURVE SMOOTH",
"146.667 763 OFFCURVE",
"100 750.333 OFFCURVE",
"76 733 CURVE",
"104 694 LINE SMOOTH",
"109.333 686 OFFCURVE",
"114.667 680 OFFCURVE",
"124 680 CURVE SMOOTH",
"134.19 680 OFFCURVE",
"157.995 693 OFFCURVE",
"176 693 CURVE SMOOTH",
"193.333 693 OFFCURVE",
"201 685.333 OFFCURVE",
"201 672 CURVE SMOOTH",
"201 653 OFFCURVE",
"181 645 OFFCURVE",
"160 642 CURVE",
"160 560 LINE"
);
}
);
width = 386;
}
);
unicode = 0309;
},
{
glyphname = commaturnedabovecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = _top_;
position = "{140, 700}";
}
);
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 232, 630}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = _top_;
position = "{165, 729}";
}
);
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 285, 702}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
}
);
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 262, 667}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0312;
},
{
glyphname = horncomb;
layers = (
{
anchors = (
{
name = _topright;
position = "{144, 412}";
},
{
name = topright;
position = "{301, 564}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"215.61 408 OFFCURVE",
"281 439.478 OFFCURVE",
"281 521 CURVE SMOOTH",
"281 534.333 OFFCURVE",
"279.333 549.333 OFFCURVE",
"274 564 CURVE",
"261 564 LINE SMOOTH",
"249 564 OFFCURVE",
"241 557.333 OFFCURVE",
"241 544 CURVE SMOOTH",
"241 522.234 OFFCURVE",
"266 525.23 OFFCURVE",
"266 500 CURVE SMOOTH",
"266 445.357 OFFCURVE",
"209.338 416 OFFCURVE",
"144 416 CURVE",
"144 408 LINE"
);
}
);
width = 425;
},
{
anchors = (
{
name = _topright;
position = "{126, 405}";
},
{
name = topright;
position = "{321, 584}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"233.826 383 OFFCURVE",
"301 438.76 OFFCURVE",
"301 533 CURVE SMOOTH",
"301 551.667 OFFCURVE",
"299 570.667 OFFCURVE",
"295 584 CURVE",
"249 584 LINE SMOOTH",
"214.333 584 OFFCURVE",
"199 570.333 OFFCURVE",
"199 545 CURVE SMOOTH",
"199 520.546 OFFCURVE",
"223 510.222 OFFCURVE",
"223 488 CURVE SMOOTH",
"223 450.667 OFFCURVE",
"186 423 OFFCURVE",
"126 423 CURVE",
"126 383 LINE"
);
}
);
width = 427;
},
{
anchors = (
{
name = _topright;
position = "{110, 399}";
},
{
name = topright;
position = "{339, 599}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"249.838 364 OFFCURVE",
"319 436.997 OFFCURVE",
"319 543 CURVE SMOOTH",
"319 564.333 OFFCURVE",
"316 585.667 OFFCURVE",
"312 599 CURVE",
"238 599 LINE SMOOTH",
"186 599 OFFCURVE",
"164 579.667 OFFCURVE",
"164 545 CURVE SMOOTH",
"164 520.906 OFFCURVE",
"186 497.456 OFFCURVE",
"186 479 CURVE SMOOTH",
"186 448.776 OFFCURVE",
"157.056 429 OFFCURVE",
"110 429 CURVE",
"110 364 LINE"
);
}
);
width = 429;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
layers = (
{
anchors = (
{
name = _bottom;
position = "{38, 0}";
},
{
name = bottom;
position = "{38, -164}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"52.667 -164 OFFCURVE",
"66 -150.333 OFFCURVE",
"66 -137 CURVE SMOOTH",
"66 -121 OFFCURVE",
"53 -109 OFFCURVE",
"38 -109 CURVE SMOOTH",
"23 -109 OFFCURVE",
"10 -121 OFFCURVE",
"10 -137 CURVE SMOOTH",
"10 -150.333 OFFCURVE",
"23.333 -164 OFFCURVE",
"38 -164 CURVE SMOOTH"
);
}
);
width = 76;
},
{
anchors = (
{
name = _bottom;
position = "{67, 0}";
},
{
name = bottom;
position = "{67, -181}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"98 -181 OFFCURVE",
"124 -156 OFFCURVE",
"124 -124 CURVE SMOOTH",
"124 -92 OFFCURVE",
"98 -66 OFFCURVE",
"67 -67 CURVE SMOOTH",
"35 -68 OFFCURVE",
"10 -92 OFFCURVE",
"10 -124 CURVE SMOOTH",
"10 -156 OFFCURVE",
"35 -181 OFFCURVE",
"67 -181 CURVE SMOOTH"
);
}
);
width = 134;
},
{
anchors = (
{
name = _bottom;
position = "{92, 0}";
},
{
name = bottom;
position = "{92, -194}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"136 -194 OFFCURVE",
"173 -158 OFFCURVE",
"173 -115 CURVE SMOOTH",
"173 -72 OFFCURVE",
"136 -36 OFFCURVE",
"90 -36 CURVE SMOOTH",
"47 -36 OFFCURVE",
"10 -73 OFFCURVE",
"10 -115 CURVE SMOOTH",
"10 -157 OFFCURVE",
"47 -194 OFFCURVE",
"90 -194 CURVE SMOOTH"
);
}
);
width = 183;
}
);
unicode = 0323;
},
{
glyphname = commaaccentcomb;
layers = (
{
anchors = (
{
name = _bottom;
position = "{140, 0}";
},
{
name = bottom;
position = "{140, -195}";
}
);
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 53, -162}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _bottom;
position = "{165, 0}";
},
{
name = bottom;
position = "{165, -195}";
}
);
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 54, -224}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _bottom;
position = "{154, 0}";
},
{
name = bottom;
position = "{154, -195}";
}
);
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 45, -199}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0326;
},
{
glyphname = cedillacomb;
layers = (
{
anchors = (
{
name = _bottom;
position = "{140, 0}";
},
{
name = bottom;
position = "{140, -195}";
}
);
components = (
{
alignment = -1;
name = cedilla;
transform = "{1, 0, 0, 1, 23, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _bottom;
position = "{165, 0}";
},
{
name = bottom;
position = "{165, -195}";
}
);
components = (
{
alignment = -1;
name = cedilla;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _bottom;
position = "{154, 0}";
},
{
name = bottom;
position = "{154, -195}";
}
);
components = (
{
alignment = -1;
name = cedilla;
transform = "{1, 0, 0, 1, 36, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
layers = (
{
anchors = (
{
name = _ogonek;
position = "{140, 0}";
}
);
components = (
{
alignment = -1;
name = ogonek;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _ogonek;
position = "{165, 0}";
}
);
components = (
{
alignment = -1;
name = ogonek;
transform = "{1, 0, 0, 1, 31, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _ogonek;
position = "{154, 0}";
}
);
components = (
{
alignment = -1;
name = ogonek;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
}
);
unicode = 0328;
},
{
glyphname = circumflexbelowcomb;
layers = (
{
anchors = (
{
name = _bottom;
position = "{111, 0}";
},
{
name = bottom;
position = "{111, -180}";
}
);
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -29, -765}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 222;
},
{
anchors = (
{
name = _bottom;
position = "{154, 0}";
},
{
name = bottom;
position = "{154, -181}";
}
);
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -766}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _bottom;
position = "{191, 0}";
},
{
name = bottom;
position = "{191, -187}";
}
);
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -4, -771}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 382;
}
);
unicode = 032D;
},
{
glyphname = macronbelowcomb;
layers = (
{
anchors = (
{
name = _bottom;
position = "{140, 0}";
},
{
name = bottom;
position = "{140, -107}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"270 -107 LINE",
"270 -97 LINE",
"10 -97 LINE",
"10 -107 LINE"
);
}
);
width = 280;
},
{
anchors = (
{
name = _bottom;
position = "{154, 0}";
},
{
name = bottom;
position = "{154, -131}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"297 -131 LINE",
"297 -73 LINE",
"10 -73 LINE",
"10 -131 LINE"
);
}
);
width = 307;
},
{
anchors = (
{
name = _bottom;
position = "{165, 0}";
},
{
name = bottom;
position = "{165, -150}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"320 -150 LINE",
"320 -55 LINE",
"10 -55 LINE",
"10 -150 LINE"
);
}
);
width = 330;
}
);
unicode = 0331;
},
{
glyphname = strokeshortcomb;
layers = (
{
anchors = (
{
name = _center;
position = "{140, 640}";
}
);
components = (
{
name = macroncomb;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _center;
position = "{165, 649}";
}
);
components = (
{
name = macroncomb;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
},
{
anchors = (
{
name = _center;
position = "{151, 645}";
}
);
components = (
{
name = macroncomb;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 301;
}
);
unicode = 0335;
},
{
glyphname = slashlongcomb;
layers = (
{
anchors = (
{
name = _center;
position = "{309, 350}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"8 -51 LINE SMOOTH",
"13 -51 OFFCURVE",
"16 -49 OFFCURVE",
"19 -45 CURVE SMOOTH",
"602 732 LINE",
"594 732 LINE SMOOTH",
"589 732 OFFCURVE",
"588 731 OFFCURVE",
"584 726 CURVE SMOOTH",
"1 -51 LINE"
);
}
);
width = 603;
},
{
anchors = (
{
name = _center;
position = "{372, 375}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"67 -57 LINE SMOOTH",
"99 -57 OFFCURVE",
"138 -43 OFFCURVE",
"159 -14 CURVE SMOOTH",
"717 762 LINE",
"631 762 LINE SMOOTH",
"597 762 OFFCURVE",
"583 750 OFFCURVE",
"562 721 CURVE SMOOTH",
"1 -57 LINE"
);
}
);
width = 718;
},
{
anchors = (
{
name = _center;
position = "{347, 369}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"40 -55 LINE SMOOTH",
"60 -55 OFFCURVE",
"80 -47 OFFCURVE",
"95 -27 CURVE SMOOTH",
"664 749 LINE",
"614 749 LINE SMOOTH",
"593 749 OFFCURVE",
"586 743 OFFCURVE",
"572 724 CURVE SMOOTH",
"1 -55 LINE"
);
}
);
width = 665;
}
);
unicode = 0338;
},
{
glyphname = dieresis;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"93 640 LINE",
"93 656 OFFCURVE",
"80 668 OFFCURVE",
"65 668 CURVE SMOOTH",
"50 668 OFFCURVE",
"37 656 OFFCURVE",
"37 640 CURVE SMOOTH",
"37 627 OFFCURVE",
"50 613 OFFCURVE",
"65 613 CURVE SMOOTH",
"80 613 OFFCURVE",
"93 627 OFFCURVE",
"93 640 CURVE"
);
},
{
closed = 1;
nodes = (
"257 640 LINE",
"257 656 OFFCURVE",
"244 668 OFFCURVE",
"229 668 CURVE SMOOTH",
"214 668 OFFCURVE",
"201 656 OFFCURVE",
"201 640 CURVE SMOOTH",
"201 627 OFFCURVE",
"214 613 OFFCURVE",
"229 613 CURVE SMOOTH",
"244 613 OFFCURVE",
"257 627 OFFCURVE",
"257 640 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
9 3 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 294;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"182 648 LINE",
"182 692 OFFCURVE",
"145 727 OFFCURVE",
"100 727 CURVE SMOOTH",
"58 727 OFFCURVE",
"21 691 OFFCURVE",
"21 648 CURVE SMOOTH",
"21 606 OFFCURVE",
"58 571 OFFCURVE",
"100 571 CURVE SMOOTH",
"145 571 OFFCURVE",
"182 605 OFFCURVE",
"182 648 CURVE"
);
},
{
closed = 1;
nodes = (
"375 648 LINE",
"375 692 OFFCURVE",
"340 727 OFFCURVE",
"294 727 CURVE SMOOTH",
"251 727 OFFCURVE",
"214 692 OFFCURVE",
"214 648 CURVE SMOOTH",
"214 605 OFFCURVE",
"251 571 OFFCURVE",
"294 571 CURVE SMOOTH",
"340 571 OFFCURVE",
"375 605 OFFCURVE",
"375 648 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 0 1 1 0 36 3 1 1 1 11 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 1 0 35 3 1 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 0 1 1 0 35 0 3 0 2 0 3 2 1 0 38 0 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 396;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"165 645 LINE",
"165 675 OFFCURVE",
"138 702 OFFCURVE",
"108 702 CURVE SMOOTH",
"78 702 OFFCURVE",
"52 675 OFFCURVE",
"52 645 CURVE SMOOTH",
"52 615 OFFCURVE",
"78 589 OFFCURVE",
"108 589 CURVE SMOOTH",
"139 589 OFFCURVE",
"165 615 OFFCURVE",
"165 645 CURVE"
);
},
{
closed = 1;
nodes = (
"344 645 LINE",
"344 676 OFFCURVE",
"318 702 OFFCURVE",
"288 702 CURVE SMOOTH",
"258 702 OFFCURVE",
"232 676 OFFCURVE",
"232 645 CURVE SMOOTH",
"232 614 OFFCURVE",
"257 589 OFFCURVE",
"288 589 CURVE SMOOTH",
"318 589 OFFCURVE",
"344 614 OFFCURVE",
"344 645 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 0 1 1 0 36 3 1 1 1 11 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 1 0 35 3 1 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 0 1 1 0 35 0 3 0 2 0 3 2 1 0 38 0 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 396;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"86 645 OFFCURVE",
"99 659 OFFCURVE",
"99 672 CURVE SMOOTH",
"99 688 OFFCURVE",
"86 700 OFFCURVE",
"71 700 CURVE SMOOTH",
"56 700 OFFCURVE",
"43 688 OFFCURVE",
"43 672 CURVE SMOOTH",
"43 659 OFFCURVE",
"56 645 OFFCURVE",
"71 645 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 6 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 142;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"158 571 OFFCURVE",
"202 611 OFFCURVE",
"202 661 CURVE SMOOTH",
"202 712 OFFCURVE",
"159 752 OFFCURVE",
"107 752 CURVE SMOOTH",
"58 752 OFFCURVE",
"15 711 OFFCURVE",
"15 661 CURVE SMOOTH",
"15 611 OFFCURVE",
"58 571 OFFCURVE",
"107 571 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
252 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 1 0 36 0 1 1 19 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 177;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"130 603 OFFCURVE",
"159 632 OFFCURVE",
"159 666 CURVE SMOOTH",
"159 701 OFFCURVE",
"130 730 OFFCURVE",
"95 730 CURVE SMOOTH",
"61 730 OFFCURVE",
"32 700 OFFCURVE",
"32 666 CURVE SMOOTH",
"32 632 OFFCURVE",
"61 603 OFFCURVE",
"95 603 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 1 1 0 36 0 1 1 13 0 32 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"151 583 LINE SMOOTH",
"153 580 OFFCURVE",
"156 579 OFFCURVE",
"159 579 CURVE SMOOTH",
"166 579 LINE",
"84 697 LINE",
"79 706 OFFCURVE",
"75 708 OFFCURVE",
"63 708 CURVE SMOOTH",
"50 708 LINE",
"50 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 8 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 216;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"160 605 LINE SMOOTH",
"176 590 OFFCURVE",
"187 584 OFFCURVE",
"210 584 CURVE SMOOTH",
"298 584 LINE",
"230 707 LINE SMOOTH",
"219 726 OFFCURVE",
"207 737 OFFCURVE",
"175 737 CURVE SMOOTH",
"30 737 LINE",
"30 737 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 0 6 4 0 9 1 9 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 1 1 0 1 0 36 2 1 0 0 17 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 1 0 1 0 35 2 1 0 0 1 1 0 36 0 1 0 1 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 328;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"157 596 LINE SMOOTH",
"166 585 OFFCURVE",
"173 582 OFFCURVE",
"188 582 CURVE SMOOTH",
"239 582 LINE",
"164 703 LINE SMOOTH",
"155 718 OFFCURVE",
"146 725 OFFCURVE",
"125 725 CURVE SMOOTH",
"40 725 LINE",
"40 725 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 0 6 4 0 9 1 9 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 1 0 1 53 2 1 0 0 17 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
2 1 0 1 0 52 0 1 1 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = acute;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"57 579 LINE SMOOTH",
"60 579 OFFCURVE",
"63 580 OFFCURVE",
"65 583 CURVE SMOOTH",
"166 708 LINE",
"153 708 LINE SMOOTH",
"142 708 OFFCURVE",
"139 706 OFFCURVE",
"132 697 CURVE SMOOTH",
"50 579 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 4 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 216;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"123 584 LINE SMOOTH",
"147 584 OFFCURVE",
"158 590 OFFCURVE",
"173 605 CURVE SMOOTH",
"303 737 LINE",
"153 737 LINE SMOOTH",
"122 737 OFFCURVE",
"110 726 OFFCURVE",
"98 707 CURVE",
"30 584 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 9 0 8 5 3 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 1 1 0 36 2 1 1 1 17 0 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 1 0 0 1 1 0 35 2 1 1 1 0 1 0 36 0 0 1 0 1 0 33 3 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"93 582 LINE SMOOTH",
"108 582 OFFCURVE",
"115 585 OFFCURVE",
"124 596 CURVE SMOOTH",
"241 725 LINE",
"154 725 LINE SMOOTH",
"133 725 OFFCURVE",
"123 718 OFFCURVE",
"114 703 CURVE SMOOTH",
"40 582 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 9 0 8 5 3 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
0 0 1 0 53 2 1 1 1 17 1 32 2 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
2 1 1 0 1 52 0 0 0 43 2 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"142 708 OFFCURVE",
"139 706 OFFCURVE",
"132 697 CURVE SMOOTH",
"50 579 LINE",
"57 579 LINE SMOOTH",
"61 579 OFFCURVE",
"64 580 OFFCURVE",
"65 583 CURVE",
"164 708 LINE",
"153 708 LINE",
"153 708 LINE"
);
},
{
closed = 1;
nodes = (
"258 708 OFFCURVE",
"256 706 OFFCURVE",
"248 697 CURVE SMOOTH",
"156 579 LINE",
"163 579 LINE SMOOTH",
"167 579 OFFCURVE",
"170 580 OFFCURVE",
"171 583 CURVE",
"282 708 LINE",
"269 708 LINE",
"269 708 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
9 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
0 4 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
13 4 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 332;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"117 737 OFFCURVE",
"102 727 OFFCURVE",
"93 707 CURVE SMOOTH",
"35 584 LINE",
"98 584 LINE SMOOTH",
"122 584 OFFCURVE",
"135 589 OFFCURVE",
"148 605 CURVE SMOOTH",
"248 737 LINE",
"148 737 LINE",
"148 737 LINE"
);
},
{
closed = 1;
nodes = (
"300 737 OFFCURVE",
"287 727 OFFCURVE",
"273 707 CURVE SMOOTH",
"185 584 LINE",
"258 584 LINE SMOOTH",
"282 584 OFFCURVE",
"293 590 OFFCURVE",
"308 605 CURVE SMOOTH",
"438 737 LINE",
"328 737 LINE",
"328 737 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 10 0 0 10 21 10 20 15 13 0 9 0 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 1 1 0 36 5 3 4 3 1 1 17 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 3 4 3 1 0 0 1 1 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 1 2 1 3 2 50 0 0 2 0 53 4 1 1 3 2 1 1 0 35 4 1 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 473;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"126 725 OFFCURVE",
"118 718 OFFCURVE",
"109 703 CURVE SMOOTH",
"40 582 LINE",
"77 582 LINE SMOOTH",
"92 582 OFFCURVE",
"100 585 OFFCURVE",
"108 596 CURVE SMOOTH",
"208 725 LINE",
"149 725 LINE",
"149 725 LINE"
);
},
{
closed = 1;
nodes = (
"278 725 OFFCURVE",
"271 718 OFFCURVE",
"260 703 CURVE SMOOTH",
"170 582 LINE",
"213 582 LINE SMOOTH",
"226 582 OFFCURVE",
"234 585 OFFCURVE",
"243 596 CURVE SMOOTH",
"365 725 LINE",
"299 725 LINE",
"299 725 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 10 0 0 10 19 10 18 15 13 0 9 0 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 1 1 0 36 5 3 4 3 1 1 17 0 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 3 4 3 1 0 0 1 1 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 1 2 1 3 2 50 0 0 2 0 53 4 1 1 3 2 1 1 0 35 4 1 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 405;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = circumflex;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"59 585 LINE SMOOTH",
"63 585 OFFCURVE",
"66 588 OFFCURVE",
"67 589 CURVE SMOOTH",
"160 690 LINE",
"253 589 LINE SMOOTH",
"256 586 OFFCURVE",
"258 585 OFFCURVE",
"261 585 CURVE SMOOTH",
"270 585 LINE",
"164 700 LINE",
"156 700 LINE",
"50 585 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 11 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 320;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"146 584 LINE SMOOTH",
"158 584 OFFCURVE",
"171 589 OFFCURVE",
"176 594 CURVE SMOOTH",
"229 643 LINE",
"286 594 LINE SMOOTH",
"293 588 OFFCURVE",
"304 584 OFFCURVE",
"316 584 CURVE SMOOTH",
"419 584 LINE",
"302 729 LINE",
"156 729 LINE",
"39 584 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 0 2 1 30 1 1 0 2 0 53 0 2 2 11 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 0 2 1 30 0 2 0 2 52 1 1 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"102 585 LINE SMOOTH",
"110 585 OFFCURVE",
"118 588 OFFCURVE",
"122 592 CURVE SMOOTH",
"194 663 LINE",
"267 592 LINE SMOOTH",
"273 587 OFFCURVE",
"280 585 OFFCURVE",
"287 585 CURVE SMOOTH",
"346 585 LINE",
"235 717 LINE",
"152 717 LINE",
"40 585 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
13 12 11 9 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
5 1 0 2 1 30 1 1 0 2 0 53 0 2 2 11 2 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
5 1 0 2 1 30 0 2 0 2 52 1 1 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
5 1 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
components = (
{
alignment = -1;
name = circumflex;
transform = "{-1, 0, 0, -1, 320, 1285}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
12 2 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
7 1 0 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 320;
},
{
components = (
{
alignment = -1;
name = circumflex;
transform = "{-1, 0, 0, -1, 458, 1313}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
17 16 15 13 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
8 1 2 0 1 30 0 2 0 2 53 1 1 0 0 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
8 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
8 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
components = (
{
alignment = -1;
name = circumflex;
transform = "{-1, 0, 0, -1, 386, 1302}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
17 16 15 13 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
7 1 2 0 1 30 0 2 0 2 53 1 1 0 0 11 0 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
7 1 2 0 1 30 1 1 0 2 0 52 0 2 2 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
7 1 2 1 1 30 0 0 1 0 52 0 1 2 1 52 0 2 2 43 4 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"155 586 LINE",
"228 586 OFFCURVE",
"260 635 OFFCURVE",
"260 700 CURVE",
"250 700 LINE",
"250 643 OFFCURVE",
"222 596 OFFCURVE",
"155 596 CURVE SMOOTH",
"88 596 OFFCURVE",
"60 644 OFFCURVE",
"60 700 CURVE",
"50 700 LINE",
"50 635 OFFCURVE",
"84 586 OFFCURVE",
"155 586 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 4 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
11 1 0 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 310;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"189 580 LINE",
"306 580 OFFCURVE",
"353 639 OFFCURVE",
"353 729 CURVE",
"245 729 LINE",
"245 690 OFFCURVE",
"235 674 OFFCURVE",
"189 674 CURVE SMOOTH",
"145 674 OFFCURVE",
"133 690 OFFCURVE",
"133 729 CURVE",
"25 729 LINE",
"25 639 OFFCURVE",
"72 580 OFFCURVE",
"189 580 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 17 16 12 10 6 5 0 21 1 21 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 4 1 0 2 0 1 0 37 3 1 1 1 11 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 3 1 52 0 3 2 3 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 378;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"177 582 LINE",
"274 582 OFFCURVE",
"314 637 OFFCURVE",
"314 717 CURVE",
"251 717 LINE",
"251 670 OFFCURVE",
"232 640 OFFCURVE",
"177 640 CURVE SMOOTH",
"123 640 OFFCURVE",
"103 670 OFFCURVE",
"103 717 CURVE",
"40 717 LINE",
"40 638 OFFCURVE",
"81 582 OFFCURVE",
"177 582 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 17 16 12 10 6 5 0 21 1 21 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
95 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 4 1 0 2 0 1 0 37 3 1 1 1 11 1 32 2 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 3 1 52 0 3 2 3 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 5 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = ring;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"166 573 OFFCURVE",
"198 605 OFFCURVE",
"198 645 CURVE SMOOTH",
"198 686 OFFCURVE",
"166 717 OFFCURVE",
"124 717 CURVE SMOOTH",
"84 717 OFFCURVE",
"50 686 OFFCURVE",
"50 645 CURVE SMOOTH",
"50 605 OFFCURVE",
"85 573 OFFCURVE",
"124 573 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89 582 OFFCURVE",
"61 610 OFFCURVE",
"61 645 CURVE SMOOTH",
"61 682 OFFCURVE",
"89 708 OFFCURVE",
"124 708 CURVE SMOOTH",
"161 708 OFFCURVE",
"187 682 OFFCURVE",
"187 645 CURVE SMOOTH",
"187 610 OFFCURVE",
"161 582 OFFCURVE",
"124 582 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
25 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 35 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 248;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"209 560 OFFCURVE",
"266 602 OFFCURVE",
"266 667 CURVE SMOOTH",
"266 734 OFFCURVE",
"209 777 OFFCURVE",
"142 777 CURVE SMOOTH",
"77 777 OFFCURVE",
"21 734 OFFCURVE",
"21 667 CURVE SMOOTH",
"21 602 OFFCURVE",
"77 560 OFFCURVE",
"142 560 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 627 OFFCURVE",
"104 644 OFFCURVE",
"104 667 CURVE SMOOTH",
"104 692 OFFCURVE",
"117 708 OFFCURVE",
"144 708 CURVE SMOOTH",
"168 708 OFFCURVE",
"183 692 OFFCURVE",
"183 667 CURVE SMOOTH",
"183 644 OFFCURVE",
"168 627 OFFCURVE",
"144 627 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 28 24 22 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 287;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"195 566 OFFCURVE",
"241 603 OFFCURVE",
"241 658 CURVE SMOOTH",
"241 714 OFFCURVE",
"195 751 OFFCURVE",
"140 751 CURVE SMOOTH",
"86 751 OFFCURVE",
"40 713 OFFCURVE",
"40 658 CURVE SMOOTH",
"40 603 OFFCURVE",
"86 566 OFFCURVE",
"140 566 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 608 OFFCURVE",
"90 629 OFFCURVE",
"90 658 CURVE SMOOTH",
"90 687 OFFCURVE",
"109 708 OFFCURVE",
"141 708 CURVE SMOOTH",
"170 708 OFFCURVE",
"191 687 OFFCURVE",
"191 658 CURVE SMOOTH",
"191 629 OFFCURVE",
"170 608 OFFCURVE",
"141 608 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 28 24 22 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 1 2 1 1 0 37 0 3 3 0 1 0 36 0 0 0 13 3 32 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = tilde;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"221 621 LINE",
"181 621 OFFCURVE",
"153 679 OFFCURVE",
"109 679 CURVE SMOOTH",
"72 679 OFFCURVE",
"50 649 OFFCURVE",
"50 612 CURVE",
"59 612 LINE",
"62 644 OFFCURVE",
"76 669 OFFCURVE",
"109 669 CURVE SMOOTH",
"146 669 OFFCURVE",
"181 611 OFFCURVE",
"221 611 CURVE SMOOTH",
"260 611 OFFCURVE",
"279 641 OFFCURVE",
"279 678 CURVE",
"271 678 LINE",
"270 646 OFFCURVE",
"254 621 OFFCURVE",
"221 621 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 20 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
25 9 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 329;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"249 694 LINE",
"226 694 OFFCURVE",
"182 731 OFFCURVE",
"140 731 CURVE SMOOTH",
"74 731 OFFCURVE",
"25 672 OFFCURVE",
"25 593 CURVE",
"120 593 LINE",
"120 621 OFFCURVE",
"130 627 OFFCURVE",
"146 627 CURVE SMOOTH",
"170 627 OFFCURVE",
"212 590 OFFCURVE",
"255 590 CURVE SMOOTH",
"324 590 OFFCURVE",
"370 646 OFFCURVE",
"370 727 CURVE",
"276 727 LINE",
"276 699 OFFCURVE",
"265 694 OFFCURVE",
"249 694 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 24 22 18 17 15 13 10 8 4 3 0 27 1 27 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 0 4 1 2 0 2 1 2 37 0 3 3 1 1 0 36 5 1 1 1 11 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 0 4 1 2 0 2 1 2 37 0 1 1 11 31 0 3 3 5 1 0 36 0 5 5 11 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
94 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 50 6 1 0 0 2 0 2 1 2 37 0 1 1 11 31 0 3 3 5 1 0 36 0 5 5 11 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 5 0 5 1 0 50 0 4 3 2 3 4 2 50 6 1 0 3 2 0 1 0 35 0 5 0 3 4 5 3 1 0 38 6 1 0 0 2 1 2 36 0 2 0 2 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 395;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"240 663 LINE",
"212 663 OFFCURVE",
"172 709 OFFCURVE",
"130 709 CURVE SMOOTH",
"75 709 OFFCURVE",
"40 662 OFFCURVE",
"40 601 CURVE",
"96 601 LINE",
"97 630 OFFCURVE",
"109 645 OFFCURVE",
"133 645 CURVE SMOOTH",
"162 645 OFFCURVE",
"201 599 OFFCURVE",
"243 599 CURVE SMOOTH",
"297 599 OFFCURVE",
"332 645 OFFCURVE",
"332 706 CURVE",
"278 706 LINE",
"277 677 OFFCURVE",
"264 663 OFFCURVE",
"240 663 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 23 21 17 16 15 13 10 8 4 3 0 26 1 26 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 0 4 1 2 0 2 1 0 37 0 3 3 1 1 0 36 5 1 1 1 11 3 32 3 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 3 2 0 1 0 35 5 1 1 0 3 2 1 3 1 0 38 6 1 0 0 2 1 0 36 4 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
112 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 5 0 5 1 0 50 6 1 0 3 2 0 1 0 35 0 5 0 3 2 5 3 1 0 38 6 1 0 0 2 1 0 36 4 1 2 0 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 5 0 5 1 0 50 0 4 3 2 3 4 2 50 6 1 0 3 2 0 1 0 35 0 5 0 3 4 5 3 1 0 38 6 1 0 0 2 1 0 36 0 2 0 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"310 635 LINE",
"310 645 LINE",
"50 645 LINE",
"50 635 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 360;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"335 605 LINE",
"335 689 LINE",
"25 689 LINE",
"25 605 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 360;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"327 616 LINE",
"327 674 LINE",
"40 674 LINE",
"40 616 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"167 -179 OFFCURVE",
"200 -158 OFFCURVE",
"200 -119 CURVE SMOOTH",
"200 -77 OFFCURVE",
"158 -63 OFFCURVE",
"105 -55 CURVE",
"122 0 LINE",
"113 0 LINE",
"93 -63 LINE",
"144 -71 OFFCURVE",
"189 -77 OFFCURVE",
"189 -120 CURVE SMOOTH",
"189 -152 OFFCURVE",
"165 -170 OFFCURVE",
"125 -170 CURVE SMOOTH",
"100 -170 OFFCURVE",
"85 -166 OFFCURVE",
"61 -149 CURVE SMOOTH",
"58 -147 OFFCURVE",
"55 -148 OFFCURVE",
"53 -150 CURVE SMOOTH",
"50 -153 LINE",
"66 -169 OFFCURVE",
"95 -179 OFFCURVE",
"122 -179 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
21 3 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 7 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
0 2 29 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 1 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 250;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"173 -174 OFFCURVE",
"233 -147 OFFCURVE",
"233 -97 CURVE SMOOTH",
"233 -61 OFFCURVE",
"210 -37 OFFCURVE",
"156 -22 CURVE",
"164 9 LINE",
"68 9 LINE",
"45 -68 LINE",
"78 -72 OFFCURVE",
"112 -77 OFFCURVE",
"112 -94 CURVE SMOOTH",
"112 -102 OFFCURVE",
"105 -109 OFFCURVE",
"88 -109 CURVE SMOOTH",
"70 -109 OFFCURVE",
"67 -105 OFFCURVE",
"56 -105 CURVE SMOOTH",
"47 -105 OFFCURVE",
"41 -110 OFFCURVE",
"39 -119 CURVE SMOOTH",
"25 -166 LINE",
"50 -171 OFFCURVE",
"72 -174 OFFCURVE",
"99 -174 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 23 21 11 10 4 2 0 27 1 27 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 9 2 0 2 25 1 3 0 2 30 0 2 0 0 2 40 1 4 2 0 0 3 1 2 36 0 3 3 22 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
12 9 2 0 2 25 1 3 0 2 30 0 2 0 2 52 1 4 2 0 0 3 1 2 36 0 3 3 22 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
12 9 2 0 2 25 1 3 0 2 30 0 2 0 2 52 1 4 2 0 3 3 0 1 0 35 1 4 2 0 0 3 1 2 36 0 3 0 3 1 2 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
12 9 2 0 2 25 1 3 1 2 30 0 2 0 2 52 4 1 0 1 0 52 0 1 3 3 1 1 0 35 0 1 1 3 1 2 36 0 3 1 3 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 258;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"173 -176 OFFCURVE",
"222 -151 OFFCURVE",
"222 -107 CURVE SMOOTH",
"222 -71 OFFCURVE",
"196 -48 OFFCURVE",
"136 -35 CURVE",
"148 5 LINE",
"92 5 LINE",
"71 -66 LINE",
"115 -71 OFFCURVE",
"151 -79 OFFCURVE",
"151 -106 CURVE SMOOTH",
"151 -123 OFFCURVE",
"137 -135 OFFCURVE",
"109 -135 CURVE SMOOTH",
"86 -135 OFFCURVE",
"68 -124 OFFCURVE",
"60 -124 CURVE SMOOTH",
"55 -124 OFFCURVE",
"51 -127 OFFCURVE",
"49 -133 CURVE SMOOTH",
"40 -160 LINE",
"61 -169 OFFCURVE",
"86 -176 OFFCURVE",
"113 -176 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 25 23 15 14 6 4 0 29 1 29 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
16 13 2 0 2 27 1 3 0 2 30 0 2 0 0 2 40 1 4 2 0 0 3 1 2 36 0 3 3 16 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
16 13 2 0 2 27 1 3 0 2 30 0 2 0 2 52 1 4 2 0 0 3 1 2 36 0 3 3 16 3 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
16 13 2 0 2 27 1 3 1 2 30 0 2 0 2 52 4 1 0 1 0 52 0 1 1 3 1 2 36 0 3 3 16 3 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
16 13 2 0 2 27 1 3 1 2 30 0 2 0 2 52 4 1 0 1 0 52 0 1 3 3 1 1 0 35 0 1 1 3 1 2 36 0 3 1 3 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = ogonek;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"193 -135 LINE SMOOTH",
"189 -135 OFFCURVE",
"154 -157 OFFCURVE",
"128 -157 CURVE SMOOTH",
"91 -157 OFFCURVE",
"61 -135 OFFCURVE",
"61 -98 CURVE SMOOTH",
"61 -52 OFFCURVE",
"103 -18 OFFCURVE",
"134 0 CURVE",
"128 7 LINE",
"95 -12 OFFCURVE",
"50 -53 OFFCURVE",
"50 -98 CURVE SMOOTH",
"50 -143 OFFCURVE",
"83 -167 OFFCURVE",
"127 -167 CURVE SMOOTH",
"155 -167 OFFCURVE",
"183 -157 OFFCURVE",
"200 -140 CURVE",
"197 -137 LINE SMOOTH",
"196 -136 OFFCURVE",
"194 -135 OFFCURVE",
"193 -135 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
20 3 9 4 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
23 1 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 2 3 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 250;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"196 -84 LINE",
"191 -84 OFFCURVE",
"182 -88 OFFCURVE",
"167 -88 CURVE SMOOTH",
"150 -88 OFFCURVE",
"140 -77 OFFCURVE",
"140 -61 CURVE SMOOTH",
"140 -36 OFFCURVE",
"162 -15 OFFCURVE",
"187 0 CURVE",
"107 6 LINE",
"50 -25 OFFCURVE",
"25 -63 OFFCURVE",
"25 -99 CURVE SMOOTH",
"25 -143 OFFCURVE",
"63 -174 OFFCURVE",
"134 -174 CURVE SMOOTH",
"174 -174 OFFCURVE",
"210 -162 OFFCURVE",
"233 -149 CURVE",
"210 -93 LINE SMOOTH",
"208 -87 OFFCURVE",
"203 -84 OFFCURVE",
"196 -84 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
1 0 20 18 7 5 0 23 1 23 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 30 13 12 2 0 28 2 3 2 0 0 1 1 0 36 0 1 1 22 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
58 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
3 1 1 0 1 30 13 12 2 0 28 2 3 2 0 1 1 0 1 0 35 2 3 2 0 0 1 1 0 36 0 1 0 1 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 2 1 30 13 12 2 0 28 3 1 0 2 0 52 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 258;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"199 -106 LINE",
"194 -106 OFFCURVE",
"172 -118 OFFCURVE",
"153 -118 CURVE SMOOTH",
"125 -118 OFFCURVE",
"108 -102 OFFCURVE",
"108 -77 CURVE SMOOTH",
"108 -42 OFFCURVE",
"140 -16 OFFCURVE",
"167 0 CURVE",
"121 7 LINE",
"78 -18 OFFCURVE",
"40 -57 OFFCURVE",
"40 -99 CURVE SMOOTH",
"40 -143 OFFCURVE",
"76 -171 OFFCURVE",
"135 -171 CURVE SMOOTH",
"168 -171 OFFCURVE",
"202 -161 OFFCURVE",
"222 -145 CURVE",
"208 -112 LINE SMOOTH",
"207 -109 OFFCURVE",
"203 -106 OFFCURVE",
"199 -106 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
1 0 25 23 8 6 0 28 1 28 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 1 1 0 1 30 16 15 2 0 28 2 3 2 0 0 1 1 0 36 0 1 1 16 1 32 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
73 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
4 1 1 2 1 30 16 15 2 0 28 3 1 0 2 0 52 0 2 2 1 1 0 36 0 1 1 16 1 32 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
4 1 1 2 1 30 16 15 2 0 28 3 1 0 2 0 52 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = dieresis.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"66 832 LINE",
"66 848 OFFCURVE",
"52.667 860 OFFCURVE",
"38 860 CURVE SMOOTH",
"23.333 860 OFFCURVE",
"10 848 OFFCURVE",
"10 832 CURVE SMOOTH",
"10 818.667 OFFCURVE",
"23.333 805 OFFCURVE",
"38 805 CURVE SMOOTH",
"52.667 805 OFFCURVE",
"66 818.667 OFFCURVE",
"66 832 CURVE"
);
},
{
closed = 1;
nodes = (
"270 832 LINE",
"270 848 OFFCURVE",
"256.667 860 OFFCURVE",
"242 860 CURVE SMOOTH",
"227.333 860 OFFCURVE",
"214 848 OFFCURVE",
"214 832 CURVE SMOOTH",
"214 818.667 OFFCURVE",
"227.333 805 OFFCURVE",
"242 805 CURVE SMOOTH",
"256.667 805 OFFCURVE",
"270 818.667 OFFCURVE",
"270 832 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
9 3 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"133 834 LINE",
"133 876.769 OFFCURVE",
"97.953 911 OFFCURVE",
"53 911 CURVE SMOOTH",
"12.162 911 OFFCURVE",
"-23 875.568 OFFCURVE",
"-23 834 CURVE SMOOTH",
"-23 793.167 OFFCURVE",
"12.444 759 OFFCURVE",
"53 759 CURVE SMOOTH",
"97.933 759 OFFCURVE",
"133 792.391 OFFCURVE",
"133 834 CURVE"
);
},
{
closed = 1;
nodes = (
"353 834 LINE",
"353 876.996 OFFCURVE",
"318.332 911 OFFCURVE",
"275 911 CURVE SMOOTH",
"233.624 911 OFFCURVE",
"197 876.5 OFFCURVE",
"197 834 CURVE SMOOTH",
"197 792.686 OFFCURVE",
"233.648 759 OFFCURVE",
"275 759 CURVE SMOOTH",
"318.311 759 OFFCURVE",
"353 792.218 OFFCURVE",
"353 834 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 1 0 35 3 1 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 0 1 1 0 35 0 3 0 2 0 3 2 1 0 38 0 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"102 833 LINE",
"102 863.617 OFFCURVE",
"76.617 889 OFFCURVE",
"46 889 CURVE SMOOTH",
"17.88 889 OFFCURVE",
"-8 863.18 OFFCURVE",
"-8 833 CURVE SMOOTH",
"-8 804.881 OFFCURVE",
"18.494 779 OFFCURVE",
"46 779 CURVE SMOOTH",
"76.021 779 OFFCURVE",
"102 804.442 OFFCURVE",
"102 833 CURVE"
);
},
{
closed = 1;
nodes = (
"315 833 LINE",
"315 863.372 OFFCURVE",
"289.366 889 OFFCURVE",
"260 889 CURVE SMOOTH",
"230.634 889 OFFCURVE",
"205 863.372 OFFCURVE",
"205 833 CURVE SMOOTH",
"205 804.687 OFFCURVE",
"231.238 779 OFFCURVE",
"260 779 CURVE SMOOTH",
"288.762 779 OFFCURVE",
"315 804.687 OFFCURVE",
"315 833 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 34 26 24 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 1 0 35 3 1 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 0 1 1 0 35 0 3 0 2 0 3 2 1 0 38 0 1 1 0 1 0 36 0 0 1 0 1 0 33 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = dieresis.case;
},
{
glyphname = dotaccent.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"168 834 LINE",
"168 850 OFFCURVE",
"154.667 862 OFFCURVE",
"140 862 CURVE SMOOTH",
"125.333 862 OFFCURVE",
"112 850 OFFCURVE",
"112 834 CURVE SMOOTH",
"112 820.667 OFFCURVE",
"125.333 807 OFFCURVE",
"140 807 CURVE SMOOTH",
"154.667 807 OFFCURVE",
"168 820.667 OFFCURVE",
"168 834 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 6 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
9 3 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"254 851 LINE",
"254 898.944 OFFCURVE",
"213.132 939 OFFCURVE",
"163 939 CURVE SMOOTH",
"116.564 939 OFFCURVE",
"76 898.473 OFFCURVE",
"76 851 CURVE SMOOTH",
"76 805.975 OFFCURVE",
"116.789 766 OFFCURVE",
"163 766 CURVE SMOOTH",
"212.923 766 OFFCURVE",
"254 805.464 OFFCURVE",
"254 851 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"214 844 LINE",
"214 877.432 OFFCURVE",
"185.432 906 OFFCURVE",
"152 906 CURVE SMOOTH",
"120.153 906 OFFCURVE",
"92 877.604 OFFCURVE",
"92 844 CURVE SMOOTH",
"92 812.444 OFFCURVE",
"120.444 784 OFFCURVE",
"152 784 CURVE SMOOTH",
"185.604 784 OFFCURVE",
"214 812.153 OFFCURVE",
"214 844 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
16 14 6 4 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 1 0 35 0 1 1 0 1 0 36 0 0 1 0 1 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = dotaccent.case;
},
{
glyphname = grave.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"167 772 LINE SMOOTH",
"170.333 770 OFFCURVE",
"173.333 769 OFFCURVE",
"176 769 CURVE SMOOTH",
"182 769 LINE",
"61 873 LINE SMOOTH",
"55.667 878.333 OFFCURVE",
"52 880 OFFCURVE",
"40 880 CURVE SMOOTH",
"22 880 LINE",
"22 880 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 8 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
0 5 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"91 790 LINE SMOOTH",
"107.896 778.736 OFFCURVE",
"118.836 776 OFFCURVE",
"141 776 CURVE SMOOTH",
"264 776 LINE",
"173 875 LINE SMOOTH",
"156.873 893.815 OFFCURVE",
"140.259 899 OFFCURVE",
"112 899 CURVE SMOOTH",
"-59 899 LINE",
"-59 899 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 0 8 6 0 13 1 13 3 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 11 values pushed */
2 1 0 1 0 52 0 1 1 43 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"126 783 LINE SMOOTH",
"136.667 775 OFFCURVE",
"142.333 773 OFFCURVE",
"157 773 CURVE SMOOTH",
"226 773 LINE",
"121 875 LINE SMOOTH",
"107.667 888.333 OFFCURVE",
"100.333 891 OFFCURVE",
"79 891 CURVE SMOOTH",
"-22 891 LINE",
"-22 891 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 0 6 4 0 9 1 9 3 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 11 values pushed */
2 1 0 1 0 52 0 1 1 43 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = grave.case;
},
{
glyphname = acute.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"233.333 880 OFFCURVE",
"229.667 878.333 OFFCURVE",
"223 873 CURVE SMOOTH",
"102 769 LINE",
"108 769 LINE SMOOTH",
"111.333 769 OFFCURVE",
"114.333 770 OFFCURVE",
"117 772 CURVE SMOOTH",
"262 880 LINE",
"244 880 LINE",
"244 880 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 4 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
8 3 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"190.353 899 OFFCURVE",
"169.913 893.884 OFFCURVE",
"155 874 CURVE",
"64 776 LINE",
"187 776 LINE SMOOTH",
"209.667 776 OFFCURVE",
"222.667 778.667 OFFCURVE",
"240 792 CURVE SMOOTH",
"387 899 LINE",
"216 899 LINE",
"216 899 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 11 0 10 5 3 3 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 11 values pushed */
2 1 1 0 1 52 0 0 0 43 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"208.36 891 OFFCURVE",
"200.2 888.2 OFFCURVE",
"187 875 CURVE SMOOTH",
"81 773 LINE",
"150 773 LINE SMOOTH",
"164.667 773 OFFCURVE",
"171.333 775 OFFCURVE",
"182 783 CURVE SMOOTH",
"329 891 LINE",
"229 891 LINE",
"229 891 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 11 0 10 5 3 3 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 11 values pushed */
2 1 1 0 1 52 0 0 0 43 2 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = acute.case;
},
{
glyphname = hungarumlaut.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"157.333 880 OFFCURVE",
"152.667 878.333 OFFCURVE",
"146 869 CURVE SMOOTH",
"65 769 LINE",
"72 769 LINE SMOOTH",
"76 769 OFFCURVE",
"78.667 770.333 OFFCURVE",
"80 773 CURVE",
"178 880 LINE",
"168 880 LINE",
"168 880 LINE"
);
},
{
closed = 1;
nodes = (
"293.333 880 OFFCURVE",
"290 878.333 OFFCURVE",
"282 869 CURVE SMOOTH",
"191 769 LINE",
"198 769 LINE SMOOTH",
"200.667 769 OFFCURVE",
"203.333 770.333 OFFCURVE",
"206 773 CURVE SMOOTH",
"316 880 LINE",
"304 880 LINE",
"304 880 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
9 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
0 4 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
13 4 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
8 13 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"111.333 890 OFFCURVE",
"93.333 877.333 OFFCURVE",
"80 860 CURVE SMOOTH",
"18 776 LINE",
"91 776 LINE SMOOTH",
"115 776 OFFCURVE",
"126.333 783.667 OFFCURVE",
"141 797 CURVE SMOOTH",
"242 890 LINE",
"142 890 LINE",
"142 890 LINE"
);
},
{
closed = 1;
nodes = (
"291.333 890 OFFCURVE",
"273.333 876 OFFCURVE",
"256 860 CURVE SMOOTH",
"168 776 LINE",
"251 776 LINE SMOOTH",
"275 776 OFFCURVE",
"288.667 785 OFFCURVE",
"306 797 CURVE SMOOTH",
"437 890 LINE",
"322 890 LINE",
"322 890 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 10 0 0 10 19 10 18 15 13 0 9 0 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 3 4 3 1 0 0 1 1 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 1 2 1 3 2 50 0 0 2 0 53 4 1 1 3 2 1 1 0 35 4 1 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"131.333 886 OFFCURVE",
"120.667 877.333 OFFCURVE",
"110 864 CURVE SMOOTH",
"39 773 LINE",
"82 773 LINE SMOOTH",
"95.333 773 OFFCURVE",
"103.667 777.667 OFFCURVE",
"113 787 CURVE SMOOTH",
"212 886 LINE",
"154 886 LINE",
"154 886 LINE"
);
},
{
closed = 1;
nodes = (
"291.667 886 OFFCURVE",
"280 877.333 OFFCURVE",
"268 864 CURVE SMOOTH",
"178 773 LINE",
"226 773 LINE SMOOTH",
"240.667 773 OFFCURVE",
"248 777.667 OFFCURVE",
"260 787 CURVE SMOOTH",
"381 886 LINE",
"313 886 LINE",
"313 886 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
10 10 0 0 10 19 10 18 15 13 0 9 0 8 5 3 6 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 3 4 3 1 0 0 1 1 0 35 5 3 4 3 1 1 0 1 0 36 2 1 0 1 0 1 0 33 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
5 1 3 1 2 1 3 2 50 0 0 2 0 53 4 1 1 3 2 1 1 0 35 4 1 1 1 2 1 0 36 0 2 1 2 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = hungarumlaut.case;
},
{
glyphname = circumflex.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"30 769 LINE SMOOTH",
"33 769 OFFCURVE",
"37 770 OFFCURVE",
"40 773 CURVE",
"140 856 LINE",
"240 773 LINE SMOOTH",
"244 770 OFFCURVE",
"247.333 769 OFFCURVE",
"250 769 CURVE SMOOTH",
"260 769 LINE",
"144 864 LINE",
"136 864 LINE",
"20 769 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 14 3 
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
15 1 7 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"82 776 LINE SMOOTH",
"94 776 OFFCURVE",
"110 780 OFFCURVE",
"119 785 CURVE SMOOTH",
"165 813 LINE",
"211 785 LINE",
"220 780 OFFCURVE",
"236 776 OFFCURVE",
"248 776 CURVE SMOOTH",
"365 776 LINE",
"243 889 LINE",
"87 889 LINE",
"-35 776 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
8 1 0 2 1 30 0 2 0 0 2 0 0 35 0 2 2 0 1 0 36 1 1 0 2 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
8 1 1 2 1 30 0 1 2 0 0 1 42 0 2 1 0 2 0 2 35 0 2 2 0 1 0 36 0 0 2 0 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"58 773 LINE SMOOTH",
"66 773 OFFCURVE",
"77 776 OFFCURVE",
"82 780 CURVE SMOOTH",
"153 831 LINE",
"224 780 LINE SMOOTH",
"231 776 OFFCURVE",
"241 773 OFFCURVE",
"249 773 CURVE SMOOTH",
"316 773 LINE",
"197 878 LINE",
"109 878 LINE",
"-10 773 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
16 15 14 12 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
7 1 0 2 1 30 0 2 0 2 52 1 1 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
7 1 1 2 1 30 0 2 1 2 52 0 1 0 1 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = circumflex.case;
},
{
glyphname = caron.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"144 769 LINE",
"260 864 LINE",
"250 864 LINE SMOOTH",
"247.333 864 OFFCURVE",
"245 864 OFFCURVE",
"240 860 CURVE SMOOTH",
"140 778 LINE",
"40 860 LINE SMOOTH",
"37 863 OFFCURVE",
"34 864 OFFCURVE",
"30 864 CURVE SMOOTH",
"20 864 LINE",
"136 769 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
12 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
6 1 13 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"243 776 LINE",
"365 889 LINE",
"248 889 LINE SMOOTH",
"236 889 OFFCURVE",
"220 885 OFFCURVE",
"211 880 CURVE",
"165 852 LINE",
"119 880 LINE SMOOTH",
"110 885 OFFCURVE",
"94 889 OFFCURVE",
"82 889 CURVE SMOOTH",
"-35 889 LINE",
"87 776 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 17 16 14 2 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
8 1 2 0 1 30 1 1 0 2 2 0 1 0 35 1 1 0 0 2 0 0 36 0 2 0 2 0 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
8 1 2 1 1 30 0 1 0 2 0 1 42 0 0 1 2 0 1 0 35 0 0 0 2 0 0 36 0 2 0 2 0 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"197 773 LINE",
"316 878 LINE",
"249 878 LINE SMOOTH",
"241 878 OFFCURVE",
"230.667 876 OFFCURVE",
"224 872 CURVE SMOOTH",
"153 819 LINE",
"82 872 LINE SMOOTH",
"76.667 876 OFFCURVE",
"66 878 OFFCURVE",
"58 878 CURVE SMOOTH",
"-10 878 LINE",
"109 773 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 8 values pushed */
18 16 4 2 1 0 3 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
10 1 0 1 1 30 2 1 1 0 1 52 0 0 0 43 3 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
10 1 0 2 1 30 0 1 2 1 52 0 2 0 2 52 0 0 0 43 4 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = caron.case;
},
{
glyphname = breve.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"140 764 LINE",
"214.667 764 OFFCURVE",
"245 802.667 OFFCURVE",
"245 864 CURVE",
"235 864 LINE",
"235 806.797 OFFCURVE",
"206.127 774 OFFCURVE",
"140 774 CURVE SMOOTH",
"73.955 774 OFFCURVE",
"45 807.701 OFFCURVE",
"45 864 CURVE",
"35 864 LINE",
"35 799.86 OFFCURVE",
"68.407 764 OFFCURVE",
"140 764 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
16 4 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
11 1 0 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"165 763 LINE",
"265.418 763 OFFCURVE",
"334 809.612 OFFCURVE",
"334 889 CURVE",
"236 889 LINE",
"236 861 OFFCURVE",
"211.667 852 OFFCURVE",
"165 852 CURVE SMOOTH",
"119.667 852 OFFCURVE",
"94 861 OFFCURVE",
"94 889 CURVE",
"-4 889 LINE",
"-4 801.002 OFFCURVE",
"65.377 763 OFFCURVE",
"165 763 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 13 12 10 8 6 5 0 17 1 17 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 3 1 52 0 3 2 3 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"154 764 LINE",
"244.667 764 OFFCURVE",
"293 808.667 OFFCURVE",
"293 878 CURVE",
"236 878 LINE",
"236 839.333 OFFCURVE",
"211.333 818 OFFCURVE",
"154 818 CURVE SMOOTH",
"96.667 818 OFFCURVE",
"72 839.333 OFFCURVE",
"72 878 CURVE",
"14 878 LINE",
"14 802 OFFCURVE",
"62 764 OFFCURVE",
"154 764 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
1 0 11 10 8 6 4 3 0 13 1 13 5 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
232 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 2 1 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 4 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 3 1 52 0 3 2 3 52 0 2 0 0 2 1 0 35 0 2 2 0 1 0 36 4 1 0 2 0 1 0 33 5 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = breve.case;
},
{
glyphname = ring.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"66 802 LINE",
"66 761.861 OFFCURVE",
"100.596 730 OFFCURVE",
"140 730 CURVE SMOOTH",
"181.77 730 OFFCURVE",
"214 761.652 OFFCURVE",
"214 802 CURVE SMOOTH",
"214 843.228 OFFCURVE",
"182.394 874 OFFCURVE",
"140 874 CURVE SMOOTH",
"99.976 874 OFFCURVE",
"66 843 OFFCURVE",
"66 802 CURVE"
);
},
{
closed = 1;
nodes = (
"77 802 LINE",
"77 839.026 OFFCURVE",
"105.131 865 OFFCURVE",
"140 865 CURVE SMOOTH",
"177.236 865 OFFCURVE",
"203 839.236 OFFCURVE",
"203 802 CURVE SMOOTH",
"203 767.131 OFFCURVE",
"177.026 739 OFFCURVE",
"140 739 CURVE SMOOTH",
"105.363 739 OFFCURVE",
"77 767.363 OFFCURVE",
"77 802 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 3 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 3 
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
25 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 1 35 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"53 851 LINE",
"53 791.945 OFFCURVE",
"106.24 752 OFFCURVE",
"164 752 CURVE SMOOTH",
"226.181 752 OFFCURVE",
"278 791.625 OFFCURVE",
"278 851 CURVE SMOOTH",
"278 911.94 OFFCURVE",
"225.85 952 OFFCURVE",
"164 952 CURVE SMOOTH",
"106.07 952 OFFCURVE",
"53 912.068 OFFCURVE",
"53 851 CURVE"
);
},
{
closed = 1;
nodes = (
"126 851 LINE",
"126 876.333 OFFCURVE",
"139.333 892 OFFCURVE",
"166 892 CURVE SMOOTH",
"190 892 OFFCURVE",
"205 876.333 OFFCURVE",
"205 851 CURVE SMOOTH",
"205 827 OFFCURVE",
"190 811 OFFCURVE",
"166 811 CURVE SMOOTH",
"139.333 811 OFFCURVE",
"126 827 OFFCURVE",
"126 851 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 28 24 22 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"59 830 LINE",
"59 779.596 OFFCURVE",
"103.64 743 OFFCURVE",
"153 743 CURVE SMOOTH",
"205.518 743 OFFCURVE",
"249 780.006 OFFCURVE",
"249 830 CURVE SMOOTH",
"249 881.117 OFFCURVE",
"205.534 919 OFFCURVE",
"153 919 CURVE SMOOTH",
"103.619 919 OFFCURVE",
"59 881.606 OFFCURVE",
"59 830 CURVE"
);
},
{
closed = 1;
nodes = (
"104 830 LINE",
"104 859.333 OFFCURVE",
"123.333 880 OFFCURVE",
"154 880 CURVE SMOOTH",
"184.667 880 OFFCURVE",
"204 859.333 OFFCURVE",
"204 830 CURVE SMOOTH",
"204 800.667 OFFCURVE",
"184.667 780 OFFCURVE",
"154 780 CURVE SMOOTH",
"123.333 780 OFFCURVE",
"104 800.667 OFFCURVE",
"104 830 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 28 24 22 16 14 6 4 4 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 33 values pushed */
0 0 0 3 2 0 3 1 0 38 0 2 1 1 2 1 0 35 0 2 2 1 1 0 36 0 1 2 1 1 0 33 4 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = ring.case;
},
{
glyphname = tilde.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"199 788 LINE",
"159.069 788 OFFCURVE",
"131.182 846 OFFCURVE",
"87 846 CURVE SMOOTH",
"50.148 846 OFFCURVE",
"28 815.611 OFFCURVE",
"28 779 CURVE",
"37 779 LINE",
"39.646 810.75 OFFCURVE",
"53.822 836 OFFCURVE",
"87 836 CURVE SMOOTH",
"123.74 836 OFFCURVE",
"158.777 778 OFFCURVE",
"199 778 CURVE SMOOTH",
"237.768 778 OFFCURVE",
"257 808.428 OFFCURVE",
"257 845 CURVE",
"249 845 LINE",
"247.667 813 OFFCURVE",
"232.333 788 OFFCURVE",
"199 788 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
4 20 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
25 9 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"227 865 LINE",
"200.167 865 OFFCURVE",
"139.775 894 OFFCURVE",
"106 894 CURVE SMOOTH",
"41.39 894 OFFCURVE",
"1 842.362 OFFCURVE",
"1 771 CURVE",
"86 771 LINE",
"86 789.667 OFFCURVE",
"96.667 797 OFFCURVE",
"110 797 CURVE SMOOTH",
"135.924 797 OFFCURVE",
"187.347 768 OFFCURVE",
"231 768 CURVE SMOOTH",
"297.932 768 OFFCURVE",
"336 817.328 OFFCURVE",
"336 890 CURVE",
"252 890 LINE",
"252 871.333 OFFCURVE",
"241.667 865 OFFCURVE",
"227 865 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 24 22 18 17 15 13 10 8 4 3 0 27 1 27 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
68 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 3 2 0 1 0 35 5 1 1 0 3 2 1 3 1 0 38 6 1 0 0 2 1 2 36 4 1 2 0 2 1 2 33 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
77 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 5 0 5 1 0 50 6 1 0 3 2 0 1 0 35 0 5 0 3 2 5 3 1 0 38 6 1 0 0 2 1 2 36 4 1 2 0 2 1 2 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 5 0 5 1 0 50 0 4 3 2 3 4 2 50 6 1 0 3 2 0 1 0 35 0 5 0 3 4 5 3 1 0 38 6 1 0 0 2 1 2 36 0 2 0 2 1 2 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"214 832 LINE",
"182.516 832 OFFCURVE",
"140.331 873 OFFCURVE",
"97 873 CURVE SMOOTH",
"45.322 873 OFFCURVE",
"13 831.078 OFFCURVE",
"13 774 CURVE",
"63 774 LINE",
"64.333 798 OFFCURVE",
"76.333 814 OFFCURVE",
"99 814 CURVE SMOOTH",
"131.065 814 OFFCURVE",
"172.73 772 OFFCURVE",
"216 772 CURVE SMOOTH",
"269.543 772 OFFCURVE",
"299 814.047 OFFCURVE",
"299 871 CURVE",
"250 871 LINE",
"250 845.667 OFFCURVE",
"236.667 832 OFFCURVE",
"214 832 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 0 24 22 18 17 15 13 10 8 4 3 0 27 1 27 7 7 
CALL[ ]	/* CallFunction */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
91 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 1 0 3 2 0 1 0 35 5 1 1 0 3 2 1 3 1 0 38 6 1 0 0 2 1 0 36 4 1 2 0 2 1 0 33 4 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
112 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 5 0 5 1 0 50 6 1 0 3 2 0 1 0 35 0 5 0 3 2 5 3 1 0 38 6 1 0 0 2 1 0 36 4 1 2 0 2 1 0 33 5 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 5 0 5 1 0 50 0 4 3 2 3 4 2 50 6 1 0 3 2 0 1 0 35 0 5 0 3 4 5 3 1 0 38 6 1 0 0 2 1 0 36 0 2 0 2 1 0 33 6 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = tilde.case;
},
{
glyphname = macron.case;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"230 801 LINE",
"230 811 LINE",
"50 811 LINE",
"50 801 LINE",
"50 801 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 0 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 1 2 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"310 777 LINE",
"310 863 LINE",
"20 863 LINE",
"20 777 LINE",
"20 777 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"273 788 LINE",
"273 841 LINE",
"34 841 LINE",
"34 788 LINE",
"34 788 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 6 values pushed */
3 2 1 0 2 7 
CALL[ ]	/* CallFunction */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 0 0 35 0 0 0 1 0 0 36 0 1 0 1 0 0 33 3 
PUSHB[ ]	/* 1 value pushed */
56 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = macron.case;
},
{
glyphname = brevecomb_acutecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{142, 490}";
},
{
name = top;
position = "{142, 821}";
}
);
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 16, 113}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{163, 507}";
},
{
name = top;
position = "{163, 835}";
}
);
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 16, 110}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{192, 519}";
},
{
name = top;
position = "{192, 895}";
}
);
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 66, 158}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
}
);
},
{
glyphname = brevecomb_gravecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{137, 490}";
},
{
name = top;
position = "{137, 821}";
}
);
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -21, 113}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{145, 507}";
},
{
name = top;
position = "{145, 835}";
}
);
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -22, 110}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{140, 519}";
},
{
name = top;
position = "{140, 895}";
}
);
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -58, 158}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 828}";
}
);
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -58, 131}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 865}";
}
);
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -42, 131}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{165, 519}";
},
{
name = top;
position = "{165, 916}";
}
);
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -32, 153}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
}
);
},
{
glyphname = brevecomb_tildecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 785}";
}
);
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 123}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 843}";
}
);
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 134}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{167, 519}";
},
{
name = top;
position = "{167, 882}";
}
);
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -11, 151}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 330;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 534}";
},
{
name = _top_;
position = "{176, 744}";
},
{
name = top;
position = "{140, 760}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"269 760 LINE",
"260 760 LINE SMOOTH",
"249 760 OFFCURVE",
"246 758 OFFCURVE",
"239 749 CURVE SMOOTH",
"188.757 676.698 LINE",
"197.845 666.987 LINE"
);
}
);
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = _top_;
position = "{154, 717}";
},
{
name = top;
position = "{154, 786}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"344 786 LINE",
"277 786 LINE SMOOTH",
"256 786 OFFCURVE",
"246 779 OFFCURVE",
"237 764 CURVE SMOOTH",
"211.068 721.598 LINE",
"256.386 667.348 LINE"
);
}
);
width = 308;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = _top_;
position = "{308, 808}";
},
{
name = top;
position = "{195, 805}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"469 805 LINE",
"349 805 LINE SMOOTH",
"318 805 OFFCURVE",
"304 796 OFFCURVE",
"294 775 CURVE SMOOTH",
"283 751 LINE",
"355 666 LINE"
);
}
);
width = 390;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 760}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"91 677 LINE",
"41 749 LINE SMOOTH",
"34 758 OFFCURVE",
"31 760 OFFCURVE",
"20 760 CURVE SMOOTH",
"11 760 LINE",
"82 667 LINE"
);
}
);
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 786}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"97 722 LINE",
"71 764 LINE SMOOTH",
"62 779 OFFCURVE",
"52 786 OFFCURVE",
"31 786 CURVE SMOOTH",
"-36 786 LINE",
"52 667 LINE"
);
}
);
width = 308;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = top;
position = "{195, 805}";
}
);
components = (
{
name = circumflexcomb;
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"108 751 LINE",
"96 775 LINE SMOOTH",
"86 796 OFFCURVE",
"72 805 OFFCURVE",
"41 805 CURVE SMOOTH",
"-79 805 LINE",
"36 665 LINE"
);
}
);
width = 390;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 792}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 9, 95}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 847}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 64, 113}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = top;
position = "{195, 887}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 150, 124}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 390;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{140, 490}";
},
{
name = top;
position = "{140, 772}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 104}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 280;
},
{
anchors = (
{
name = _top;
position = "{154, 507}";
},
{
name = top;
position = "{154, 839}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 130}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 308;
},
{
anchors = (
{
name = _top;
position = "{195, 519}";
},
{
name = top;
position = "{195, 880}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 17, 149}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 390;
}
);
},
{
glyphname = NULL;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 0;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 0;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 0;
}
);
note = NULL;
unicode = 0000;
},
{
glyphname = ijacute;
layers = (
{
components = (
{
name = iacute;
},
{
name = jacute;
transform = "{1, 0, 0, 1, 229, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 412;
},
{
components = (
{
name = iacute;
},
{
name = jacute;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 539;
},
{
components = (
{
name = iacute;
},
{
name = jacute;
transform = "{1, 0, 0, 1, 355, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 641;
}
);
},
{
export = 0;
glyphname = SerifBottomLeft;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"3 0 LINE",
"2 12 LINE",
"-75 10 LINE SMOOTH",
"-78 10 OFFCURVE",
"-82 8 OFFCURVE",
"-82 5 CURVE SMOOTH",
"-82 0 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"20 0 LINE",
"6 118 LINE",
"-38 109 LINE SMOOTH",
"-62 104 OFFCURVE",
"-77 94 OFFCURVE",
"-77 71 CURVE SMOOTH",
"-77 0 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"30 0 LINE",
"19 78 LINE",
"-56 62 LINE SMOOTH",
"-67 60 OFFCURVE",
"-72 53 OFFCURVE",
"-72 41 CURVE SMOOTH",
"-72 0 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = SerifBottomRight;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"82 0 LINE",
"82 5 LINE SMOOTH",
"82 8 OFFCURVE",
"78 10 OFFCURVE",
"75 10 CURVE SMOOTH",
"-2 12 LINE",
"-3 0 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"77 0 LINE",
"77 71 LINE SMOOTH",
"77 94 OFFCURVE",
"62 104 OFFCURVE",
"38 109 CURVE SMOOTH",
"-6 118 LINE",
"-20 0 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"72 0 LINE",
"72 41 LINE SMOOTH",
"72 53 OFFCURVE",
"67 60 OFFCURVE",
"56 62 CURVE SMOOTH",
"-19 78 LINE",
"-30 0 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = SerifSpurLeft;
layers = (
{
components = (
{
alignment = -1;
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 0, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 200;
},
{
components = (
{
alignment = -1;
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, -30, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 200;
},
{
components = (
{
alignment = -1;
name = SerifBottomRight;
transform = "{-1, 0, 0, -1, 0, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 200;
}
);
},
{
export = 0;
glyphname = SerifUpLeftLower;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 94 LINE",
"-6 94 LINE SMOOTH",
"-9 94 OFFCURVE",
"-11 90 OFFCURVE",
"-11 87 CURVE SMOOTH",
"-14 -6 LINE",
"-14 -6 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 78 LINE",
"-56 78 LINE SMOOTH",
"-79 78 OFFCURVE",
"-89 63 OFFCURVE",
"-94 39 CURVE SMOOTH",
"-108 -29 LINE",
"-108 -29 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 78 LINE",
"-33 78 LINE SMOOTH",
"-47 78 OFFCURVE",
"-53 71 OFFCURVE",
"-54 62 CURVE SMOOTH",
"-64 -13 LINE",
"-64 -13 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = SerifUpRightLower;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"11 87 LINE SMOOTH",
"11 90 OFFCURVE",
"9 94 OFFCURVE",
"6 94 CURVE SMOOTH",
"0 94 LINE",
"0 0 LINE",
"14 -6 LINE",
"14 -6 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"94 39 LINE SMOOTH",
"89 63 OFFCURVE",
"79 78 OFFCURVE",
"56 78 CURVE SMOOTH",
"0 78 LINE",
"0 0 LINE",
"108 -29 LINE",
"108 -29 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"54 62 LINE SMOOTH",
"53 71 OFFCURVE",
"47 78 OFFCURVE",
"33 78 CURVE SMOOTH",
"0 78 LINE",
"0 0 LINE",
"64 -13 LINE",
"64 -13 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = SerifSpurRight;
layers = (
{
components = (
{
alignment = -1;
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 0, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 200;
},
{
components = (
{
alignment = -1;
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 0, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 200;
},
{
components = (
{
alignment = -1;
name = SerifBottomLeft;
transform = "{-1, 0, 0, -1, 0, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 200;
}
);
},
{
export = 0;
glyphname = SerifUpLeftCaps;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 94 LINE",
"-6 94 LINE SMOOTH",
"-9 94 OFFCURVE",
"-11 90 OFFCURVE",
"-11 87 CURVE SMOOTH",
"-14 -6 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 86 LINE",
"-56 86 LINE SMOOTH",
"-79 86 OFFCURVE",
"-89 71 OFFCURVE",
"-94 47 CURVE SMOOTH",
"-109 -22 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"0 91 LINE",
"-46 91 LINE SMOOTH",
"-57 91 OFFCURVE",
"-65 87 OFFCURVE",
"-67 75 CURVE SMOOTH",
"-82 -25 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = SerifUpRightCaps;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"11 87 LINE SMOOTH",
"11 90 OFFCURVE",
"9 94 OFFCURVE",
"6 94 CURVE SMOOTH",
"0 94 LINE",
"0 0 LINE",
"14 -6 LINE",
"14 -6 LINE"
);
}
);
width = 200;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"94 47 LINE SMOOTH",
"89 71 OFFCURVE",
"79 86 OFFCURVE",
"56 86 CURVE SMOOTH",
"0 86 LINE",
"0 0 LINE",
"109 -22 LINE",
"109 -22 LINE"
);
}
);
width = 200;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"67 75 LINE SMOOTH",
"65 87 OFFCURVE",
"57 91 OFFCURVE",
"46 91 CURVE SMOOTH",
"0 91 LINE",
"0 0 LINE",
"82 -25 LINE",
"82 -25 LINE"
);
}
);
width = 200;
}
);
},
{
export = 0;
glyphname = mkmkm;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"62 0 LINE",
"62 299 LINE SMOOTH",
"62 301 OFFCURVE",
"62 303 OFFCURVE",
"62 306 CURVE",
"203 65 LINE SMOOTH",
"205 63 OFFCURVE",
"206 62 OFFCURVE",
"208 62 CURVE SMOOTH",
"211 62 LINE SMOOTH",
"213 62 OFFCURVE",
"215 63 OFFCURVE",
"216 65 CURVE SMOOTH",
"353 305 LINE SMOOTH",
"352 303 OFFCURVE",
"352 301 OFFCURVE",
"352 299 CURVE SMOOTH",
"352 0 LINE",
"362 0 LINE",
"362 323 LINE",
"356 323 LINE SMOOTH",
"353 323 OFFCURVE",
"353 323 OFFCURVE",
"351 320 CURVE SMOOTH",
"213 80 LINE SMOOTH",
"212 78 OFFCURVE",
"211 76 OFFCURVE",
"210 73 CURVE",
"208 75 OFFCURVE",
"207 78 OFFCURVE",
"206 80 CURVE SMOOTH",
"64 320 LINE SMOOTH",
"62 323 OFFCURVE",
"61 323 OFFCURVE",
"59 323 CURVE SMOOTH",
"53 323 LINE",
"53 0 LINE"
);
},
{
closed = 1;
nodes = (
"56 0 LINE",
"55 10 LINE",
"20 8 LINE SMOOTH",
"18 8 OFFCURVE",
"16 7 OFFCURVE",
"16 5 CURVE SMOOTH",
"16 0 LINE"
);
},
{
closed = 1;
nodes = (
"100 0 LINE",
"100 5 LINE SMOOTH",
"100 7 OFFCURVE",
"98 8 OFFCURVE",
"96 8 CURVE SMOOTH",
"61 10 LINE",
"60 0 LINE"
);
},
{
closed = 1;
nodes = (
"16 323 LINE",
"16 318 LINE SMOOTH",
"16 317 OFFCURVE",
"18 315 OFFCURVE",
"20 315 CURVE SMOOTH",
"55 313 LINE",
"56 323 LINE"
);
},
{
closed = 1;
nodes = (
"355 0 LINE",
"354 10 LINE",
"318 8 LINE SMOOTH",
"316 8 OFFCURVE",
"315 6 OFFCURVE",
"315 5 CURVE SMOOTH",
"315 0 LINE"
);
},
{
closed = 1;
nodes = (
"399 0 LINE",
"399 5 LINE SMOOTH",
"399 7 OFFCURVE",
"397 8 OFFCURVE",
"395 8 CURVE SMOOTH",
"360 10 LINE",
"359 0 LINE"
);
},
{
closed = 1;
nodes = (
"359 323 LINE",
"360 313 LINE",
"395 315 LINE SMOOTH",
"397 315 OFFCURVE",
"399 317 OFFCURVE",
"399 318 CURVE SMOOTH",
"399 323 LINE"
);
}
);
userData = {
RMXScaler = {
height = 46;
weight = -1;
width = 46;
};
};
width = 415;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"96 0 LINE",
"96 222 LINE SMOOTH",
"96 230 OFFCURVE",
"96 240 OFFCURVE",
"94 249 CURVE",
"199 56 LINE SMOOTH",
"204 47 OFFCURVE",
"211 42 OFFCURVE",
"221 42 CURVE SMOOTH",
"230 42 LINE SMOOTH",
"240 42 OFFCURVE",
"247 47 OFFCURVE",
"252 56 CURVE SMOOTH",
"355 249 LINE",
"354 239 OFFCURVE",
"354 230 OFFCURVE",
"354 222 CURVE SMOOTH",
"354 0 LINE",
"409 0 LINE",
"409 340 LINE",
"362 340 LINE SMOOTH",
"349 340 OFFCURVE",
"346 339 OFFCURVE",
"341 330 CURVE SMOOTH",
"240 140 LINE SMOOTH",
"234 128 OFFCURVE",
"230 120 OFFCURVE",
"226 108 CURVE",
"221 119 OFFCURVE",
"217 129 OFFCURVE",
"212 139 CURVE",
"109 330 LINE SMOOTH",
"104 339 OFFCURVE",
"100 340 OFFCURVE",
"88 340 CURVE SMOOTH",
"41 340 LINE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"53 0 LINE",
"47 46 LINE",
"19 40 LINE SMOOTH",
"10 38 OFFCURVE",
"6 34 OFFCURVE",
"6 26 CURVE SMOOTH",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"134 0 LINE",
"134 26 LINE SMOOTH",
"134 34 OFFCURVE",
"129 38 OFFCURVE",
"121 40 CURVE SMOOTH",
"93 46 LINE",
"87 0 LINE"
);
},
{
closed = 1;
nodes = (
"6 340 LINE",
"6 313 LINE SMOOTH",
"6 304 OFFCURVE",
"11 302 OFFCURVE",
"19 300 CURVE SMOOTH",
"47 294 LINE",
"53 340 LINE"
);
},
{
closed = 1;
nodes = (
"363 0 LINE",
"357 46 LINE",
"329 40 LINE SMOOTH",
"321 38 OFFCURVE",
"316 35 OFFCURVE",
"316 26 CURVE SMOOTH",
"316 0 LINE"
);
},
{
closed = 1;
nodes = (
"444 0 LINE",
"444 26 LINE SMOOTH",
"444 34 OFFCURVE",
"440 38 OFFCURVE",
"431 40 CURVE SMOOTH",
"403 46 LINE",
"397 0 LINE"
);
},
{
closed = 1;
nodes = (
"397 340 LINE",
"403 294 LINE",
"431 300 LINE SMOOTH",
"440 302 OFFCURVE",
"444 306 OFFCURVE",
"444 313 CURVE SMOOTH",
"444 340 LINE"
);
}
);
userData = {
RMXScaler = {
height = 47;
weight = -35;
width = 47;
};
};
width = 450;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"128 0 LINE",
"128 173 LINE SMOOTH",
"128 184 OFFCURVE",
"127 197 OFFCURVE",
"126 211 CURVE",
"205 49 LINE SMOOTH",
"212 35 OFFCURVE",
"225 29 OFFCURVE",
"239 29 CURVE SMOOTH",
"252 29 LINE SMOOTH",
"267 29 OFFCURVE",
"280 35 OFFCURVE",
"287 49 CURVE SMOOTH",
"366 210 LINE",
"365 199 OFFCURVE",
"364 186 OFFCURVE",
"364 173 CURVE SMOOTH",
"364 0 LINE",
"452 0 LINE",
"452 353 LINE",
"376 353 LINE SMOOTH",
"359 353 OFFCURVE",
"350 353 OFFCURVE",
"343 338 CURVE SMOOTH",
"267 181 LINE SMOOTH",
"259 164 OFFCURVE",
"255 153 OFFCURVE",
"246 133 CURVE",
"239 149 OFFCURVE",
"230 168 OFFCURVE",
"224 179 CURVE",
"149 338 LINE SMOOTH",
"142 353 OFFCURVE",
"135 353 OFFCURVE",
"117 353 CURVE SMOOTH",
"40 353 LINE",
"40 0 LINE"
);
},
{
closed = 1;
nodes = (
"50 0 LINE",
"42 68 LINE",
"26 64 LINE SMOOTH",
"10 60 OFFCURVE",
"3 54 OFFCURVE",
"3 42 CURVE SMOOTH",
"3 0 LINE"
);
},
{
closed = 1;
nodes = (
"165 0 LINE",
"165 42 LINE SMOOTH",
"165 56 OFFCURVE",
"154 61 OFFCURVE",
"141 64 CURVE SMOOTH",
"126 68 LINE",
"118 0 LINE"
);
},
{
closed = 1;
nodes = (
"3 353 LINE",
"3 311 LINE SMOOTH",
"3 297 OFFCURVE",
"14 292 OFFCURVE",
"26 289 CURVE SMOOTH",
"42 285 LINE",
"50 353 LINE"
);
},
{
closed = 1;
nodes = (
"374 0 LINE",
"366 68 LINE",
"351 64 LINE SMOOTH",
"335 60 OFFCURVE",
"328 54 OFFCURVE",
"328 42 CURVE SMOOTH",
"328 0 LINE"
);
},
{
closed = 1;
nodes = (
"489 0 LINE",
"489 42 LINE SMOOTH",
"489 54 OFFCURVE",
"482 60 OFFCURVE",
"466 64 CURVE SMOOTH",
"451 68 LINE",
"443 0 LINE"
);
},
{
closed = 1;
nodes = (
"443 353 LINE",
"451 285 LINE",
"466 289 LINE SMOOTH",
"482 293 OFFCURVE",
"489 299 OFFCURVE",
"489 311 CURVE SMOOTH",
"489 353 LINE"
);
}
);
userData = {
RMXScaler = {
height = 48;
weight = -70;
width = 48;
};
};
width = 492;
}
);
userData = {
RMXScaler = {
source = M;
};
};
},
{
export = 0;
glyphname = hookleft_caps_part;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"55 502 LINE SMOOTH",
"60 503 OFFCURVE",
"60 507 OFFCURVE",
"58 512 CURVE SMOOTH",
"50 532 OFFCURVE",
"48 551 OFFCURVE",
"48 568 CURVE SMOOTH",
"48 644 OFFCURVE",
"101 690 OFFCURVE",
"208 690 CURVE SMOOTH",
"236 690 LINE",
"236 700 LINE",
"208 700 LINE SMOOTH",
"103 700 OFFCURVE",
"38 654 OFFCURVE",
"38 568 CURVE SMOOTH",
"38 547 OFFCURVE",
"42 525 OFFCURVE",
"51 501 CURVE"
);
}
);
width = 236;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"96 472 LINE SMOOTH",
"113 476 OFFCURVE",
"118 489 OFFCURVE",
"113 504 CURVE SMOOTH",
"109 515 OFFCURVE",
"105 532 OFFCURVE",
"105 549 CURVE SMOOTH",
"105 610 OFFCURVE",
"142 645 OFFCURVE",
"227 645 CURVE SMOOTH",
"241 645 LINE",
"241 717 LINE",
"227 717 LINE SMOOTH",
"102 717 OFFCURVE",
"23 655 OFFCURVE",
"23 550 CURVE SMOOTH",
"23 517 OFFCURVE",
"31 491 OFFCURVE",
"41 460 CURVE"
);
}
);
width = 241;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"131 450 LINE SMOOTH",
"158 456 OFFCURVE",
"165 475 OFFCURVE",
"159 497 CURVE SMOOTH",
"157 502 OFFCURVE",
"154 518 OFFCURVE",
"154 535 CURVE SMOOTH",
"154 588 OFFCURVE",
"179 611 OFFCURVE",
"244 611 CURVE SMOOTH",
"246 611 LINE",
"246 729 LINE",
"244 729 LINE SMOOTH",
"101 729 OFFCURVE",
"11 657 OFFCURVE",
"11 536 CURVE SMOOTH",
"11 495 OFFCURVE",
"18 465 OFFCURVE",
"33 429 CURVE"
);
}
);
width = 246;
}
);
},
{
export = 0;
glyphname = hookrightc_part;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"10 516 LINE SMOOTH",
"10 588 OFFCURVE",
"29 637 OFFCURVE",
"94 637 CURVE SMOOTH",
"104 637 OFFCURVE",
"114 635 OFFCURVE",
"123 633 CURVE SMOOTH",
"136 630 OFFCURVE",
"147 626 OFFCURVE",
"150 626 CURVE SMOOTH",
"151 626 OFFCURVE",
"154 626 OFFCURVE",
"155 630 CURVE SMOOTH",
"156 633 LINE",
"135 642 OFFCURVE",
"115 646 OFFCURVE",
"94 646 CURVE SMOOTH",
"23 646 OFFCURVE",
"0 594 OFFCURVE",
"0 516 CURVE SMOOTH",
"0 452 LINE",
"10 447 LINE"
);
}
);
width = 156;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"77 544 LINE SMOOTH",
"77 595 OFFCURVE",
"92 629 OFFCURVE",
"137 629 CURVE SMOOTH",
"148 629 OFFCURVE",
"157 628 OFFCURVE",
"165 626 CURVE SMOOTH",
"173 623 OFFCURVE",
"179 622 OFFCURVE",
"183 622 CURVE SMOOTH",
"191 622 OFFCURVE",
"200 624 OFFCURVE",
"204 640 CURVE SMOOTH",
"213 678 LINE",
"184 691 OFFCURVE",
"158 696 OFFCURVE",
"131 696 CURVE SMOOTH",
"38 696 OFFCURVE",
"0 628 OFFCURVE",
"0 540 CURVE SMOOTH",
"0 479 LINE",
"77 449 LINE"
);
}
);
width = 213;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"135 565 LINE SMOOTH",
"135 604 OFFCURVE",
"144 623 OFFCURVE",
"173 623 CURVE SMOOTH",
"181 623 OFFCURVE",
"188 622 OFFCURVE",
"194 621 CURVE SMOOTH",
"200 620 OFFCURVE",
"206 619 OFFCURVE",
"212 619 CURVE SMOOTH",
"224 619 OFFCURVE",
"239 623 OFFCURVE",
"245 647 CURVE SMOOTH",
"262 712 LINE",
"226 728 OFFCURVE",
"195 734 OFFCURVE",
"163 734 CURVE SMOOTH",
"52 734 OFFCURVE",
"0 651 OFFCURVE",
"0 558 CURVE SMOOTH",
"0 482 LINE",
"135 450 LINE"
);
}
);
width = 262;
}
);
},
{
export = 0;
glyphname = hookright_lowercase_part;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"12 562 LINE SMOOTH",
"12 653 OFFCURVE",
"53 697 OFFCURVE",
"122 697 CURVE SMOOTH",
"139 697 OFFCURVE",
"153 695 OFFCURVE",
"163 692 CURVE SMOOTH",
"172 689 OFFCURVE",
"178 687 OFFCURVE",
"181 687 CURVE SMOOTH",
"182 687 OFFCURVE",
"185 687 OFFCURVE",
"186 691 CURVE SMOOTH",
"187 694 LINE",
"166 703 OFFCURVE",
"145 707 OFFCURVE",
"122 707 CURVE SMOOTH",
"43 707 OFFCURVE",
"0 655 OFFCURVE",
"0 562 CURVE SMOOTH",
"0 397 LINE",
"12 390 LINE"
);
}
);
width = 187;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"89 552 LINE SMOOTH",
"89 623 OFFCURVE",
"119 657 OFFCURVE",
"175 657 CURVE SMOOTH",
"188 657 OFFCURVE",
"198 656 OFFCURVE",
"205 654 CURVE SMOOTH",
"212 651 OFFCURVE",
"217 650 OFFCURVE",
"221 650 CURVE SMOOTH",
"230 650 OFFCURVE",
"239 652 OFFCURVE",
"242 667 CURVE SMOOTH",
"251 706 LINE",
"222 718 OFFCURVE",
"199 724 OFFCURVE",
"167 724 CURVE SMOOTH",
"54 724 OFFCURVE",
"0 653 OFFCURVE",
"0 542 CURVE SMOOTH",
"0 461 LINE",
"89 434 LINE"
);
}
);
width = 251;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"155 544 LINE SMOOTH",
"155 600 OFFCURVE",
"176 626 OFFCURVE",
"220 626 CURVE SMOOTH",
"225 626 OFFCURVE",
"231 625 OFFCURVE",
"237 624 CURVE SMOOTH",
"244 623 OFFCURVE",
"251 621 OFFCURVE",
"256 621 CURVE SMOOTH",
"270.667 621 OFFCURVE",
"283.333 626 OFFCURVE",
"290 650 CURVE SMOOTH",
"307 715 LINE",
"271 729.667 OFFCURVE",
"243.667 737 OFFCURVE",
"205 737 CURVE SMOOTH",
"63.911 737 OFFCURVE",
"0 652.041 OFFCURVE",
"0 526 CURVE SMOOTH",
"0 494 LINE",
"155 464 LINE"
);
}
);
width = 326;
}
);
},
{
export = 0;
glyphname = hookbtmright_lowercase_part;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"117 -188 OFFCURVE",
"137.667 -184.333 OFFCURVE",
"159 -175 CURVE",
"158 -172 LINE SMOOTH",
"156.667 -168 OFFCURVE",
"154.333 -168 OFFCURVE",
"153 -168 CURVE SMOOTH",
"149 -168 OFFCURVE",
"140 -172 OFFCURVE",
"128 -175 CURVE SMOOTH",
"119 -177 OFFCURVE",
"109 -179 OFFCURVE",
"97 -179 CURVE SMOOTH",
"33 -179 OFFCURVE",
"12 -130 OFFCURVE",
"12 -58 CURVE",
"0 -58 LINE",
"0 -136.513 OFFCURVE",
"27.119 -188 OFFCURVE",
"97 -188 CURVE"
);
}
);
width = 159;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"170 -183 OFFCURVE",
"193 -178 OFFCURVE",
"222 -165 CURVE",
"215 -129 LINE SMOOTH",
"211 -114 OFFCURVE",
"203 -111 OFFCURVE",
"195 -111 CURVE SMOOTH",
"191 -111 OFFCURVE",
"185 -112 OFFCURVE",
"177 -115 CURVE SMOOTH",
"169 -118 OFFCURVE",
"159 -119 OFFCURVE",
"148 -119 CURVE SMOOTH",
"105 -119 OFFCURVE",
"89 -90 OFFCURVE",
"89 -34 CURVE",
"0 -27 LINE",
"0 -113 OFFCURVE",
"44 -183 OFFCURVE",
"137 -183 CURVE"
);
}
);
width = 222;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"217 -179 OFFCURVE",
"232 -174 OFFCURVE",
"277 -158 CURVE",
"265 -97 LINE",
"258 -73 OFFCURVE",
"243 -69 OFFCURVE",
"231 -69 CURVE SMOOTH",
"226 -69 OFFCURVE",
"220 -70 OFFCURVE",
"214 -71 CURVE SMOOTH",
"207 -72 OFFCURVE",
"200 -73 OFFCURVE",
"192 -73 CURVE SMOOTH",
"168 -73 OFFCURVE",
"155 -59 OFFCURVE",
"155 -15 CURVE",
"0 -3 LINE",
"0 -96 OFFCURVE",
"59 -179 OFFCURVE",
"171 -179 CURVE"
);
}
);
width = 277;
}
);
},
{
glyphname = ringacutecomb;
layers = (
{
anchors = (
{
name = _top;
position = "{124, 490}";
},
{
name = top;
position = "{124, 700}";
}
);
components = (
{
alignment = -1;
name = ring;
},
{
alignment = -1;
name = acute;
transform = "{0.98481, -0.17365, 0.17365, 0.98481, 23, 125}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 248;
},
{
anchors = (
{
name = _top;
position = "{140, 507}";
},
{
name = top;
position = "{140, 717}";
}
);
components = (
{
alignment = -1;
name = ring;
},
{
alignment = -1;
name = acute;
transform = "{0.98481, -0.17365, 0.17365, 0.98481, 18, 140}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 281;
},
{
anchors = (
{
name = _top;
position = "{143, 507}";
},
{
name = top;
position = "{143, 717}";
}
);
components = (
{
alignment = -1;
name = ring;
},
{
alignment = -1;
name = acute;
transform = "{0.98481, -0.17365, 0.17365, 0.98481, 3, 141}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 287;
}
);
},
{
glyphname = IJacute;
layers = (
{
components = (
{
name = Iacute;
},
{
name = Jacute;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
width = 654;
},
{
components = (
{
name = Iacute;
},
{
name = Jacute;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
width = 732;
},
{
components = (
{
name = Iacute;
},
{
name = Jacute;
transform = "{1, 0, 0, 1, 364, 0}";
}
);
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
width = 824;
}
);
},
{
export = 0;
glyphname = fitalictail;
layers = (
{
layerId = "A1468767-BE48-4A45-9F09-053256197B3B";
paths = (
{
closed = 1;
nodes = (
"63 -187 OFFCURVE",
"131 -173 OFFCURVE",
"131 -82 CURVE SMOOTH",
"131 187 LINE",
"119 187 LINE",
"119 -81 LINE SMOOTH",
"119 -118 OFFCURVE",
"105 -177 OFFCURVE",
"36 -177 CURVE SMOOTH",
"2 -177 OFFCURVE",
"-2 -164 OFFCURVE",
"-6 -171 CURVE SMOOTH",
"-9 -176 LINE",
"0 -181 OFFCURVE",
"15 -187 OFFCURVE",
"33 -187 CURVE SMOOTH"
);
}
);
width = 141;
},
{
layerId = "BF33A826-8254-4501-9165-758AB68FE84B";
paths = (
{
closed = 1;
nodes = (
"139 -182 OFFCURVE",
"198 -140 OFFCURVE",
"198 -31 CURVE SMOOTH",
"198 337 LINE",
"108 337 LINE",
"108 -28 LINE SMOOTH",
"108 -100 OFFCURVE",
"87 -115 OFFCURVE",
"45 -115 CURVE SMOOTH",
"9 -115 OFFCURVE",
"3 -107 OFFCURVE",
"1 -129 CURVE SMOOTH",
"-3 -172 LINE",
"11 -177 OFFCURVE",
"26 -182 OFFCURVE",
"54 -182 CURVE SMOOTH"
);
}
);
width = 208;
},
{
layerId = "2C516476-8145-48E3-8501-3D313ADE77C9";
paths = (
{
closed = 1;
nodes = (
"134 -180 OFFCURVE",
"258 -164 OFFCURVE",
"258 10 CURVE SMOOTH",
"258 312 LINE",
"103 312 LINE",
"103 -1 LINE SMOOTH",
"103 -53 OFFCURVE",
"90 -68 OFFCURVE",
"48 -68 CURVE SMOOTH",
"18 -68 OFFCURVE",
"13 -74 OFFCURVE",
"12 -90 CURVE SMOOTH",
"7 -170 LINE",
"30 -175 OFFCURVE",
"63 -180 OFFCURVE",
"90 -180 CURVE SMOOTH"
);
}
);
width = 268;
}
);
}
);
instances = (
{
interpolationWeight = 27;
instanceInterpolations = {
"A1468767-BE48-4A45-9F09-053256197B3B" = 0.82558;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.17442;
};
name = Thin;
weightClass = Thin;
},
{
interpolationWeight = 44;
instanceInterpolations = {
"A1468767-BE48-4A45-9F09-053256197B3B" = 0.62791;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.37209;
};
name = ExtraLight;
weightClass = ExtraLight;
},
{
interpolationWeight = 70;
instanceInterpolations = {
"A1468767-BE48-4A45-9F09-053256197B3B" = 0.32558;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.67442;
};
name = Light;
weightClass = Light;
},
{
interpolationWeight = 98;
instanceInterpolations = {
"BF33A826-8254-4501-9165-758AB68FE84B" = 1;
};
name = Regular;
},
{
interpolationWeight = 110;
instanceInterpolations = {
"2C516476-8145-48E3-8501-3D313ADE77C9" = 0.16667;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.83333;
};
name = Medium;
weightClass = Medium;
},
{
interpolationWeight = 124;
instanceInterpolations = {
"2C516476-8145-48E3-8501-3D313ADE77C9" = 0.36111;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.63889;
};
name = SemiBold;
weightClass = SemiBold;
},
{
interpolationWeight = 139;
instanceInterpolations = {
"2C516476-8145-48E3-8501-3D313ADE77C9" = 0.56944;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.43056;
};
isBold = 1;
linkStyle = Regular;
name = Bold;
weightClass = Bold;
},
{
interpolationWeight = 155;
instanceInterpolations = {
"2C516476-8145-48E3-8501-3D313ADE77C9" = 0.79167;
"BF33A826-8254-4501-9165-758AB68FE84B" = 0.20833;
};
name = ExtraBold;
weightClass = ExtraBold;
},
{
interpolationWeight = 170;
instanceInterpolations = {
"2C516476-8145-48E3-8501-3D313ADE77C9" = 1;
};
name = Black;
weightClass = Black;
}
);
kerning = {
"A1468767-BE48-4A45-9F09-053256197B3B" = {
"@MMK_L_A" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -20;
"@MMK_R_v" = -100;
t = -20;
};
"@MMK_L_F" = {
"@MMK_R_a" = -40;
"@MMK_R_z" = -20;
};
"@MMK_L_Q" = {
"@MMK_R_x" = -20;
};
"@MMK_L_R" = {
"@MMK_R_V" = -60;
"@MMK_R_Y" = -60;
"@MMK_R_c" = -20;
"@MMK_R_v" = -50;
};
"@MMK_L_V" = {
"@MMK_R_x" = -30;
};
"@MMK_L_b" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -30;
};
"@MMK_L_k" = {
"@MMK_R_V" = -30;
};
"@MMK_L_n" = {
"@MMK_R_V" = -50;
};
"@MMK_L_ordfeminine" = {
"@MMK_R_s" = -40;
};
"@MMK_L_v" = {
"@MMK_R_A" = -100;
"@MMK_R_X" = -50;
};
A = {
C = -10;
G = -10;
J = 20;
O = -10;
OE = -10;
Q = -10;
T = -50;
U = -30;
V = -170;
W = -170;
Y = -60;
asterisk = -80;
at = -10;
backslash = -30;
bullet = -10;
degree = -80;
emdash = -10;
endash = -10;
guillemotleft = -10;
guillemotright = -10;
guilsinglleft = -10;
guilsinglright = -10;
hyphen = -10;
onesuperior = -70;
ordfeminine = -80;
ordmasculine = -80;
periodcentered = -10;
question = -20;
quotedbl = -80;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesingle = -80;
threesuperior = -70;
trademark = -80;
twosuperior = -70;
uni00AD = -10;
v = -100;
y = -80;
};
C = {
bullet = -80;
emdash = -80;
endash = -80;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
periodcentered = -80;
uni00AD = -80;
};
D = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
Delta = {
C = -10;
G = -10;
J = 20;
O = -10;
OE = -10;
Q = -10;
T = -50;
U = -30;
V = -30;
W = -20;
Y = -60;
asterisk = -80;
at = -10;
backslash = -30;
bullet = -10;
degree = -80;
emdash = -10;
endash = -10;
guillemotleft = -10;
guillemotright = -10;
guilsinglleft = -10;
guilsinglright = -10;
hyphen = -10;
onesuperior = -70;
ordfeminine = -80;
ordmasculine = -80;
periodcentered = -10;
question = -20;
quotedbl = -80;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesingle = -80;
threesuperior = -70;
trademark = -80;
twosuperior = -70;
uni00AD = -10;
v = -30;
y = -30;
};
Eth = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
F = {
A = -50;
AE = -50;
Delta = -50;
J = -110;
ampersand = -50;
c = -40;
colon = -30;
comma = -90;
d = -40;
e = -40;
eth = -40;
m = -30;
mu = -30;
n = -30;
o = -40;
oe = -40;
p = -30;
period = -90;
q = -40;
question = 15;
quotedblbase = -90;
quotesinglbase = -90;
r = -30;
semicolon = -30;
slash = -50;
u = -30;
};
J = {
A = -90;
AE = -30;
Delta = -30;
ampersand = -30;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -30;
};
K = {
C = -15;
G = -15;
O = -15;
OE = -15;
Q = -15;
at = -15;
bullet = -25;
c = -10;
d = -10;
e = -10;
emdash = -25;
endash = -25;
eth = -10;
f = -20;
guillemotleft = -25;
guillemotright = -25;
guilsinglleft = -25;
guilsinglright = -25;
hyphen = -25;
o = -10;
oe = -10;
periodcentered = -25;
q = -10;
t = -30;
uni00AD = -25;
v = -25;
w = -30;
y = -25;
};
L = {
C = -40;
G = -40;
O = -40;
OE = -40;
Q = -40;
T = -80;
V = -80;
W = -60;
Y = -90;
asterisk = -150;
at = -40;
backslash = -80;
bullet = -120;
c = -15;
comma = 25;
d = -15;
degree = -150;
e = -15;
emdash = -120;
endash = -120;
eth = -15;
guillemotleft = -120;
guillemotright = -120;
guilsinglleft = -120;
guilsinglright = -120;
hyphen = -120;
o = -15;
oe = -15;
onesuperior = -90;
ordfeminine = -150;
ordmasculine = -150;
period = 25;
periodcentered = -120;
q = -15;
question = -25;
quotedbl = -150;
quotedblbase = 25;
quotedblleft = -150;
quotedblright = -150;
quoteleft = -150;
quoteright = -150;
quotesinglbase = 25;
quotesingle = -150;
threesuperior = -90;
trademark = -150;
twosuperior = -90;
uni00AD = -120;
v = -40;
w = -40;
y = -40;
};
Lslash = {
V = -70;
W = -50;
Y = -60;
asterisk = -70;
backslash = -70;
bullet = -80;
degree = -70;
emdash = -80;
endash = -80;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
onesuperior = -60;
ordfeminine = -70;
ordmasculine = -70;
periodcentered = -80;
quotedbl = -70;
quotedblleft = -70;
quotedblright = -70;
quoteleft = -70;
quoteright = -70;
quotesingle = -70;
threesuperior = -60;
trademark = -70;
twosuperior = -60;
uni00AD = -80;
v = -25;
y = -25;
};
O = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -40;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
P = {
A = -50;
AE = -90;
Delta = -50;
J = -80;
a = -25;
ae = -25;
ampersand = -50;
c = -15;
comma = -105;
d = -15;
e = -15;
eth = -15;
o = -15;
oe = -15;
period = -105;
q = -15;
quotedblbase = -105;
quotesinglbase = -105;
slash = -50;
};
Q = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
R = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
T = -20;
U = -10;
at = -20;
};
T = {
A = -50;
AE = -50;
C = -70;
Delta = -50;
G = -70;
J = -100;
O = -70;
OE = -70;
Q = -70;
a = -30;
ae = -130;
ampersand = -50;
at = -70;
bullet = -90;
c = -110;
colon = -80;
comma = -90;
d = -110;
e = -30;
emdash = -90;
endash = -90;
eth = -110;
g = -100;
guillemotleft = -90;
guillemotright = -90;
guilsinglleft = -90;
guilsinglright = -90;
hyphen = -90;
m = -80;
mu = -80;
n = -20;
o = -30;
oe = -110;
p = -20;
period = -90;
periodcentered = -90;
q = -110;
quotedblbase = -90;
quotesinglbase = -90;
s = -30;
semicolon = -50;
slash = -50;
u = 0;
uni00AD = -90;
v = -90;
w = -20;
x = -80;
y = -20;
z = -60;
};
Thorn = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
U = {
A = -30;
AE = -30;
Delta = -30;
ampersand = -30;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -30;
};
Uhorn = {
"@MMK_R_A" = -80;
};
V = {
A = -150;
AE = -150;
C = -20;
Delta = -30;
G = -20;
J = -70;
O = -20;
OE = -20;
Q = -20;
a = -70;
ae = -50;
ampersand = -30;
asterisk = 30;
at = -20;
bullet = -50;
c = -50;
colon = -30;
comma = -90;
d = -50;
degree = 30;
e = -50;
emdash = -50;
endash = -50;
eth = -50;
f = -15;
g = -65;
guillemotleft = -50;
guillemotright = -50;
guilsinglleft = -50;
guilsinglright = -50;
hyphen = -50;
m = -30;
mu = -30;
n = -30;
o = -80;
oe = -50;
onesuperior = 40;
ordfeminine = 30;
ordmasculine = 30;
p = -30;
period = -90;
periodcentered = -50;
q = -50;
question = 35;
quotedbl = 30;
quotedblbase = -90;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
quotesinglbase = -90;
quotesingle = 30;
r = -30;
s = -50;
semicolon = -30;
slash = -100;
t = -15;
threesuperior = 40;
trademark = 30;
twosuperior = 40;
u = -30;
uni00AD = -50;
v = -10;
x = -10;
y = -10;
z = -30;
};
W = {
A = -170;
AE = -150;
Delta = -20;
J = -40;
a = -30;
ae = -30;
ampersand = -20;
asterisk = 30;
bullet = -10;
c = -5;
comma = -50;
d = -5;
degree = 30;
e = -80;
emdash = -10;
endash = -10;
eth = -5;
g = -50;
guillemotleft = -10;
guillemotright = -10;
guilsinglleft = -10;
guilsinglright = -10;
hyphen = -10;
o = -80;
oe = -5;
onesuperior = 30;
ordfeminine = 30;
ordmasculine = 30;
period = -50;
periodcentered = -10;
q = -5;
question = 20;
quotedbl = 30;
quotedblbase = -50;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
quotesinglbase = -50;
quotesingle = 30;
s = -15;
slash = -100;
threesuperior = 30;
trademark = 30;
twosuperior = 30;
uni00AD = -10;
};
X = {
C = -15;
G = -15;
O = -40;
OE = -15;
Q = -15;
at = -15;
bullet = -25;
c = -10;
d = -10;
e = -10;
emdash = -25;
endash = -25;
eth = -10;
f = -20;
guillemotleft = -25;
guillemotright = -25;
guilsinglleft = -25;
guilsinglright = -25;
hyphen = -25;
o = -10;
oe = -10;
periodcentered = -25;
q = -10;
t = -30;
uni00AD = -25;
v = -50;
w = -30;
y = -25;
};
Y = {
A = -60;
AE = -100;
C = -40;
Delta = -60;
G = -40;
J = -100;
O = -40;
OE = -40;
Q = -40;
a = -45;
ae = -45;
ampersand = -60;
asterisk = 10;
at = -40;
bullet = -80;
c = -80;
colon = -50;
comma = -60;
d = -80;
degree = 10;
e = -80;
emdash = -80;
endash = -80;
eth = -80;
g = -80;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
m = -50;
mu = -50;
n = -50;
o = -80;
oe = -80;
onesuperior = 20;
ordfeminine = 10;
ordmasculine = 10;
p = -50;
period = -60;
periodcentered = -80;
q = -80;
question = 20;
quotedbl = 10;
quotedblbase = -60;
quotedblleft = 10;
quotedblright = 10;
quoteleft = 10;
quoteright = 10;
quotesinglbase = -60;
quotesingle = 10;
r = -50;
s = -50;
semicolon = -50;
slash = -60;
threesuperior = 20;
trademark = 10;
twosuperior = 20;
u = -50;
uni00AD = -80;
v = -50;
w = -40;
x = -60;
y = -50;
};
Z = {
C = -40;
G = -40;
O = -40;
OE = -40;
Q = -40;
at = -40;
bullet = -40;
c = -30;
d = -30;
e = -30;
emdash = -40;
endash = -40;
eth = -30;
guillemotleft = -40;
guillemotright = -40;
guilsinglleft = -40;
guilsinglright = -40;
hyphen = -40;
o = -30;
oe = -30;
periodcentered = -40;
q = -30;
question = 20;
s = -25;
uni00AD = -40;
v = -25;
y = -25;
};
a = {
asterisk = -30;
degree = -30;
onesuperior = -30;
ordfeminine = -30;
ordmasculine = -30;
quotedbl = -30;
quotedblleft = -30;
quotedblright = -30;
quoteleft = -30;
quoteright = -30;
quotesingle = -30;
threesuperior = -30;
trademark = -30;
twosuperior = -30;
v = -10;
w = -5;
y = -10;
};
ae = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
asterisk = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
at = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
b = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
backslash = {
C = -10;
G = -10;
J = 20;
O = -10;
OE = -10;
Q = -10;
T = -50;
U = -30;
V = -30;
W = -20;
Y = -60;
asterisk = -80;
at = -10;
backslash = -30;
bullet = -10;
degree = -80;
emdash = -10;
endash = -10;
guillemotleft = -10;
guillemotright = -10;
guilsinglleft = -10;
guilsinglright = -10;
hyphen = -10;
onesuperior = -70;
ordfeminine = -80;
ordmasculine = -80;
periodcentered = -10;
question = -20;
quotedbl = -80;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesingle = -80;
threesuperior = -70;
trademark = -80;
twosuperior = -70;
uni00AD = -10;
v = -30;
y = -30;
};
braceleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -10;
d = -10;
e = -10;
eth = -10;
o = -10;
oe = -10;
q = -10;
};
bracketleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -10;
d = -10;
e = -10;
eth = -10;
o = -10;
oe = -10;
q = -10;
};
bullet = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
comma = {
C = -30;
G = -30;
O = -30;
OE = -30;
Q = -30;
T = -90;
V = -90;
W = -50;
Y = -60;
asterisk = -130;
at = -30;
backslash = -90;
bullet = -70;
degree = -130;
emdash = -70;
endash = -70;
guillemotleft = -70;
guillemotright = -70;
guilsinglleft = -70;
guilsinglright = -70;
hyphen = -70;
ordfeminine = -130;
ordmasculine = -130;
periodcentered = -70;
quotedbl = -130;
quotedblleft = -130;
quotedblright = -130;
quoteleft = -130;
quoteright = -130;
quotesingle = -130;
trademark = -130;
uni00AD = -70;
v = -60;
w = -20;
y = -60;
};
degree = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
e = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
emdash = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
endash = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
f = {
asterisk = 40;
comma = -70;
degree = 40;
onesuperior = 50;
ordfeminine = 40;
ordmasculine = 40;
period = -70;
quotedbl = 40;
quotedblbase = -70;
quotedblleft = 40;
quotedblright = 40;
quoteleft = 40;
quoteright = 40;
quotesinglbase = -70;
quotesingle = 40;
threesuperior = 50;
trademark = 40;
twosuperior = 50;
};
guillemotleft = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
guillemotright = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
guilsinglleft = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
guilsinglright = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
h = {
asterisk = -30;
degree = -30;
onesuperior = -30;
ordfeminine = -30;
ordmasculine = -30;
quotedbl = -30;
quotedblleft = -30;
quotedblright = -30;
quoteleft = -30;
quoteright = -30;
quotesingle = -30;
threesuperior = -30;
trademark = -30;
twosuperior = -30;
v = -10;
w = -5;
y = -10;
};
hyphen = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
k = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
m = {
asterisk = -30;
degree = -30;
onesuperior = -30;
ordfeminine = -30;
ordmasculine = -30;
quotedbl = -30;
quotedblleft = -30;
quotedblright = -30;
quoteleft = -30;
quoteright = -30;
quotesingle = -30;
threesuperior = -30;
trademark = -30;
twosuperior = -30;
v = -10;
w = -5;
y = -10;
};
n = {
asterisk = -30;
degree = -30;
onesuperior = -30;
ordfeminine = -30;
ordmasculine = -30;
quotedbl = -30;
quotedblleft = -30;
quotedblright = -30;
quoteleft = -30;
quoteright = -30;
quotesingle = -30;
threesuperior = -30;
trademark = -30;
twosuperior = -30;
v = -10;
w = -5;
y = -10;
};
o = {
V = -50;
W = -80;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
oe = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
onesuperior = {
A = -70;
AE = -70;
Delta = -70;
V = 40;
W = 40;
Y = 20;
ampersand = -70;
backslash = 40;
slash = -70;
};
ordfeminine = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
ordmasculine = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
p = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
parenleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -10;
d = -10;
e = -10;
eth = -10;
o = -10;
oe = -10;
q = -10;
};
period = {
C = -30;
G = -30;
O = -30;
OE = -30;
Q = -30;
T = -90;
V = -90;
W = -50;
Y = -60;
asterisk = -130;
at = -30;
backslash = -90;
bullet = -70;
degree = -130;
emdash = -70;
endash = -70;
guillemotleft = -70;
guillemotright = -70;
guilsinglleft = -70;
guilsinglright = -70;
hyphen = -70;
ordfeminine = -130;
ordmasculine = -130;
periodcentered = -70;
quotedbl = -130;
quotedblleft = -130;
quotedblright = -130;
quoteleft = -130;
quoteright = -130;
quotesingle = -130;
trademark = -130;
uni00AD = -70;
v = -60;
w = -20;
y = -60;
};
periodcentered = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
questiondown = {
"@MMK_R_j" = 30;
};
quotedbl = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
quotedblbase = {
C = -30;
G = -30;
O = -30;
OE = -30;
Q = -30;
T = -90;
V = -90;
W = -50;
Y = -60;
asterisk = -130;
at = -30;
backslash = -90;
bullet = -70;
degree = -130;
emdash = -70;
endash = -70;
guillemotleft = -70;
guillemotright = -70;
guilsinglleft = -70;
guilsinglright = -70;
hyphen = -70;
ordfeminine = -130;
ordmasculine = -130;
periodcentered = -70;
quotedbl = -130;
quotedblleft = -130;
quotedblright = -130;
quoteleft = -130;
quoteright = -130;
quotesingle = -130;
trademark = -130;
uni00AD = -70;
v = -60;
w = -20;
y = -60;
};
quotedblleft = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
quotedblright = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
quoteleft = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
quoteright = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
quotesinglbase = {
C = -30;
G = -30;
O = -30;
OE = -30;
Q = -30;
T = -90;
V = -90;
W = -50;
Y = -60;
asterisk = -130;
at = -30;
backslash = -90;
bullet = -70;
degree = -130;
emdash = -70;
endash = -70;
guillemotleft = -70;
guillemotright = -70;
guilsinglleft = -70;
guilsinglright = -70;
hyphen = -70;
ordfeminine = -130;
ordmasculine = -130;
periodcentered = -70;
quotedbl = -130;
quotedblleft = -130;
quotedblright = -130;
quoteleft = -130;
quoteright = -130;
quotesingle = -130;
trademark = -130;
uni00AD = -70;
v = -60;
w = -20;
y = -60;
};
quotesingle = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
r = {
a = -30;
ae = -30;
comma = -60;
period = -60;
quotedblbase = -60;
quotesinglbase = -60;
};
registered = {
A = -10;
AE = -10;
Delta = -10;
T = -70;
V = -20;
X = -15;
Y = -40;
Z = -40;
ampersand = -10;
asterisk = -25;
backslash = -20;
braceright = -20;
bracketright = -20;
comma = -30;
degree = -25;
ordfeminine = -25;
ordmasculine = -25;
parenright = -20;
period = -30;
quotedbl = -25;
quotedblbase = -30;
quotedblleft = -25;
quotedblright = -25;
quoteleft = -25;
quoteright = -25;
quotesinglbase = -30;
quotesingle = -25;
slash = -10;
trademark = -25;
};
slash = {
A = -30;
AE = -30;
C = -20;
Delta = -30;
G = -20;
J = -70;
O = -20;
OE = -20;
Q = -20;
a = -50;
ae = -50;
ampersand = -30;
asterisk = 30;
at = -20;
bullet = -50;
c = -50;
colon = -30;
comma = -90;
d = -50;
degree = 30;
e = -50;
emdash = -50;
endash = -50;
eth = -50;
f = -15;
g = -65;
guillemotleft = -50;
guillemotright = -50;
guilsinglleft = -50;
guilsinglright = -50;
hyphen = -50;
m = -30;
mu = -30;
n = -30;
o = -50;
oe = -50;
onesuperior = 40;
ordfeminine = 30;
ordmasculine = 30;
p = -30;
period = -90;
periodcentered = -50;
q = -50;
question = 35;
quotedbl = 30;
quotedblbase = -90;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
quotesinglbase = -90;
quotesingle = 30;
r = -30;
s = -50;
semicolon = -30;
slash = -30;
t = -15;
threesuperior = 40;
trademark = 30;
twosuperior = 40;
u = -30;
uni00AD = -50;
v = -10;
x = -10;
y = -10;
z = -30;
};
thorn = {
V = -50;
W = -5;
asterisk = -40;
backslash = -50;
braceright = -10;
bracketright = -10;
degree = -40;
ordfeminine = -40;
ordmasculine = -40;
parenright = -10;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
trademark = -40;
v = -5;
x = -30;
y = -5;
};
threesuperior = {
A = -70;
AE = -70;
Delta = -70;
V = 40;
W = 40;
Y = 20;
ampersand = -70;
backslash = 40;
slash = -70;
};
trademark = {
A = -80;
AE = -80;
C = -25;
Delta = -80;
G = -25;
O = -25;
OE = -25;
Q = -25;
V = 30;
W = 30;
Y = 10;
a = -30;
ae = -30;
ampersand = -80;
at = -25;
backslash = 30;
bullet = -100;
c = -40;
comma = -130;
d = -40;
e = -40;
emdash = -100;
endash = -100;
eth = -40;
guillemotleft = -100;
guillemotright = -100;
guilsinglleft = -100;
guilsinglright = -100;
hyphen = -100;
o = -40;
oe = -40;
period = -130;
periodcentered = -100;
q = -40;
quotedblbase = -130;
quotesinglbase = -130;
slash = -80;
uni00AD = -100;
};
twosuperior = {
A = -70;
AE = -70;
Delta = -70;
V = 40;
W = 40;
Y = 20;
ampersand = -70;
backslash = 40;
slash = -70;
};
uni00AD = {
A = -10;
AE = -10;
Delta = -10;
T = -90;
V = -50;
W = -10;
X = -25;
Y = -80;
Z = -20;
ampersand = -10;
asterisk = -100;
backslash = -50;
comma = -70;
degree = -100;
ordfeminine = -100;
ordmasculine = -100;
period = -70;
quotedbl = -100;
quotedblbase = -70;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesinglbase = -70;
quotesingle = -100;
slash = -10;
trademark = -100;
};
v = {
A = -100;
AE = -30;
Delta = -30;
ampersand = -30;
c = -5;
comma = -60;
d = -5;
e = -5;
eth = -5;
o = -5;
oe = -5;
period = -60;
q = -5;
quotedblbase = -60;
quotesinglbase = -60;
slash = -30;
};
w = {
comma = -20;
period = -20;
quotedblbase = -20;
quotesinglbase = -20;
};
x = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
y = {
A = -100;
AE = -30;
Delta = -30;
ampersand = -30;
c = -5;
comma = -60;
d = -5;
e = -5;
eth = -5;
o = -5;
oe = -5;
period = -60;
q = -5;
quotedblbase = -60;
quotesinglbase = -60;
slash = -30;
};
};
"BF33A826-8254-4501-9165-758AB68FE84B" = {
"@MMK_L_A" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -20;
"@MMK_R_v" = -100;
t = -20;
};
"@MMK_L_F" = {
"@MMK_R_a" = -40;
"@MMK_R_z" = -20;
};
"@MMK_L_Q" = {
"@MMK_R_x" = -20;
};
"@MMK_L_R" = {
"@MMK_R_V" = -60;
"@MMK_R_Y" = -60;
"@MMK_R_c" = -20;
"@MMK_R_v" = -30;
};
"@MMK_L_V" = {
"@MMK_R_c" = -16;
"@MMK_R_x" = -30;
};
"@MMK_L_b" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -30;
};
"@MMK_L_k" = {
"@MMK_R_V" = -30;
};
"@MMK_L_n" = {
"@MMK_R_V" = -50;
};
"@MMK_L_ordfeminine" = {
"@MMK_R_s" = -40;
};
"@MMK_L_v" = {
"@MMK_R_A" = -100;
"@MMK_R_X" = -50;
};
A = {
C = -21;
G = -21;
J = 25;
O = -21;
OE = -21;
Q = -21;
T = -66;
U = -28;
V = -170;
W = -170;
Y = -82;
asterisk = -91;
at = -21;
backslash = -68;
bullet = -26;
degree = -91;
emdash = -26;
endash = -26;
guillemotleft = -26;
guillemotright = -26;
guilsinglleft = -26;
guilsinglright = -26;
hyphen = -26;
onesuperior = -92;
ordfeminine = -91;
ordmasculine = -91;
periodcentered = -26;
question = -28;
quotedbl = -91;
quotedblleft = -91;
quotedblright = -91;
quoteleft = -91;
quoteright = -91;
quotesingle = -91;
threesuperior = -92;
trademark = -91;
twosuperior = -92;
uni00AD = -26;
v = -100;
y = -80;
};
C = {
bullet = -75;
emdash = -75;
endash = -75;
guillemotleft = -75;
guillemotright = -75;
guilsinglleft = -75;
guilsinglright = -75;
hyphen = -75;
periodcentered = -75;
uni00AD = -75;
};
D = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
Delta = {
C = -21;
G = -21;
J = 25;
O = -21;
OE = -21;
Q = -21;
T = -66;
U = -28;
V = -68;
W = -42;
Y = -82;
asterisk = -91;
at = -21;
backslash = -68;
bullet = -26;
degree = -91;
emdash = -26;
endash = -26;
guillemotleft = -26;
guillemotright = -26;
guilsinglleft = -26;
guilsinglright = -26;
hyphen = -26;
onesuperior = -92;
ordfeminine = -91;
ordmasculine = -91;
periodcentered = -26;
question = -28;
quotedbl = -91;
quotedblleft = -91;
quotedblright = -91;
quoteleft = -91;
quoteright = -91;
quotesingle = -91;
threesuperior = -92;
trademark = -91;
twosuperior = -92;
uni00AD = -26;
v = -41;
y = -41;
};
Eth = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
F = {
A = -66;
AE = -66;
Delta = -66;
J = -99;
ampersand = -66;
c = -35;
colon = -30;
comma = -90;
d = -35;
e = -35;
eth = -35;
m = -30;
mu = -30;
n = -30;
o = -35;
oe = -35;
p = -30;
period = -90;
q = -35;
question = 15;
quotedblbase = -90;
quotesinglbase = -90;
r = -30;
semicolon = -30;
slash = -66;
u = -30;
};
J = {
A = -90;
AE = -28;
Delta = -28;
ampersand = -28;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -28;
};
K = {
C = -15;
G = -15;
O = -15;
OE = -15;
Q = -15;
at = -15;
bullet = -31;
c = -18;
d = -18;
e = -18;
emdash = -31;
endash = -31;
eth = -18;
f = -26;
guillemotleft = -31;
guillemotright = -31;
guilsinglleft = -31;
guilsinglright = -31;
hyphen = -31;
o = -18;
oe = -18;
periodcentered = -31;
q = -18;
t = -41;
uni00AD = -31;
v = -33;
w = -28;
y = -33;
};
L = {
C = -40;
G = -40;
O = -40;
OE = -40;
Q = -40;
T = -86;
V = -91;
W = -76;
Y = -106;
asterisk = -145;
at = -40;
backslash = -91;
bullet = -99;
c = -18;
comma = 27;
d = -18;
degree = -145;
e = -18;
emdash = -99;
endash = -99;
eth = -18;
guillemotleft = -99;
guillemotright = -99;
guilsinglleft = -99;
guilsinglright = -99;
hyphen = -99;
o = -18;
oe = -18;
onesuperior = -101;
ordfeminine = -145;
ordmasculine = -145;
period = 27;
periodcentered = -99;
q = -18;
question = -25;
quotedbl = -145;
quotedblbase = 27;
quotedblleft = -145;
quotedblright = -145;
quoteleft = -145;
quoteright = -145;
quotesinglbase = 27;
quotesingle = -145;
threesuperior = -101;
trademark = -145;
twosuperior = -101;
uni00AD = -99;
v = -54;
w = -40;
y = -54;
};
Lslash = {
V = -81;
W = -61;
Y = -76;
asterisk = -70;
backslash = -81;
bullet = -64;
degree = -70;
emdash = -64;
endash = -64;
guillemotleft = -64;
guillemotright = -64;
guilsinglleft = -64;
guilsinglright = -64;
hyphen = -64;
onesuperior = -66;
ordfeminine = -70;
ordmasculine = -70;
periodcentered = -64;
quotedbl = -70;
quotedblleft = -70;
quotedblright = -70;
quoteleft = -70;
quoteright = -70;
quotesingle = -70;
threesuperior = -66;
trademark = -70;
twosuperior = -66;
uni00AD = -64;
v = -28;
y = -28;
};
O = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -40;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
P = {
A = -69;
AE = -90;
Delta = -69;
J = -91;
a = -25;
ae = -25;
ampersand = -69;
c = -15;
comma = -124;
d = -15;
e = -15;
eth = -15;
o = -15;
oe = -15;
period = -124;
q = -15;
quotedblbase = -124;
quotesinglbase = -124;
slash = -69;
};
Q = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
R = {
C = -23;
G = -23;
O = -23;
OE = -23;
Q = -23;
T = -26;
U = -21;
at = -23;
};
T = {
A = -66;
AE = -66;
C = -49;
Delta = -66;
G = -49;
J = -100;
O = -49;
OE = -49;
Q = -49;
a = -30;
ae = -125;
ampersand = -66;
at = -49;
bullet = -90;
c = -105;
colon = -80;
comma = -90;
d = -105;
e = -30;
emdash = -90;
endash = -90;
eth = -105;
g = -94;
guillemotleft = -90;
guillemotright = -90;
guilsinglleft = -90;
guilsinglright = -90;
hyphen = -90;
m = -80;
mu = -80;
n = -20;
o = -30;
oe = -105;
p = -20;
period = -90;
periodcentered = -90;
q = -105;
quotedblbase = -90;
quotesinglbase = -90;
r = 0;
s = -30;
semicolon = -50;
slash = -66;
u = 0;
uni00AD = -90;
v = -90;
w = -20;
x = -72;
y = -20;
z = -60;
};
Thorn = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
U = {
A = -28;
AE = -28;
Delta = -28;
ampersand = -28;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -28;
};
Uhorn = {
"@MMK_R_A" = -80;
};
V = {
A = -150;
AE = -150;
C = -26;
Delta = -68;
G = -26;
J = -76;
O = -26;
OE = -26;
Q = -26;
a = -70;
ae = -58;
ampersand = -68;
asterisk = 24;
at = -26;
bullet = -56;
c = -58;
colon = -44;
comma = -96;
d = -58;
degree = 24;
e = -58;
emdash = -56;
endash = -56;
eth = -58;
f = -15;
g = -68;
guillemotleft = -56;
guillemotright = -56;
guilsinglleft = -56;
guilsinglright = -56;
hyphen = -56;
m = -44;
mu = -44;
n = -44;
o = -80;
oe = -58;
onesuperior = 29;
ordfeminine = 24;
ordmasculine = 24;
p = -44;
period = -96;
periodcentered = -56;
q = -58;
question = 24;
quotedbl = 24;
quotedblbase = -96;
quotedblleft = 24;
quotedblright = 24;
quoteleft = 24;
quoteright = 24;
quotesinglbase = -96;
quotesingle = 24;
r = -44;
s = -53;
semicolon = -44;
slash = -100;
t = -21;
threesuperior = 29;
trademark = 24;
twosuperior = 29;
u = -44;
uni00AD = -56;
v = -24;
x = -26;
y = -24;
z = -41;
};
W = {
"@MMK_R_c" = -16;
A = -170;
AE = -150;
Delta = -47;
J = -51;
a = -44;
ae = -44;
ampersand = -47;
asterisk = 24;
bullet = -16;
c = -16;
comma = -61;
d = -16;
degree = 24;
e = -80;
emdash = -16;
endash = -16;
eth = -16;
g = -49;
guillemotleft = -16;
guillemotright = -16;
guilsinglleft = -16;
guilsinglright = -16;
hyphen = -16;
o = -80;
oe = -16;
onesuperior = 24;
ordfeminine = 24;
ordmasculine = 24;
period = -61;
periodcentered = -16;
q = -16;
question = 17;
quotedbl = 24;
quotedblbase = -61;
quotedblleft = 24;
quotedblright = 24;
quoteleft = 24;
quoteright = 24;
quotesinglbase = -61;
quotesingle = 24;
s = -23;
slash = -100;
threesuperior = 24;
trademark = 24;
twosuperior = 24;
uni00AD = -16;
};
X = {
C = -15;
G = -15;
O = -40;
OE = -15;
Q = -15;
at = -15;
bullet = -31;
c = -18;
d = -18;
e = -18;
emdash = -31;
endash = -31;
eth = -18;
f = -26;
guillemotleft = -31;
guillemotright = -31;
guilsinglleft = -31;
guilsinglright = -31;
hyphen = -31;
o = -18;
oe = -18;
periodcentered = -31;
q = -18;
t = -41;
uni00AD = -31;
v = -50;
w = -28;
y = -33;
};
Y = {
A = -82;
AE = -100;
C = -40;
Delta = -82;
G = -40;
J = -100;
O = -40;
OE = -40;
Q = -40;
a = -64;
ae = -64;
ampersand = -82;
asterisk = 15;
at = -40;
bullet = -80;
c = -80;
colon = -61;
comma = -76;
d = -80;
degree = 15;
e = -80;
emdash = -80;
endash = -80;
eth = -80;
g = -86;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
m = -61;
mu = -61;
n = -61;
o = -80;
oe = -80;
onesuperior = 25;
ordfeminine = 15;
ordmasculine = 15;
p = -61;
period = -76;
periodcentered = -80;
q = -80;
question = 17;
quotedbl = 15;
quotedblbase = -76;
quotedblleft = 15;
quotedblright = 15;
quoteleft = 15;
quoteright = 15;
quotesinglbase = -76;
quotesingle = 15;
r = -61;
s = -64;
semicolon = -61;
slash = -82;
threesuperior = 25;
trademark = 15;
twosuperior = 25;
u = -61;
uni00AD = -80;
v = -50;
w = -46;
x = -66;
y = -50;
};
Z = {
C = -29;
G = -29;
O = -29;
OE = -29;
Q = -29;
at = -29;
bullet = -35;
c = -19;
d = -19;
e = -19;
emdash = -35;
endash = -35;
eth = -19;
guillemotleft = -35;
guillemotright = -35;
guilsinglleft = -35;
guilsinglright = -35;
hyphen = -35;
o = -19;
oe = -19;
periodcentered = -35;
q = -19;
question = 17;
s = -14;
uni00AD = -35;
v = -20;
y = -20;
};
a = {
asterisk = -36;
degree = -36;
onesuperior = -36;
ordfeminine = -36;
ordmasculine = -36;
quotedbl = -36;
quotedblleft = -36;
quotedblright = -36;
quoteleft = -36;
quoteright = -36;
quotesingle = -36;
threesuperior = -36;
trademark = -36;
twosuperior = -36;
v = -16;
w = -8;
y = -16;
};
ae = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
asterisk = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
at = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
b = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
backslash = {
C = -21;
G = -21;
J = 25;
O = -21;
OE = -21;
Q = -21;
T = -66;
U = -28;
V = -68;
W = -42;
Y = -82;
asterisk = -91;
at = -21;
backslash = -68;
bullet = -26;
degree = -91;
emdash = -26;
endash = -26;
guillemotleft = -26;
guillemotright = -26;
guilsinglleft = -26;
guilsinglright = -26;
hyphen = -26;
onesuperior = -92;
ordfeminine = -91;
ordmasculine = -91;
periodcentered = -26;
question = -28;
quotedbl = -91;
quotedblleft = -91;
quotedblright = -91;
quoteleft = -91;
quoteright = -91;
quotesingle = -91;
threesuperior = -92;
trademark = -91;
twosuperior = -92;
uni00AD = -26;
v = -41;
y = -41;
};
braceleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -16;
d = -16;
e = -16;
eth = -16;
o = -16;
oe = -16;
q = -16;
};
bracketleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -16;
d = -16;
e = -16;
eth = -16;
o = -16;
oe = -16;
q = -16;
};
bullet = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
comma = {
C = -28;
G = -28;
O = -28;
OE = -28;
Q = -28;
T = -90;
V = -90;
W = -61;
Y = -76;
asterisk = -114;
at = -28;
backslash = -90;
bullet = -68;
degree = -114;
emdash = -68;
endash = -68;
guillemotleft = -68;
guillemotright = -68;
guilsinglleft = -68;
guilsinglright = -68;
hyphen = -68;
ordfeminine = -114;
ordmasculine = -114;
periodcentered = -68;
quotedbl = -114;
quotedblleft = -114;
quotedblright = -114;
quoteleft = -114;
quoteright = -114;
quotesingle = -114;
trademark = -114;
uni00AD = -68;
v = -66;
w = -31;
y = -66;
};
degree = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
e = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
emdash = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
endash = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
f = {
asterisk = 34;
comma = -65;
degree = 34;
onesuperior = 50;
ordfeminine = 34;
ordmasculine = 34;
period = -65;
quotedbl = 34;
quotedblbase = -65;
quotedblleft = 34;
quotedblright = 34;
quoteleft = 34;
quoteright = 34;
quotesinglbase = -65;
quotesingle = 34;
threesuperior = 50;
trademark = 34;
twosuperior = 50;
};
guillemotleft = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
guillemotright = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
guilsinglleft = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
guilsinglright = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
h = {
asterisk = -36;
degree = -36;
onesuperior = -36;
ordfeminine = -36;
ordmasculine = -36;
quotedbl = -36;
quotedblleft = -36;
quotedblright = -36;
quoteleft = -36;
quoteright = -36;
quotesingle = -36;
threesuperior = -36;
trademark = -36;
twosuperior = -36;
v = -16;
w = -8;
y = -16;
};
hyphen = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
k = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
m = {
asterisk = -36;
degree = -36;
onesuperior = -36;
ordfeminine = -36;
ordmasculine = -36;
quotedbl = -36;
quotedblleft = -36;
quotedblright = -36;
quoteleft = -36;
quoteright = -36;
quotesingle = -36;
threesuperior = -36;
trademark = -36;
twosuperior = -36;
v = -16;
w = -8;
y = -16;
};
n = {
asterisk = -36;
degree = -36;
onesuperior = -36;
ordfeminine = -36;
ordmasculine = -36;
quotedbl = -36;
quotedblleft = -36;
quotedblright = -36;
quoteleft = -36;
quoteright = -36;
quotesingle = -36;
threesuperior = -36;
trademark = -36;
twosuperior = -36;
v = -16;
w = -8;
y = -16;
};
o = {
V = -58;
W = -80;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
oe = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
onesuperior = {
A = -92;
AE = -92;
Delta = -92;
V = 29;
W = 29;
Y = 20;
ampersand = -92;
backslash = 29;
slash = -92;
};
ordfeminine = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
ordmasculine = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
p = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
parenleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -16;
d = -16;
e = -16;
eth = -16;
o = -16;
oe = -16;
q = -16;
};
period = {
C = -28;
G = -28;
O = -28;
OE = -28;
Q = -28;
T = -90;
V = -90;
W = -61;
Y = -76;
asterisk = -114;
at = -28;
backslash = -90;
bullet = -68;
degree = -114;
emdash = -68;
endash = -68;
guillemotleft = -68;
guillemotright = -68;
guilsinglleft = -68;
guilsinglright = -68;
hyphen = -68;
ordfeminine = -114;
ordmasculine = -114;
periodcentered = -68;
quotedbl = -114;
quotedblleft = -114;
quotedblright = -114;
quoteleft = -114;
quoteright = -114;
quotesingle = -114;
trademark = -114;
uni00AD = -68;
v = -66;
w = -31;
y = -66;
};
periodcentered = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
questiondown = {
"@MMK_R_j" = 30;
};
quotedbl = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
quotedblbase = {
C = -28;
G = -28;
O = -28;
OE = -28;
Q = -28;
T = -90;
V = -90;
W = -61;
Y = -76;
asterisk = -114;
at = -28;
backslash = -90;
bullet = -68;
degree = -114;
emdash = -68;
endash = -68;
guillemotleft = -68;
guillemotright = -68;
guilsinglleft = -68;
guilsinglright = -68;
hyphen = -68;
ordfeminine = -114;
ordmasculine = -114;
periodcentered = -68;
quotedbl = -114;
quotedblleft = -114;
quotedblright = -114;
quoteleft = -114;
quoteright = -114;
quotesingle = -114;
trademark = -114;
uni00AD = -68;
v = -66;
w = -31;
y = -66;
};
quotedblleft = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
quotedblright = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
quoteleft = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
quoteright = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
quotesinglbase = {
C = -28;
G = -28;
O = -28;
OE = -28;
Q = -28;
T = -90;
V = -90;
W = -61;
Y = -76;
asterisk = -114;
at = -28;
backslash = -90;
bullet = -68;
degree = -114;
emdash = -68;
endash = -68;
guillemotleft = -68;
guillemotright = -68;
guilsinglleft = -68;
guilsinglright = -68;
hyphen = -68;
ordfeminine = -114;
ordmasculine = -114;
periodcentered = -68;
quotedbl = -114;
quotedblleft = -114;
quotedblright = -114;
quoteleft = -114;
quoteright = -114;
quotesingle = -114;
trademark = -114;
uni00AD = -68;
v = -66;
w = -31;
y = -66;
};
quotesingle = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
r = {
a = -19;
ae = -19;
comma = -66;
period = -66;
quotedblbase = -66;
quotesinglbase = -66;
};
registered = {
A = -21;
AE = -21;
Delta = -21;
T = -49;
V = -26;
X = -15;
Y = -40;
Z = -35;
ampersand = -21;
asterisk = -23;
backslash = -26;
braceright = -20;
bracketright = -20;
comma = -28;
degree = -23;
ordfeminine = -23;
ordmasculine = -23;
parenright = -20;
period = -28;
quotedbl = -23;
quotedblbase = -28;
quotedblleft = -23;
quotedblright = -23;
quoteleft = -23;
quoteright = -23;
quotesinglbase = -28;
quotesingle = -23;
slash = -21;
trademark = -23;
};
slash = {
A = -68;
AE = -68;
C = -26;
Delta = -68;
G = -26;
J = -76;
O = -26;
OE = -26;
Q = -26;
a = -58;
ae = -58;
ampersand = -68;
asterisk = 24;
at = -26;
bullet = -56;
c = -58;
colon = -44;
comma = -96;
d = -58;
degree = 24;
e = -58;
emdash = -56;
endash = -56;
eth = -58;
f = -15;
g = -68;
guillemotleft = -56;
guillemotright = -56;
guilsinglleft = -56;
guilsinglright = -56;
hyphen = -56;
m = -44;
mu = -44;
n = -44;
o = -58;
oe = -58;
onesuperior = 29;
ordfeminine = 24;
ordmasculine = 24;
p = -44;
period = -96;
periodcentered = -56;
q = -58;
question = 24;
quotedbl = 24;
quotedblbase = -96;
quotedblleft = 24;
quotedblright = 24;
quoteleft = 24;
quoteright = 24;
quotesinglbase = -96;
quotesingle = 24;
r = -44;
s = -53;
semicolon = -44;
slash = -68;
t = -21;
threesuperior = 29;
trademark = 24;
twosuperior = 29;
u = -44;
uni00AD = -56;
v = -24;
x = -26;
y = -24;
z = -41;
};
thorn = {
V = -58;
W = -16;
asterisk = -46;
backslash = -58;
braceright = -16;
bracketright = -16;
degree = -46;
ordfeminine = -46;
ordmasculine = -46;
parenright = -16;
quotedbl = -46;
quotedblleft = -46;
quotedblright = -46;
quoteleft = -46;
quoteright = -46;
quotesingle = -46;
trademark = -46;
v = -13;
x = -30;
y = -13;
};
threesuperior = {
A = -92;
AE = -92;
Delta = -92;
V = 29;
W = 29;
Y = 20;
ampersand = -92;
backslash = 29;
slash = -92;
};
trademark = {
A = -91;
AE = -91;
C = -23;
Delta = -91;
G = -23;
O = -23;
OE = -23;
Q = -23;
V = 24;
W = 24;
Y = 15;
a = -32;
ae = -32;
ampersand = -91;
at = -23;
backslash = 24;
bullet = -89;
c = -46;
comma = -114;
d = -46;
e = -46;
emdash = -89;
endash = -89;
eth = -46;
guillemotleft = -89;
guillemotright = -89;
guilsinglleft = -89;
guilsinglright = -89;
hyphen = -89;
o = -46;
oe = -46;
period = -114;
periodcentered = -89;
q = -46;
quotedblbase = -114;
quotesinglbase = -114;
slash = -91;
uni00AD = -89;
};
twosuperior = {
A = -92;
AE = -92;
Delta = -92;
V = 29;
W = 29;
Y = 20;
ampersand = -92;
backslash = 29;
slash = -92;
};
uni00AD = {
A = -26;
AE = -26;
Delta = -26;
T = -90;
V = -56;
W = -16;
X = -31;
Y = -80;
Z = -23;
ampersand = -26;
asterisk = -89;
backslash = -56;
comma = -68;
degree = -89;
ordfeminine = -89;
ordmasculine = -89;
period = -68;
quotedbl = -89;
quotedblbase = -68;
quotedblleft = -89;
quotedblright = -89;
quoteleft = -89;
quoteright = -89;
quotesinglbase = -68;
quotesingle = -89;
slash = -26;
trademark = -89;
};
v = {
A = -100;
AE = -41;
Delta = -41;
ampersand = -41;
c = -13;
comma = -66;
d = -13;
e = -13;
eth = -13;
o = -13;
oe = -13;
period = -66;
q = -13;
quotedblbase = -66;
quotesinglbase = -66;
slash = -41;
};
w = {
comma = -31;
period = -31;
quotedblbase = -31;
quotesinglbase = -31;
};
x = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
y = {
A = -100;
AE = -41;
Delta = -41;
ampersand = -41;
c = -13;
comma = -66;
d = -13;
e = -13;
eth = -13;
o = -13;
oe = -13;
period = -66;
q = -13;
quotedblbase = -66;
quotesinglbase = -66;
slash = -41;
};
};
"2C516476-8145-48E3-8501-3D313ADE77C9" = {
"@MMK_L_A" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -20;
"@MMK_R_v" = -100;
t = -20;
};
"@MMK_L_F" = {
"@MMK_R_a" = -40;
"@MMK_R_z" = -20;
};
"@MMK_L_Q" = {
"@MMK_R_x" = -20;
};
"@MMK_L_R" = {
"@MMK_R_V" = -60;
"@MMK_R_Y" = -60;
"@MMK_R_c" = -20;
"@MMK_R_v" = -30;
};
"@MMK_L_V" = {
"@MMK_R_x" = -30;
};
"@MMK_L_Y" = {
space = 0;
};
"@MMK_L_b" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -30;
};
"@MMK_L_k" = {
"@MMK_R_V" = -30;
};
"@MMK_L_n" = {
"@MMK_R_V" = -50;
};
"@MMK_L_ordfeminine" = {
"@MMK_R_s" = -40;
};
"@MMK_L_v" = {
"@MMK_R_A" = -100;
"@MMK_R_X" = -50;
};
A = {
C = -30;
G = -30;
J = 30;
O = -30;
OE = -30;
Q = -30;
T = -80;
U = -25;
V = -170;
W = -170;
Y = -100;
asterisk = -100;
at = -30;
backslash = -100;
bullet = -40;
degree = -100;
emdash = -40;
endash = -40;
guillemotleft = -40;
guillemotright = -40;
guilsinglleft = -40;
guilsinglright = -40;
hyphen = -40;
onesuperior = -110;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -40;
question = -35;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
threesuperior = -110;
trademark = -100;
twosuperior = -110;
uni00AD = -40;
v = -100;
y = -80;
};
C = {
bullet = -70;
emdash = -70;
endash = -70;
guillemotleft = -70;
guillemotright = -70;
guilsinglleft = -70;
guilsinglright = -70;
hyphen = -70;
periodcentered = -70;
uni00AD = -70;
};
D = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
Delta = {
C = -30;
G = -30;
J = 30;
O = -30;
OE = -30;
Q = -30;
T = -80;
U = -25;
V = -100;
W = -60;
Y = -100;
asterisk = -100;
at = -30;
backslash = -100;
bullet = -40;
degree = -100;
emdash = -40;
endash = -40;
guillemotleft = -40;
guillemotright = -40;
guilsinglleft = -40;
guilsinglright = -40;
hyphen = -40;
onesuperior = -110;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -40;
question = -35;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
threesuperior = -110;
trademark = -100;
twosuperior = -110;
uni00AD = -40;
v = -50;
y = -50;
};
Eth = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
F = {
A = -80;
AE = -80;
Delta = -80;
J = -90;
ampersand = -80;
c = -30;
colon = -30;
comma = -90;
d = -30;
e = -30;
eth = -30;
m = -30;
mu = -30;
n = -30;
o = -30;
oe = -30;
p = -30;
period = -90;
q = -30;
question = 15;
quotedblbase = -90;
quotesinglbase = -90;
r = -30;
semicolon = -30;
slash = -80;
u = -30;
};
J = {
A = -90;
AE = -25;
Delta = -25;
ampersand = -25;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -25;
};
K = {
C = -15;
G = -15;
O = -15;
OE = -15;
Q = -15;
at = -15;
bullet = -35;
c = -25;
d = -25;
e = -25;
emdash = -35;
endash = -35;
eth = -25;
f = -30;
guillemotleft = -35;
guillemotright = -35;
guilsinglleft = -35;
guilsinglright = -35;
hyphen = -35;
o = -25;
oe = -25;
periodcentered = -35;
q = -25;
t = -50;
uni00AD = -35;
v = -40;
w = -25;
y = -40;
};
L = {
C = -40;
G = -40;
O = -40;
OE = -40;
Q = -40;
T = -90;
V = -100;
W = -90;
Y = -120;
asterisk = -140;
at = -40;
backslash = -100;
bullet = -80;
c = -20;
comma = 30;
d = -20;
degree = -140;
e = -20;
emdash = -80;
endash = -80;
eth = -20;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -20;
oe = -20;
onesuperior = -110;
ordfeminine = -140;
ordmasculine = -140;
period = 30;
periodcentered = -80;
q = -20;
question = -25;
quotedbl = -140;
quotedblbase = 30;
quotedblleft = -140;
quotedblright = -140;
quoteleft = -140;
quoteright = -140;
quotesinglbase = 30;
quotesingle = -140;
threesuperior = -110;
trademark = -140;
twosuperior = -110;
uni00AD = -80;
v = -65;
w = -40;
y = -65;
};
Lslash = {
V = -90;
W = -70;
Y = -90;
asterisk = -70;
backslash = -90;
bullet = -50;
degree = -70;
emdash = -50;
endash = -50;
guillemotleft = -50;
guillemotright = -50;
guilsinglleft = -50;
guilsinglright = -50;
hyphen = -50;
onesuperior = -70;
ordfeminine = -70;
ordmasculine = -70;
periodcentered = -50;
quotedbl = -70;
quotedblleft = -70;
quotedblright = -70;
quoteleft = -70;
quoteright = -70;
quotesingle = -70;
threesuperior = -70;
trademark = -70;
twosuperior = -70;
uni00AD = -50;
v = -30;
y = -30;
};
O = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -40;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
P = {
A = -85;
AE = -90;
Delta = -85;
J = -100;
a = -25;
ae = -25;
ampersand = -85;
c = -15;
comma = -140;
d = -15;
e = -15;
eth = -15;
o = -15;
oe = -15;
period = -140;
q = -15;
quotedblbase = -140;
quotesinglbase = -140;
slash = -85;
};
Q = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
R = {
C = -25;
G = -25;
O = -25;
OE = -25;
Q = -25;
T = -30;
U = -30;
at = -25;
};
T = {
A = -80;
AE = -80;
C = -30;
Delta = -80;
G = -30;
J = -100;
O = -30;
OE = -30;
Q = -30;
a = -30;
ae = -120;
ampersand = -80;
at = -30;
bullet = -90;
c = -100;
colon = -80;
comma = -90;
d = -100;
e = -30;
emdash = -90;
endash = -90;
eth = -100;
g = -87.5;
guillemotleft = -90;
guillemotright = -90;
guilsinglleft = -90;
guilsinglright = -90;
hyphen = -90;
m = -80;
mu = -80;
n = -20;
o = -30;
oe = -100;
p = -10;
period = -90;
periodcentered = -90;
q = -100;
quotedblbase = -90;
quotesinglbase = -90;
s = -30;
semicolon = -80;
slash = -80;
u = 0;
uni00AD = -90;
v = -90;
w = 0;
x = -65;
y = 0;
z = -60;
};
Thorn = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
U = {
A = -25;
AE = -25;
Delta = -25;
ampersand = -25;
comma = -25;
period = -25;
quotedblbase = -25;
quotesinglbase = -25;
slash = -25;
};
Uhorn = {
"@MMK_R_A" = -80;
};
V = {
A = -150;
AE = -150;
C = -30;
Delta = -100;
G = -30;
J = -80;
O = -30;
OE = -30;
Q = -30;
a = -70;
ae = -65;
ampersand = -100;
asterisk = 20;
at = -30;
bullet = -60;
c = -65;
colon = -55;
comma = -100;
d = -65;
degree = 20;
e = -65;
emdash = -60;
endash = -60;
eth = -65;
f = -15;
g = -70;
guillemotleft = -60;
guillemotright = -60;
guilsinglleft = -60;
guilsinglright = -60;
hyphen = -60;
m = -55;
mu = -55;
n = -55;
o = -80;
oe = -65;
onesuperior = 20;
ordfeminine = 20;
ordmasculine = 20;
p = -55;
period = -100;
periodcentered = -60;
q = -65;
question = 15;
quotedbl = 20;
quotedblbase = -100;
quotedblleft = 20;
quotedblright = 20;
quoteleft = 20;
quoteright = 20;
quotesinglbase = -100;
quotesingle = 20;
r = -55;
s = -55;
semicolon = -55;
slash = -100;
t = -25;
threesuperior = 20;
trademark = 20;
twosuperior = 20;
u = -55;
uni00AD = -60;
v = -35;
x = -40;
y = -35;
z = -50;
};
W = {
"@MMK_R_c" = -80;
A = -170;
AE = -150;
Delta = -70;
J = -60;
a = -55;
ae = -55;
ampersand = -70;
asterisk = 20;
bullet = -20;
c = -25;
comma = -70;
d = -25;
degree = 20;
emdash = -20;
endash = -20;
eth = -25;
g = -47.5;
guillemotleft = -20;
guillemotright = -20;
guilsinglleft = -20;
guilsinglright = -20;
hyphen = -20;
o = -80;
oe = -25;
onesuperior = 20;
ordfeminine = 20;
ordmasculine = 20;
period = -70;
periodcentered = -20;
q = -25;
question = 15;
quotedbl = 20;
quotedblbase = -70;
quotedblleft = 20;
quotedblright = 20;
quoteleft = 20;
quoteright = 20;
quotesinglbase = -70;
quotesingle = 20;
s = -30;
slash = -100;
threesuperior = 20;
trademark = 20;
twosuperior = 20;
uni00AD = -20;
};
X = {
C = -15;
G = -15;
O = -40;
OE = -15;
Q = -15;
at = -15;
bullet = -35;
c = -25;
d = -25;
e = -25;
emdash = -35;
endash = -35;
eth = -25;
f = -30;
guillemotleft = -35;
guillemotright = -35;
guilsinglleft = -35;
guilsinglright = -35;
hyphen = -35;
o = -25;
oe = -25;
periodcentered = -35;
q = -25;
t = -50;
uni00AD = -35;
v = -50;
w = -25;
y = -40;
};
Y = {
A = -100;
AE = -100;
C = -40;
Delta = -100;
G = -40;
J = -100;
O = -40;
OE = -40;
Q = -40;
a = -80;
ae = -80;
ampersand = -100;
asterisk = 20;
at = -40;
bullet = -80;
c = -80;
colon = -70;
comma = -90;
d = -80;
degree = 20;
e = -80;
emdash = -80;
endash = -80;
eth = -80;
g = -90;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
m = -70;
mu = -70;
n = -70;
o = -80;
oe = -80;
onesuperior = 30;
ordfeminine = 20;
ordmasculine = 20;
p = -70;
period = -90;
periodcentered = -80;
q = -80;
question = 15;
quotedbl = 20;
quotedblbase = -90;
quotedblleft = 20;
quotedblright = 20;
quoteleft = 20;
quoteright = 20;
quotesinglbase = -90;
quotesingle = 20;
r = -70;
s = -75;
semicolon = -70;
slash = -100;
threesuperior = 30;
trademark = 20;
twosuperior = 30;
u = -70;
uni00AD = -80;
v = -50;
w = -50;
x = -70;
y = -50;
};
Z = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
bullet = -30;
c = -10;
d = -10;
e = -10;
emdash = -30;
endash = -30;
eth = -10;
guillemotleft = -30;
guillemotright = -30;
guilsinglleft = -30;
guilsinglright = -30;
hyphen = -30;
o = -10;
oe = -10;
periodcentered = -30;
q = -10;
question = 15;
s = -5;
uni00AD = -30;
v = -15;
y = -15;
};
a = {
asterisk = -40;
degree = -40;
onesuperior = -40;
ordfeminine = -40;
ordmasculine = -40;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
threesuperior = -40;
trademark = -40;
twosuperior = -40;
v = -20;
w = -10;
y = -20;
};
ae = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
asterisk = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
at = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
b = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
backslash = {
C = -30;
G = -30;
J = 30;
O = -30;
OE = -30;
Q = -30;
T = -80;
U = -25;
V = -100;
W = -60;
Y = -100;
asterisk = -100;
at = -30;
backslash = -100;
bullet = -40;
degree = -100;
emdash = -40;
endash = -40;
guillemotleft = -40;
guillemotright = -40;
guilsinglleft = -40;
guilsinglright = -40;
hyphen = -40;
onesuperior = -110;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -40;
question = -35;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
threesuperior = -110;
trademark = -100;
twosuperior = -110;
uni00AD = -40;
v = -50;
y = -50;
};
braceleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -20;
d = -20;
e = -20;
eth = -20;
o = -20;
oe = -20;
q = -20;
};
bracketleft = {
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -20;
d = -20;
e = -20;
eth = -20;
o = -20;
oe = -20;
q = -20;
};
bullet = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
comma = {
C = -25;
G = -25;
O = -25;
OE = -25;
Q = -25;
T = -90;
V = -90;
W = -70;
Y = -90;
asterisk = -100;
at = -25;
backslash = -90;
bullet = -65;
degree = -100;
emdash = -65;
endash = -65;
guillemotleft = -65;
guillemotright = -65;
guilsinglleft = -65;
guilsinglright = -65;
hyphen = -65;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -65;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
trademark = -100;
uni00AD = -65;
v = -70;
w = -40;
y = -70;
};
degree = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
e = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
emdash = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
endash = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
f = {
asterisk = 30;
comma = -60;
degree = 30;
onesuperior = 50;
ordfeminine = 30;
ordmasculine = 30;
period = -60;
quotedbl = 30;
quotedblbase = -60;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
quotesinglbase = -60;
quotesingle = 30;
threesuperior = 50;
trademark = 30;
twosuperior = 50;
};
guillemotleft = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
guillemotright = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
guilsinglleft = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
guilsinglright = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
h = {
asterisk = -40;
degree = -40;
onesuperior = -40;
ordfeminine = -40;
ordmasculine = -40;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
threesuperior = -40;
trademark = -40;
twosuperior = -40;
v = -20;
w = -10;
y = -20;
};
hyphen = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
k = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
m = {
asterisk = -40;
degree = -40;
onesuperior = -40;
ordfeminine = -40;
ordmasculine = -40;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
threesuperior = -40;
trademark = -40;
twosuperior = -40;
v = -20;
w = -10;
y = -20;
};
n = {
asterisk = -40;
degree = -40;
onesuperior = -40;
ordfeminine = -40;
ordmasculine = -40;
quotedbl = -40;
quotedblleft = -40;
quotedblright = -40;
quoteleft = -40;
quoteright = -40;
quotesingle = -40;
threesuperior = -40;
trademark = -40;
twosuperior = -40;
v = -20;
w = -10;
y = -20;
};
o = {
V = -65;
W = -80;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
oe = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
onesuperior = {
A = -110;
AE = -110;
Delta = -110;
V = 20;
W = 20;
Y = 20;
ampersand = -110;
backslash = 20;
slash = -110;
};
ordfeminine = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
ordmasculine = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
p = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
parenleft = {
"@MMK_R_j" = 40;
C = -20;
G = -20;
O = -20;
OE = -20;
Q = -20;
at = -20;
c = -20;
d = -20;
e = -20;
eth = -20;
o = -20;
oe = -20;
q = -20;
};
period = {
C = -25;
G = -25;
O = -25;
OE = -25;
Q = -25;
T = -90;
V = -90;
W = -70;
Y = -90;
asterisk = -100;
at = -25;
backslash = -90;
bullet = -65;
degree = -100;
emdash = -65;
endash = -65;
guillemotleft = -65;
guillemotright = -65;
guilsinglleft = -65;
guilsinglright = -65;
hyphen = -65;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -65;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
trademark = -100;
uni00AD = -65;
v = -70;
w = -40;
y = -70;
};
periodcentered = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
questiondown = {
"@MMK_R_j" = 40;
};
quotedbl = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
quotedblbase = {
C = -25;
G = -25;
O = -25;
OE = -25;
Q = -25;
T = -90;
V = -90;
W = -70;
Y = -90;
asterisk = -100;
at = -25;
backslash = -90;
bullet = -65;
degree = -100;
emdash = -65;
endash = -65;
guillemotleft = -65;
guillemotright = -65;
guilsinglleft = -65;
guilsinglright = -65;
hyphen = -65;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -65;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
trademark = -100;
uni00AD = -65;
v = -70;
w = -40;
y = -70;
};
quotedblleft = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
quotedblright = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
quoteleft = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
quoteright = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
quotesinglbase = {
C = -25;
G = -25;
O = -25;
OE = -25;
Q = -25;
T = -90;
V = -90;
W = -70;
Y = -90;
asterisk = -100;
at = -25;
backslash = -90;
bullet = -65;
degree = -100;
emdash = -65;
endash = -65;
guillemotleft = -65;
guillemotright = -65;
guilsinglleft = -65;
guilsinglright = -65;
hyphen = -65;
ordfeminine = -100;
ordmasculine = -100;
periodcentered = -65;
quotedbl = -100;
quotedblleft = -100;
quotedblright = -100;
quoteleft = -100;
quoteright = -100;
quotesingle = -100;
trademark = -100;
uni00AD = -65;
v = -70;
w = -40;
y = -70;
};
quotesingle = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
r = {
a = -10;
ae = -10;
comma = -70;
period = -70;
quotedblbase = -70;
quotesinglbase = -70;
};
registered = {
A = -30;
AE = -30;
Delta = -30;
T = -30;
V = -30;
X = -15;
Y = -40;
Z = -30;
ampersand = -30;
asterisk = -20;
backslash = -30;
braceright = -20;
bracketright = -20;
comma = -25;
degree = -20;
ordfeminine = -20;
ordmasculine = -20;
parenright = -20;
period = -25;
quotedbl = -20;
quotedblbase = -25;
quotedblleft = -20;
quotedblright = -20;
quoteleft = -20;
quoteright = -20;
quotesinglbase = -25;
quotesingle = -20;
slash = -30;
trademark = -20;
};
slash = {
A = -100;
AE = -100;
C = -30;
Delta = -100;
G = -30;
J = -80;
O = -30;
OE = -30;
Q = -30;
a = -65;
ae = -65;
ampersand = -100;
asterisk = 20;
at = -30;
bullet = -60;
c = -65;
colon = -55;
comma = -100;
d = -65;
degree = 20;
e = -65;
emdash = -60;
endash = -60;
eth = -65;
f = -15;
g = -70;
guillemotleft = -60;
guillemotright = -60;
guilsinglleft = -60;
guilsinglright = -60;
hyphen = -60;
m = -55;
mu = -55;
n = -55;
o = -65;
oe = -65;
onesuperior = 20;
ordfeminine = 20;
ordmasculine = 20;
p = -55;
period = -100;
periodcentered = -60;
q = -65;
question = 15;
quotedbl = 20;
quotedblbase = -100;
quotedblleft = 20;
quotedblright = 20;
quoteleft = 20;
quoteright = 20;
quotesinglbase = -100;
quotesingle = 20;
r = -55;
s = -55;
semicolon = -55;
slash = -100;
t = -25;
threesuperior = 20;
trademark = 20;
twosuperior = 20;
u = -55;
uni00AD = -60;
v = -35;
x = -40;
y = -35;
z = -50;
};
thorn = {
V = -65;
W = -25;
asterisk = -50;
backslash = -65;
braceright = -20;
bracketright = -20;
degree = -50;
ordfeminine = -50;
ordmasculine = -50;
parenright = -20;
quotedbl = -50;
quotedblleft = -50;
quotedblright = -50;
quoteleft = -50;
quoteright = -50;
quotesingle = -50;
trademark = -50;
v = -20;
x = -30;
y = -20;
};
threesuperior = {
A = -110;
AE = -110;
Delta = -110;
V = 20;
W = 20;
Y = 20;
ampersand = -110;
backslash = 20;
slash = -110;
};
trademark = {
A = -100;
AE = -100;
C = -20;
Delta = -100;
G = -20;
O = -20;
OE = -20;
Q = -20;
V = 20;
W = 20;
Y = 20;
a = -34;
ae = -34;
ampersand = -100;
at = -20;
backslash = 20;
bullet = -80;
c = -50;
comma = -100;
d = -50;
e = -50;
emdash = -80;
endash = -80;
eth = -50;
guillemotleft = -80;
guillemotright = -80;
guilsinglleft = -80;
guilsinglright = -80;
hyphen = -80;
o = -50;
oe = -50;
period = -100;
periodcentered = -80;
q = -50;
quotedblbase = -100;
quotesinglbase = -100;
slash = -100;
uni00AD = -80;
};
twosuperior = {
A = -110;
AE = -110;
Delta = -110;
V = 20;
W = 20;
Y = 20;
ampersand = -110;
backslash = 20;
slash = -110;
};
uni00AD = {
A = -40;
AE = -40;
Delta = -40;
T = -90;
V = -60;
W = -20;
X = -35;
Y = -80;
Z = -25;
ampersand = -40;
asterisk = -80;
backslash = -60;
comma = -65;
degree = -80;
ordfeminine = -80;
ordmasculine = -80;
period = -65;
quotedbl = -80;
quotedblbase = -65;
quotedblleft = -80;
quotedblright = -80;
quoteleft = -80;
quoteright = -80;
quotesinglbase = -65;
quotesingle = -80;
slash = -40;
trademark = -80;
};
v = {
A = -100;
AE = -50;
Delta = -50;
ampersand = -50;
c = -20;
comma = -70;
d = -20;
e = -20;
eth = -20;
o = -20;
oe = -20;
period = -70;
q = -20;
quotedblbase = -70;
quotesinglbase = -70;
slash = -50;
};
w = {
comma = -40;
period = -40;
quotedblbase = -40;
quotesinglbase = -40;
};
x = {
c = -30;
d = -30;
e = -30;
eth = -30;
o = -30;
oe = -30;
q = -30;
};
y = {
A = -100;
AE = -50;
Delta = -50;
ampersand = -50;
c = -20;
comma = -70;
d = -20;
e = -20;
eth = -20;
o = -20;
oe = -20;
period = -70;
q = -20;
quotedblbase = -70;
quotesinglbase = -70;
slash = -50;
};
};
};
manufacturer = "Alessio Laiso";
manufacturerURL = "https://alessiolaiso.com/aleo-font";
unitsPerEm = 1000;
versionMajor = 2;
versionMinor = 0;
}
