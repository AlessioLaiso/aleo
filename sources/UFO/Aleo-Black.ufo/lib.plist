<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>com.schriftgestaltung.disablesAutomaticAlignment</key>
	<false/>
	<key>com.schriftgestaltung.disablesLastChange</key>
	<true/>
	<key>com.schriftgestaltung.font.customParameters</key>
	<array>
		<dict>
			<key>name</key>
			<string>Use Line Breaks</string>
			<key>value</key>
			<true/>
		</dict>
		<dict>
			<key>name</key>
			<string>Disable Last Change</string>
			<key>value</key>
			<true/>
		</dict>
		<dict>
			<key>name</key>
			<string>Use Typo Metrics</string>
			<key>value</key>
			<true/>
		</dict>
	</array>
	<key>com.schriftgestaltung.fontMaster.customParameters</key>
	<array>
		<dict>
			<key>name</key>
			<string>Prep Table Assembly</string>
			<key>value</key>
			<string>PUSHW[ ]	/* 2 values pushed */
2048 2048 
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1 
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
SWAP[ ]	/* SwapTopStack */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 1 value pushed */
20 
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
40 
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
2 
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
9 10 3 2 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 4 values pushed */
11 16 3 2 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 4 values pushed */
17 22 3 2 
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 40 6 
RCVT[ ]	/* ReadCVT */
GT[ ]	/* GreaterThan */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
11 16 4 2 
CALL[ ]	/* CallFunction */</string>
		</dict>
		<dict>
			<key>name</key>
			<string>Fpgm Table Assembly</string>
			<key>value</key>
			<string>PUSHB[ ]	/* 1 value pushed */
0 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
32 
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192 
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4 
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 1 value pushed */
4 
RCVT[ ]	/* ReadCVT */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64 
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9 
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
9 
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48 
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192 
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10 
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54 
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
6 
RS[ ]	/* ReadStore */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 1 0 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
22 
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 2 values pushed */
6 4 
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9 
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0 
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
9 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0 
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 0 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
9 2 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
10 2 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1 
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5 
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1 
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5 
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5 
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
10 
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0 
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0 
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7 
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1 
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 4 values pushed */
11 11 1 0 
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
6 2 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
11 
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
18 
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11 
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
10 
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1 
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1 
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13 
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0 
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
12 1 
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15 
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16 
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1 
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0 
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
1 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
16 1 1 
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1 
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1 
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96 
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64 
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
3 32 4 32 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
3 38 4 26 
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8 
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
4 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
8 
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
8 
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5 
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
PUSHB[ ]	/* 1 value pushed */
4 
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0 
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1 
RCVT[ ]	/* ReadCVT */
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8 
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32 
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24 
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25 
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26 
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1 
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1 
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1 
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
15 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17 
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19 
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
5 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 4 
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1 
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96 
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64 
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
3 32 4 32 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
3 38 4 26 
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
4 
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
128 
DIV[ ]	/* Divide */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2 
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0 
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
31 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18 
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19 
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
5 
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5 
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20 
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
24 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
25 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0 
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
20 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
26 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21 
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
24 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
25 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
26 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22 
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
24 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
25 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
26 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23 
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
24 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
25 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
26 
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55 
FDEF[ ]	/* FunctionDefinition */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56 
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55 
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 1 value pushed */
1 
SZP2[ ]	/* SetZonePointer2 */
IUP[0]	/* InterpolateUntPts */
ENDF[ ]	/* EndFunctionDefinition */</string>
		</dict>
		<dict>
			<key>name</key>
			<string>CVT Table</string>
			<key>value</key>
			<array>
				<integer>0</integer>
				<integer>0</integer>
				<integer>0</integer>
				<integer>0</integer>
				<integer>0</integer>
				<integer>320</integer>
				<integer>230</integer>
				<integer>320</integer>
				<integer>320</integer>
				<integer>230</integer>
				<integer>230</integer>
				<integer>1457</integer>
				<integer>0</integer>
				<integer>1497</integer>
				<integer>1037</integer>
				<integer>0</integer>
				<integer>-329</integer>
				<integer>1473</integer>
				<integer>-16</integer>
				<integer>1503</integer>
				<integer>1053</integer>
				<integer>-16</integer>
				<integer>-357</integer>
			</array>
		</dict>
	</array>
	<key>com.schriftgestaltung.fontMaster.userData</key>
	<dict>
		<key>GSCornerRadius</key>
		<integer>40</integer>
	</dict>
	<key>com.schriftgestaltung.fontMasterID</key>
	<string>2C516476-8145-48E3-8501-3D313ADE77C9</string>
	<key>com.schriftgestaltung.glyphOrder</key>
	<false/>
	<key>com.schriftgestaltung.master.name</key>
	<string>Black</string>
	<key>com.schriftgestaltung.useNiceNames</key>
	<false/>
	<key>com.schriftgestaltung.weightValue</key>
	<integer>170</integer>
	<key>com.schriftgestaltung.widthValue</key>
	<integer>5</integer>
	<key>public.glyphOrder</key>
	<array>
		<string>A</string>
		<string>Aacute</string>
		<string>Abreve</string>
		<string>Abreveacute</string>
		<string>Abrevedotbelow</string>
		<string>Abrevegrave</string>
		<string>Abrevehookabove</string>
		<string>Abrevetilde</string>
		<string>Acaron</string>
		<string>Acircumflex</string>
		<string>Acircumflexacute</string>
		<string>Acircumflexdotbelow</string>
		<string>Acircumflexgrave</string>
		<string>Acircumflexhookabove</string>
		<string>Acircumflextilde</string>
		<string>Adieresis</string>
		<string>Adieresismacron</string>
		<string>Adotbelow</string>
		<string>Agrave</string>
		<string>Ahookabove</string>
		<string>Alpha-latin</string>
		<string>Amacron</string>
		<string>Aogonek</string>
		<string>Aring</string>
		<string>Aringacute</string>
		<string>Atilde</string>
		<string>AE</string>
		<string>AEacute</string>
		<string>B</string>
		<string>Bdotbelow</string>
		<string>Bhook</string>
		<string>Bstroke</string>
		<string>C</string>
		<string>Cacute</string>
		<string>Ccaron</string>
		<string>Ccedilla</string>
		<string>Ccircumflex</string>
		<string>Cdotaccent</string>
		<string>Chook</string>
		<string>D</string>
		<string>Dafrican</string>
		<string>Eth</string>
		<string>Dcaron</string>
		<string>Dcircumflexbelow</string>
		<string>Dcroat</string>
		<string>Ddotbelow</string>
		<string>Dhook</string>
		<string>Dlinebelow</string>
		<string>E</string>
		<string>Eacute</string>
		<string>Ebreve</string>
		<string>Ecaron</string>
		<string>Ecedilla</string>
		<string>Ecircumflex</string>
		<string>Ecircumflexacute</string>
		<string>Ecircumflexdotbelow</string>
		<string>Ecircumflexgrave</string>
		<string>Ecircumflexhookabove</string>
		<string>Ecircumflextilde</string>
		<string>Edieresis</string>
		<string>Edotaccent</string>
		<string>Edotbelow</string>
		<string>Egrave</string>
		<string>Ehookabove</string>
		<string>Emacron</string>
		<string>Eogonek</string>
		<string>Eopen</string>
		<string>Ereversed</string>
		<string>Esh</string>
		<string>Etilde</string>
		<string>Ezh</string>
		<string>F</string>
		<string>Fhook</string>
		<string>G</string>
		<string>Gbreve</string>
		<string>Gcaron</string>
		<string>Gcircumflex</string>
		<string>Gcommaaccent</string>
		<string>Gdotaccent</string>
		<string>Ghook</string>
		<string>H</string>
		<string>Hbar</string>
		<string>Hcircumflex</string>
		<string>Hdotbelow</string>
		<string>Hhook</string>
		<string>Hturned</string>
		<string>I</string>
		<string>IJ</string>
		<string>Iacute</string>
		<string>Ibreve</string>
		<string>Icaron</string>
		<string>Icircumflex</string>
		<string>Idieresis</string>
		<string>Idieresisacute</string>
		<string>Idotaccent</string>
		<string>Idotbelow</string>
		<string>Igrave</string>
		<string>Ihookabove</string>
		<string>Imacron</string>
		<string>Iogonek</string>
		<string>Iotaafrican</string>
		<string>Istroke</string>
		<string>Itilde</string>
		<string>J</string>
		<string>Jacute</string>
		<string>Jcircumflex</string>
		<string>K</string>
		<string>Kcommaaccent</string>
		<string>Khook</string>
		<string>L</string>
		<string>Lacute</string>
		<string>Lcaron</string>
		<string>Lcircumflexbelow</string>
		<string>Lcommaaccent</string>
		<string>Ldot</string>
		<string>Ldotbelow</string>
		<string>Lslash</string>
		<string>M</string>
		<string>Macute</string>
		<string>N</string>
		<string>Nacute</string>
		<string>Ncaron</string>
		<string>Ncircumflexbelow</string>
		<string>Ncommaaccent</string>
		<string>Ndotaccent</string>
		<string>Ndotbelow</string>
		<string>Eng</string>
		<string>Nhookleft</string>
		<string>Ntilde</string>
		<string>O</string>
		<string>Oacute</string>
		<string>Obreve</string>
		<string>Ocaron</string>
		<string>Ocircumflex</string>
		<string>Ocircumflexacute</string>
		<string>Ocircumflexdotbelow</string>
		<string>Ocircumflexgrave</string>
		<string>Ocircumflexhookabove</string>
		<string>Ocircumflextilde</string>
		<string>Odieresis</string>
		<string>Odieresismacron</string>
		<string>Odotbelow</string>
		<string>Ograve</string>
		<string>Ohookabove</string>
		<string>Ohorn</string>
		<string>Ohornacute</string>
		<string>Ohorndotbelow</string>
		<string>Ohorngrave</string>
		<string>Ohornhookabove</string>
		<string>Ohorntilde</string>
		<string>Ohungarumlaut</string>
		<string>Omacron</string>
		<string>Omacronacute</string>
		<string>Omacrongrave</string>
		<string>Oogonek</string>
		<string>Oopen</string>
		<string>Oslash</string>
		<string>Oslashacute</string>
		<string>Otilde</string>
		<string>Otildeacute</string>
		<string>OE</string>
		<string>P</string>
		<string>Phook</string>
		<string>Thorn</string>
		<string>Q</string>
		<string>R</string>
		<string>Racute</string>
		<string>Rcaron</string>
		<string>Rcommaaccent</string>
		<string>Rstroke</string>
		<string>Rtail</string>
		<string>S</string>
		<string>Sacute</string>
		<string>Saltillo</string>
		<string>Scaron</string>
		<string>Scedilla</string>
		<string>Scircumflex</string>
		<string>Scommaaccent</string>
		<string>Sdotbelow</string>
		<string>Germandbls</string>
		<string>Schwa</string>
		<string>T</string>
		<string>Tbar</string>
		<string>Tcaron</string>
		<string>Tcedilla</string>
		<string>Tcircumflexbelow</string>
		<string>Tcommaaccent</string>
		<string>Tdotbelow</string>
		<string>Thook</string>
		<string>Tlinebelow</string>
		<string>Tretroflexhook</string>
		<string>U</string>
		<string>Uacute</string>
		<string>Ubar</string>
		<string>Ubreve</string>
		<string>Ucaron</string>
		<string>Ucircumflex</string>
		<string>Udieresis</string>
		<string>Udieresisacute</string>
		<string>Udieresiscaron</string>
		<string>Udieresisgrave</string>
		<string>Udieresismacron</string>
		<string>Udotbelow</string>
		<string>Ugrave</string>
		<string>Uhookabove</string>
		<string>Uhorn</string>
		<string>Uhornacute</string>
		<string>Uhorndotbelow</string>
		<string>Uhorngrave</string>
		<string>Uhornhookabove</string>
		<string>Uhorntilde</string>
		<string>Uhungarumlaut</string>
		<string>Umacron</string>
		<string>Uogonek</string>
		<string>Upsilonafrican</string>
		<string>Uring</string>
		<string>Utilde</string>
		<string>V</string>
		<string>Gammaafrican</string>
		<string>Vhook</string>
		<string>Vturned</string>
		<string>W</string>
		<string>Wacute</string>
		<string>Wcircumflex</string>
		<string>Wdieresis</string>
		<string>Wgrave</string>
		<string>Whook</string>
		<string>X</string>
		<string>Y</string>
		<string>Yacute</string>
		<string>Ycircumflex</string>
		<string>Ydieresis</string>
		<string>Ydotbelow</string>
		<string>Ygrave</string>
		<string>Yhook</string>
		<string>Yhookabove</string>
		<string>Ymacron</string>
		<string>Ytilde</string>
		<string>Z</string>
		<string>Zacute</string>
		<string>Zcaron</string>
		<string>Zdotaccent</string>
		<string>Zdotbelow</string>
		<string>a</string>
		<string>aacute</string>
		<string>abreve</string>
		<string>abreveacute</string>
		<string>abrevedotbelow</string>
		<string>abrevegrave</string>
		<string>abrevehookabove</string>
		<string>abrevetilde</string>
		<string>acaron</string>
		<string>acircumflex</string>
		<string>acircumflexacute</string>
		<string>acircumflexdotbelow</string>
		<string>acircumflexgrave</string>
		<string>acircumflexhookabove</string>
		<string>acircumflextilde</string>
		<string>adieresis</string>
		<string>adieresismacron</string>
		<string>adotbelow</string>
		<string>agrave</string>
		<string>ahookabove</string>
		<string>alpha-latin</string>
		<string>amacron</string>
		<string>aogonek</string>
		<string>aring</string>
		<string>aringacute</string>
		<string>atilde</string>
		<string>ae</string>
		<string>aeacute</string>
		<string>b</string>
		<string>bdotbelow</string>
		<string>bhook</string>
		<string>c</string>
		<string>cacute</string>
		<string>ccaron</string>
		<string>ccedilla</string>
		<string>ccircumflex</string>
		<string>cdotaccent</string>
		<string>chook</string>
		<string>d</string>
		<string>eth</string>
		<string>dcaron</string>
		<string>dcircumflexbelow</string>
		<string>dcroat</string>
		<string>ddotbelow</string>
		<string>dhook</string>
		<string>dlinebelow</string>
		<string>dtail</string>
		<string>e</string>
		<string>eacute</string>
		<string>ebreve</string>
		<string>ecaron</string>
		<string>ecedilla</string>
		<string>ecircumflex</string>
		<string>ecircumflexacute</string>
		<string>ecircumflexdotbelow</string>
		<string>ecircumflexgrave</string>
		<string>ecircumflexhookabove</string>
		<string>ecircumflextilde</string>
		<string>edieresis</string>
		<string>edotaccent</string>
		<string>edotbelow</string>
		<string>egrave</string>
		<string>ehookabove</string>
		<string>emacron</string>
		<string>eogonek</string>
		<string>eopen</string>
		<string>esh</string>
		<string>etilde</string>
		<string>eturned</string>
		<string>schwa</string>
		<string>ezh</string>
		<string>f</string>
		<string>g</string>
		<string>gamma-latin</string>
		<string>gbreve</string>
		<string>gcaron</string>
		<string>gcircumflex</string>
		<string>gcommaaccent</string>
		<string>gdotaccent</string>
		<string>ghook</string>
		<string>glottalstop</string>
		<string>glottalstopreversed</string>
		<string>glottalstopsmall</string>
		<string>h</string>
		<string>hbar</string>
		<string>hcircumflex</string>
		<string>hdotbelow</string>
		<string>hhook</string>
		<string>i</string>
		<string>idotless</string>
		<string>iacute</string>
		<string>ibreve</string>
		<string>icaron</string>
		<string>icircumflex</string>
		<string>idieresis</string>
		<string>idieresisacute</string>
		<string>idotaccent</string>
		<string>idotbelow</string>
		<string>igrave</string>
		<string>ihookabove</string>
		<string>ij</string>
		<string>imacron</string>
		<string>iogonek</string>
		<string>iota-latin</string>
		<string>istroke</string>
		<string>itilde</string>
		<string>j</string>
		<string>jdotless</string>
		<string>jacute</string>
		<string>jcircumflex</string>
		<string>k</string>
		<string>kcommaaccent</string>
		<string>kgreenlandic</string>
		<string>khook</string>
		<string>l</string>
		<string>lacute</string>
		<string>lcaron</string>
		<string>lcircumflexbelow</string>
		<string>lcommaaccent</string>
		<string>ldot</string>
		<string>ldotbelow</string>
		<string>lslash</string>
		<string>m</string>
		<string>macute</string>
		<string>n</string>
		<string>nacute</string>
		<string>napostrophe</string>
		<string>ncaron</string>
		<string>ncircumflexbelow</string>
		<string>ncommaaccent</string>
		<string>ndotaccent</string>
		<string>ndotbelow</string>
		<string>eng</string>
		<string>nhookleft</string>
		<string>ntilde</string>
		<string>o</string>
		<string>oacute</string>
		<string>obreve</string>
		<string>ocaron</string>
		<string>ocircumflex</string>
		<string>ocircumflexacute</string>
		<string>ocircumflexdotbelow</string>
		<string>ocircumflexgrave</string>
		<string>ocircumflexhookabove</string>
		<string>ocircumflextilde</string>
		<string>odieresis</string>
		<string>odieresismacron</string>
		<string>odotbelow</string>
		<string>ograve</string>
		<string>ohookabove</string>
		<string>ohorn</string>
		<string>ohornacute</string>
		<string>ohorndotbelow</string>
		<string>ohorngrave</string>
		<string>ohornhookabove</string>
		<string>ohorntilde</string>
		<string>ohungarumlaut</string>
		<string>omacron</string>
		<string>omacronacute</string>
		<string>omacrongrave</string>
		<string>oogonek</string>
		<string>oopen</string>
		<string>oslash</string>
		<string>oslashacute</string>
		<string>otilde</string>
		<string>otildeacute</string>
		<string>oe</string>
		<string>p</string>
		<string>phook</string>
		<string>thorn</string>
		<string>q</string>
		<string>qhooktail</string>
		<string>r</string>
		<string>racute</string>
		<string>rcaron</string>
		<string>rcommaaccent</string>
		<string>rfishhook</string>
		<string>rhook</string>
		<string>s</string>
		<string>sacute</string>
		<string>saltillo</string>
		<string>scaron</string>
		<string>scedilla</string>
		<string>scircumflex</string>
		<string>scommaaccent</string>
		<string>sdotbelow</string>
		<string>germandbls</string>
		<string>t</string>
		<string>tbar</string>
		<string>tcaron</string>
		<string>tcedilla</string>
		<string>tcircumflexbelow</string>
		<string>tcommaaccent</string>
		<string>tdotbelow</string>
		<string>thook</string>
		<string>tlinebelow</string>
		<string>tretroflexhook</string>
		<string>u</string>
		<string>uacute</string>
		<string>ubar</string>
		<string>ubreve</string>
		<string>ucaron</string>
		<string>ucircumflex</string>
		<string>udieresis</string>
		<string>udieresisacute</string>
		<string>udieresiscaron</string>
		<string>udieresisgrave</string>
		<string>udieresismacron</string>
		<string>udotbelow</string>
		<string>ugrave</string>
		<string>uhookabove</string>
		<string>uhorn</string>
		<string>uhornacute</string>
		<string>uhorndotbelow</string>
		<string>uhorngrave</string>
		<string>uhornhookabove</string>
		<string>uhorntilde</string>
		<string>uhungarumlaut</string>
		<string>umacron</string>
		<string>uogonek</string>
		<string>upsilon-latin</string>
		<string>uring</string>
		<string>utilde</string>
		<string>v</string>
		<string>vhook</string>
		<string>vturned</string>
		<string>w</string>
		<string>wacute</string>
		<string>wcircumflex</string>
		<string>wdieresis</string>
		<string>wgrave</string>
		<string>whook</string>
		<string>x</string>
		<string>y</string>
		<string>yacute</string>
		<string>ycircumflex</string>
		<string>ydieresis</string>
		<string>ydotbelow</string>
		<string>ygrave</string>
		<string>yhook</string>
		<string>yhookabove</string>
		<string>ymacron</string>
		<string>ytilde</string>
		<string>z</string>
		<string>zacute</string>
		<string>zcaron</string>
		<string>zdotaccent</string>
		<string>zdotbelow</string>
		<string>fi</string>
		<string>fl</string>
		<string>ordfeminine</string>
		<string>ordmasculine</string>
		<string>pi</string>
		<string>zero</string>
		<string>one</string>
		<string>two</string>
		<string>three</string>
		<string>four</string>
		<string>five</string>
		<string>six</string>
		<string>seven</string>
		<string>eight</string>
		<string>nine</string>
		<string>onesuperior</string>
		<string>twosuperior</string>
		<string>threesuperior</string>
		<string>fraction</string>
		<string>onehalf</string>
		<string>onequarter</string>
		<string>threequarters</string>
		<string>period</string>
		<string>comma</string>
		<string>colon</string>
		<string>semicolon</string>
		<string>ellipsis</string>
		<string>exclam</string>
		<string>exclamdown</string>
		<string>question</string>
		<string>questiondown</string>
		<string>periodcentered</string>
		<string>bullet</string>
		<string>asterisk</string>
		<string>numbersign</string>
		<string>slash</string>
		<string>backslash</string>
		<string>parenleft</string>
		<string>parenright</string>
		<string>braceleft</string>
		<string>braceright</string>
		<string>bracketleft</string>
		<string>bracketright</string>
		<string>hyphen</string>
		<string>uni00AD</string>
		<string>endash</string>
		<string>emdash</string>
		<string>underscore</string>
		<string>quotesinglbase</string>
		<string>quotedblbase</string>
		<string>quotedblleft</string>
		<string>quotedblright</string>
		<string>quoteleft</string>
		<string>quoteright</string>
		<string>guillemotleft</string>
		<string>guillemotright</string>
		<string>guilsinglleft</string>
		<string>guilsinglright</string>
		<string>quotedbl</string>
		<string>quotesingle</string>
		<string>space</string>
		<string>uni00A0</string>
		<string>nonmarkingreturn</string>
		<string>.notdef</string>
		<string>.null</string>
		<string>Euro</string>
		<string>cent</string>
		<string>currency</string>
		<string>dollar</string>
		<string>florin</string>
		<string>sterling</string>
		<string>yen</string>
		<string>plus</string>
		<string>minus</string>
		<string>multiply</string>
		<string>divide</string>
		<string>equal</string>
		<string>notequal</string>
		<string>greater</string>
		<string>less</string>
		<string>greaterequal</string>
		<string>lessequal</string>
		<string>plusminus</string>
		<string>approxequal</string>
		<string>asciitilde</string>
		<string>logicalnot</string>
		<string>asciicircum</string>
		<string>infinity</string>
		<string>integral</string>
		<string>Omega</string>
		<string>Delta</string>
		<string>product</string>
		<string>summation</string>
		<string>radical</string>
		<string>mu</string>
		<string>partialdiff</string>
		<string>percent</string>
		<string>perthousand</string>
		<string>largecircle</string>
		<string>lozenge</string>
		<string>at</string>
		<string>ampersand</string>
		<string>paragraph</string>
		<string>section</string>
		<string>copyright</string>
		<string>registered</string>
		<string>trademark</string>
		<string>degree</string>
		<string>bar</string>
		<string>brokenbar</string>
		<string>dagger</string>
		<string>daggerdbl</string>
		<string>uni2669</string>
		<string>apostrophemod</string>
		<string>uni02C9</string>
		<string>dieresiscomb</string>
		<string>dotaccentcomb</string>
		<string>gravecomb</string>
		<string>gravecomb_macroncomb</string>
		<string>acutecomb</string>
		<string>acutecomb_macroncomb</string>
		<string>hungarumlautcomb</string>
		<string>circumflexcomb</string>
		<string>caroncomb</string>
		<string>brevecomb</string>
		<string>ringcomb</string>
		<string>tildecomb</string>
		<string>macroncomb</string>
		<string>macroncomb_gravecomb</string>
		<string>macroncomb_acutecomb</string>
		<string>hookabovecomb</string>
		<string>commaturnedabovecomb</string>
		<string>horncomb</string>
		<string>dotbelowcomb</string>
		<string>commaaccentcomb</string>
		<string>cedillacomb</string>
		<string>ogonekcomb</string>
		<string>circumflexbelowcomb</string>
		<string>macronbelowcomb</string>
		<string>strokeshortcomb</string>
		<string>slashlongcomb</string>
		<string>dieresis</string>
		<string>dotaccent</string>
		<string>grave</string>
		<string>acute</string>
		<string>hungarumlaut</string>
		<string>circumflex</string>
		<string>caron</string>
		<string>breve</string>
		<string>ring</string>
		<string>tilde</string>
		<string>macron</string>
		<string>cedilla</string>
		<string>ogonek</string>
		<string>dieresis.case</string>
		<string>dotaccent.case</string>
		<string>grave.case</string>
		<string>acute.case</string>
		<string>hungarumlaut.case</string>
		<string>circumflex.case</string>
		<string>caron.case</string>
		<string>breve.case</string>
		<string>ring.case</string>
		<string>tilde.case</string>
		<string>macron.case</string>
		<string>brevecomb_acutecomb</string>
		<string>brevecomb_gravecomb</string>
		<string>brevecomb_hookabovecomb</string>
		<string>brevecomb_tildecomb</string>
		<string>circumflexcomb_acutecomb</string>
		<string>circumflexcomb_gravecomb</string>
		<string>circumflexcomb_hookabovecomb</string>
		<string>circumflexcomb_tildecomb</string>
		<string>NULL</string>
		<string>ijacute</string>
		<string>SerifBottomLeft</string>
		<string>SerifBottomRight</string>
		<string>SerifSpurLeft</string>
		<string>SerifUpLeftLower</string>
		<string>SerifUpRightLower</string>
		<string>SerifSpurRight</string>
		<string>SerifUpLeftCaps</string>
		<string>SerifUpRightCaps</string>
		<string>mkmkm</string>
		<string>hookleft_caps_part</string>
		<string>hookrightc_part</string>
		<string>hookright_lowercase_part</string>
		<string>hookbtmright_lowercase_part</string>
		<string>ringacutecomb</string>
		<string>IJacute</string>
		<string>fitalictail</string>
	</array>
	<key>public.postscriptNames</key>
	<dict>
		<key>Abreveacute</key>
		<string>uni1EAE</string>
		<key>Abrevedotbelow</key>
		<string>uni1EB6</string>
		<key>Abrevegrave</key>
		<string>uni1EB0</string>
		<key>Abrevehookabove</key>
		<string>uni1EB2</string>
		<key>Abrevetilde</key>
		<string>uni1EB4</string>
		<key>Acaron</key>
		<string>uni01CD</string>
		<key>Acircumflexacute</key>
		<string>uni1EA4</string>
		<key>Acircumflexdotbelow</key>
		<string>uni1EAC</string>
		<key>Acircumflexgrave</key>
		<string>uni1EA6</string>
		<key>Acircumflexhookabove</key>
		<string>uni1EA8</string>
		<key>Acircumflextilde</key>
		<string>uni1EAA</string>
		<key>Adieresismacron</key>
		<string>uni01DE</string>
		<key>Adotbelow</key>
		<string>uni1EA0</string>
		<key>Ahookabove</key>
		<string>uni1EA2</string>
		<key>Alpha-latin</key>
		<string>uni2C6D</string>
		<key>Bdotbelow</key>
		<string>uni1E04</string>
		<key>Bhook</key>
		<string>uni0181</string>
		<key>Bstroke</key>
		<string>uni0243</string>
		<key>Chook</key>
		<string>uni0187</string>
		<key>Dafrican</key>
		<string>uni0189</string>
		<key>Dcircumflexbelow</key>
		<string>uni1E12</string>
		<key>Ddotbelow</key>
		<string>uni1E0C</string>
		<key>Delta</key>
		<string>uni2206</string>
		<key>Dhook</key>
		<string>uni018A</string>
		<key>Dlinebelow</key>
		<string>uni1E0E</string>
		<key>Ecedilla</key>
		<string>uni0228</string>
		<key>Ecircumflexacute</key>
		<string>uni1EBE</string>
		<key>Ecircumflexdotbelow</key>
		<string>uni1EC6</string>
		<key>Ecircumflexgrave</key>
		<string>uni1EC0</string>
		<key>Ecircumflexhookabove</key>
		<string>uni1EC2</string>
		<key>Ecircumflextilde</key>
		<string>uni1EC4</string>
		<key>Edotbelow</key>
		<string>uni1EB8</string>
		<key>Ehookabove</key>
		<string>uni1EBA</string>
		<key>Eopen</key>
		<string>uni0190</string>
		<key>Ereversed</key>
		<string>uni018E</string>
		<key>Esh</key>
		<string>uni01A9</string>
		<key>Etilde</key>
		<string>uni1EBC</string>
		<key>Ezh</key>
		<string>uni01B7</string>
		<key>Fhook</key>
		<string>uni0191</string>
		<key>Gammaafrican</key>
		<string>uni0194</string>
		<key>Gcommaaccent</key>
		<string>uni0122</string>
		<key>Germandbls</key>
		<string>uni1E9E</string>
		<key>Ghook</key>
		<string>uni0193</string>
		<key>Hdotbelow</key>
		<string>uni1E24</string>
		<key>Hhook</key>
		<string>uniA7AA</string>
		<key>Hturned</key>
		<string>uniA78D</string>
		<key>Icaron</key>
		<string>uni01CF</string>
		<key>Idieresisacute</key>
		<string>uni1E2E</string>
		<key>Idotbelow</key>
		<string>uni1ECA</string>
		<key>Ihookabove</key>
		<string>uni1EC8</string>
		<key>Iotaafrican</key>
		<string>uni0196</string>
		<key>Istroke</key>
		<string>uni0197</string>
		<key>Jacute</key>
		<string>uni004A0301</string>
		<key>Kcommaaccent</key>
		<string>uni0136</string>
		<key>Khook</key>
		<string>uni0198</string>
		<key>Lcircumflexbelow</key>
		<string>uni1E3C</string>
		<key>Lcommaaccent</key>
		<string>uni013B</string>
		<key>Ldotbelow</key>
		<string>uni1E36</string>
		<key>Macute</key>
		<string>uni1E3E</string>
		<key>Ncircumflexbelow</key>
		<string>uni1E4A</string>
		<key>Ncommaaccent</key>
		<string>uni0145</string>
		<key>Ndotaccent</key>
		<string>uni1E44</string>
		<key>Ndotbelow</key>
		<string>uni1E46</string>
		<key>Nhookleft</key>
		<string>uni019D</string>
		<key>Ocaron</key>
		<string>uni01D1</string>
		<key>Ocircumflexacute</key>
		<string>uni1ED0</string>
		<key>Ocircumflexdotbelow</key>
		<string>uni1ED8</string>
		<key>Ocircumflexgrave</key>
		<string>uni1ED2</string>
		<key>Ocircumflexhookabove</key>
		<string>uni1ED4</string>
		<key>Ocircumflextilde</key>
		<string>uni1ED6</string>
		<key>Odieresismacron</key>
		<string>uni022A</string>
		<key>Odotbelow</key>
		<string>uni1ECC</string>
		<key>Ohookabove</key>
		<string>uni1ECE</string>
		<key>Ohornacute</key>
		<string>uni1EDA</string>
		<key>Ohorndotbelow</key>
		<string>uni1EE2</string>
		<key>Ohorngrave</key>
		<string>uni1EDC</string>
		<key>Ohornhookabove</key>
		<string>uni1EDE</string>
		<key>Ohorntilde</key>
		<string>uni1EE0</string>
		<key>Omacronacute</key>
		<string>uni1E52</string>
		<key>Omacrongrave</key>
		<string>uni1E50</string>
		<key>Omega</key>
		<string>uni2126</string>
		<key>Oogonek</key>
		<string>uni01EA</string>
		<key>Oopen</key>
		<string>uni0186</string>
		<key>Otildeacute</key>
		<string>uni1E4C</string>
		<key>Phook</key>
		<string>uni01A4</string>
		<key>Rcommaaccent</key>
		<string>uni0156</string>
		<key>Rstroke</key>
		<string>uni024C</string>
		<key>Rtail</key>
		<string>uni2C64</string>
		<key>Saltillo</key>
		<string>uniA78B</string>
		<key>Schwa</key>
		<string>uni018F</string>
		<key>Scommaaccent</key>
		<string>uni0218</string>
		<key>Sdotbelow</key>
		<string>uni1E62</string>
		<key>Tcedilla</key>
		<string>uni0162</string>
		<key>Tcircumflexbelow</key>
		<string>uni1E70</string>
		<key>Tcommaaccent</key>
		<string>uni021A</string>
		<key>Tdotbelow</key>
		<string>uni1E6C</string>
		<key>Thook</key>
		<string>uni01AC</string>
		<key>Tlinebelow</key>
		<string>uni1E6E</string>
		<key>Tretroflexhook</key>
		<string>uni01AE</string>
		<key>Ubar</key>
		<string>uni0244</string>
		<key>Ucaron</key>
		<string>uni01D3</string>
		<key>Udieresisacute</key>
		<string>uni01D7</string>
		<key>Udieresiscaron</key>
		<string>uni01D9</string>
		<key>Udieresisgrave</key>
		<string>uni01DB</string>
		<key>Udieresismacron</key>
		<string>uni01D5</string>
		<key>Udotbelow</key>
		<string>uni1EE4</string>
		<key>Uhookabove</key>
		<string>uni1EE6</string>
		<key>Uhornacute</key>
		<string>uni1EE8</string>
		<key>Uhorndotbelow</key>
		<string>uni1EF0</string>
		<key>Uhorngrave</key>
		<string>uni1EEA</string>
		<key>Uhornhookabove</key>
		<string>uni1EEC</string>
		<key>Uhorntilde</key>
		<string>uni1EEE</string>
		<key>Upsilonafrican</key>
		<string>uni01B1</string>
		<key>Vhook</key>
		<string>uni01B2</string>
		<key>Vturned</key>
		<string>uni0245</string>
		<key>Whook</key>
		<string>uni2C72</string>
		<key>Ydotbelow</key>
		<string>uni1EF4</string>
		<key>Yhook</key>
		<string>uni01B3</string>
		<key>Yhookabove</key>
		<string>uni1EF6</string>
		<key>Ymacron</key>
		<string>uni0232</string>
		<key>Ytilde</key>
		<string>uni1EF8</string>
		<key>Zdotbelow</key>
		<string>uni1E92</string>
		<key>abreveacute</key>
		<string>uni1EAF</string>
		<key>abrevedotbelow</key>
		<string>uni1EB7</string>
		<key>abrevegrave</key>
		<string>uni1EB1</string>
		<key>abrevehookabove</key>
		<string>uni1EB3</string>
		<key>abrevetilde</key>
		<string>uni1EB5</string>
		<key>acaron</key>
		<string>uni01CE</string>
		<key>acircumflexacute</key>
		<string>uni1EA5</string>
		<key>acircumflexdotbelow</key>
		<string>uni1EAD</string>
		<key>acircumflexgrave</key>
		<string>uni1EA7</string>
		<key>acircumflexhookabove</key>
		<string>uni1EA9</string>
		<key>acircumflextilde</key>
		<string>uni1EAB</string>
		<key>acutecomb_macroncomb</key>
		<string>uni0301_uni0304</string>
		<key>adieresismacron</key>
		<string>uni01DF</string>
		<key>adotbelow</key>
		<string>uni1EA1</string>
		<key>ahookabove</key>
		<string>uni1EA3</string>
		<key>alpha-latin</key>
		<string>uni0251</string>
		<key>apostrophemod</key>
		<string>uni02BC</string>
		<key>bdotbelow</key>
		<string>uni1E05</string>
		<key>bhook</key>
		<string>uni0253</string>
		<key>brevecomb</key>
		<string>uni0306</string>
		<key>brevecomb_acutecomb</key>
		<string>uni03060301</string>
		<key>brevecomb_gravecomb</key>
		<string>uni03060300</string>
		<key>brevecomb_hookabovecomb</key>
		<string>uni03060309</string>
		<key>brevecomb_tildecomb</key>
		<string>uni03060303</string>
		<key>caroncomb</key>
		<string>uni030C</string>
		<key>cedillacomb</key>
		<string>uni0327</string>
		<key>chook</key>
		<string>uni0188</string>
		<key>circumflexbelowcomb</key>
		<string>uni032D</string>
		<key>circumflexcomb</key>
		<string>uni0302</string>
		<key>circumflexcomb_acutecomb</key>
		<string>uni03020301</string>
		<key>circumflexcomb_gravecomb</key>
		<string>uni03020300</string>
		<key>circumflexcomb_hookabovecomb</key>
		<string>uni03020309</string>
		<key>circumflexcomb_tildecomb</key>
		<string>uni03020303</string>
		<key>commaaccentcomb</key>
		<string>uni0326</string>
		<key>commaturnedabovecomb</key>
		<string>uni0312</string>
		<key>dcircumflexbelow</key>
		<string>uni1E13</string>
		<key>ddotbelow</key>
		<string>uni1E0D</string>
		<key>dhook</key>
		<string>uni0257</string>
		<key>dieresiscomb</key>
		<string>uni0308</string>
		<key>dlinebelow</key>
		<string>uni1E0F</string>
		<key>dotaccentcomb</key>
		<string>uni0307</string>
		<key>dtail</key>
		<string>uni0256</string>
		<key>ecedilla</key>
		<string>uni0229</string>
		<key>ecircumflexacute</key>
		<string>uni1EBF</string>
		<key>ecircumflexdotbelow</key>
		<string>uni1EC7</string>
		<key>ecircumflexgrave</key>
		<string>uni1EC1</string>
		<key>ecircumflexhookabove</key>
		<string>uni1EC3</string>
		<key>ecircumflextilde</key>
		<string>uni1EC5</string>
		<key>edotbelow</key>
		<string>uni1EB9</string>
		<key>ehookabove</key>
		<string>uni1EBB</string>
		<key>eopen</key>
		<string>uni025B</string>
		<key>esh</key>
		<string>uni0283</string>
		<key>etilde</key>
		<string>uni1EBD</string>
		<key>eturned</key>
		<string>uni01DD</string>
		<key>ezh</key>
		<string>uni0292</string>
		<key>gamma-latin</key>
		<string>uni0263</string>
		<key>gcommaaccent</key>
		<string>uni0123</string>
		<key>ghook</key>
		<string>uni0260</string>
		<key>glottalstop</key>
		<string>uni0294</string>
		<key>glottalstopreversed</key>
		<string>uni0295</string>
		<key>glottalstopsmall</key>
		<string>uni0242</string>
		<key>gravecomb_macroncomb</key>
		<string>uni0300_uni0304</string>
		<key>hdotbelow</key>
		<string>uni1E25</string>
		<key>hhook</key>
		<string>uni0266</string>
		<key>horncomb</key>
		<string>uni031B</string>
		<key>hungarumlautcomb</key>
		<string>uni030B</string>
		<key>icaron</key>
		<string>uni01D0</string>
		<key>idieresisacute</key>
		<string>uni1E2F</string>
		<key>idotaccent</key>
		<string>i.loclTRK</string>
		<key>idotbelow</key>
		<string>uni1ECB</string>
		<key>idotless</key>
		<string>dotlessi</string>
		<key>ihookabove</key>
		<string>uni1EC9</string>
		<key>iota-latin</key>
		<string>uni0269</string>
		<key>istroke</key>
		<string>uni0268</string>
		<key>jacute</key>
		<string>uni006A0301</string>
		<key>jdotless</key>
		<string>uni0237</string>
		<key>kcommaaccent</key>
		<string>uni0137</string>
		<key>khook</key>
		<string>uni0199</string>
		<key>largecircle</key>
		<string>uni25EF</string>
		<key>lcircumflexbelow</key>
		<string>uni1E3D</string>
		<key>lcommaaccent</key>
		<string>uni013C</string>
		<key>ldotbelow</key>
		<string>uni1E37</string>
		<key>macronbelowcomb</key>
		<string>uni0331</string>
		<key>macroncomb</key>
		<string>uni0304</string>
		<key>macroncomb_acutecomb</key>
		<string>uni0304_uni0301</string>
		<key>macroncomb_gravecomb</key>
		<string>uni0304_uni0300</string>
		<key>macute</key>
		<string>uni1E3F</string>
		<key>mu</key>
		<string>uni00B5</string>
		<key>ncircumflexbelow</key>
		<string>uni1E4B</string>
		<key>ncommaaccent</key>
		<string>uni0146</string>
		<key>ndotaccent</key>
		<string>uni1E45</string>
		<key>ndotbelow</key>
		<string>uni1E47</string>
		<key>nhookleft</key>
		<string>uni0272</string>
		<key>ocaron</key>
		<string>uni01D2</string>
		<key>ocircumflexacute</key>
		<string>uni1ED1</string>
		<key>ocircumflexdotbelow</key>
		<string>uni1ED9</string>
		<key>ocircumflexgrave</key>
		<string>uni1ED3</string>
		<key>ocircumflexhookabove</key>
		<string>uni1ED5</string>
		<key>ocircumflextilde</key>
		<string>uni1ED7</string>
		<key>odieresismacron</key>
		<string>uni022B</string>
		<key>odotbelow</key>
		<string>uni1ECD</string>
		<key>ogonekcomb</key>
		<string>uni0328</string>
		<key>ohookabove</key>
		<string>uni1ECF</string>
		<key>ohornacute</key>
		<string>uni1EDB</string>
		<key>ohorndotbelow</key>
		<string>uni1EE3</string>
		<key>ohorngrave</key>
		<string>uni1EDD</string>
		<key>ohornhookabove</key>
		<string>uni1EDF</string>
		<key>ohorntilde</key>
		<string>uni1EE1</string>
		<key>omacronacute</key>
		<string>uni1E53</string>
		<key>omacrongrave</key>
		<string>uni1E51</string>
		<key>onesuperior</key>
		<string>uni00B9</string>
		<key>oogonek</key>
		<string>uni01EB</string>
		<key>oopen</key>
		<string>uni0254</string>
		<key>otildeacute</key>
		<string>uni1E4D</string>
		<key>phook</key>
		<string>uni01A5</string>
		<key>qhooktail</key>
		<string>uni024B</string>
		<key>rcommaaccent</key>
		<string>uni0157</string>
		<key>rfishhook</key>
		<string>uni027E</string>
		<key>rhook</key>
		<string>uni027D</string>
		<key>ringcomb</key>
		<string>uni030A</string>
		<key>saltillo</key>
		<string>uniA78C</string>
		<key>schwa</key>
		<string>uni0259</string>
		<key>scommaaccent</key>
		<string>uni0219</string>
		<key>sdotbelow</key>
		<string>uni1E63</string>
		<key>slashlongcomb</key>
		<string>uni0338</string>
		<key>strokeshortcomb</key>
		<string>uni0335</string>
		<key>tcedilla</key>
		<string>uni0163</string>
		<key>tcircumflexbelow</key>
		<string>uni1E71</string>
		<key>tcommaaccent</key>
		<string>uni021B</string>
		<key>tdotbelow</key>
		<string>uni1E6D</string>
		<key>thook</key>
		<string>uni01AD</string>
		<key>threesuperior</key>
		<string>uni00B3</string>
		<key>tlinebelow</key>
		<string>uni1E6F</string>
		<key>tretroflexhook</key>
		<string>uni0288</string>
		<key>twosuperior</key>
		<string>uni00B2</string>
		<key>ubar</key>
		<string>uni0289</string>
		<key>ucaron</key>
		<string>uni01D4</string>
		<key>udieresisacute</key>
		<string>uni01D8</string>
		<key>udieresiscaron</key>
		<string>uni01DA</string>
		<key>udieresisgrave</key>
		<string>uni01DC</string>
		<key>udieresismacron</key>
		<string>uni01D6</string>
		<key>udotbelow</key>
		<string>uni1EE5</string>
		<key>uhookabove</key>
		<string>uni1EE7</string>
		<key>uhornacute</key>
		<string>uni1EE9</string>
		<key>uhorndotbelow</key>
		<string>uni1EF1</string>
		<key>uhorngrave</key>
		<string>uni1EEB</string>
		<key>uhornhookabove</key>
		<string>uni1EED</string>
		<key>uhorntilde</key>
		<string>uni1EEF</string>
		<key>upsilon-latin</key>
		<string>uni028A</string>
		<key>vhook</key>
		<string>uni028B</string>
		<key>vturned</key>
		<string>uni028C</string>
		<key>whook</key>
		<string>uni2C73</string>
		<key>ydotbelow</key>
		<string>uni1EF5</string>
		<key>yhook</key>
		<string>uni01B4</string>
		<key>yhookabove</key>
		<string>uni1EF7</string>
		<key>ymacron</key>
		<string>uni0233</string>
		<key>ytilde</key>
		<string>uni1EF9</string>
		<key>zdotbelow</key>
		<string>uni1E93</string>
	</dict>
	<key>public.skipExportGlyphs</key>
	<array>
		<string>SerifBottomLeft</string>
		<string>SerifBottomRight</string>
		<string>SerifSpurLeft</string>
		<string>SerifUpLeftLower</string>
		<string>SerifUpRightLower</string>
		<string>SerifSpurRight</string>
		<string>SerifUpLeftCaps</string>
		<string>SerifUpRightCaps</string>
		<string>mkmkm</string>
		<string>hookleft_caps_part</string>
		<string>hookrightc_part</string>
		<string>hookright_lowercase_part</string>
		<string>hookbtmright_lowercase_part</string>
		<string>fitalictail</string>
	</array>
</dict>
</plist>
