<?xml version="1.0" encoding="UTF-8"?>
<glyph name="M" format="2">
	<advance width="907"/>
	<unicode hex="004D"/>
	<anchor x="454" y="700" name="top"/>
	<anchor x="454" y="0" name="bottom"/>
	<note>
		M
	</note>
	<outline>
		<contour>
			<point x="124" y="0" type="line"/>
			<point x="134" y="0" type="line"/>
			<point x="134" y="669" type="line" smooth="yes"/>
			<point x="134" y="672"/>
			<point x="134" y="674"/>
			<point x="134" y="679" type="curve"/>
			<point x="450" y="145" type="line" smooth="yes"/>
			<point x="452" y="142"/>
			<point x="454" y="140"/>
			<point x="457" y="140" type="curve" smooth="yes"/>
			<point x="461" y="140" type="line" smooth="yes"/>
			<point x="463" y="140"/>
			<point x="465" y="142"/>
			<point x="467" y="145" type="curve" smooth="yes"/>
			<point x="773" y="677" type="line" smooth="yes"/>
			<point x="773" y="677"/>
			<point x="773" y="669"/>
			<point x="773" y="669" type="curve" smooth="yes"/>
			<point x="773" y="0" type="line"/>
			<point x="783" y="0" type="line"/>
			<point x="783" y="700" type="line"/>
			<point x="779" y="700" type="line" smooth="yes"/>
			<point x="776" y="700"/>
			<point x="774" y="699"/>
			<point x="772" y="696" type="curve" smooth="yes"/>
			<point x="464" y="161" type="line" smooth="yes"/>
			<point x="462" y="157"/>
			<point x="460" y="153"/>
			<point x="459" y="150" type="curve"/>
			<point x="457" y="154"/>
			<point x="455" y="158"/>
			<point x="453" y="161" type="curve" smooth="yes"/>
			<point x="135" y="696" type="line" smooth="yes"/>
			<point x="133" y="699"/>
			<point x="131" y="700"/>
			<point x="128" y="700" type="curve" smooth="yes"/>
			<point x="124" y="700" type="line"/>
		</contour>
		<component base="SerifBottomLeft" xOffset="124"/>
		<component base="SerifBottomRight" xOffset="134"/>
		<component base="SerifSpurLeft" xOffset="124" yOffset="700"/>
		<component base="SerifBottomLeft" xOffset="773"/>
		<component base="SerifBottomRight" xOffset="783"/>
		<component base="SerifSpurRight" xOffset="783" yOffset="700"/>
	</outline>
	<lib>
		<dict>
			<key>assembly</key>
			<string>PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 28 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 4 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 11 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 1 19 4 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
			<key>com.schriftgestaltung.Glyphs.leftMetricsKey</key>
			<string>H</string>
			<key>com.schriftgestaltung.Glyphs.rightMetricsKey</key>
			<string>H</string>
		</dict>
	</lib>
</glyph>
